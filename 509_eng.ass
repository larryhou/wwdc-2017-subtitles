[Script Info]
; Script generated by FFmpeg/Lavc57.89.100
ScriptType: v4.00+
PlayResX: 384
PlayResY: 288

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,16,&Hffffff,&Hffffff,&H0,&H0,0,0,0,0,100,100,0,0,1,1,0,2,10,10,10,0

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:27.02,0:00:28.69,Default,,0,0,0,,welcome to session 509,
Dialogue: 0,0:00:29.03,0:00:30.84,Default,,0,0,0,,Introducing AirPlay 2 Unlocking
Dialogue: 0,0:00:30.84,0:00:31.66,Default,,0,0,0,,Multi-Room Audio.
Dialogue: 0,0:00:32.20,0:00:33.89,Default,,0,0,0,,My name is David Saracino, I'm a
Dialogue: 0,0:00:33.89,0:00:34.67,Default,,0,0,0,,member of the AirPlay
Dialogue: 0,0:00:34.67,0:00:36.29,Default,,0,0,0,,engineering team, and I'm very
Dialogue: 0,0:00:36.29,0:00:37.29,Default,,0,0,0,,excited to be here this
Dialogue: 0,0:00:37.29,0:00:38.49,Default,,0,0,0,,afternoon to talk to you about
Dialogue: 0,0:00:38.49,0:00:39.58,Default,,0,0,0,,the many new features we've
Dialogue: 0,0:00:39.58,0:00:41.13,Default,,0,0,0,,added to audio to AirPlay over
Dialogue: 0,0:00:41.13,0:00:42.76,Default,,0,0,0,,the last year, and how you can
Dialogue: 0,0:00:42.76,0:00:45.01,Default,,0,0,0,,adopt them in your app.
Dialogue: 0,0:00:45.40,0:00:46.47,Default,,0,0,0,,But before we get into that
Dialogue: 0,0:00:46.47,0:00:47.69,Default,,0,0,0,,adoption and how you can build
Dialogue: 0,0:00:47.69,0:00:49.06,Default,,0,0,0,,this into your app, let's first
Dialogue: 0,0:00:49.06,0:00:50.93,Default,,0,0,0,,take a quick survey of AirPlay
Dialogue: 0,0:00:51.23,0:00:52.60,Default,,0,0,0,,today, and where we're taking it
Dialogue: 0,0:00:52.60,0:00:54.06,Default,,0,0,0,,with AirPlay 2.
Dialogue: 0,0:00:54.64,0:00:56.88,Default,,0,0,0,,So, with AirPlay today, you can
Dialogue: 0,0:00:56.88,0:00:58.62,Default,,0,0,0,,wirelessly send your myriad
Dialogue: 0,0:00:58.62,0:01:00.91,Default,,0,0,0,,screen, audio, or video content
Dialogue: 0,0:01:01.20,0:01:02.83,Default,,0,0,0,,from just about any Apple device
Dialogue: 0,0:01:03.07,0:01:04.56,Default,,0,0,0,,to an Apple TV or AirPlay
Dialogue: 0,0:01:04.56,0:01:04.96,Default,,0,0,0,,speaker.
Dialogue: 0,0:01:06.30,0:01:07.60,Default,,0,0,0,,Over the past year, we've added
Dialogue: 0,0:01:07.60,0:01:08.90,Default,,0,0,0,,so many features to the audio
Dialogue: 0,0:01:08.90,0:01:10.28,Default,,0,0,0,,domain that that's where we're
Dialogue: 0,0:01:10.28,0:01:11.17,Default,,0,0,0,,going to spend the majority of
Dialogue: 0,0:01:11.17,0:01:11.51,Default,,0,0,0,,our talk.
Dialogue: 0,0:01:13.00,0:01:14.15,Default,,0,0,0,,And because we've added so many
Dialogue: 0,0:01:14.15,0:01:15.30,Default,,0,0,0,,features to the audio domain
Dialogue: 0,0:01:15.65,0:01:17.33,Default,,0,0,0,,we're introducing this as a new
Dialogue: 0,0:01:17.33,0:01:18.83,Default,,0,0,0,,feature called AirPlay 2.
Dialogue: 0,0:01:21.11,0:01:22.22,Default,,0,0,0,,So, what is AirPlay 2?
Dialogue: 0,0:01:22.22,0:01:25.17,Default,,0,0,0,,Well with AirPlay 2, you can
Dialogue: 0,0:01:25.17,0:01:27.18,Default,,0,0,0,,still wirelessly send the audio
Dialogue: 0,0:01:27.18,0:01:28.73,Default,,0,0,0,,content from your app to an
Dialogue: 0,0:01:28.73,0:01:29.41,Default,,0,0,0,,AirPlay speaker.
Dialogue: 0,0:01:29.93,0:01:32.44,Default,,0,0,0,,But additionally, with AirPlay
Dialogue: 0,0:01:32.44,0:01:34.99,Default,,0,0,0,,2, you can send that content to
Dialogue: 0,0:01:34.99,0:01:37.35,Default,,0,0,0,,multiple AirPlay 2 speakers with
Dialogue: 0,0:01:37.35,0:01:40.55,Default,,0,0,0,,very tight sync.
Dialogue: 0,0:01:40.73,0:01:41.99,Default,,0,0,0,,Additionally, in AirPlay 2,
Dialogue: 0,0:01:42.32,0:01:43.35,Default,,0,0,0,,we've enhanced the audio
Dialogue: 0,0:01:43.35,0:01:44.83,Default,,0,0,0,,buffering on the AirPlay 2
Dialogue: 0,0:01:44.83,0:01:46.62,Default,,0,0,0,,speakers so that your content
Dialogue: 0,0:01:46.62,0:01:47.88,Default,,0,0,0,,can play with the high degree of
Dialogue: 0,0:01:47.88,0:01:49.59,Default,,0,0,0,,robustness, reliability, and
Dialogue: 0,0:01:49.59,0:01:50.42,Default,,0,0,0,,responsiveness.
Dialogue: 0,0:01:51.31,0:01:53.95,Default,,0,0,0,,And lastly, we're introducing
Dialogue: 0,0:01:53.95,0:01:54.91,Default,,0,0,0,,multi-device control.
Dialogue: 0,0:01:55.34,0:01:57.02,Default,,0,0,0,,And this will allow multiple
Dialogue: 0,0:01:57.02,0:01:58.77,Default,,0,0,0,,Apple devices in your home to
Dialogue: 0,0:01:58.77,0:02:00.22,Default,,0,0,0,,interact with the audio that's
Dialogue: 0,0:02:00.22,0:02:01.23,Default,,0,0,0,,being streamed throughout your
Dialogue: 0,0:02:02.09,0:02:02.21,Default,,0,0,0,,house.
Dialogue: 0,0:02:03.34,0:02:04.60,Default,,0,0,0,,So, where is AirPlay 2
Dialogue: 0,0:02:04.60,0:02:05.11,Default,,0,0,0,,supported?
Dialogue: 0,0:02:05.84,0:02:07.41,Default,,0,0,0,,Well I'm happy to say if you
Dialogue: 0,0:02:07.41,0:02:10.02,Default,,0,0,0,,have iOS, tvOS, or macOS app,
Dialogue: 0,0:02:10.49,0:02:11.56,Default,,0,0,0,,you can take the steps that I'm
Dialogue: 0,0:02:11.56,0:02:13.69,Default,,0,0,0,,about to outline today and build
Dialogue: 0,0:02:13.69,0:02:14.69,Default,,0,0,0,,them into your app to take
Dialogue: 0,0:02:14.69,0:02:15.78,Default,,0,0,0,,advantage of AirPlay 2.
Dialogue: 0,0:02:16.33,0:02:19.71,Default,,0,0,0,,And when you do, your app will
Dialogue: 0,0:02:19.71,0:02:21.16,Default,,0,0,0,,be able to play on a very wide
Dialogue: 0,0:02:21.16,0:02:23.09,Default,,0,0,0,,ecosystem of AirPlay 2 speakers,
Dialogue: 0,0:02:23.40,0:02:25.14,Default,,0,0,0,,including the HomePod, latest
Dialogue: 0,0:02:25.14,0:02:27.00,Default,,0,0,0,,generation Apple TV, and
Dialogue: 0,0:02:27.00,0:02:28.44,Default,,0,0,0,,third-party AirPlay 2 speakers
Dialogue: 0,0:02:28.44,0:02:29.21,Default,,0,0,0,,that will soon be coming to
Dialogue: 0,0:02:29.21,0:02:29.53,Default,,0,0,0,,market.
Dialogue: 0,0:02:29.97,0:02:32.67,Default,,0,0,0,,So, that's the high-level
Dialogue: 0,0:02:32.67,0:02:34.13,Default,,0,0,0,,overview of AirPlay and AirPlay
Dialogue: 0,0:02:34.13,0:02:34.39,Default,,0,0,0,,2.
Dialogue: 0,0:02:35.31,0:02:36.37,Default,,0,0,0,,Let's look at our agenda for the
Dialogue: 0,0:02:36.37,0:02:38.44,Default,,0,0,0,,rest of the talk.
Dialogue: 0,0:02:38.65,0:02:39.70,Default,,0,0,0,,First, we're going to talk about
Dialogue: 0,0:02:39.79,0:02:41.15,Default,,0,0,0,,basic AirPlay 2 adoption.
Dialogue: 0,0:02:41.44,0:02:42.64,Default,,0,0,0,,The steps that you need to do
Dialogue: 0,0:02:42.64,0:02:44.35,Default,,0,0,0,,take in order to get AirPlay 2
Dialogue: 0,0:02:44.35,0:02:45.55,Default,,0,0,0,,inside your app.
Dialogue: 0,0:02:46.45,0:02:47.71,Default,,0,0,0,,Next, we're going to focus on
Dialogue: 0,0:02:47.71,0:02:49.04,Default,,0,0,0,,some advanced playback scenarios
Dialogue: 0,0:02:49.04,0:02:50.36,Default,,0,0,0,,that you may encounter as you
Dialogue: 0,0:02:50.36,0:02:51.28,Default,,0,0,0,,adopt AirPlay 2.
Dialogue: 0,0:02:52.10,0:02:53.19,Default,,0,0,0,,And lastly, we're going to talk
Dialogue: 0,0:02:53.19,0:02:54.17,Default,,0,0,0,,about the availability of
Dialogue: 0,0:02:54.17,0:02:55.38,Default,,0,0,0,,AirPlay 2.
Dialogue: 0,0:02:57.40,0:03:00.03,Default,,0,0,0,,So, let's begin our talk about
Dialogue: 0,0:03:00.03,0:03:00.93,Default,,0,0,0,,AirPlay 2 adoption.
Dialogue: 0,0:03:02.15,0:03:04.42,Default,,0,0,0,,So, in order to adopt AirPlay 2
Dialogue: 0,0:03:04.42,0:03:05.89,Default,,0,0,0,,in your app, there are basically
Dialogue: 0,0:03:05.96,0:03:07.18,Default,,0,0,0,,four steps you need to take.
Dialogue: 0,0:03:08.25,0:03:10.39,Default,,0,0,0,,First, you should identify your
Dialogue: 0,0:03:10.39,0:03:12.12,Default,,0,0,0,,app as presenting long-form
Dialogue: 0,0:03:12.12,0:03:12.48,Default,,0,0,0,,audio.
Dialogue: 0,0:03:12.88,0:03:14.18,Default,,0,0,0,,I'll explain what long-form
Dialogue: 0,0:03:14.18,0:03:17.12,Default,,0,0,0,,audio is in a minute.
Dialogue: 0,0:03:17.28,0:03:18.80,Default,,0,0,0,,Next, you should add an AirPlay
Dialogue: 0,0:03:18.80,0:03:20.59,Default,,0,0,0,,picker inside your app.
Dialogue: 0,0:03:21.69,0:03:23.51,Default,,0,0,0,,And third, you should integrate
Dialogue: 0,0:03:23.51,0:03:24.36,Default,,0,0,0,,with certain parts of the
Dialogue: 0,0:03:24.36,0:03:25.57,Default,,0,0,0,,MediaPlayer framework.
Dialogue: 0,0:03:26.13,0:03:29.04,Default,,0,0,0,,And lastly, you should adopt one
Dialogue: 0,0:03:29.04,0:03:30.31,Default,,0,0,0,,of the playback APIs that are
Dialogue: 0,0:03:30.31,0:03:31.78,Default,,0,0,0,,specifically designed to take
Dialogue: 0,0:03:31.78,0:03:32.91,Default,,0,0,0,,advantage of the enhanced
Dialogue: 0,0:03:32.91,0:03:35.02,Default,,0,0,0,,buffering in AirPlay 2.
Dialogue: 0,0:03:35.78,0:03:37.04,Default,,0,0,0,,So, let's walk through each of
Dialogue: 0,0:03:37.04,0:03:37.74,Default,,0,0,0,,these individually.
Dialogue: 0,0:03:39.56,0:03:41.84,Default,,0,0,0,,First, identifying yourself as
Dialogue: 0,0:03:41.84,0:03:43.11,Default,,0,0,0,,presenting long-form audio
Dialogue: 0,0:03:43.11,0:03:43.60,Default,,0,0,0,,content.
Dialogue: 0,0:03:44.42,0:03:45.60,Default,,0,0,0,,So, what is long-form audio
Dialogue: 0,0:03:45.60,0:03:46.07,Default,,0,0,0,,content?
Dialogue: 0,0:03:46.55,0:03:48.21,Default,,0,0,0,,Well long-form audio is anything
Dialogue: 0,0:03:48.21,0:03:49.80,Default,,0,0,0,,like, is content like music,
Dialogue: 0,0:03:50.17,0:03:52.95,Default,,0,0,0,,podcasts, or audiobooks, as
Dialogue: 0,0:03:52.95,0:03:54.25,Default,,0,0,0,,distinct from things like system
Dialogue: 0,0:03:54.25,0:03:56.25,Default,,0,0,0,,sounds on a Mac.
Dialogue: 0,0:03:56.74,0:03:58.16,Default,,0,0,0,,Now, identifying yourself as
Dialogue: 0,0:03:58.16,0:03:59.73,Default,,0,0,0,,presenting long-form audio
Dialogue: 0,0:03:59.73,0:04:00.92,Default,,0,0,0,,content is very easy.
Dialogue: 0,0:04:01.74,0:04:02.92,Default,,0,0,0,,You simply set your
Dialogue: 0,0:04:02.92,0:04:04.99,Default,,0,0,0,,application's AVAudioSession's
Dialogue: 0,0:04:05.12,0:04:06.82,Default,,0,0,0,,route sharing policy to be
Dialogue: 0,0:04:06.82,0:04:07.39,Default,,0,0,0,,long-form.
Dialogue: 0,0:04:08.78,0:04:10.17,Default,,0,0,0,,Now here's a code snippet of how
Dialogue: 0,0:04:10.17,0:04:11.09,Default,,0,0,0,,you do that on iOS.
Dialogue: 0,0:04:11.97,0:04:12.92,Default,,0,0,0,,This is something that many of
Dialogue: 0,0:04:12.92,0:04:14.79,Default,,0,0,0,,you iOS developers are likely
Dialogue: 0,0:04:14.79,0:04:16.69,Default,,0,0,0,,familiar with setting your
Dialogue: 0,0:04:16.69,0:04:18.66,Default,,0,0,0,,category and mode, and there's
Dialogue: 0,0:04:18.66,0:04:20.23,Default,,0,0,0,,just a new parameter here which
Dialogue: 0,0:04:20.23,0:04:21.31,Default,,0,0,0,,is routeSharingPolicy:
Dialogue: 0,0:04:21.71,0:04:22.26,Default,,0,0,0,,.longform.
Dialogue: 0,0:04:23.53,0:04:24.82,Default,,0,0,0,,As I said, this has been around
Dialogue: 0,0:04:24.82,0:04:26.56,Default,,0,0,0,,on iOS for a little while.
Dialogue: 0,0:04:26.56,0:04:27.68,Default,,0,0,0,,This class is actually,
Dialogue: 0,0:04:27.68,0:04:29.39,Default,,0,0,0,,AVAudioSession is new altogether
Dialogue: 0,0:04:29.39,0:04:31.44,Default,,0,0,0,,on macOS, and I'm not going to
Dialogue: 0,0:04:31.44,0:04:32.50,Default,,0,0,0,,show a code snippet, but it's
Dialogue: 0,0:04:32.50,0:04:34.34,Default,,0,0,0,,even simpler than what you have
Dialogue: 0,0:04:34.34,0:04:35.19,Default,,0,0,0,,to do on iOS.
Dialogue: 0,0:04:35.59,0:04:37.05,Default,,0,0,0,,You simply set the route sharing
Dialogue: 0,0:04:37.05,0:04:37.97,Default,,0,0,0,,policy to long-form.
Dialogue: 0,0:04:39.10,0:04:40.87,Default,,0,0,0,,And for more information on this
Dialogue: 0,0:04:40.87,0:04:42.96,Default,,0,0,0,,new route sharing policy and
Dialogue: 0,0:04:42.96,0:04:44.45,Default,,0,0,0,,what it can do for your app in
Dialogue: 0,0:04:44.45,0:04:45.22,Default,,0,0,0,,regards to the rest of the
Dialogue: 0,0:04:45.22,0:04:47.27,Default,,0,0,0,,system, for example allow the
Dialogue: 0,0:04:47.27,0:04:49.09,Default,,0,0,0,,user to take a phone call while
Dialogue: 0,0:04:49.09,0:04:51.72,Default,,0,0,0,,you're app is AirPlay, using
Dialogue: 0,0:04:51.72,0:04:53.23,Default,,0,0,0,,AirPlay 2 to stream to speakers,
Dialogue: 0,0:04:53.65,0:04:54.83,Default,,0,0,0,,I encourage you to take a look
Dialogue: 0,0:04:54.83,0:04:55.92,Default,,0,0,0,,at this session from earlier in
Dialogue: 0,0:04:55.92,0:04:57.50,Default,,0,0,0,,the week called What's New in
Dialogue: 0,0:04:57.50,0:04:57.85,Default,,0,0,0,,Audio.
Dialogue: 0,0:04:57.88,0:05:00.98,Default,,0,0,0,,All right, so that's the first
Dialogue: 0,0:05:00.98,0:05:03.20,Default,,0,0,0,,step you need to do to take
Dialogue: 0,0:05:03.20,0:05:04.27,Default,,0,0,0,,advantage of AirPlay 2.
Dialogue: 0,0:05:04.83,0:05:06.56,Default,,0,0,0,,The second is to add an AirPlay
Dialogue: 0,0:05:06.56,0:05:08.35,Default,,0,0,0,,picker inside your app.
Dialogue: 0,0:05:09.02,0:05:11.92,Default,,0,0,0,,This will allow users to route
Dialogue: 0,0:05:11.92,0:05:13.93,Default,,0,0,0,,their content to AirPlay
Dialogue: 0,0:05:13.93,0:05:15.39,Default,,0,0,0,,speakers without leaving the
Dialogue: 0,0:05:15.39,0:05:17.39,Default,,0,0,0,,confines of your app.
Dialogue: 0,0:05:17.72,0:05:18.97,Default,,0,0,0,,And doing this is very easy.
Dialogue: 0,0:05:18.97,0:05:21.97,Default,,0,0,0,,You simply adopt a new API
Dialogue: 0,0:05:22.40,0:05:23.42,Default,,0,0,0,,called AVKit's
Dialogue: 0,0:05:23.42,0:05:24.85,Default,,0,0,0,,AVRoutePickerView.
Dialogue: 0,0:05:25.43,0:05:26.76,Default,,0,0,0,,You simply add this view to your
Dialogue: 0,0:05:26.76,0:05:27.50,Default,,0,0,0,,view hierarchy.
Dialogue: 0,0:05:28.78,0:05:30.61,Default,,0,0,0,,And you may want to control when
Dialogue: 0,0:05:30.61,0:05:32.21,Default,,0,0,0,,this is shown, for example only
Dialogue: 0,0:05:32.21,0:05:34.38,Default,,0,0,0,,show it if there actually is an
Dialogue: 0,0:05:34.38,0:05:36.01,Default,,0,0,0,,AirPlay 2 speaker or an AirPlay
Dialogue: 0,0:05:36.01,0:05:37.37,Default,,0,0,0,,speaker available to be routed
Dialogue: 0,0:05:37.37,0:05:37.61,Default,,0,0,0,,to.
Dialogue: 0,0:05:38.25,0:05:39.92,Default,,0,0,0,,And you can do that by adopting
Dialogue: 0,0:05:39.92,0:05:42.05,Default,,0,0,0,,AVFoundation's AVRouteDetector
Dialogue: 0,0:05:42.15,0:05:43.41,Default,,0,0,0,,which will tell you if there are
Dialogue: 0,0:05:43.41,0:05:44.67,Default,,0,0,0,,speakers, if there are routes
Dialogue: 0,0:05:44.67,0:05:45.21,Default,,0,0,0,,available.
Dialogue: 0,0:05:46.64,0:05:49.79,Default,,0,0,0,,These API, they're new in the
Dialogue: 0,0:05:49.79,0:05:53.21,Default,,0,0,0,,latest OS releases and they're
Dialogue: 0,0:05:53.21,0:05:55.55,Default,,0,0,0,,available on macOS, iOS, and
Dialogue: 0,0:05:55.55,0:05:56.04,Default,,0,0,0,,tvOS.
Dialogue: 0,0:05:57.07,0:05:58.28,Default,,0,0,0,,And a note to all of you iOS
Dialogue: 0,0:05:58.28,0:05:59.43,Default,,0,0,0,,developers who are currently
Dialogue: 0,0:05:59.43,0:06:01.50,Default,,0,0,0,,using MPVolumeView, it will
Dialogue: 0,0:06:01.50,0:06:03.07,Default,,0,0,0,,still work, but we are
Dialogue: 0,0:06:03.07,0:06:04.15,Default,,0,0,0,,encouraging people to move to
Dialogue: 0,0:06:04.15,0:06:05.09,Default,,0,0,0,,these API instead.
Dialogue: 0,0:06:05.64,0:06:08.24,Default,,0,0,0,,So, that's the second thing you
Dialogue: 0,0:06:08.24,0:06:09.65,Default,,0,0,0,,need to do to get your app up
Dialogue: 0,0:06:09.65,0:06:10.87,Default,,0,0,0,,and running with AirPlay 2.
Dialogue: 0,0:06:11.58,0:06:13.43,Default,,0,0,0,,The third thing you should do is
Dialogue: 0,0:06:13.43,0:06:14.79,Default,,0,0,0,,to integrate your app with
Dialogue: 0,0:06:14.79,0:06:15.87,Default,,0,0,0,,certain parts of the MediaPlayer
Dialogue: 0,0:06:15.87,0:06:16.33,Default,,0,0,0,,framework.
Dialogue: 0,0:06:16.84,0:06:18.04,Default,,0,0,0,,Now this is rather large, so
Dialogue: 0,0:06:18.04,0:06:18.99,Default,,0,0,0,,there's basically two things
Dialogue: 0,0:06:18.99,0:06:20.57,Default,,0,0,0,,that I'm specifically focusing
Dialogue: 0,0:06:20.57,0:06:20.94,Default,,0,0,0,,on today.
Dialogue: 0,0:06:20.94,0:06:23.42,Default,,0,0,0,,And these are things that will,
Dialogue: 0,0:06:24.04,0:06:26.50,Default,,0,0,0,,these API will allow you to do
Dialogue: 0,0:06:26.50,0:06:27.73,Default,,0,0,0,,things like display the
Dialogue: 0,0:06:27.73,0:06:29.90,Default,,0,0,0,,currently playing album art on
Dialogue: 0,0:06:29.90,0:06:31.84,Default,,0,0,0,,the lock screen or an Apple TV
Dialogue: 0,0:06:32.78,0:06:33.91,Default,,0,0,0,,it's being AirPlayed to.
Dialogue: 0,0:06:34.29,0:06:35.56,Default,,0,0,0,,And additionally, they will
Dialogue: 0,0:06:35.56,0:06:37.53,Default,,0,0,0,,allow you to receive playback
Dialogue: 0,0:06:37.53,0:06:39.72,Default,,0,0,0,,commands and pause commands from
Dialogue: 0,0:06:39.72,0:06:42.06,Default,,0,0,0,,other devices on the network or
Dialogue: 0,0:06:42.06,0:06:43.85,Default,,0,0,0,,from other accessories like
Dialogue: 0,0:06:43.85,0:06:44.34,Default,,0,0,0,,headphones.
Dialogue: 0,0:06:44.92,0:06:47.07,Default,,0,0,0,,And the two pieces of API that
Dialogue: 0,0:06:47.07,0:06:48.65,Default,,0,0,0,,we need, we are asking you to
Dialogue: 0,0:06:48.65,0:06:49.04,Default,,0,0,0,,adopt.
Dialogue: 0,0:06:49.80,0:06:50.52,Default,,0,0,0,,The first is
Dialogue: 0,0:06:50.52,0:06:52.45,Default,,0,0,0,,MPRemoteCommandCenter and this
Dialogue: 0,0:06:52.45,0:06:53.68,Default,,0,0,0,,will allow you to receive those
Dialogue: 0,0:06:53.68,0:06:56.00,Default,,0,0,0,,remote commands, and the second
Dialogue: 0,0:06:56.28,0:06:58.49,Default,,0,0,0,,is MPNowPlayingInfoCenter which
Dialogue: 0,0:06:58.49,0:06:59.48,Default,,0,0,0,,will allow you to inform the
Dialogue: 0,0:06:59.48,0:07:01.08,Default,,0,0,0,,system metadata about the
Dialogue: 0,0:07:01.08,0:07:02.46,Default,,0,0,0,,currently playing track.
Dialogue: 0,0:07:02.63,0:07:05.46,Default,,0,0,0,,All right, so that's the third
Dialogue: 0,0:07:05.46,0:07:06.68,Default,,0,0,0,,thing you need to do to get your
Dialogue: 0,0:07:06.68,0:07:08.09,Default,,0,0,0,,app up and running with AirPlay
Dialogue: 0,0:07:08.09,0:07:08.34,Default,,0,0,0,,2.
Dialogue: 0,0:07:08.99,0:07:10.54,Default,,0,0,0,,The fourth this is you should
Dialogue: 0,0:07:10.54,0:07:11.95,Default,,0,0,0,,adopt one of the playback APIs
Dialogue: 0,0:07:11.95,0:07:13.85,Default,,0,0,0,,that are specifically designed
Dialogue: 0,0:07:13.89,0:07:15.67,Default,,0,0,0,,to take advantage of enhanced
Dialogue: 0,0:07:15.67,0:07:16.92,Default,,0,0,0,,buffering in AirPlay 2.
Dialogue: 0,0:07:18.11,0:07:18.93,Default,,0,0,0,,And to motivate this
Dialogue: 0,0:07:18.93,0:07:20.79,Default,,0,0,0,,conversation, let's take a look
Dialogue: 0,0:07:20.79,0:07:22.14,Default,,0,0,0,,a little bit deeper at AirPlay
Dialogue: 0,0:07:22.14,0:07:24.53,Default,,0,0,0,,audio and the buffer levels
Dialogue: 0,0:07:24.65,0:07:26.56,Default,,0,0,0,,beginning with how AirPlay works
Dialogue: 0,0:07:26.56,0:07:26.88,Default,,0,0,0,,today.
Dialogue: 0,0:07:28.08,0:07:30.27,Default,,0,0,0,,So, AirPlay today is effectively
Dialogue: 0,0:07:30.27,0:07:32.51,Default,,0,0,0,,a real-time stream of audio to
Dialogue: 0,0:07:32.51,0:07:33.83,Default,,0,0,0,,which the speakers adds just a
Dialogue: 0,0:07:33.83,0:07:35.49,Default,,0,0,0,,few seconds of buffering before
Dialogue: 0,0:07:35.49,0:07:36.51,Default,,0,0,0,,playing out in real-time.
Dialogue: 0,0:07:37.07,0:07:39.94,Default,,0,0,0,,Now, this works very well to a
Dialogue: 0,0:07:39.94,0:07:41.91,Default,,0,0,0,,single speaker, and it works
Dialogue: 0,0:07:41.91,0:07:43.63,Default,,0,0,0,,pretty well with lots of
Dialogue: 0,0:07:43.63,0:07:44.12,Default,,0,0,0,,content.
Dialogue: 0,0:07:45.14,0:07:48.26,Default,,0,0,0,,But, if we are able to restrict
Dialogue: 0,0:07:48.26,0:07:49.65,Default,,0,0,0,,ourselves on only focusing on
Dialogue: 0,0:07:49.65,0:07:51.53,Default,,0,0,0,,long-form content, like music,
Dialogue: 0,0:07:51.60,0:07:53.52,Default,,0,0,0,,podcasts or audiobooks, we can
Dialogue: 0,0:07:53.52,0:07:56.36,Default,,0,0,0,,probably do better.
Dialogue: 0,0:07:56.53,0:07:58.62,Default,,0,0,0,,So, let's talk about the
Dialogue: 0,0:07:58.62,0:08:00.59,Default,,0,0,0,,enhanced buffering in AirPlay 2.
Dialogue: 0,0:08:01.19,0:08:03.39,Default,,0,0,0,,So, what am I talking about with
Dialogue: 0,0:08:03.39,0:08:04.95,Default,,0,0,0,,enhanced buffering in AirPlay 2?
Dialogue: 0,0:08:05.54,0:08:09.33,Default,,0,0,0,,Well, as the name implies, we've
Dialogue: 0,0:08:09.33,0:08:11.99,Default,,0,0,0,,added very large buffer capacity
Dialogue: 0,0:08:11.99,0:08:13.52,Default,,0,0,0,,on the AirPlay 2 speakers.
Dialogue: 0,0:08:13.73,0:08:14.57,Default,,0,0,0,,Here I want you to think
Dialogue: 0,0:08:14.57,0:08:16.80,Default,,0,0,0,,minutes, not seconds.
Dialogue: 0,0:08:17.82,0:08:18.75,Default,,0,0,0,,Additionally, we're able to
Dialogue: 0,0:08:18.75,0:08:20.23,Default,,0,0,0,,stream the audio content from
Dialogue: 0,0:08:20.23,0:08:21.49,Default,,0,0,0,,your app to the speaker
Dialogue: 0,0:08:21.49,0:08:22.60,Default,,0,0,0,,faster-than-real-time.
Dialogue: 0,0:08:23.13,0:08:25.42,Default,,0,0,0,,And I think the benefits of this
Dialogue: 0,0:08:25.42,0:08:26.10,Default,,0,0,0,,should be clear.
Dialogue: 0,0:08:27.40,0:08:28.96,Default,,0,0,0,,The large buffering on the
Dialogue: 0,0:08:28.96,0:08:30.13,Default,,0,0,0,,AirPlay speakers will add a
Dialogue: 0,0:08:30.13,0:08:32.24,Default,,0,0,0,,large degree of robustness to
Dialogue: 0,0:08:32.24,0:08:33.14,Default,,0,0,0,,the AirPlay session.
Dialogue: 0,0:08:33.92,0:08:35.11,Default,,0,0,0,,You should be able to survive
Dialogue: 0,0:08:35.11,0:08:36.59,Default,,0,0,0,,more typical network glitches,
Dialogue: 0,0:08:36.59,0:08:38.05,Default,,0,0,0,,like walking, taking the trash
Dialogue: 0,0:08:38.05,0:08:39.23,Default,,0,0,0,,out, or walking to the dead spot
Dialogue: 0,0:08:39.23,0:08:40.33,Default,,0,0,0,,of the house, or even
Dialogue: 0,0:08:40.33,0:08:41.41,Default,,0,0,0,,microwaving some popcorn.
Dialogue: 0,0:08:43.34,0:08:44.61,Default,,0,0,0,,Additionally, this should
Dialogue: 0,0:08:44.61,0:08:46.11,Default,,0,0,0,,provide more responsive playback
Dialogue: 0,0:08:46.11,0:08:46.81,Default,,0,0,0,,experience.
Dialogue: 0,0:08:47.56,0:08:48.88,Default,,0,0,0,,The real-time nature of existing
Dialogue: 0,0:08:48.88,0:08:50.02,Default,,0,0,0,,AirPlay means that there's a
Dialogue: 0,0:08:50.02,0:08:51.82,Default,,0,0,0,,fixed output latency that is
Dialogue: 0,0:08:51.82,0:08:53.38,Default,,0,0,0,,related to the buffer level on
Dialogue: 0,0:08:53.38,0:08:54.20,Default,,0,0,0,,the AirPlay speaker.
Dialogue: 0,0:08:55.35,0:08:57.05,Default,,0,0,0,,So, when you hit play, with
Dialogue: 0,0:08:57.05,0:08:58.39,Default,,0,0,0,,AirPlay 2 it should play a lot
Dialogue: 0,0:08:58.39,0:08:58.78,Default,,0,0,0,,faster.
Dialogue: 0,0:08:58.78,0:08:59.73,Default,,0,0,0,,When you hit skip, it should
Dialogue: 0,0:08:59.73,0:09:00.68,Default,,0,0,0,,skip a lot faster.
Dialogue: 0,0:09:01.73,0:09:04.48,Default,,0,0,0,,This will add a great, this is a
Dialogue: 0,0:09:04.48,0:09:06.37,Default,,0,0,0,,great user experience for your
Dialogue: 0,0:09:06.37,0:09:08.59,Default,,0,0,0,,users which is why we're really
Dialogue: 0,0:09:08.59,0:09:09.51,Default,,0,0,0,,excited to talk about the
Dialogue: 0,0:09:09.51,0:09:10.20,Default,,0,0,0,,enhanced buffering.
Dialogue: 0,0:09:10.72,0:09:14.11,Default,,0,0,0,,And so in order to take
Dialogue: 0,0:09:14.11,0:09:15.34,Default,,0,0,0,,advantage of the advanced
Dialogue: 0,0:09:15.34,0:09:16.77,Default,,0,0,0,,buffering, you should adopt one
Dialogue: 0,0:09:16.77,0:09:17.47,Default,,0,0,0,,of a few API.
Dialogue: 0,0:09:18.65,0:09:20.66,Default,,0,0,0,,The first, is AVPlayer and
Dialogue: 0,0:09:20.66,0:09:21.42,Default,,0,0,0,,AVQueuePlayer.
Dialogue: 0,0:09:21.61,0:09:23.70,Default,,0,0,0,,The AVPlayer's set of playback
Dialogue: 0,0:09:23.70,0:09:23.98,Default,,0,0,0,,API.
Dialogue: 0,0:09:24.69,0:09:26.02,Default,,0,0,0,,These have been around for quite
Dialogue: 0,0:09:26.02,0:09:27.69,Default,,0,0,0,,a while and they're your easiest
Dialogue: 0,0:09:27.69,0:09:29.20,Default,,0,0,0,,route to AirPlay 2 in the
Dialogue: 0,0:09:29.20,0:09:29.91,Default,,0,0,0,,enhanced buffering.
Dialogue: 0,0:09:31.29,0:09:33.15,Default,,0,0,0,,The second API, set of API are
Dialogue: 0,0:09:33.15,0:09:34.56,Default,,0,0,0,,new API that we're introducing
Dialogue: 0,0:09:34.56,0:09:35.74,Default,,0,0,0,,today which are
Dialogue: 0,0:09:35.74,0:09:37.77,Default,,0,0,0,,AVSampleBufferAudio Renderer and
Dialogue: 0,0:09:37.77,0:09:38.80,Default,,0,0,0,,AVSampleBufferRender
Dialogue: 0,0:09:38.80,0:09:39.46,Default,,0,0,0,,Synchronizer.
Dialogue: 0,0:09:40.90,0:09:42.54,Default,,0,0,0,,These will prevent, present more
Dialogue: 0,0:09:42.54,0:09:44.79,Default,,0,0,0,,flexibility to apps that need
Dialogue: 0,0:09:45.40,0:09:45.47,Default,,0,0,0,,it.
Dialogue: 0,0:09:46.10,0:09:47.28,Default,,0,0,0,,So, let's talk about these
Dialogue: 0,0:09:47.28,0:09:50.33,Default,,0,0,0,,individually by first surveying
Dialogue: 0,0:09:50.33,0:09:51.52,Default,,0,0,0,,AVPlayer and AVQueuePlayer.
Dialogue: 0,0:09:52.67,0:09:53.65,Default,,0,0,0,,So, as I've said these have been
Dialogue: 0,0:09:53.65,0:09:54.90,Default,,0,0,0,,around for quite a while, since
Dialogue: 0,0:09:54.90,0:09:56.52,Default,,0,0,0,,iOS 4 on the iOS platforms.
Dialogue: 0,0:09:57.60,0:09:59.03,Default,,0,0,0,,And because of that there's a
Dialogue: 0,0:09:59.03,0:10:00.32,Default,,0,0,0,,ton of documentation on the
Dialogue: 0,0:10:00.32,0:10:01.72,Default,,0,0,0,,developer website and a lot of
Dialogue: 0,0:10:01.72,0:10:02.52,Default,,0,0,0,,sample code there.
Dialogue: 0,0:10:03.05,0:10:04.29,Default,,0,0,0,,So, if you want a lot of detail
Dialogue: 0,0:10:04.29,0:10:06.33,Default,,0,0,0,,on these, I encourage you to
Dialogue: 0,0:10:06.33,0:10:07.90,Default,,0,0,0,,look to the developer website,
Dialogue: 0,0:10:07.90,0:10:09.47,Default,,0,0,0,,because I'm just going to give a
Dialogue: 0,0:10:09.47,0:10:10.65,Default,,0,0,0,,very high-level overview of
Dialogue: 0,0:10:10.65,0:10:11.49,Default,,0,0,0,,these API today.
Dialogue: 0,0:10:12.37,0:10:14.32,Default,,0,0,0,,So, what I'm going to do, is I'm
Dialogue: 0,0:10:14.32,0:10:15.88,Default,,0,0,0,,going to walk through what it
Dialogue: 0,0:10:15.88,0:10:17.34,Default,,0,0,0,,takes to build an app with this
Dialogue: 0,0:10:17.34,0:10:17.67,Default,,0,0,0,,API.
Dialogue: 0,0:10:18.20,0:10:19.24,Default,,0,0,0,,So, here you have your Client
Dialogue: 0,0:10:19.24,0:10:20.53,Default,,0,0,0,,App, and if you want to build an
Dialogue: 0,0:10:20.53,0:10:21.71,Default,,0,0,0,,app with an AVPlayer or
Dialogue: 0,0:10:21.71,0:10:23.19,Default,,0,0,0,,AVQueuePlayer, the first thing
Dialogue: 0,0:10:23.19,0:10:24.36,Default,,0,0,0,,you're going to do is your going
Dialogue: 0,0:10:24.36,0:10:25.93,Default,,0,0,0,,instantiate one of the objects.
Dialogue: 0,0:10:27.25,0:10:28.72,Default,,0,0,0,,Here I'm using an AVQueuePlayer
Dialogue: 0,0:10:28.72,0:10:29.92,Default,,0,0,0,,but the steps are exactly the
Dialogue: 0,0:10:29.92,0:10:31.20,Default,,0,0,0,,same if you use AVPlayer.
Dialogue: 0,0:10:31.69,0:10:35.58,Default,,0,0,0,,Next, you're going to take a URL
Dialogue: 0,0:10:35.58,0:10:37.01,Default,,0,0,0,,that points to the content that
Dialogue: 0,0:10:37.01,0:10:38.62,Default,,0,0,0,,you want to play, and that
Dialogue: 0,0:10:38.62,0:10:40.32,Default,,0,0,0,,content can be local or it can
Dialogue: 0,0:10:40.32,0:10:41.30,Default,,0,0,0,,be in the cloud, it can be
Dialogue: 0,0:10:41.30,0:10:41.59,Default,,0,0,0,,remote.
Dialogue: 0,0:10:41.59,0:10:43.30,Default,,0,0,0,,You're going to take that URL,
Dialogue: 0,0:10:43.30,0:10:45.01,Default,,0,0,0,,and you're going to wrap it in
Dialogue: 0,0:10:45.01,0:10:46.77,Default,,0,0,0,,an AVAsset and you're going to
Dialogue: 0,0:10:46.77,0:10:48.25,Default,,0,0,0,,wrap that AVAsset in an
Dialogue: 0,0:10:48.25,0:10:48.77,Default,,0,0,0,,AVPlayerItem.
Dialogue: 0,0:10:50.30,0:10:51.79,Default,,0,0,0,,Next, you're going to give that
Dialogue: 0,0:10:51.79,0:10:53.15,Default,,0,0,0,,AVPlayerItem to the
Dialogue: 0,0:10:53.15,0:10:53.65,Default,,0,0,0,,AVQueuePlayer.
Dialogue: 0,0:10:54.25,0:10:56.64,Default,,0,0,0,,Now after you've handed it over,
Dialogue: 0,0:10:56.64,0:10:57.47,Default,,0,0,0,,you're ready to initiate
Dialogue: 0,0:10:57.47,0:10:57.85,Default,,0,0,0,,playback.
Dialogue: 0,0:10:57.97,0:11:00.54,Default,,0,0,0,,And you do so but simply setting
Dialogue: 0,0:11:00.54,0:11:01.37,Default,,0,0,0,,the rate of 1 on the
Dialogue: 0,0:11:01.37,0:11:03.86,Default,,0,0,0,,AVQueuePlayer, which in response
Dialogue: 0,0:11:03.86,0:11:05.15,Default,,0,0,0,,will begin downloading the audio
Dialogue: 0,0:11:05.15,0:11:07.50,Default,,0,0,0,,data from wherever it resides,
Dialogue: 0,0:11:08.04,0:11:10.27,Default,,0,0,0,,and then playing it out the
Dialogue: 0,0:11:10.27,0:11:10.81,Default,,0,0,0,,speakers.
Dialogue: 0,0:11:11.21,0:11:15.88,Default,,0,0,0,,So, this is the quick survey of
Dialogue: 0,0:11:15.88,0:11:17.35,Default,,0,0,0,,AVPlayer and AVQueuePlayer, I
Dialogue: 0,0:11:17.35,0:11:18.47,Default,,0,0,0,,should also note that this works
Dialogue: 0,0:11:18.47,0:11:19.88,Default,,0,0,0,,really well for video content.
Dialogue: 0,0:11:20.55,0:11:21.32,Default,,0,0,0,,So, if you want to play some
Dialogue: 0,0:11:21.32,0:11:22.69,Default,,0,0,0,,video content, you can do it
Dialogue: 0,0:11:22.69,0:11:23.99,Default,,0,0,0,,pretty easily with AVPlayer and
Dialogue: 0,0:11:23.99,0:11:24.45,Default,,0,0,0,,AVQueuePlayer.
Dialogue: 0,0:11:25.03,0:11:29.06,Default,,0,0,0,,So, just to reiterate, your
Dialogue: 0,0:11:29.06,0:11:31.04,Default,,0,0,0,,easiest way to AirPlay 2 is
Dialogue: 0,0:11:31.04,0:11:31.87,Default,,0,0,0,,using these API.
Dialogue: 0,0:11:32.67,0:11:34.49,Default,,0,0,0,,But we recognize that this won't
Dialogue: 0,0:11:34.49,0:11:35.35,Default,,0,0,0,,work for everybody.
Dialogue: 0,0:11:35.75,0:11:37.15,Default,,0,0,0,,There's a certain class of audio
Dialogue: 0,0:11:37.15,0:11:38.17,Default,,0,0,0,,playing apps that either
Dialogue: 0,0:11:38.17,0:11:39.74,Default,,0,0,0,,require, that want to do their
Dialogue: 0,0:11:39.74,0:11:40.94,Default,,0,0,0,,own IO possibly.
Dialogue: 0,0:11:41.45,0:11:43.92,Default,,0,0,0,,Possibly their own DRM or even
Dialogue: 0,0:11:43.98,0:11:46.51,Default,,0,0,0,,preprocessing on the media data
Dialogue: 0,0:11:46.60,0:11:47.46,Default,,0,0,0,,before it's rendered out.
Dialogue: 0,0:11:47.57,0:11:48.87,Default,,0,0,0,,They need more flexibility than
Dialogue: 0,0:11:48.87,0:11:50.22,Default,,0,0,0,,the, than what these API
Dialogue: 0,0:11:50.35,0:11:50.72,Default,,0,0,0,,provide.
Dialogue: 0,0:11:51.18,0:11:54.42,Default,,0,0,0,,And for these developers we're
Dialogue: 0,0:11:54.42,0:11:55.99,Default,,0,0,0,,introducing these new classes,
Dialogue: 0,0:11:56.54,0:11:58.62,Default,,0,0,0,,AVSampleBufferAudio Renderer and
Dialogue: 0,0:11:58.62,0:11:59.59,Default,,0,0,0,,AVSampleBufferRender
Dialogue: 0,0:11:59.59,0:12:00.24,Default,,0,0,0,,Synchronizer.
Dialogue: 0,0:12:01.77,0:12:03.65,Default,,0,0,0,,Now with these APIs when you use
Dialogue: 0,0:12:03.65,0:12:05.01,Default,,0,0,0,,them to do playback, your app
Dialogue: 0,0:12:05.01,0:12:06.57,Default,,0,0,0,,has additional responsibilities.
Dialogue: 0,0:12:07.79,0:12:09.54,Default,,0,0,0,,So, first of all your app is
Dialogue: 0,0:12:09.54,0:12:10.85,Default,,0,0,0,,responsible for sourcing and
Dialogue: 0,0:12:10.85,0:12:11.67,Default,,0,0,0,,parsing the content.
Dialogue: 0,0:12:12.16,0:12:13.29,Default,,0,0,0,,You need to go get it wherever
Dialogue: 0,0:12:13.29,0:12:14.80,Default,,0,0,0,,it is, download it, read it off
Dialogue: 0,0:12:14.80,0:12:16.40,Default,,0,0,0,,disc, whatever.
Dialogue: 0,0:12:17.05,0:12:18.60,Default,,0,0,0,,And then your app has to parse
Dialogue: 0,0:12:18.60,0:12:20.81,Default,,0,0,0,,it and feed the raw audio data,
Dialogue: 0,0:12:20.81,0:12:22.79,Default,,0,0,0,,the raw audio buffers to the API
Dialogue: 0,0:12:22.93,0:12:23.44,Default,,0,0,0,,for rendering.
Dialogue: 0,0:12:24.94,0:12:26.09,Default,,0,0,0,,This is kind of similar to
Dialogue: 0,0:12:26.09,0:12:27.39,Default,,0,0,0,,AudioQueue but it works better
Dialogue: 0,0:12:27.39,0:12:28.81,Default,,0,0,0,,with the deeper buffers that we
Dialogue: 0,0:12:28.81,0:12:31.78,Default,,0,0,0,,need for buffered AirPlay, for
Dialogue: 0,0:12:31.92,0:12:32.53,Default,,0,0,0,,enhanced AirPlay.
Dialogue: 0,0:12:32.83,0:12:35.37,Default,,0,0,0,,Because these are new, we're
Dialogue: 0,0:12:35.37,0:12:36.49,Default,,0,0,0,,going to spend the remainder of
Dialogue: 0,0:12:36.49,0:12:37.67,Default,,0,0,0,,this session talking about
Dialogue: 0,0:12:37.98,0:12:38.36,Default,,0,0,0,,these.
Dialogue: 0,0:12:38.50,0:12:42.68,Default,,0,0,0,,All right, so let's walk through
Dialogue: 0,0:12:42.68,0:12:44.16,Default,,0,0,0,,a simple block diagram of how
Dialogue: 0,0:12:44.16,0:12:45.44,Default,,0,0,0,,you might build an app using
Dialogue: 0,0:12:45.44,0:12:45.91,Default,,0,0,0,,these API.
Dialogue: 0,0:12:47.10,0:12:48.71,Default,,0,0,0,,So, again use your Client App,
Dialogue: 0,0:12:49.44,0:12:50.29,Default,,0,0,0,,and the first thing you're going
Dialogue: 0,0:12:50.29,0:12:51.38,Default,,0,0,0,,to do when building an app with
Dialogue: 0,0:12:51.38,0:12:52.05,Default,,0,0,0,,these is you're going to
Dialogue: 0,0:12:52.05,0:12:52.90,Default,,0,0,0,,instantiate an
Dialogue: 0,0:12:53.29,0:12:54.49,Default,,0,0,0,,AVSampleBufferRender
Dialogue: 0,0:12:54.49,0:12:55.78,Default,,0,0,0,,Synchronizer and
Dialogue: 0,0:12:55.78,0:12:57.18,Default,,0,0,0,,AVSampleBufferAudio Renderer.
Dialogue: 0,0:12:58.16,0:12:59.66,Default,,0,0,0,,Now of these classes, the
Dialogue: 0,0:12:59.66,0:13:01.52,Default,,0,0,0,,AudioRenderer class is the one
Dialogue: 0,0:13:01.52,0:13:02.44,Default,,0,0,0,,that is responsible for
Dialogue: 0,0:13:02.44,0:13:04.23,Default,,0,0,0,,rendering the audio, and the
Dialogue: 0,0:13:04.23,0:13:05.69,Default,,0,0,0,,Synchronizer class is the one
Dialogue: 0,0:13:05.69,0:13:06.77,Default,,0,0,0,,that's responsible for
Dialogue: 0,0:13:06.77,0:13:08.15,Default,,0,0,0,,establishing the media timeline.
Dialogue: 0,0:13:09.42,0:13:10.51,Default,,0,0,0,,Now, there's good reason, you
Dialogue: 0,0:13:10.51,0:13:11.54,Default,,0,0,0,,may be asking yourself, why are
Dialogue: 0,0:13:11.54,0:13:12.59,Default,,0,0,0,,they two classes, why didn't you
Dialogue: 0,0:13:12.59,0:13:13.51,Default,,0,0,0,,roll it into one?
Dialogue: 0,0:13:13.63,0:13:14.57,Default,,0,0,0,,Well, I assure you there's a
Dialogue: 0,0:13:14.57,0:13:15.15,Default,,0,0,0,,good reason.
Dialogue: 0,0:13:15.15,0:13:16.05,Default,,0,0,0,,We'll talk about that later.
Dialogue: 0,0:13:16.31,0:13:17.13,Default,,0,0,0,,But never the less,
Dialogue: 0,0:13:17.62,0:13:19.11,Default,,0,0,0,,AudioRenderer it does the
Dialogue: 0,0:13:19.11,0:13:20.07,Default,,0,0,0,,rendering of the audio.
Dialogue: 0,0:13:20.19,0:13:21.68,Default,,0,0,0,,The Synchronizer establishes the
Dialogue: 0,0:13:21.68,0:13:23.64,Default,,0,0,0,,media timeline.
Dialogue: 0,0:13:24.16,0:13:25.65,Default,,0,0,0,,So, after you've instantiated
Dialogue: 0,0:13:25.65,0:13:27.79,Default,,0,0,0,,these, you add the AudioRenderer
Dialogue: 0,0:13:27.98,0:13:28.87,Default,,0,0,0,,to the Synchronizer.
Dialogue: 0,0:13:29.44,0:13:31.60,Default,,0,0,0,,This tells the AudioRenderer to
Dialogue: 0,0:13:31.60,0:13:33.01,Default,,0,0,0,,follow the media timeline
Dialogue: 0,0:13:33.01,0:13:34.82,Default,,0,0,0,,established by the Synchronizer.
Dialogue: 0,0:13:34.82,0:13:38.39,Default,,0,0,0,,Now, as you begin working with
Dialogue: 0,0:13:38.39,0:13:39.82,Default,,0,0,0,,an AVSampleBufferAudio Renderer,
Dialogue: 0,0:13:39.87,0:13:40.84,Default,,0,0,0,,one of the things it's going to
Dialogue: 0,0:13:40.84,0:13:41.77,Default,,0,0,0,,do is it's going to tell you
Dialogue: 0,0:13:41.77,0:13:43.66,Default,,0,0,0,,when it wants more media data.
Dialogue: 0,0:13:44.38,0:13:45.69,Default,,0,0,0,,And when it tells you that it
Dialogue: 0,0:13:45.69,0:13:46.91,Default,,0,0,0,,wants more media data, in
Dialogue: 0,0:13:46.91,0:13:48.69,Default,,0,0,0,,response, you should feed it.
Dialogue: 0,0:13:49.78,0:13:50.80,Default,,0,0,0,,So, give it some audio data.
Dialogue: 0,0:13:51.42,0:13:54.02,Default,,0,0,0,,And after you've done that, you
Dialogue: 0,0:13:54.02,0:13:55.68,Default,,0,0,0,,can begin playback by setting
Dialogue: 0,0:13:55.68,0:13:57.07,Default,,0,0,0,,the rate of 1 on the
Dialogue: 0,0:13:57.07,0:13:57.71,Default,,0,0,0,,Synchronizer.
Dialogue: 0,0:13:58.22,0:14:00.60,Default,,0,0,0,,And after you've set the rate of
Dialogue: 0,0:14:00.60,0:14:02.48,Default,,0,0,0,,1 on the Synchronizer, audio
Dialogue: 0,0:14:02.48,0:14:04.02,Default,,0,0,0,,data will begin flowing out of
Dialogue: 0,0:14:04.02,0:14:04.68,Default,,0,0,0,,the AudioRenderer.
Dialogue: 0,0:14:05.23,0:14:09.14,Default,,0,0,0,,So, that's the basic high-level
Dialogue: 0,0:14:09.14,0:14:10.36,Default,,0,0,0,,overview of how you build a
Dialogue: 0,0:14:10.36,0:14:11.65,Default,,0,0,0,,playback engine, with
Dialogue: 0,0:14:11.65,0:14:13.22,Default,,0,0,0,,AVSampleBufferAudio Renderer and
Dialogue: 0,0:14:13.22,0:14:14.04,Default,,0,0,0,,AVSampleBufferRender
Dialogue: 0,0:14:14.04,0:14:14.66,Default,,0,0,0,,Synchronizer.
Dialogue: 0,0:14:15.14,0:14:16.06,Default,,0,0,0,,Now I'd like to invite my
Dialogue: 0,0:14:16.06,0:14:17.51,Default,,0,0,0,,colleague Adam Sonnanstine up on
Dialogue: 0,0:14:17.51,0:14:19.24,Default,,0,0,0,,stage to give a demo of this.
Dialogue: 0,0:14:20.02,0:14:21.20,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:14:21.20,0:14:21.78,Default,,0,0,0,,>> Thank you, David.
Dialogue: 0,0:14:23.16,0:14:24.57,Default,,0,0,0,,I'm very happy to be here today
Dialogue: 0,0:14:24.57,0:14:26.84,Default,,0,0,0,,to demonstrate AirPlay 2 and its
Dialogue: 0,0:14:26.84,0:14:28.36,Default,,0,0,0,,enhanced reliability and
Dialogue: 0,0:14:28.36,0:14:29.02,Default,,0,0,0,,robustness.
Dialogue: 0,0:14:29.07,0:14:31.24,Default,,0,0,0,,I'm going to do that using this
Dialogue: 0,0:14:31.24,0:14:32.73,Default,,0,0,0,,sample application that we've
Dialogue: 0,0:14:32.73,0:14:33.26,Default,,0,0,0,,developed.
Dialogue: 0,0:14:33.26,0:14:35.21,Default,,0,0,0,,And this application will be
Dialogue: 0,0:14:35.27,0:14:37.42,Default,,0,0,0,,available as sample code shortly
Dialogue: 0,0:14:37.42,0:14:38.63,Default,,0,0,0,,after the conference ends.
Dialogue: 0,0:14:39.32,0:14:40.92,Default,,0,0,0,,And we also have an Apple TV on
Dialogue: 0,0:14:40.92,0:14:42.34,Default,,0,0,0,,stage so I can demonstrate
Dialogue: 0,0:14:42.65,0:14:44.58,Default,,0,0,0,,AirPlaying from the phone to the
Dialogue: 0,0:14:44.58,0:14:46.63,Default,,0,0,0,,Apple TV both with current
Dialogue: 0,0:14:46.63,0:14:48.24,Default,,0,0,0,,AirPlay and with AirPlay 2.
Dialogue: 0,0:14:48.57,0:14:50.14,Default,,0,0,0,,So let's take a look at the app.
Dialogue: 0,0:14:50.14,0:14:51.82,Default,,0,0,0,,You can see it's just a simple
Dialogue: 0,0:14:51.82,0:14:53.27,Default,,0,0,0,,sort of stripped down music
Dialogue: 0,0:14:53.27,0:14:54.27,Default,,0,0,0,,player interface.
Dialogue: 0,0:14:54.82,0:14:57.16,Default,,0,0,0,,We have this nice AirPlay or
Dialogue: 0,0:14:57.16,0:14:59.23,Default,,0,0,0,,sorry Control Center integration
Dialogue: 0,0:14:59.57,0:15:01.07,Default,,0,0,0,,because I've adopted the
Dialogue: 0,0:15:01.13,0:15:02.79,Default,,0,0,0,,MediaPlayer APIs that David
Dialogue: 0,0:15:02.79,0:15:03.50,Default,,0,0,0,,mentioned before.
Dialogue: 0,0:15:03.50,0:15:05.11,Default,,0,0,0,,So, I'm just going to go ahead
Dialogue: 0,0:15:05.11,0:15:05.95,Default,,0,0,0,,and start playing.
Dialogue: 0,0:15:05.95,0:15:07.74,Default,,0,0,0,,And so you can hear it, I'll
Dialogue: 0,0:15:08.35,0:15:10.43,Default,,0,0,0,,start AirPlaying to my Apple TV.
Dialogue: 0,0:15:11.00,0:15:16.22,Default,,0,0,0,,[music] Now this app has not yet
Dialogue: 0,0:15:16.22,0:15:18.49,Default,,0,0,0,,been optimized for AirPlay 2 so
Dialogue: 0,0:15:18.49,0:15:19.65,Default,,0,0,0,,I just want to give you a base
Dialogue: 0,0:15:19.72,0:15:21.75,Default,,0,0,0,,line of what the performance is
Dialogue: 0,0:15:21.75,0:15:23.04,Default,,0,0,0,,with the current AirPlay.
Dialogue: 0,0:15:23.73,0:15:25.81,Default,,0,0,0,,And I'm going to do that, I want
Dialogue: 0,0:15:25.81,0:15:27.68,Default,,0,0,0,,you to imagine that you are
Dialogue: 0,0:15:27.96,0:15:29.62,Default,,0,0,0,,enjoying this music sitting on
Dialogue: 0,0:15:29.62,0:15:31.35,Default,,0,0,0,,my couch in my living room, the
Dialogue: 0,0:15:31.35,0:15:32.65,Default,,0,0,0,,music being streamed from my
Dialogue: 0,0:15:32.65,0:15:34.71,Default,,0,0,0,,phone to my Apple TV and I
Dialogue: 0,0:15:34.71,0:15:36.30,Default,,0,0,0,,decide that it's a good time to
Dialogue: 0,0:15:36.44,0:15:37.79,Default,,0,0,0,,walk outside with the phone in
Dialogue: 0,0:15:37.79,0:15:39.48,Default,,0,0,0,,my pocket to take out the trash,
Dialogue: 0,0:15:40.37,0:15:42.82,Default,,0,0,0,,maybe to, walking right outside
Dialogue: 0,0:15:42.82,0:15:45.24,Default,,0,0,0,,of my Wi-Fi range, and I'm going
Dialogue: 0,0:15:45.24,0:15:46.75,Default,,0,0,0,,to simulate that by using this
Dialogue: 0,0:15:46.81,0:15:48.98,Default,,0,0,0,,bag, which shields everything I
Dialogue: 0,0:15:48.98,0:15:50.60,Default,,0,0,0,,put inside it from
Dialogue: 0,0:15:50.60,0:15:52.84,Default,,0,0,0,,electromagnetic radiation going
Dialogue: 0,0:15:52.84,0:15:55.01,Default,,0,0,0,,in and from coming out, and that
Dialogue: 0,0:15:55.01,0:15:56.18,Default,,0,0,0,,includes Wi-Fi.
Dialogue: 0,0:15:56.88,0:16:00.17,Default,,0,0,0,,So, I'll take my phone, and here
Dialogue: 0,0:16:00.17,0:16:03.10,Default,,0,0,0,,I am walking outside and you can
Dialogue: 0,0:16:03.10,0:16:05.77,Default,,0,0,0,,hear that almost immediately the
Dialogue: 0,0:16:05.77,0:16:06.66,Default,,0,0,0,,music cuts out.
Dialogue: 0,0:16:07.02,0:16:08.00,Default,,0,0,0,,You've probably experienced
Dialogue: 0,0:16:08.00,0:16:09.83,Default,,0,0,0,,something like this before and
Dialogue: 0,0:16:09.83,0:16:11.05,Default,,0,0,0,,if you're actually sitting in my
Dialogue: 0,0:16:11.05,0:16:12.38,Default,,0,0,0,,living room, listening to music
Dialogue: 0,0:16:12.63,0:16:13.59,Default,,0,0,0,,you're probably going to think
Dialogue: 0,0:16:13.59,0:16:14.91,Default,,0,0,0,,I'm not a very good host.
Dialogue: 0,0:16:15.72,0:16:17.83,Default,,0,0,0,,So, let's go back and I'll go
Dialogue: 0,0:16:17.83,0:16:19.15,Default,,0,0,0,,ahead and pause the music.
Dialogue: 0,0:16:20.70,0:16:23.45,Default,,0,0,0,,And we'll switch into Xcode here
Dialogue: 0,0:16:23.45,0:16:24.90,Default,,0,0,0,,and I'll show you how you can do
Dialogue: 0,0:16:25.25,0:16:27.61,Default,,0,0,0,,a couple of simple steps to opt
Dialogue: 0,0:16:27.86,0:16:30.45,Default,,0,0,0,,your app, this app into AirPlay
Dialogue: 0,0:16:30.45,0:16:30.74,Default,,0,0,0,,2.
Dialogue: 0,0:16:31.72,0:16:33.88,Default,,0,0,0,,So, here we are in Xcode and I
Dialogue: 0,0:16:33.88,0:16:35.64,Default,,0,0,0,,have just a very small snippet
Dialogue: 0,0:16:35.64,0:16:37.08,Default,,0,0,0,,from my application here, the
Dialogue: 0,0:16:37.08,0:16:38.32,Default,,0,0,0,,rest of it's implemented in
Dialogue: 0,0:16:38.53,0:16:39.39,Default,,0,0,0,,other files.
Dialogue: 0,0:16:39.78,0:16:41.42,Default,,0,0,0,,And I just have a function that
Dialogue: 0,0:16:41.88,0:16:43.95,Default,,0,0,0,,the rest of the app is using to
Dialogue: 0,0:16:44.18,0:16:45.96,Default,,0,0,0,,grab an object that it can use
Dialogue: 0,0:16:45.96,0:16:48.49,Default,,0,0,0,,to actually do the audio
Dialogue: 0,0:16:48.49,0:16:49.02,Default,,0,0,0,,playback.
Dialogue: 0,0:16:49.51,0:16:50.47,Default,,0,0,0,,It's basically a factory
Dialogue: 0,0:16:50.47,0:16:50.87,Default,,0,0,0,,function.
Dialogue: 0,0:16:50.87,0:16:52.45,Default,,0,0,0,,And this can return an object
Dialogue: 0,0:16:52.45,0:16:53.96,Default,,0,0,0,,that conforms to a protocol that
Dialogue: 0,0:16:53.96,0:16:54.96,Default,,0,0,0,,I've defined elsewhere in the
Dialogue: 0,0:16:54.96,0:16:55.19,Default,,0,0,0,,app.
Dialogue: 0,0:16:55.61,0:16:56.25,Default,,0,0,0,,We don't need to look at the
Dialogue: 0,0:16:56.25,0:16:57.84,Default,,0,0,0,,details, but it defines methods
Dialogue: 0,0:16:57.84,0:16:59.36,Default,,0,0,0,,for things like play and pause
Dialogue: 0,0:16:59.36,0:17:00.97,Default,,0,0,0,,and the sort of basic playback
Dialogue: 0,0:17:00.97,0:17:02.33,Default,,0,0,0,,operations that a player should
Dialogue: 0,0:17:02.33,0:17:02.58,Default,,0,0,0,,do.
Dialogue: 0,0:17:03.28,0:17:04.41,Default,,0,0,0,,And we have an existing
Dialogue: 0,0:17:04.41,0:17:06.03,Default,,0,0,0,,implementation of this protocol
Dialogue: 0,0:17:06.11,0:17:07.72,Default,,0,0,0,,which is being used in the demo
Dialogue: 0,0:17:07.72,0:17:08.40,Default,,0,0,0,,that we just saw.
Dialogue: 0,0:17:08.40,0:17:10.52,Default,,0,0,0,,And what we're going to do right
Dialogue: 0,0:17:10.52,0:17:11.72,Default,,0,0,0,,now is I'm going to create a
Dialogue: 0,0:17:11.72,0:17:14.57,Default,,0,0,0,,brand-new implementation of this
Dialogue: 0,0:17:14.57,0:17:15.71,Default,,0,0,0,,audio player, and I'm going to
Dialogue: 0,0:17:15.71,0:17:17.54,Default,,0,0,0,,call it SampleBufferAudioPlayer
Dialogue: 0,0:17:17.54,0:17:19.43,Default,,0,0,0,,because it's going to be built
Dialogue: 0,0:17:19.43,0:17:21.36,Default,,0,0,0,,using AVSampleBufferAudio
Dialogue: 0,0:17:21.36,0:17:21.79,Default,,0,0,0,,Renderer.
Dialogue: 0,0:17:21.79,0:17:23.60,Default,,0,0,0,,I'm just going to preemptively
Dialogue: 0,0:17:23.60,0:17:25.10,Default,,0,0,0,,swap that in so that the next
Dialogue: 0,0:17:25.10,0:17:26.89,Default,,0,0,0,,time we launch the app, it will
Dialogue: 0,0:17:26.89,0:17:28.16,Default,,0,0,0,,use the new implementation
Dialogue: 0,0:17:28.16,0:17:28.83,Default,,0,0,0,,instead of the old
Dialogue: 0,0:17:28.83,0:17:29.53,Default,,0,0,0,,implementation.
Dialogue: 0,0:17:30.74,0:17:32.39,Default,,0,0,0,,So, as I mentioned, this class
Dialogue: 0,0:17:32.39,0:17:33.85,Default,,0,0,0,,is going to be built on top of
Dialogue: 0,0:17:33.85,0:17:35.67,Default,,0,0,0,,AVSampleBufferAudio Renderer,
Dialogue: 0,0:17:35.90,0:17:36.95,Default,,0,0,0,,and we're also going to need to
Dialogue: 0,0:17:37.05,0:17:38.27,Default,,0,0,0,,use AVSampleBufferRender
Dialogue: 0,0:17:38.27,0:17:39.02,Default,,0,0,0,,Synchronizer.
Dialogue: 0,0:17:39.30,0:17:40.58,Default,,0,0,0,,These are the classes that David
Dialogue: 0,0:17:40.58,0:17:41.79,Default,,0,0,0,,just introduced to you.
Dialogue: 0,0:17:42.38,0:17:43.62,Default,,0,0,0,,And I just want to reiterate
Dialogue: 0,0:17:43.62,0:17:45.77,Default,,0,0,0,,what David said that AVPlayer
Dialogue: 0,0:17:45.77,0:17:46.80,Default,,0,0,0,,would give you all of the
Dialogue: 0,0:17:46.80,0:17:48.18,Default,,0,0,0,,benefits that I'm about to show
Dialogue: 0,0:17:48.18,0:17:49.63,Default,,0,0,0,,you, but with a little bit less
Dialogue: 0,0:17:49.63,0:17:50.49,Default,,0,0,0,,work on your part.
Dialogue: 0,0:17:50.49,0:17:51.54,Default,,0,0,0,,So, if you're already using
Dialogue: 0,0:17:51.54,0:17:53.03,Default,,0,0,0,,AVPlayer, or you think you can
Dialogue: 0,0:17:53.03,0:17:54.93,Default,,0,0,0,,use AVPlayer, we recommend that
Dialogue: 0,0:17:54.93,0:17:55.42,Default,,0,0,0,,you do that.
Dialogue: 0,0:17:55.60,0:17:57.04,Default,,0,0,0,,For the rest of you, I want to
Dialogue: 0,0:17:57.04,0:17:58.18,Default,,0,0,0,,show you how to use these new
Dialogue: 0,0:17:58.18,0:17:58.79,Default,,0,0,0,,classes.
Dialogue: 0,0:18:00.17,0:18:03.72,Default,,0,0,0,,So, once I have my state here,
Dialogue: 0,0:18:03.72,0:18:05.24,Default,,0,0,0,,I'm going to hook up my
Dialogue: 0,0:18:05.78,0:18:06.82,Default,,0,0,0,,AudioRenderer with my
Dialogue: 0,0:18:06.82,0:18:08.48,Default,,0,0,0,,RenderSynchronizer using the
Dialogue: 0,0:18:08.48,0:18:10.07,Default,,0,0,0,,addRenderer method, and I'll do
Dialogue: 0,0:18:10.07,0:18:11.05,Default,,0,0,0,,that as soon as my
Dialogue: 0,0:18:11.09,0:18:12.52,Default,,0,0,0,,SampleBufferAudioPlayer is
Dialogue: 0,0:18:12.52,0:18:12.94,Default,,0,0,0,,created.
Dialogue: 0,0:18:13.42,0:18:15.80,Default,,0,0,0,,And then we need to interact
Dialogue: 0,0:18:15.80,0:18:17.21,Default,,0,0,0,,with the renderer, and we're
Dialogue: 0,0:18:17.21,0:18:18.40,Default,,0,0,0,,going to do that by calling the
Dialogue: 0,0:18:18.40,0:18:20.49,Default,,0,0,0,,requestMediaDataWhenReady
Dialogue: 0,0:18:20.49,0:18:20.79,Default,,0,0,0,,method.
Dialogue: 0,0:18:20.79,0:18:22.50,Default,,0,0,0,,And what this is going to do is
Dialogue: 0,0:18:22.50,0:18:24.24,Default,,0,0,0,,it's going to call a closure in
Dialogue: 0,0:18:24.24,0:18:26.77,Default,,0,0,0,,my app so that I can feed the
Dialogue: 0,0:18:26.77,0:18:28.21,Default,,0,0,0,,AudioRenderer some more audio
Dialogue: 0,0:18:28.21,0:18:29.76,Default,,0,0,0,,data whenever the AudioRenderer
Dialogue: 0,0:18:29.76,0:18:30.83,Default,,0,0,0,,decides that it's ready to
Dialogue: 0,0:18:30.83,0:18:31.66,Default,,0,0,0,,receive more data.
Dialogue: 0,0:18:32.40,0:18:35.30,Default,,0,0,0,,And it will call this closure as
Dialogue: 0,0:18:35.30,0:18:37.12,Default,,0,0,0,,often as it needs to to stay
Dialogue: 0,0:18:37.12,0:18:39.12,Default,,0,0,0,,full of audio data.
Dialogue: 0,0:18:40.80,0:18:43.15,Default,,0,0,0,,Now within my closure, I'm
Dialogue: 0,0:18:43.15,0:18:44.67,Default,,0,0,0,,actually going to loop so that
Dialogue: 0,0:18:44.99,0:18:46.48,Default,,0,0,0,,I'm going to keep appending more
Dialogue: 0,0:18:46.48,0:18:47.57,Default,,0,0,0,,data as long as the
Dialogue: 0,0:18:47.57,0:18:49.43,Default,,0,0,0,,AudioRenderer is still ready for
Dialogue: 0,0:18:49.43,0:18:50.17,Default,,0,0,0,,more media data.
Dialogue: 0,0:18:51.26,0:18:52.89,Default,,0,0,0,,Within my loop, the first thing
Dialogue: 0,0:18:52.89,0:18:55.16,Default,,0,0,0,,I need to do is grab my next
Dialogue: 0,0:18:55.16,0:18:57.20,Default,,0,0,0,,chunk of audio data and package
Dialogue: 0,0:18:57.20,0:18:58.72,Default,,0,0,0,,it as a CMSampleBuffer.
Dialogue: 0,0:18:59.37,0:19:01.73,Default,,0,0,0,,Now this method here is my app's
Dialogue: 0,0:19:01.83,0:19:04.12,Default,,0,0,0,,own logic for doing this, for
Dialogue: 0,0:19:04.12,0:19:05.73,Default,,0,0,0,,grabbing its next little bit of
Dialogue: 0,0:19:05.73,0:19:06.37,Default,,0,0,0,,audio data.
Dialogue: 0,0:19:06.78,0:19:07.75,Default,,0,0,0,,Your app will have your own
Dialogue: 0,0:19:07.75,0:19:09.22,Default,,0,0,0,,version of this logic, maybe
Dialogue: 0,0:19:09.22,0:19:10.60,Default,,0,0,0,,pulling the data off the network
Dialogue: 0,0:19:10.60,0:19:11.88,Default,,0,0,0,,or decrypting it from disc.
Dialogue: 0,0:19:11.88,0:19:13.53,Default,,0,0,0,,If you want to see the details
Dialogue: 0,0:19:13.53,0:19:15.43,Default,,0,0,0,,of my version, once again, check
Dialogue: 0,0:19:15.43,0:19:16.38,Default,,0,0,0,,out the sample code.
Dialogue: 0,0:19:17.16,0:19:19.06,Default,,0,0,0,,And I have this set up to return
Dialogue: 0,0:19:19.06,0:19:20.80,Default,,0,0,0,,an optional CMSampleBuffer and
Dialogue: 0,0:19:20.80,0:19:22.72,Default,,0,0,0,,that's just so I can use a nil
Dialogue: 0,0:19:22.72,0:19:24.38,Default,,0,0,0,,return value to signal that I've
Dialogue: 0,0:19:24.38,0:19:26.93,Default,,0,0,0,,reached the end of data.
Dialogue: 0,0:19:27.11,0:19:28.98,Default,,0,0,0,,Once I have my sample buffer, I
Dialogue: 0,0:19:28.98,0:19:30.97,Default,,0,0,0,,turn around and enqueue it into
Dialogue: 0,0:19:30.97,0:19:32.05,Default,,0,0,0,,the AudioRenderer using the
Dialogue: 0,0:19:32.05,0:19:32.90,Default,,0,0,0,,enqueue method.
Dialogue: 0,0:19:32.90,0:19:35.03,Default,,0,0,0,,And what this will do is it will
Dialogue: 0,0:19:35.03,0:19:37.15,Default,,0,0,0,,hand the audio data off to the
Dialogue: 0,0:19:37.15,0:19:38.46,Default,,0,0,0,,renderer so that it can schedule
Dialogue: 0,0:19:38.46,0:19:39.41,Default,,0,0,0,,it to be played at the
Dialogue: 0,0:19:39.41,0:19:40.22,Default,,0,0,0,,appropriate time.
Dialogue: 0,0:19:41.29,0:19:43.29,Default,,0,0,0,,As I mentioned, I'm using a nil
Dialogue: 0,0:19:43.57,0:19:44.98,Default,,0,0,0,,sample buffer to signal that I
Dialogue: 0,0:19:44.98,0:19:46.02,Default,,0,0,0,,don't have any more data.
Dialogue: 0,0:19:46.49,0:19:47.78,Default,,0,0,0,,And when that happens I need to
Dialogue: 0,0:19:47.78,0:19:48.72,Default,,0,0,0,,explicitly tell the
Dialogue: 0,0:19:48.72,0:19:50.56,Default,,0,0,0,,AudioRenderer to stop requesting
Dialogue: 0,0:19:50.56,0:19:51.42,Default,,0,0,0,,more media data.
Dialogue: 0,0:19:52.01,0:19:53.41,Default,,0,0,0,,If I don't do this, and I exit
Dialogue: 0,0:19:53.41,0:19:55.38,Default,,0,0,0,,my closure, that AudioRenderer
Dialogue: 0,0:19:55.38,0:19:57.05,Default,,0,0,0,,is just going to invoke the
Dialogue: 0,0:19:57.05,0:19:58.90,Default,,0,0,0,,closure right away, when it's
Dialogue: 0,0:19:58.90,0:20:00.74,Default,,0,0,0,,ready for data again, but since
Dialogue: 0,0:20:00.74,0:20:01.62,Default,,0,0,0,,I don't have anything more to
Dialogue: 0,0:20:01.62,0:20:02.69,Default,,0,0,0,,give it, I don't want that to
Dialogue: 0,0:20:02.69,0:20:03.04,Default,,0,0,0,,happen.
Dialogue: 0,0:20:03.11,0:20:04.36,Default,,0,0,0,,So, I need to tell it to stop.
Dialogue: 0,0:20:06.05,0:20:07.80,Default,,0,0,0,,And this function here is pretty
Dialogue: 0,0:20:07.80,0:20:09.41,Default,,0,0,0,,much your entire interaction
Dialogue: 0,0:20:09.41,0:20:10.90,Default,,0,0,0,,with the AudioRenderer for a
Dialogue: 0,0:20:10.90,0:20:12.32,Default,,0,0,0,,simple use case like this.
Dialogue: 0,0:20:13.48,0:20:14.38,Default,,0,0,0,,Now, we need to do a couple
Dialogue: 0,0:20:14.38,0:20:15.15,Default,,0,0,0,,things with the
Dialogue: 0,0:20:15.15,0:20:16.17,Default,,0,0,0,,RenderSynchronizer.
Dialogue: 0,0:20:16.71,0:20:19.12,Default,,0,0,0,,I have a play method, and all
Dialogue: 0,0:20:19.12,0:20:21.07,Default,,0,0,0,,that play really is, is setting
Dialogue: 0,0:20:21.07,0:20:22.55,Default,,0,0,0,,the RenderSynchronizer's rate to
Dialogue: 0,0:20:22.55,0:20:23.91,Default,,0,0,0,,1, which will start playback.
Dialogue: 0,0:20:23.91,0:20:25.78,Default,,0,0,0,,I have a little bit of prep work
Dialogue: 0,0:20:25.78,0:20:26.84,Default,,0,0,0,,I need to do there, which we
Dialogue: 0,0:20:26.84,0:20:27.96,Default,,0,0,0,,won't look at the details, but
Dialogue: 0,0:20:27.96,0:20:29.58,Default,,0,0,0,,it does end up calling this
Dialogue: 0,0:20:29.58,0:20:30.83,Default,,0,0,0,,start enqueueing method so you
Dialogue: 0,0:20:30.83,0:20:32.04,Default,,0,0,0,,can sort of get a feel for how
Dialogue: 0,0:20:32.04,0:20:32.90,Default,,0,0,0,,things flow here.
Dialogue: 0,0:20:33.38,0:20:35.10,Default,,0,0,0,,And I have a little bit of UI
Dialogue: 0,0:20:35.10,0:20:36.64,Default,,0,0,0,,updating to do every time I play
Dialogue: 0,0:20:36.64,0:20:38.33,Default,,0,0,0,,or pause, so this method will
Dialogue: 0,0:20:38.33,0:20:39.89,Default,,0,0,0,,dispatch back to the main queue
Dialogue: 0,0:20:39.89,0:20:41.34,Default,,0,0,0,,in order to keep the UI up to
Dialogue: 0,0:20:41.34,0:20:41.59,Default,,0,0,0,,date.
Dialogue: 0,0:20:42.11,0:20:44.57,Default,,0,0,0,,Similarly, I have a pause
Dialogue: 0,0:20:44.57,0:20:45.74,Default,,0,0,0,,method, and the only difference
Dialogue: 0,0:20:45.74,0:20:47.38,Default,,0,0,0,,here is that it sets the
Dialogue: 0,0:20:47.38,0:20:49.38,Default,,0,0,0,,renderSynchronizer's rate to 0.
Dialogue: 0,0:20:50.36,0:20:52.80,Default,,0,0,0,,So, now you've seen all of the
Dialogue: 0,0:20:52.80,0:20:53.55,Default,,0,0,0,,interaction that we're going to
Dialogue: 0,0:20:53.55,0:20:54.85,Default,,0,0,0,,have with AVFoundation.
Dialogue: 0,0:20:55.08,0:20:56.40,Default,,0,0,0,,I have one more bit of code I
Dialogue: 0,0:20:56.40,0:20:57.58,Default,,0,0,0,,need to drop in, just to make
Dialogue: 0,0:20:57.58,0:20:59.33,Default,,0,0,0,,sure my app will build and work
Dialogue: 0,0:20:59.33,0:21:00.84,Default,,0,0,0,,correctly, which we won't look
Dialogue: 0,0:21:00.84,0:21:02.24,Default,,0,0,0,,at the details of, but I'll just
Dialogue: 0,0:21:02.24,0:21:02.85,Default,,0,0,0,,drop it there.
Dialogue: 0,0:21:03.56,0:21:05.59,Default,,0,0,0,,And then, we will rebuild the
Dialogue: 0,0:21:05.59,0:21:06.17,Default,,0,0,0,,application.
Dialogue: 0,0:21:06.17,0:21:09.04,Default,,0,0,0,,And I seem to have some
Dialogue: 0,0:21:10.36,0:21:11.67,Default,,0,0,0,,compilation errors.
Dialogue: 0,0:21:12.30,0:21:14.85,Default,,0,0,0,,So, what I'm going to do is
Dialogue: 0,0:21:15.70,0:21:18.27,Default,,0,0,0,,figure out what I did wrong.
Dialogue: 0,0:21:31.67,0:21:32.89,Default,,0,0,0,,Well, why don't we just take
Dialogue: 0,0:21:32.97,0:21:37.48,Default,,0,0,0,,this and, ah I think I know
Dialogue: 0,0:21:37.48,0:21:38.16,Default,,0,0,0,,what's wrong here.
Dialogue: 0,0:21:52.26,0:21:55.44,Default,,0,0,0,,Just drag that over here, and go
Dialogue: 0,0:21:55.55,0:21:58.61,Default,,0,0,0,,back here and we'll try again.
Dialogue: 0,0:21:58.61,0:22:04.16,Default,,0,0,0,,All right, so we got our build
Dialogue: 0,0:22:04.16,0:22:04.43,Default,,0,0,0,,ready.
Dialogue: 0,0:22:04.90,0:22:06.19,Default,,0,0,0,,And now we're relaunching the
Dialogue: 0,0:22:06.19,0:22:06.49,Default,,0,0,0,,app.
Dialogue: 0,0:22:07.16,0:22:08.45,Default,,0,0,0,,So, we'll switch back to our
Dialogue: 0,0:22:08.45,0:22:09.39,Default,,0,0,0,,side by side view.
Dialogue: 0,0:22:09.39,0:22:13.01,Default,,0,0,0,,And once the app finishes
Dialogue: 0,0:22:13.05,0:22:14.81,Default,,0,0,0,,launching, I'm going to go ahead
Dialogue: 0,0:22:14.81,0:22:16.91,Default,,0,0,0,,and restart the music playback.
Dialogue: 0,0:22:18.72,0:22:19.54,Default,,0,0,0,,Here we go.
Dialogue: 0,0:22:19.73,0:22:23.92,Default,,0,0,0,,And once the music starts
Dialogue: 0,0:22:23.92,0:22:25.65,Default,,0,0,0,,playing [music] now we're
Dialogue: 0,0:22:25.65,0:22:28.16,Default,,0,0,0,,playing using AirPlay 2 from the
Dialogue: 0,0:22:28.16,0:22:29.30,Default,,0,0,0,,phone to the Apple TV.
Dialogue: 0,0:22:29.95,0:22:31.27,Default,,0,0,0,,So, now I want to run the same
Dialogue: 0,0:22:31.27,0:22:33.66,Default,,0,0,0,,scenario that I did before using
Dialogue: 0,0:22:34.07,0:22:34.96,Default,,0,0,0,,our bag again.
Dialogue: 0,0:22:35.61,0:22:37.64,Default,,0,0,0,,So, let's grab the phone.
Dialogue: 0,0:22:39.64,0:22:41.09,Default,,0,0,0,,And we'll put it in the bag.
Dialogue: 0,0:22:41.09,0:22:42.61,Default,,0,0,0,,Once again, here's me taking the
Dialogue: 0,0:22:42.71,0:22:44.68,Default,,0,0,0,,phone outside, outside of Wi-Fi
Dialogue: 0,0:22:44.68,0:22:45.23,Default,,0,0,0,,range.
Dialogue: 0,0:22:46.43,0:22:47.77,Default,,0,0,0,,I'll fold up the bag nice and
Dialogue: 0,0:22:47.77,0:22:48.11,Default,,0,0,0,,tight.
Dialogue: 0,0:22:49.04,0:22:50.48,Default,,0,0,0,,And as you can see, where as in
Dialogue: 0,0:22:50.48,0:22:51.98,Default,,0,0,0,,the first demo, the music cut
Dialogue: 0,0:22:51.98,0:22:53.85,Default,,0,0,0,,out almost immediately, now that
Dialogue: 0,0:22:53.85,0:22:55.70,Default,,0,0,0,,we're using AirPlay 2, the music
Dialogue: 0,0:22:55.70,0:22:57.15,Default,,0,0,0,,can keep playing even through
Dialogue: 0,0:22:57.15,0:22:58.47,Default,,0,0,0,,these sorts of minor Wi-Fi
Dialogue: 0,0:22:58.47,0:22:59.04,Default,,0,0,0,,interruptions.
Dialogue: 0,0:22:59.55,0:23:00.80,Default,,0,0,0,,So, that's the power of AirPlay
Dialogue: 0,0:23:00.80,0:23:02.82,Default,,0,0,0,,2 using AVSampleBufferAudio
Dialogue: 0,0:23:02.82,0:23:03.15,Default,,0,0,0,,Renderer.
Dialogue: 0,0:23:03.52,0:23:04.96,Default,,0,0,0,,Thank you very much and back to
Dialogue: 0,0:23:04.96,0:23:05.26,Default,,0,0,0,,David.
Dialogue: 0,0:23:07.07,0:23:09.07,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:23:09.13,0:23:09.81,Default,,0,0,0,,>> Thank you, Adam.
Dialogue: 0,0:23:10.40,0:23:12.14,Default,,0,0,0,,So, now that we've shown, walked
Dialogue: 0,0:23:12.14,0:23:13.61,Default,,0,0,0,,you through the steps to create
Dialogue: 0,0:23:13.61,0:23:14.58,Default,,0,0,0,,a simple app with
Dialogue: 0,0:23:14.58,0:23:16.22,Default,,0,0,0,,AVSampleBufferAudio Renderer and
Dialogue: 0,0:23:16.22,0:23:17.11,Default,,0,0,0,,AVSampleBufferRender
Dialogue: 0,0:23:17.11,0:23:19.34,Default,,0,0,0,,Synchronizer, let's move on to
Dialogue: 0,0:23:19.34,0:23:20.99,Default,,0,0,0,,some more advanced playback
Dialogue: 0,0:23:20.99,0:23:22.41,Default,,0,0,0,,scenarios that you may be, you
Dialogue: 0,0:23:22.41,0:23:24.11,Default,,0,0,0,,may encounter when using these
Dialogue: 0,0:23:24.11,0:23:24.42,Default,,0,0,0,,API.
Dialogue: 0,0:23:24.70,0:23:27.37,Default,,0,0,0,,So, what we're going to talk
Dialogue: 0,0:23:27.37,0:23:29.46,Default,,0,0,0,,about in this section is audio
Dialogue: 0,0:23:29.46,0:23:30.45,Default,,0,0,0,,buffer levels of
Dialogue: 0,0:23:30.73,0:23:32.36,Default,,0,0,0,,AVSampleBufferAudio Renderer.
Dialogue: 0,0:23:32.36,0:23:34.03,Default,,0,0,0,,We're going to talk to about how
Dialogue: 0,0:23:34.03,0:23:36.15,Default,,0,0,0,,to implement a seek, how to
Dialogue: 0,0:23:36.15,0:23:38.11,Default,,0,0,0,,implement play queues, some of
Dialogue: 0,0:23:38.11,0:23:39.93,Default,,0,0,0,,the support audio formats with
Dialogue: 0,0:23:39.93,0:23:41.48,Default,,0,0,0,,AVSampleBufferAudio Renderer,
Dialogue: 0,0:23:41.77,0:23:42.81,Default,,0,0,0,,and lastly, we're going to take
Dialogue: 0,0:23:42.81,0:23:44.45,Default,,0,0,0,,a slight detour and talk about
Dialogue: 0,0:23:44.45,0:23:45.49,Default,,0,0,0,,video synchronization.
Dialogue: 0,0:23:47.74,0:23:49.42,Default,,0,0,0,,So, let's jump into the next
Dialogue: 0,0:23:49.42,0:23:51.50,Default,,0,0,0,,section and talk about the audio
Dialogue: 0,0:23:51.50,0:23:52.28,Default,,0,0,0,,buffer levels of
Dialogue: 0,0:23:52.28,0:23:53.57,Default,,0,0,0,,AVSampleBufferAudio Renderer.
Dialogue: 0,0:23:54.55,0:23:55.70,Default,,0,0,0,,So, what am I talking about?
Dialogue: 0,0:23:55.70,0:23:57.62,Default,,0,0,0,,I'm talking about the fact that
Dialogue: 0,0:23:57.62,0:23:59.84,Default,,0,0,0,,the amount of audio data request
Dialogue: 0,0:23:59.84,0:24:01.18,Default,,0,0,0,,by an AVSampleBufferAudio
Dialogue: 0,0:24:01.18,0:24:03.50,Default,,0,0,0,,Renderer of your app will vary
Dialogue: 0,0:24:03.71,0:24:05.89,Default,,0,0,0,,depending on the current route.
Dialogue: 0,0:24:07.16,0:24:08.51,Default,,0,0,0,,So, let's take a look at this
Dialogue: 0,0:24:08.51,0:24:09.02,Default,,0,0,0,,pictorially.
Dialogue: 0,0:24:09.53,0:24:10.89,Default,,0,0,0,,Here I've drawn a media timeline
Dialogue: 0,0:24:10.89,0:24:12.61,Default,,0,0,0,,and I'm going to drop in the
Dialogue: 0,0:24:12.61,0:24:13.04,Default,,0,0,0,,playhead.
Dialogue: 0,0:24:14.46,0:24:15.29,Default,,0,0,0,,And when you're playing back
Dialogue: 0,0:24:15.29,0:24:17.50,Default,,0,0,0,,locally, the AudioRenderer is
Dialogue: 0,0:24:17.50,0:24:18.57,Default,,0,0,0,,only going to ask for a few
Dialogue: 0,0:24:18.57,0:24:20.08,Default,,0,0,0,,seconds ahead of the playhead.
Dialogue: 0,0:24:21.19,0:24:23.26,Default,,0,0,0,,So, that is where the, that is
Dialogue: 0,0:24:23.26,0:24:24.87,Default,,0,0,0,,where you should enqueue to, as
Dialogue: 0,0:24:24.87,0:24:25.86,Default,,0,0,0,,much as it asks for.
Dialogue: 0,0:24:27.15,0:24:29.07,Default,,0,0,0,,And as you play, again you're
Dialogue: 0,0:24:29.07,0:24:30.04,Default,,0,0,0,,just going to enqueue a few
Dialogue: 0,0:24:30.04,0:24:31.61,Default,,0,0,0,,seconds ahead of the app.
Dialogue: 0,0:24:33.00,0:24:34.55,Default,,0,0,0,,But suppose your user suddenly
Dialogue: 0,0:24:34.55,0:24:36.93,Default,,0,0,0,,decides to route to an AirPlay 2
Dialogue: 0,0:24:36.93,0:24:37.33,Default,,0,0,0,,speaker.
Dialogue: 0,0:24:38.60,0:24:40.25,Default,,0,0,0,,Now when that happens, the
Dialogue: 0,0:24:40.25,0:24:42.15,Default,,0,0,0,,AVSampleBufferAudio Renderer is
Dialogue: 0,0:24:42.15,0:24:43.77,Default,,0,0,0,,going to ask for up to multiple
Dialogue: 0,0:24:43.77,0:24:45.02,Default,,0,0,0,,minutes ahead of the playhead.
Dialogue: 0,0:24:46.31,0:24:47.75,Default,,0,0,0,,And once again, when you hit
Dialogue: 0,0:24:47.75,0:24:49.28,Default,,0,0,0,,play, you'll work multiple
Dialogue: 0,0:24:49.28,0:24:50.29,Default,,0,0,0,,minutes ahead of the playhead.
Dialogue: 0,0:24:51.38,0:24:53.13,Default,,0,0,0,,Now the key here, is that the
Dialogue: 0,0:24:53.13,0:24:54.87,Default,,0,0,0,,amount of data requested by
Dialogue: 0,0:24:54.87,0:24:56.52,Default,,0,0,0,,AVSampleBufferAudio Renderer
Dialogue: 0,0:24:56.94,0:24:58.59,Default,,0,0,0,,varies depending on where the
Dialogue: 0,0:24:58.59,0:24:59.49,Default,,0,0,0,,audio is currently routed.
Dialogue: 0,0:24:59.49,0:25:01.72,Default,,0,0,0,,If it's routed locally, this
Dialogue: 0,0:25:01.72,0:25:03.13,Default,,0,0,0,,will just be seconds, to
Dialogue: 0,0:25:03.13,0:25:04.72,Default,,0,0,0,,Bluetooth seconds, to an AirPlay
Dialogue: 0,0:25:04.72,0:25:06.24,Default,,0,0,0,,1 speaker seconds.
Dialogue: 0,0:25:07.24,0:25:08.81,Default,,0,0,0,,But as soon as the user routes
Dialogue: 0,0:25:08.81,0:25:10.85,Default,,0,0,0,,your audio content to an AirPlay
Dialogue: 0,0:25:10.85,0:25:13.62,Default,,0,0,0,,2 speaker, that AudioRenderer is
Dialogue: 0,0:25:13.62,0:25:14.56,Default,,0,0,0,,going to get really hungry and
Dialogue: 0,0:25:14.56,0:25:15.69,Default,,0,0,0,,it's going to ask for multiple
Dialogue: 0,0:25:15.69,0:25:16.82,Default,,0,0,0,,minutes of audio data.
Dialogue: 0,0:25:18.10,0:25:19.33,Default,,0,0,0,,And the key here is that your
Dialogue: 0,0:25:19.33,0:25:20.38,Default,,0,0,0,,app should be ready to handle
Dialogue: 0,0:25:20.38,0:25:21.02,Default,,0,0,0,,these changes.
Dialogue: 0,0:25:21.52,0:25:25.15,Default,,0,0,0,,All right, next let's talk about
Dialogue: 0,0:25:25.15,0:25:25.52,Default,,0,0,0,,seek.
Dialogue: 0,0:25:26.86,0:25:27.94,Default,,0,0,0,,So, what is a seek?
Dialogue: 0,0:25:28.14,0:25:29.86,Default,,0,0,0,,Well a seek very quick, very
Dialogue: 0,0:25:29.86,0:25:31.82,Default,,0,0,0,,simply, is manually changing the
Dialogue: 0,0:25:31.82,0:25:32.80,Default,,0,0,0,,location of the playhead.
Dialogue: 0,0:25:33.88,0:25:35.05,Default,,0,0,0,,So, again let's draw out our
Dialogue: 0,0:25:35.05,0:25:36.53,Default,,0,0,0,,media timeline that we just saw
Dialogue: 0,0:25:36.53,0:25:37.37,Default,,0,0,0,,a moment ago.
Dialogue: 0,0:25:38.18,0:25:40.01,Default,,0,0,0,,Put in the playhead, and talk
Dialogue: 0,0:25:40.01,0:25:42.28,Default,,0,0,0,,about local play or talk about
Dialogue: 0,0:25:42.88,0:25:44.04,Default,,0,0,0,,standard playback scenario.
Dialogue: 0,0:25:44.72,0:25:46.84,Default,,0,0,0,,User hits play, and then after
Dialogue: 0,0:25:46.84,0:25:48.29,Default,,0,0,0,,it plays for a little bit the
Dialogue: 0,0:25:48.29,0:25:49.50,Default,,0,0,0,,user decides you know what, I
Dialogue: 0,0:25:49.50,0:25:51.21,Default,,0,0,0,,want to seek further into the
Dialogue: 0,0:25:51.21,0:25:51.58,Default,,0,0,0,,track.
Dialogue: 0,0:25:51.58,0:25:52.96,Default,,0,0,0,,So, they pick up the playhead
Dialogue: 0,0:25:52.96,0:25:54.21,Default,,0,0,0,,and they drag it.
Dialogue: 0,0:25:55.08,0:25:56.51,Default,,0,0,0,,So, they've asked for a seek.
Dialogue: 0,0:25:57.05,0:25:59.50,Default,,0,0,0,,So, how do we handle this with
Dialogue: 0,0:25:59.50,0:26:00.81,Default,,0,0,0,,AVSampleBufferAudio Renderer?
Dialogue: 0,0:26:01.37,0:26:02.63,Default,,0,0,0,,Well it's actually really easy.
Dialogue: 0,0:26:03.70,0:26:04.50,Default,,0,0,0,,The first thing that you're
Dialogue: 0,0:26:04.50,0:26:05.30,Default,,0,0,0,,going to do is you're going to
Dialogue: 0,0:26:05.30,0:26:05.72,Default,,0,0,0,,stop.
Dialogue: 0,0:26:05.84,0:26:07.61,Default,,0,0,0,,You're going to stop playback of
Dialogue: 0,0:26:07.61,0:26:08.99,Default,,0,0,0,,the AVSampleBufferRender
Dialogue: 0,0:26:08.99,0:26:10.33,Default,,0,0,0,,Synchronizer and you're going to
Dialogue: 0,0:26:10.33,0:26:12.42,Default,,0,0,0,,stop enqueueing media data into
Dialogue: 0,0:26:12.42,0:26:13.38,Default,,0,0,0,,the AVSampleBufferAudio
Dialogue: 0,0:26:13.38,0:26:13.67,Default,,0,0,0,,Renderer.
Dialogue: 0,0:26:14.18,0:26:17.23,Default,,0,0,0,,Next, you're going to issue a
Dialogue: 0,0:26:17.23,0:26:18.36,Default,,0,0,0,,flush on the
Dialogue: 0,0:26:18.36,0:26:19.96,Default,,0,0,0,,SampleBufferAudioRenderer which
Dialogue: 0,0:26:19.96,0:26:21.56,Default,,0,0,0,,will clear out all media data
Dialogue: 0,0:26:21.56,0:26:22.57,Default,,0,0,0,,that's already been enqueued.
Dialogue: 0,0:26:23.11,0:26:25.72,Default,,0,0,0,,And at that point, you're free
Dialogue: 0,0:26:25.72,0:26:27.65,Default,,0,0,0,,to begin audio, re-enqueueing
Dialogue: 0,0:26:27.65,0:26:30.46,Default,,0,0,0,,audio data at any media time, so
Dialogue: 0,0:26:30.46,0:26:32.79,Default,,0,0,0,,you do it beginning at the seek
Dialogue: 0,0:26:32.79,0:26:33.26,Default,,0,0,0,,to time.
Dialogue: 0,0:26:33.80,0:26:36.22,Default,,0,0,0,,And after you've enqueued media
Dialogue: 0,0:26:36.22,0:26:38.25,Default,,0,0,0,,data the seek to time, kick off
Dialogue: 0,0:26:38.25,0:26:39.85,Default,,0,0,0,,playback once again and there
Dialogue: 0,0:26:39.85,0:26:40.15,Default,,0,0,0,,you go.
Dialogue: 0,0:26:40.22,0:26:43.88,Default,,0,0,0,,So, that's a seek.
Dialogue: 0,0:26:45.10,0:26:46.59,Default,,0,0,0,,So, now that I've shown you how
Dialogue: 0,0:26:46.59,0:26:47.93,Default,,0,0,0,,seek works, let's take a look at
Dialogue: 0,0:26:47.93,0:26:49.05,Default,,0,0,0,,how you would implement that in
Dialogue: 0,0:26:49.05,0:26:51.27,Default,,0,0,0,,code, by extending Adam's app
Dialogue: 0,0:26:51.81,0:26:52.69,Default,,0,0,0,,with a method called
Dialogue: 0,0:26:52.69,0:26:53.52,Default,,0,0,0,,seek(toMediaTime.
Dialogue: 0,0:26:54.63,0:26:55.85,Default,,0,0,0,,So, how do we implement this?
Dialogue: 0,0:26:56.12,0:26:56.93,Default,,0,0,0,,Well it's pretty easy.
Dialogue: 0,0:26:57.34,0:26:58.54,Default,,0,0,0,,The first thing we're going to
Dialogue: 0,0:26:58.54,0:26:59.94,Default,,0,0,0,,do is we're going to tell the
Dialogue: 0,0:26:59.94,0:27:01.25,Default,,0,0,0,,renderSynchronizer to stop
Dialogue: 0,0:27:01.25,0:27:02.76,Default,,0,0,0,,playback by setting the rate to
Dialogue: 0,0:27:02.76,0:27:03.16,Default,,0,0,0,,0.
Dialogue: 0,0:27:03.97,0:27:04.77,Default,,0,0,0,,And then we're going to tell the
Dialogue: 0,0:27:04.77,0:27:06.29,Default,,0,0,0,,AudioRenderer to stop requesting
Dialogue: 0,0:27:06.29,0:27:07.46,Default,,0,0,0,,media data.
Dialogue: 0,0:27:08.41,0:27:10.06,Default,,0,0,0,,Next, we're going flush the
Dialogue: 0,0:27:10.06,0:27:11.56,Default,,0,0,0,,AudioRenderer to clear out all
Dialogue: 0,0:27:11.56,0:27:12.67,Default,,0,0,0,,the old audio data we've
Dialogue: 0,0:27:12.67,0:27:13.11,Default,,0,0,0,,enqueued.
Dialogue: 0,0:27:14.44,0:27:15.52,Default,,0,0,0,,And then we're going to call
Dialogue: 0,0:27:15.52,0:27:17.71,Default,,0,0,0,,some app specific code, that
Dialogue: 0,0:27:17.71,0:27:20.02,Default,,0,0,0,,tells your sample generating
Dialogue: 0,0:27:20.02,0:27:21.35,Default,,0,0,0,,code that the next sample that
Dialogue: 0,0:27:21.35,0:27:23.06,Default,,0,0,0,,it should prepare is at that
Dialogue: 0,0:27:23.06,0:27:23.91,Default,,0,0,0,,seek to time.
Dialogue: 0,0:27:24.35,0:27:26.07,Default,,0,0,0,,Remember your app is responsible
Dialogue: 0,0:27:26.07,0:27:27.56,Default,,0,0,0,,for producing the audio data
Dialogue: 0,0:27:28.18,0:27:30.71,Default,,0,0,0,,when using this API, so you need
Dialogue: 0,0:27:30.71,0:27:32.23,Default,,0,0,0,,to instruct it where the next
Dialogue: 0,0:27:32.23,0:27:33.60,Default,,0,0,0,,audio sample should be generated
Dialogue: 0,0:27:33.60,0:27:33.92,Default,,0,0,0,,from.
Dialogue: 0,0:27:34.45,0:27:37.05,Default,,0,0,0,,And after that happens, you can
Dialogue: 0,0:27:37.05,0:27:38.52,Default,,0,0,0,,reinstall your closure on the
Dialogue: 0,0:27:38.52,0:27:40.01,Default,,0,0,0,,AudioRenderer to tell it to call
Dialogue: 0,0:27:40.01,0:27:41.30,Default,,0,0,0,,you back for more audio data.
Dialogue: 0,0:27:41.99,0:27:43.43,Default,,0,0,0,,And you can set a rate to 1 on
Dialogue: 0,0:27:43.43,0:27:44.25,Default,,0,0,0,,the RenderSynchronizer.
Dialogue: 0,0:27:45.56,0:27:46.22,Default,,0,0,0,,Pretty simple.
Dialogue: 0,0:27:46.53,0:27:47.14,Default,,0,0,0,,So, that's seek.
Dialogue: 0,0:27:47.59,0:27:49.98,Default,,0,0,0,,Let's get into something more
Dialogue: 0,0:27:49.98,0:27:50.95,Default,,0,0,0,,interesting which is play
Dialogue: 0,0:27:50.95,0:27:51.41,Default,,0,0,0,,queues.
Dialogue: 0,0:27:51.41,0:27:53.58,Default,,0,0,0,,And what is a play queue?
Dialogue: 0,0:27:53.58,0:27:54.72,Default,,0,0,0,,Well here we have a screenshot
Dialogue: 0,0:27:54.72,0:27:55.29,Default,,0,0,0,,from Adam's app.
Dialogue: 0,0:27:55.86,0:27:57.52,Default,,0,0,0,,And a play queue is very simple
Dialogue: 0,0:27:57.52,0:27:59.69,Default,,0,0,0,,is, you know, you order a set of
Dialogue: 0,0:27:59.69,0:28:00.09,Default,,0,0,0,,items.
Dialogue: 0,0:28:00.09,0:28:01.40,Default,,0,0,0,,I hit play on one and they all
Dialogue: 0,0:28:01.40,0:28:02.18,Default,,0,0,0,,play out in order.
Dialogue: 0,0:28:02.62,0:28:05.76,Default,,0,0,0,,So, if we take these, this play
Dialogue: 0,0:28:05.76,0:28:06.98,Default,,0,0,0,,queue and we lay it out on that
Dialogue: 0,0:28:07.05,0:28:08.62,Default,,0,0,0,,media timeline, what we're going
Dialogue: 0,0:28:08.62,0:28:09.90,Default,,0,0,0,,to see is Item 1 followed by
Dialogue: 0,0:28:09.90,0:28:11.88,Default,,0,0,0,,Item 2, followed by Item 3.
Dialogue: 0,0:28:13.16,0:28:14.96,Default,,0,0,0,,That's just a very generic look
Dialogue: 0,0:28:14.96,0:28:16.90,Default,,0,0,0,,of those items laid out on this
Dialogue: 0,0:28:16.90,0:28:17.83,Default,,0,0,0,,timeline we've been showing.
Dialogue: 0,0:28:18.61,0:28:19.89,Default,,0,0,0,,But if we dig into the timelines
Dialogue: 0,0:28:19.89,0:28:22.03,Default,,0,0,0,,especially we're going to see
Dialogue: 0,0:28:22.03,0:28:23.20,Default,,0,0,0,,the timelines of each item,
Dialogue: 0,0:28:23.20,0:28:24.08,Default,,0,0,0,,we're going to see something
Dialogue: 0,0:28:24.08,0:28:24.81,Default,,0,0,0,,slightly different.
Dialogue: 0,0:28:25.12,0:28:26.42,Default,,0,0,0,,Let's suppose hypothetically
Dialogue: 0,0:28:26.42,0:28:28.00,Default,,0,0,0,,that each item is 100 seconds in
Dialogue: 0,0:28:28.00,0:28:28.35,Default,,0,0,0,,length.
Dialogue: 0,0:28:29.43,0:28:30.89,Default,,0,0,0,,That means that each item will
Dialogue: 0,0:28:30.89,0:28:33.94,Default,,0,0,0,,go from 0 to 100, 0 to 100, 0 to
Dialogue: 0,0:28:33.94,0:28:34.34,Default,,0,0,0,,100.
Dialogue: 0,0:28:34.90,0:28:38.64,Default,,0,0,0,,Of course the AudioRenderer
Dialogue: 0,0:28:38.64,0:28:39.99,Default,,0,0,0,,knows nothing about these
Dialogue: 0,0:28:39.99,0:28:41.00,Default,,0,0,0,,individual items.
Dialogue: 0,0:28:41.27,0:28:42.54,Default,,0,0,0,,All the AudioRenderer has is a
Dialogue: 0,0:28:42.54,0:28:43.82,Default,,0,0,0,,continuous media timeline.
Dialogue: 0,0:28:45.15,0:28:46.61,Default,,0,0,0,,So, as you enqueue audio data
Dialogue: 0,0:28:46.84,0:28:48.60,Default,,0,0,0,,into the AVSampleBufferAudio
Dialogue: 0,0:28:48.60,0:28:51.10,Default,,0,0,0,,Renderer, you may need to offset
Dialogue: 0,0:28:51.74,0:28:53.95,Default,,0,0,0,,from the item's natural timeline
Dialogue: 0,0:28:54.06,0:28:55.82,Default,,0,0,0,,to the continuous timeline of
Dialogue: 0,0:28:55.82,0:28:57.09,Default,,0,0,0,,the AVSampleBufferAudio
Dialogue: 0,0:28:57.09,0:28:57.34,Default,,0,0,0,,Renderer.
Dialogue: 0,0:28:57.90,0:29:00.40,Default,,0,0,0,,And again, let's take a look at
Dialogue: 0,0:29:00.40,0:29:01.98,Default,,0,0,0,,this enqueuing animation that
Dialogue: 0,0:29:01.98,0:29:02.75,Default,,0,0,0,,we've seen before.
Dialogue: 0,0:29:03.36,0:29:05.08,Default,,0,0,0,,Here are I'm playing back
Dialogue: 0,0:29:05.08,0:29:06.23,Default,,0,0,0,,locally and I've just enqueued a
Dialogue: 0,0:29:06.23,0:29:07.27,Default,,0,0,0,,few seconds ahead of the
Dialogue: 0,0:29:07.50,0:29:09.41,Default,,0,0,0,,playhead and as you can see I'm
Dialogue: 0,0:29:09.41,0:29:10.97,Default,,0,0,0,,going to queue each item as I go
Dialogue: 0,0:29:10.97,0:29:11.49,Default,,0,0,0,,through it.
Dialogue: 0,0:29:12.35,0:29:13.61,Default,,0,0,0,,And if the user is routed to an
Dialogue: 0,0:29:13.61,0:29:14.81,Default,,0,0,0,,AirPlay 2 speaker, and we're
Dialogue: 0,0:29:14.81,0:29:15.68,Default,,0,0,0,,working well ahead of the
Dialogue: 0,0:29:15.68,0:29:16.85,Default,,0,0,0,,playhead, same idea.
Dialogue: 0,0:29:16.85,0:29:18.16,Default,,0,0,0,,You're just going to enqueue
Dialogue: 0,0:29:18.16,0:29:20.18,Default,,0,0,0,,ever so slightly ahead of the
Dialogue: 0,0:29:21.14,0:29:21.34,Default,,0,0,0,,playhead.
Dialogue: 0,0:29:21.37,0:29:21.84,Default,,0,0,0,,All right.
Dialogue: 0,0:29:22.65,0:29:24.43,Default,,0,0,0,,So, that's the simple idea of
Dialogue: 0,0:29:24.43,0:29:24.90,Default,,0,0,0,,play queues.
Dialogue: 0,0:29:24.90,0:29:25.57,Default,,0,0,0,,Let's get into something a
Dialogue: 0,0:29:25.57,0:29:26.54,Default,,0,0,0,,little more interesting,
Dialogue: 0,0:29:26.78,0:29:27.32,Default,,0,0,0,,editing.
Dialogue: 0,0:29:28.57,0:29:29.57,Default,,0,0,0,,And in this hypothetical
Dialogue: 0,0:29:29.57,0:29:32.27,Default,,0,0,0,,example, let's suppose the user
Dialogue: 0,0:29:32.27,0:29:33.21,Default,,0,0,0,,decides they don't want to
Dialogue: 0,0:29:33.21,0:29:34.23,Default,,0,0,0,,listen to Item 2 anymore.
Dialogue: 0,0:29:34.47,0:29:35.75,Default,,0,0,0,,So, they remove it from the
Dialogue: 0,0:29:35.75,0:29:37.92,Default,,0,0,0,,queue, and so items 3 and 4
Dialogue: 0,0:29:37.92,0:29:41.49,Default,,0,0,0,,shift over in place.
Dialogue: 0,0:29:41.61,0:29:43.84,Default,,0,0,0,,Now, when that happens, it's not
Dialogue: 0,0:29:43.84,0:29:44.33,Default,,0,0,0,,a big deal.
Dialogue: 0,0:29:44.54,0:29:46.81,Default,,0,0,0,,The user will expect Item 1 to
Dialogue: 0,0:29:46.81,0:29:48.52,Default,,0,0,0,,play, followed by Item 3, and
Dialogue: 0,0:29:48.52,0:29:49.30,Default,,0,0,0,,followed by Item 4.
Dialogue: 0,0:29:49.83,0:29:52.17,Default,,0,0,0,,But that's a really relatively
Dialogue: 0,0:29:52.17,0:29:53.19,Default,,0,0,0,,simple case of play queue
Dialogue: 0,0:29:53.19,0:29:56.42,Default,,0,0,0,,editing, where I, made the edit
Dialogue: 0,0:29:56.76,0:29:58.11,Default,,0,0,0,,before playback is engaged.
Dialogue: 0,0:30:00.09,0:30:01.52,Default,,0,0,0,,But since we're working well
Dialogue: 0,0:30:01.52,0:30:03.78,Default,,0,0,0,,ahead of the playhead oftentimes
Dialogue: 0,0:30:03.78,0:30:04.21,Default,,0,0,0,,when using the
Dialogue: 0,0:30:04.21,0:30:05.59,Default,,0,0,0,,AVSampleBufferAudio Renderer,
Dialogue: 0,0:30:06.18,0:30:07.38,Default,,0,0,0,,you could run into a situation
Dialogue: 0,0:30:07.38,0:30:10.15,Default,,0,0,0,,like this, where the user is
Dialogue: 0,0:30:10.15,0:30:11.46,Default,,0,0,0,,instantiating, or initiated
Dialogue: 0,0:30:11.46,0:30:12.35,Default,,0,0,0,,playback.
Dialogue: 0,0:30:12.95,0:30:15.44,Default,,0,0,0,,You're still playing Item 1, but
Dialogue: 0,0:30:15.44,0:30:17.65,Default,,0,0,0,,you've begin to enqueue media
Dialogue: 0,0:30:17.65,0:30:18.89,Default,,0,0,0,,data from Item 2.
Dialogue: 0,0:30:19.43,0:30:22.14,Default,,0,0,0,,And then the user decides they
Dialogue: 0,0:30:22.14,0:30:23.00,Default,,0,0,0,,don't want to listen to Item 2
Dialogue: 0,0:30:23.00,0:30:23.28,Default,,0,0,0,,anymore.
Dialogue: 0,0:30:23.28,0:30:25.97,Default,,0,0,0,,So, what the user expects is
Dialogue: 0,0:30:25.97,0:30:28.50,Default,,0,0,0,,Item 2 disappears, Items 3 and 4
Dialogue: 0,0:30:28.50,0:30:29.05,Default,,0,0,0,,shift over.
Dialogue: 0,0:30:29.62,0:30:33.27,Default,,0,0,0,,And once again, what the user
Dialogue: 0,0:30:33.27,0:30:35.36,Default,,0,0,0,,expects is that after Item 1,
Dialogue: 0,0:30:35.36,0:30:36.23,Default,,0,0,0,,the currently playing track
Dialogue: 0,0:30:36.23,0:30:37.89,Default,,0,0,0,,plays, Item 3 will begin to
Dialogue: 0,0:30:37.89,0:30:38.17,Default,,0,0,0,,play.
Dialogue: 0,0:30:39.58,0:30:40.58,Default,,0,0,0,,But if we do nothing at this
Dialogue: 0,0:30:40.58,0:30:41.65,Default,,0,0,0,,point, since we've already
Dialogue: 0,0:30:41.65,0:30:43.59,Default,,0,0,0,,enqueued audio data from Item 2
Dialogue: 0,0:30:43.59,0:30:45.15,Default,,0,0,0,,into the AudioRenderer, well
Dialogue: 0,0:30:45.15,0:30:46.20,Default,,0,0,0,,that's what we're going to hear,
Dialogue: 0,0:30:46.29,0:30:48.92,Default,,0,0,0,,a blip of that, because we have
Dialogue: 0,0:30:48.92,0:30:50.36,Default,,0,0,0,,the wrong audio data in the
Dialogue: 0,0:30:50.36,0:30:50.91,Default,,0,0,0,,AudioRenderer.
Dialogue: 0,0:30:51.51,0:30:54.05,Default,,0,0,0,,So, what do we do here?
Dialogue: 0,0:30:54.64,0:30:55.71,Default,,0,0,0,,Well it's actually relatively
Dialogue: 0,0:30:55.71,0:30:57.34,Default,,0,0,0,,simple to handle, because
Dialogue: 0,0:30:57.34,0:30:58.67,Default,,0,0,0,,there's a command called Flush
Dialogue: 0,0:30:58.67,0:30:59.51,Default,,0,0,0,,from Source Time.
Dialogue: 0,0:31:00.75,0:31:01.87,Default,,0,0,0,,And what this command Flush from
Dialogue: 0,0:31:01.87,0:31:03.69,Default,,0,0,0,,Source Time does, what it means,
Dialogue: 0,0:31:03.69,0:31:05.44,Default,,0,0,0,,is that given this time that I
Dialogue: 0,0:31:05.44,0:31:07.05,Default,,0,0,0,,specify to you, I want you to
Dialogue: 0,0:31:07.05,0:31:08.78,Default,,0,0,0,,throw away all of the media data
Dialogue: 0,0:31:08.78,0:31:11.06,Default,,0,0,0,,on the timeline after it.
Dialogue: 0,0:31:11.26,0:31:12.60,Default,,0,0,0,,So, here I'm going to call Flush
Dialogue: 0,0:31:12.60,0:31:15.23,Default,,0,0,0,,from Source Time with the source
Dialogue: 0,0:31:15.23,0:31:18.15,Default,,0,0,0,,time pointing at the time in the
Dialogue: 0,0:31:18.18,0:31:20.02,Default,,0,0,0,,continuous timeline that it's
Dialogue: 0,0:31:20.02,0:31:22.18,Default,,0,0,0,,the transition from Item 1 to
Dialogue: 0,0:31:22.18,0:31:22.76,Default,,0,0,0,,the next item.
Dialogue: 0,0:31:23.33,0:31:24.30,Default,,0,0,0,,So, I call that and it throws
Dialogue: 0,0:31:24.30,0:31:25.06,Default,,0,0,0,,away all the media data.
Dialogue: 0,0:31:25.06,0:31:27.88,Default,,0,0,0,,Next thing that it does, is it
Dialogue: 0,0:31:27.88,0:31:29.29,Default,,0,0,0,,resets the pointer to the last
Dialogue: 0,0:31:29.29,0:31:31.21,Default,,0,0,0,,enqueued sample buffer to that
Dialogue: 0,0:31:31.36,0:31:33.23,Default,,0,0,0,,source time, so then I'm free to
Dialogue: 0,0:31:33.23,0:31:35.19,Default,,0,0,0,,enqueue media data from Item 3.
Dialogue: 0,0:31:36.42,0:31:37.44,Default,,0,0,0,,And of course, playback
Dialogue: 0,0:31:37.44,0:31:39.17,Default,,0,0,0,,progresses and we're good to go.
Dialogue: 0,0:31:40.12,0:31:42.08,Default,,0,0,0,,The key point about this is, for
Dialogue: 0,0:31:42.08,0:31:44.01,Default,,0,0,0,,the animation purposes in this
Dialogue: 0,0:31:44.01,0:31:46.80,Default,,0,0,0,,talk, I showed it may look like
Dialogue: 0,0:31:46.80,0:31:48.49,Default,,0,0,0,,playback was paused, but you can
Dialogue: 0,0:31:48.49,0:31:49.86,Default,,0,0,0,,actually execute this command
Dialogue: 0,0:31:50.03,0:31:51.72,Default,,0,0,0,,while playback is engaged, so it
Dialogue: 0,0:31:51.72,0:31:53.17,Default,,0,0,0,,can be totally transparent to
Dialogue: 0,0:31:53.17,0:31:53.74,Default,,0,0,0,,your users.
Dialogue: 0,0:31:55.94,0:31:56.83,Default,,0,0,0,,All right.
Dialogue: 0,0:31:57.40,0:31:58.88,Default,,0,0,0,,So, let's talk about the steps
Dialogue: 0,0:31:58.88,0:32:00.34,Default,,0,0,0,,involved in executing the flush
Dialogue: 0,0:32:00.34,0:32:01.04,Default,,0,0,0,,from source time.
Dialogue: 0,0:32:01.04,0:32:02.36,Default,,0,0,0,,There's basically three of them.
Dialogue: 0,0:32:02.36,0:32:04.03,Default,,0,0,0,,First is, stop enqueueing audio
Dialogue: 0,0:32:04.03,0:32:04.85,Default,,0,0,0,,data in the renderer.
Dialogue: 0,0:32:05.17,0:32:06.57,Default,,0,0,0,,Note that I'm not saying stop
Dialogue: 0,0:32:06.71,0:32:07.73,Default,,0,0,0,,playback, because again you
Dialogue: 0,0:32:07.73,0:32:08.39,Default,,0,0,0,,don't have to do that.
Dialogue: 0,0:32:09.23,0:32:09.88,Default,,0,0,0,,Then you issue the
Dialogue: 0,0:32:09.88,0:32:12.20,Default,,0,0,0,,flushfromSourceTime and after
Dialogue: 0,0:32:12.20,0:32:12.77,Default,,0,0,0,,you've issued the
Dialogue: 0,0:32:12.77,0:32:14.86,Default,,0,0,0,,flushfromSourceTime, well that
Dialogue: 0,0:32:14.86,0:32:15.90,Default,,0,0,0,,flush from source is an
Dialogue: 0,0:32:15.90,0:32:17.89,Default,,0,0,0,,asynchronous option, operation
Dialogue: 0,0:32:18.07,0:32:19.40,Default,,0,0,0,,into which you pass a closure.
Dialogue: 0,0:32:19.99,0:32:20.76,Default,,0,0,0,,Well, you should wait for the
Dialogue: 0,0:32:20.76,0:32:21.59,Default,,0,0,0,,callback to be called.
Dialogue: 0,0:32:22.13,0:32:25.95,Default,,0,0,0,,Now there are few gotchas with
Dialogue: 0,0:32:25.95,0:32:26.72,Default,,0,0,0,,this, even though it's a
Dialogue: 0,0:32:26.72,0:32:28.05,Default,,0,0,0,,relatively simple operation, and
Dialogue: 0,0:32:28.05,0:32:29.53,Default,,0,0,0,,the first is that the flush may
Dialogue: 0,0:32:29.53,0:32:29.87,Default,,0,0,0,,fail.
Dialogue: 0,0:32:30.75,0:32:31.74,Default,,0,0,0,,Now, why may it fail?
Dialogue: 0,0:32:32.24,0:32:34.10,Default,,0,0,0,,Well, suppose the source time
Dialogue: 0,0:32:34.10,0:32:35.54,Default,,0,0,0,,the you specified is too close
Dialogue: 0,0:32:35.54,0:32:36.90,Default,,0,0,0,,to or behind the playhead.
Dialogue: 0,0:32:37.71,0:32:39.43,Default,,0,0,0,,Well in those situations, we may
Dialogue: 0,0:32:39.43,0:32:40.49,Default,,0,0,0,,not be able to get the audio
Dialogue: 0,0:32:40.49,0:32:41.69,Default,,0,0,0,,data back from the audio
Dialogue: 0,0:32:41.69,0:32:42.08,Default,,0,0,0,,hardware.
Dialogue: 0,0:32:43.34,0:32:46.07,Default,,0,0,0,,And in those cases well, rather
Dialogue: 0,0:32:46.07,0:32:47.87,Default,,0,0,0,,than leaving you in an unknown
Dialogue: 0,0:32:47.87,0:32:49.81,Default,,0,0,0,,state where you may play out
Dialogue: 0,0:32:49.81,0:32:51.37,Default,,0,0,0,,stale data, we're just going to
Dialogue: 0,0:32:51.37,0:32:52.99,Default,,0,0,0,,fail the operation and it's, and
Dialogue: 0,0:32:52.99,0:32:54.95,Default,,0,0,0,,it's going to be as if it was
Dialogue: 0,0:32:54.95,0:32:57.54,Default,,0,0,0,,never issued in the first place.
Dialogue: 0,0:32:57.72,0:32:59.33,Default,,0,0,0,,So, the second gotcha which is
Dialogue: 0,0:32:59.33,0:33:00.54,Default,,0,0,0,,really just the other side of
Dialogue: 0,0:33:00.54,0:33:01.89,Default,,0,0,0,,the same coin is that you need
Dialogue: 0,0:33:01.89,0:33:02.83,Default,,0,0,0,,to wait for the callback.
Dialogue: 0,0:33:03.30,0:33:05.15,Default,,0,0,0,,So, you should wait for the
Dialogue: 0,0:33:05.15,0:33:06.35,Default,,0,0,0,,callback which will tell you
Dialogue: 0,0:33:06.35,0:33:07.25,Default,,0,0,0,,whether or not that flush
Dialogue: 0,0:33:07.25,0:33:10.33,Default,,0,0,0,,failed, and if it did you need
Dialogue: 0,0:33:10.33,0:33:11.35,Default,,0,0,0,,to take the appropriate action.
Dialogue: 0,0:33:12.06,0:33:12.99,Default,,0,0,0,,So, let's take a look at this in
Dialogue: 0,0:33:12.99,0:33:14.57,Default,,0,0,0,,code, again by extended the
Dialogue: 0,0:33:14.57,0:33:17.04,Default,,0,0,0,,sample app by calling a method
Dialogue: 0,0:33:17.04,0:33:18.25,Default,,0,0,0,,called -- by implementing a
Dialogue: 0,0:33:18.25,0:33:18.91,Default,,0,0,0,,method called
Dialogue: 0,0:33:19.40,0:33:21.73,Default,,0,0,0,,FlushfromSourceTime, perform
Dialogue: 0,0:33:21.73,0:33:22.51,Default,,0,0,0,,FlushfromSourceTime.
Dialogue: 0,0:33:23.66,0:33:26.84,Default,,0,0,0,,So, once again, in this method
Dialogue: 0,0:33:26.97,0:33:28.16,Default,,0,0,0,,the first thing you're going to
Dialogue: 0,0:33:28.16,0:33:28.91,Default,,0,0,0,,do is you're going to tell the
Dialogue: 0,0:33:28.91,0:33:30.37,Default,,0,0,0,,AudioRenderer to stop requesting
Dialogue: 0,0:33:30.37,0:33:30.87,Default,,0,0,0,,media data.
Dialogue: 0,0:33:31.75,0:33:33.05,Default,,0,0,0,,And then you're likely to call
Dialogue: 0,0:33:33.05,0:33:34.89,Default,,0,0,0,,some app specific logic to
Dialogue: 0,0:33:34.89,0:33:36.30,Default,,0,0,0,,really ensure that no media,
Dialogue: 0,0:33:36.30,0:33:37.96,Default,,0,0,0,,additional media data is
Dialogue: 0,0:33:37.96,0:33:38.78,Default,,0,0,0,,enqueued.
Dialogue: 0,0:33:38.78,0:33:40.65,Default,,0,0,0,,This is really important,
Dialogue: 0,0:33:40.89,0:33:42.06,Default,,0,0,0,,because this is an asynchronous
Dialogue: 0,0:33:42.06,0:33:43.32,Default,,0,0,0,,operation so it's naturally
Dialogue: 0,0:33:43.32,0:33:43.74,Default,,0,0,0,,racy.
Dialogue: 0,0:33:44.17,0:33:44.99,Default,,0,0,0,,So, we want to make sure that
Dialogue: 0,0:33:44.99,0:33:46.14,Default,,0,0,0,,you're not enqueueing any
Dialogue: 0,0:33:46.14,0:33:47.65,Default,,0,0,0,,additional audio data while that
Dialogue: 0,0:33:47.65,0:33:49.28,Default,,0,0,0,,FlushfromSourceTime is flight.
Dialogue: 0,0:33:49.77,0:33:52.47,Default,,0,0,0,,So, after you've made sure that
Dialogue: 0,0:33:52.47,0:33:53.59,Default,,0,0,0,,you're no longer enqueueing
Dialogue: 0,0:33:53.59,0:33:54.83,Default,,0,0,0,,audio data in the AudioRenderer,
Dialogue: 0,0:33:55.20,0:33:56.43,Default,,0,0,0,,you can actually execute the
Dialogue: 0,0:33:56.43,0:33:57.42,Default,,0,0,0,,FlushfromSourceTime.
Dialogue: 0,0:33:57.88,0:33:59.30,Default,,0,0,0,,Again, you'll pass in a closure
Dialogue: 0,0:33:59.30,0:34:00.51,Default,,0,0,0,,because this is an asynchronous
Dialogue: 0,0:34:00.67,0:34:01.31,Default,,0,0,0,,operation.
Dialogue: 0,0:34:01.42,0:34:02.85,Default,,0,0,0,,And then closure will tell you
Dialogue: 0,0:34:02.85,0:34:04.85,Default,,0,0,0,,then whether or not the call to
Dialogue: 0,0:34:04.85,0:34:05.62,Default,,0,0,0,,the closure will tell you
Dialogue: 0,0:34:05.62,0:34:06.30,Default,,0,0,0,,whether or not the flush
Dialogue: 0,0:34:06.30,0:34:06.89,Default,,0,0,0,,succeeded.
Dialogue: 0,0:34:07.61,0:34:09.20,Default,,0,0,0,,If it succeeded as I'm showing
Dialogue: 0,0:34:09.20,0:34:11.49,Default,,0,0,0,,here, well, the first thing
Dialogue: 0,0:34:11.49,0:34:12.55,Default,,0,0,0,,you're going to do is again
Dialogue: 0,0:34:12.55,0:34:13.51,Default,,0,0,0,,you're going to tell your sample
Dialogue: 0,0:34:13.51,0:34:15.27,Default,,0,0,0,,generating app, your app's
Dialogue: 0,0:34:15.55,0:34:17.86,Default,,0,0,0,,sample generating code to begin
Dialogue: 0,0:34:17.99,0:34:19.82,Default,,0,0,0,,preparing samples at that source
Dialogue: 0,0:34:19.82,0:34:20.04,Default,,0,0,0,,time.
Dialogue: 0,0:34:20.74,0:34:22.04,Default,,0,0,0,,And then you can reinstall your
Dialogue: 0,0:34:22.04,0:34:23.55,Default,,0,0,0,,callback closure and begin
Dialogue: 0,0:34:23.55,0:34:24.76,Default,,0,0,0,,enqueueing again.
Dialogue: 0,0:34:25.70,0:34:27.59,Default,,0,0,0,,Of course, the flush may fail,
Dialogue: 0,0:34:28.00,0:34:29.46,Default,,0,0,0,,in here it's really app specific
Dialogue: 0,0:34:29.46,0:34:30.89,Default,,0,0,0,,logic to decide what you want to
Dialogue: 0,0:34:30.89,0:34:32.06,Default,,0,0,0,,do in these situations.
Dialogue: 0,0:34:32.79,0:34:33.93,Default,,0,0,0,,Maybe you want to just advance
Dialogue: 0,0:34:33.93,0:34:34.74,Default,,0,0,0,,to the next track.
Dialogue: 0,0:34:34.74,0:34:35.95,Default,,0,0,0,,Maybe you want to execute a full
Dialogue: 0,0:34:35.95,0:34:37.66,Default,,0,0,0,,flush and glitch playback, it's
Dialogue: 0,0:34:37.66,0:34:38.22,Default,,0,0,0,,really up to you.
Dialogue: 0,0:34:38.79,0:34:43.29,Default,,0,0,0,,So, that's play queues and Flush
Dialogue: 0,0:34:43.29,0:34:44.09,Default,,0,0,0,,from Source Time.
Dialogue: 0,0:34:44.86,0:34:47.68,Default,,0,0,0,,Let's move on to the supported
Dialogue: 0,0:34:47.68,0:34:48.65,Default,,0,0,0,,audio formats in
Dialogue: 0,0:34:48.65,0:34:49.75,Default,,0,0,0,,AVSampleBufferAudio Renderer.
Dialogue: 0,0:34:51.66,0:34:53.16,Default,,0,0,0,,So, what audio formats does the
Dialogue: 0,0:34:53.16,0:34:55.09,Default,,0,0,0,,AVSampleBufferAudio Renderer
Dialogue: 0,0:34:55.09,0:34:55.52,Default,,0,0,0,,support?
Dialogue: 0,0:34:55.52,0:34:57.89,Default,,0,0,0,,Well good news, basically all
Dialogue: 0,0:34:57.89,0:34:59.38,Default,,0,0,0,,platform supported audio formats
Dialogue: 0,0:34:59.38,0:35:00.60,Default,,0,0,0,,are also supported by the
Dialogue: 0,0:35:00.60,0:35:01.82,Default,,0,0,0,,AVSampleBufferAudio Renderer.
Dialogue: 0,0:35:01.91,0:35:04.53,Default,,0,0,0,,So, this includes LPCM, AAC,
Dialogue: 0,0:35:04.56,0:35:07.38,Default,,0,0,0,,mp3, Apple Lossless, lots of
Dialogue: 0,0:35:07.38,0:35:09.51,Default,,0,0,0,,sample rates, lots of bit
Dialogue: 0,0:35:10.56,0:35:10.76,Default,,0,0,0,,depths.
Dialogue: 0,0:35:10.87,0:35:13.13,Default,,0,0,0,,And additionally, mixed formats
Dialogue: 0,0:35:13.13,0:35:13.89,Default,,0,0,0,,may be enqueued.
Dialogue: 0,0:35:14.47,0:35:17.35,Default,,0,0,0,,If Item 1 is AAC at 44.1 you can
Dialogue: 0,0:35:17.35,0:35:19.56,Default,,0,0,0,,then enqueue that and then MP3
Dialogue: 0,0:35:19.56,0:35:23.38,Default,,0,0,0,,at 48k and 16bit Apple Lossless
Dialogue: 0,0:35:23.79,0:35:24.98,Default,,0,0,0,,at 48 kilohertz.
Dialogue: 0,0:35:25.16,0:35:26.84,Default,,0,0,0,,You can just enqueue the audio
Dialogue: 0,0:35:26.84,0:35:28.04,Default,,0,0,0,,data from each of these back to
Dialogue: 0,0:35:28.04,0:35:29.20,Default,,0,0,0,,back and we will take care of
Dialogue: 0,0:35:29.20,0:35:30.41,Default,,0,0,0,,the format transitions for you.
Dialogue: 0,0:35:31.47,0:35:33.24,Default,,0,0,0,,So, those are the supported
Dialogue: 0,0:35:33.24,0:35:33.62,Default,,0,0,0,,formats.
Dialogue: 0,0:35:33.83,0:35:34.87,Default,,0,0,0,,Let's talk about the preferred
Dialogue: 0,0:35:34.87,0:35:35.39,Default,,0,0,0,,formats.
Dialogue: 0,0:35:35.93,0:35:38.71,Default,,0,0,0,,So, because we can play anything
Dialogue: 0,0:35:38.71,0:35:39.72,Default,,0,0,0,,just give us what you got.
Dialogue: 0,0:35:39.77,0:35:41.18,Default,,0,0,0,,You have LPCM, give it to us,
Dialogue: 0,0:35:41.18,0:35:42.17,Default,,0,0,0,,encoded give it to us.
Dialogue: 0,0:35:42.66,0:35:44.28,Default,,0,0,0,,But one caveat there is all
Dialogue: 0,0:35:44.28,0:35:46.19,Default,,0,0,0,,things being equal, if you have
Dialogue: 0,0:35:46.19,0:35:48.85,Default,,0,0,0,,a decision between encoded or
Dialogue: 0,0:35:48.85,0:35:50.13,Default,,0,0,0,,PCM, we would prefer the
Dialogue: 0,0:35:50.13,0:35:51.58,Default,,0,0,0,,encoded, but don't do any
Dialogue: 0,0:35:51.58,0:35:53.20,Default,,0,0,0,,special logic to give us that.
Dialogue: 0,0:35:53.29,0:35:54.13,Default,,0,0,0,,Just give us what you have.
Dialogue: 0,0:35:55.42,0:35:56.48,Default,,0,0,0,,And we prefer interleaved
Dialogue: 0,0:35:56.48,0:35:58.34,Default,,0,0,0,,channel formats and 1 to 2
Dialogue: 0,0:35:58.34,0:35:59.54,Default,,0,0,0,,seconds of audio per
Dialogue: 0,0:35:59.54,0:36:00.37,Default,,0,0,0,,CMSampleBuffer.
Dialogue: 0,0:36:00.37,0:36:03.95,Default,,0,0,0,,All right, now I'd like to take
Dialogue: 0,0:36:03.95,0:36:05.33,Default,,0,0,0,,a slight detour and talk about
Dialogue: 0,0:36:05.33,0:36:06.36,Default,,0,0,0,,video synchronization.
Dialogue: 0,0:36:07.66,0:36:08.61,Default,,0,0,0,,Now, you may be wondering why
Dialogue: 0,0:36:08.61,0:36:10.00,Default,,0,0,0,,we're talking about video in a
Dialogue: 0,0:36:10.00,0:36:11.78,Default,,0,0,0,,AirPlay talk that's mainly about
Dialogue: 0,0:36:11.78,0:36:12.23,Default,,0,0,0,,audio.
Dialogue: 0,0:36:13.20,0:36:15.20,Default,,0,0,0,,And it's because the classes
Dialogue: 0,0:36:15.20,0:36:16.47,Default,,0,0,0,,that we're introducing today not
Dialogue: 0,0:36:16.47,0:36:18.71,Default,,0,0,0,,only are they good for AirPlay 2
Dialogue: 0,0:36:18.89,0:36:19.80,Default,,0,0,0,,but they're also just really
Dialogue: 0,0:36:19.80,0:36:21.35,Default,,0,0,0,,good playback APIs for general
Dialogue: 0,0:36:21.35,0:36:22.06,Default,,0,0,0,,use cases.
Dialogue: 0,0:36:22.67,0:36:24.04,Default,,0,0,0,,And you may want to use them to
Dialogue: 0,0:36:24.04,0:36:24.66,Default,,0,0,0,,play video.
Dialogue: 0,0:36:25.23,0:36:26.84,Default,,0,0,0,,Now, once again, if you can use
Dialogue: 0,0:36:26.84,0:36:28.19,Default,,0,0,0,,AVPlayer, please use that.
Dialogue: 0,0:36:28.19,0:36:29.95,Default,,0,0,0,,But if you can't use AVPlayer
Dialogue: 0,0:36:29.95,0:36:31.64,Default,,0,0,0,,and you want to play video, here
Dialogue: 0,0:36:32.24,0:36:33.07,Default,,0,0,0,,you go.
Dialogue: 0,0:36:33.42,0:36:36.50,Default,,0,0,0,,So, let's refer, jump back to a
Dialogue: 0,0:36:36.50,0:36:37.69,Default,,0,0,0,,block diagram that we showed
Dialogue: 0,0:36:37.69,0:36:38.79,Default,,0,0,0,,earlier in the presentation.
Dialogue: 0,0:36:38.94,0:36:40.51,Default,,0,0,0,,We've got the Client App, the
Dialogue: 0,0:36:40.51,0:36:41.21,Default,,0,0,0,,AudioRenderer and the
Dialogue: 0,0:36:41.21,0:36:41.77,Default,,0,0,0,,Synchronizer.
Dialogue: 0,0:36:42.59,0:36:43.83,Default,,0,0,0,,Well, if I simply move those out
Dialogue: 0,0:36:43.83,0:36:45.21,Default,,0,0,0,,of the way, I can make room for
Dialogue: 0,0:36:45.21,0:36:47.43,Default,,0,0,0,,a new renderer class and here
Dialogue: 0,0:36:47.43,0:36:48.40,Default,,0,0,0,,I'm going to add an
Dialogue: 0,0:36:48.40,0:36:49.63,Default,,0,0,0,,AVSampleBufferDisplayLayer.
Dialogue: 0,0:36:50.56,0:36:51.77,Default,,0,0,0,,Now for those of you who are
Dialogue: 0,0:36:51.77,0:36:52.37,Default,,0,0,0,,unfamiliar with
Dialogue: 0,0:36:52.37,0:36:54.60,Default,,0,0,0,,AVSampleBufferDisplayLayer, it's
Dialogue: 0,0:36:54.60,0:36:56.18,Default,,0,0,0,,a class similar to the new
Dialogue: 0,0:36:56.18,0:36:57.55,Default,,0,0,0,,AVSampleBufferAudio Renderer,
Dialogue: 0,0:36:57.76,0:36:58.96,Default,,0,0,0,,except this one is geared
Dialogue: 0,0:36:58.96,0:36:59.72,Default,,0,0,0,,towards video.
Dialogue: 0,0:37:00.14,0:37:01.03,Default,,0,0,0,,It's been around for quite a
Dialogue: 0,0:37:01.03,0:37:01.55,Default,,0,0,0,,while and there's some
Dialogue: 0,0:37:01.55,0:37:04.26,Default,,0,0,0,,documentation and sample code on
Dialogue: 0,0:37:04.26,0:37:05.20,Default,,0,0,0,,the developer website.
Dialogue: 0,0:37:06.17,0:37:09.14,Default,,0,0,0,,But new in these releases is the
Dialogue: 0,0:37:09.14,0:37:10.27,Default,,0,0,0,,idea that you can have its
Dialogue: 0,0:37:10.27,0:37:12.58,Default,,0,0,0,,timeline controlled by a
Dialogue: 0,0:37:12.58,0:37:13.45,Default,,0,0,0,,RenderSynchronizer.
Dialogue: 0,0:37:13.73,0:37:14.64,Default,,0,0,0,,You can add it to a
Dialogue: 0,0:37:14.64,0:37:15.89,Default,,0,0,0,,RenderSynchronizer just as you
Dialogue: 0,0:37:15.89,0:37:16.90,Default,,0,0,0,,add the AudioRenderer to your
Dialogue: 0,0:37:16.90,0:37:17.63,Default,,0,0,0,,RenderSynchronizer.
Dialogue: 0,0:37:18.05,0:37:19.91,Default,,0,0,0,,And this is really cool.
Dialogue: 0,0:37:19.96,0:37:21.64,Default,,0,0,0,,Because then you can add the
Dialogue: 0,0:37:21.64,0:37:23.74,Default,,0,0,0,,audio data to the AudioRenderer.
Dialogue: 0,0:37:24.17,0:37:27.37,Default,,0,0,0,,The video data to the video
Dialogue: 0,0:37:27.37,0:37:30.33,Default,,0,0,0,,renderer, set a rate of 1 on the
Dialogue: 0,0:37:30.33,0:37:32.73,Default,,0,0,0,,Synchronizer, and because
Dialogue: 0,0:37:32.73,0:37:33.47,Default,,0,0,0,,they're tied to the same
Dialogue: 0,0:37:33.47,0:37:34.92,Default,,0,0,0,,timeline, that will come out in
Dialogue: 0,0:37:34.92,0:37:35.13,Default,,0,0,0,,sync.
Dialogue: 0,0:37:35.68,0:37:37.09,Default,,0,0,0,,Now a couple words of caution,
Dialogue: 0,0:37:37.31,0:37:39.03,Default,,0,0,0,,the video will not be AirPlayed,
Dialogue: 0,0:37:39.47,0:37:40.48,Default,,0,0,0,,and additionally when you're
Dialogue: 0,0:37:40.48,0:37:42.04,Default,,0,0,0,,using long-form you can only add
Dialogue: 0,0:37:42.04,0:37:43.29,Default,,0,0,0,,one AudioRenderer to a
Dialogue: 0,0:37:43.29,0:37:44.13,Default,,0,0,0,,RenderSynchronizer.
Dialogue: 0,0:37:44.72,0:37:46.39,Default,,0,0,0,,But never the less, I think you
Dialogue: 0,0:37:46.39,0:37:48.56,Default,,0,0,0,,can see the power in this and
Dialogue: 0,0:37:48.56,0:37:49.95,Default,,0,0,0,,flexibility in this architecture
Dialogue: 0,0:37:50.18,0:37:51.25,Default,,0,0,0,,and I'm sure you'll come up with
Dialogue: 0,0:37:51.25,0:37:52.68,Default,,0,0,0,,some really cool use case,
Dialogue: 0,0:37:52.68,0:37:54.34,Default,,0,0,0,,applications and we're excited
Dialogue: 0,0:37:54.34,0:37:56.55,Default,,0,0,0,,to find out what you can do.
Dialogue: 0,0:37:57.68,0:37:58.11,Default,,0,0,0,,All right.
Dialogue: 0,0:37:58.11,0:37:59.34,Default,,0,0,0,,Lastly, let's talk about the
Dialogue: 0,0:37:59.34,0:38:00.72,Default,,0,0,0,,availability of AirPlay 2.
Dialogue: 0,0:38:02.09,0:38:04.41,Default,,0,0,0,,So, I'm happy to say that the
Dialogue: 0,0:38:04.41,0:38:06.71,Default,,0,0,0,,APIs that I've discussed today
Dialogue: 0,0:38:06.71,0:38:08.46,Default,,0,0,0,,plus the advanced buffering are
Dialogue: 0,0:38:08.46,0:38:10.98,Default,,0,0,0,,all available in the beta that
Dialogue: 0,0:38:10.98,0:38:12.21,Default,,0,0,0,,you guys have access to today.
Dialogue: 0,0:38:13.49,0:38:16.57,Default,,0,0,0,,And you simply set the AirPlay 2
Dialogue: 0,0:38:16.57,0:38:18.29,Default,,0,0,0,,toggle in the developer pane,
Dialogue: 0,0:38:18.48,0:38:19.28,Default,,0,0,0,,flip that on.
Dialogue: 0,0:38:19.72,0:38:21.17,Default,,0,0,0,,And then you can use an updated
Dialogue: 0,0:38:21.17,0:38:22.77,Default,,0,0,0,,Apple TV as your AirPlay 2
Dialogue: 0,0:38:22.77,0:38:24.69,Default,,0,0,0,,receiver and send to it.
Dialogue: 0,0:38:26.02,0:38:27.38,Default,,0,0,0,,In an upcoming beta, we're going
Dialogue: 0,0:38:27.38,0:38:28.77,Default,,0,0,0,,to enable multi-room audio.
Dialogue: 0,0:38:29.59,0:38:30.61,Default,,0,0,0,,And lastly, this will be
Dialogue: 0,0:38:30.61,0:38:31.90,Default,,0,0,0,,available to customers in an
Dialogue: 0,0:38:31.90,0:38:32.73,Default,,0,0,0,,upcoming release.
Dialogue: 0,0:38:33.62,0:38:34.48,Default,,0,0,0,,Let's go through the summary.
Dialogue: 0,0:38:34.48,0:38:36.01,Default,,0,0,0,,We've covered a lot today.
Dialogue: 0,0:38:36.40,0:38:38.46,Default,,0,0,0,,So, AirPlay 2 introduces many
Dialogue: 0,0:38:38.46,0:38:39.46,Default,,0,0,0,,new features for audio.
Dialogue: 0,0:38:41.06,0:38:42.57,Default,,0,0,0,,Long-form audio applications can
Dialogue: 0,0:38:42.57,0:38:44.57,Default,,0,0,0,,enable them with the steps that
Dialogue: 0,0:38:44.57,0:38:45.37,Default,,0,0,0,,I've outlined today.
Dialogue: 0,0:38:46.34,0:38:48.21,Default,,0,0,0,,And AirPlay 2 adoption can begin
Dialogue: 0,0:38:48.21,0:38:49.36,Default,,0,0,0,,with the beta you guys all have
Dialogue: 0,0:38:49.36,0:38:51.29,Default,,0,0,0,,in your hands.
Dialogue: 0,0:38:51.54,0:38:54.10,Default,,0,0,0,,Additional information, this
Dialogue: 0,0:38:54.10,0:38:55.56,Default,,0,0,0,,website will have the
Dialogue: 0,0:38:55.56,0:38:56.50,Default,,0,0,0,,presentation that we've gone
Dialogue: 0,0:38:56.50,0:38:57.52,Default,,0,0,0,,over today, and there will be
Dialogue: 0,0:38:57.52,0:38:58.76,Default,,0,0,0,,sample code available soon.
Dialogue: 0,0:38:59.35,0:39:02.02,Default,,0,0,0,,A couple sessions that we've
Dialogue: 0,0:39:02.02,0:39:02.81,Default,,0,0,0,,talked about earlier.
Dialogue: 0,0:39:02.81,0:39:03.93,Default,,0,0,0,,There's the What's New in Audio
Dialogue: 0,0:39:03.93,0:39:05.00,Default,,0,0,0,,session, that's the one that
Dialogue: 0,0:39:05.00,0:39:06.36,Default,,0,0,0,,will discuss long-form in more
Dialogue: 0,0:39:06.36,0:39:07.68,Default,,0,0,0,,depth and also Introducing
Dialogue: 0,0:39:07.68,0:39:08.18,Default,,0,0,0,,MusicKit.
Dialogue: 0,0:39:08.62,0:39:09.52,Default,,0,0,0,,That's one that you should check
Dialogue: 0,0:39:09.52,0:39:09.73,Default,,0,0,0,,out.
Dialogue: 0,0:39:10.03,0:39:11.09,Default,,0,0,0,,Thank you very much and I hope
Dialogue: 0,0:39:11.09,0:39:11.86,Default,,0,0,0,,you have a great rest of the
Dialogue: 0,0:39:11.86,0:39:12.12,Default,,0,0,0,,week.
Dialogue: 0,0:39:13.02,0:39:15.00,Default,,0,0,0,,[ Applause ]
