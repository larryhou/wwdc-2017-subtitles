[Script Info]
; Script generated by FFmpeg/Lavc57.89.100
ScriptType: v4.00+
PlayResX: 384
PlayResY: 288

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,16,&Hffffff,&Hffffff,&H0,&H0,0,0,0,0,100,100,0,0,1,1,0,2,10,10,10,0

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:18.70,0:00:20.17,Default,,0,0,0,,Remote Commands on tvOS.
Dialogue: 0,0:00:20.66,0:00:21.97,Default,,0,0,0,,I'm Justin Voss, an engineer on
Dialogue: 0,0:00:21.97,0:00:23.73,Default,,0,0,0,,tvOS and in this talk we'll
Dialogue: 0,0:00:23.73,0:00:25.05,Default,,0,0,0,,cover how you can provide great
Dialogue: 0,0:00:25.05,0:00:26.05,Default,,0,0,0,,metadata and playback
Dialogue: 0,0:00:26.05,0:00:27.18,Default,,0,0,0,,experiences for your viewers.
Dialogue: 0,0:00:27.68,0:00:29.79,Default,,0,0,0,,First, let's talk about
Dialogue: 0,0:00:29.79,0:00:30.82,Default,,0,0,0,,providing Now Playing
Dialogue: 0,0:00:30.82,0:00:31.27,Default,,0,0,0,,information.
Dialogue: 0,0:00:31.95,0:00:33.16,Default,,0,0,0,,Having accurate and complete
Dialogue: 0,0:00:33.16,0:00:34.50,Default,,0,0,0,,metadata about your content will
Dialogue: 0,0:00:34.50,0:00:35.75,Default,,0,0,0,,help viewers to understand what
Dialogue: 0,0:00:35.75,0:00:36.77,Default,,0,0,0,,they're watching across a
Dialogue: 0,0:00:36.77,0:00:38.63,Default,,0,0,0,,variety of interfaces across
Dialogue: 0,0:00:38.63,0:00:40.26,Default,,0,0,0,,tvOS and iOS.
Dialogue: 0,0:00:40.82,0:00:43.30,Default,,0,0,0,,The metadata you provide is
Dialogue: 0,0:00:43.30,0:00:44.44,Default,,0,0,0,,displayed in several places.
Dialogue: 0,0:00:45.13,0:00:46.93,Default,,0,0,0,,For video content, the built-in
Dialogue: 0,0:00:46.93,0:00:48.34,Default,,0,0,0,,AVPlayerViewController displays
Dialogue: 0,0:00:48.34,0:00:49.53,Default,,0,0,0,,metadata along the top of the
Dialogue: 0,0:00:49.53,0:00:50.13,Default,,0,0,0,,video screen.
Dialogue: 0,0:00:51.18,0:00:52.71,Default,,0,0,0,,For both video and audio content
Dialogue: 0,0:00:52.71,0:00:54.59,Default,,0,0,0,,the TV Remote app for iOS would
Dialogue: 0,0:00:54.59,0:00:56.06,Default,,0,0,0,,both display metadata and
Dialogue: 0,0:00:56.06,0:00:56.85,Default,,0,0,0,,playback controls.
Dialogue: 0,0:00:57.32,0:00:58.81,Default,,0,0,0,,And for audio content, your
Dialogue: 0,0:00:58.81,0:01:00.12,Default,,0,0,0,,metadata will be displayed in a
Dialogue: 0,0:01:00.12,0:01:01.03,Default,,0,0,0,,badge in the corner of the
Dialogue: 0,0:01:01.03,0:01:02.65,Default,,0,0,0,,screen and as a full-screen
Dialogue: 0,0:01:02.65,0:01:03.76,Default,,0,0,0,,display when the user is idle.
Dialogue: 0,0:01:04.71,0:01:06.04,Default,,0,0,0,,Let's look at some screenshots
Dialogue: 0,0:01:06.04,0:01:07.00,Default,,0,0,0,,of these to better understand
Dialogue: 0,0:01:07.35,0:01:07.44,Default,,0,0,0,,them.
Dialogue: 0,0:01:07.44,0:01:08.27,Default,,0,0,0,,In this screenshot, you can
Dialogue: 0,0:01:08.27,0:01:09.55,Default,,0,0,0,,already tell that we're watching
Dialogue: 0,0:01:09.59,0:01:11.71,Default,,0,0,0,,a WWDC talk from last year
Dialogue: 0,0:01:12.17,0:01:13.48,Default,,0,0,0,,because the metadata onscreen
Dialogue: 0,0:01:13.48,0:01:14.36,Default,,0,0,0,,makes that super clear.
Dialogue: 0,0:01:15.00,0:01:16.22,Default,,0,0,0,,This is an example of using the
Dialogue: 0,0:01:16.22,0:01:18.02,Default,,0,0,0,,built-in AVPlayerViewController
Dialogue: 0,0:01:18.02,0:01:18.77,Default,,0,0,0,,for video content.
Dialogue: 0,0:01:19.25,0:01:21.47,Default,,0,0,0,,Here you can see the same talk,
Dialogue: 0,0:01:21.61,0:01:23.01,Default,,0,0,0,,but displayed in the TV Remote
Dialogue: 0,0:01:23.01,0:01:23.85,Default,,0,0,0,,app for iOS.
Dialogue: 0,0:01:24.15,0:01:25.31,Default,,0,0,0,,You can also see the playback
Dialogue: 0,0:01:25.31,0:01:26.90,Default,,0,0,0,,controls which we'll cover later
Dialogue: 0,0:01:26.90,0:01:27.33,Default,,0,0,0,,in the talk.
Dialogue: 0,0:01:27.80,0:01:29.10,Default,,0,0,0,,For audio content, when the Now
Dialogue: 0,0:01:29.10,0:01:30.37,Default,,0,0,0,,Playing information changes the
Dialogue: 0,0:01:30.37,0:01:31.70,Default,,0,0,0,,listener will see a notification
Dialogue: 0,0:01:31.70,0:01:32.83,Default,,0,0,0,,on their screen with the updated
Dialogue: 0,0:01:32.83,0:01:33.29,Default,,0,0,0,,metadata.
Dialogue: 0,0:01:34.01,0:01:35.27,Default,,0,0,0,,In this screenshot here, you can
Dialogue: 0,0:01:35.27,0:01:36.52,Default,,0,0,0,,see what this would look like if
Dialogue: 0,0:01:36.52,0:01:37.66,Default,,0,0,0,,we were listening to an audio
Dialogue: 0,0:01:37.66,0:01:39.44,Default,,0,0,0,,only version of that WWDC talk.
Dialogue: 0,0:01:40.36,0:01:41.44,Default,,0,0,0,,Finally, if the user puts down
Dialogue: 0,0:01:41.44,0:01:43.14,Default,,0,0,0,,the remote for a while tvOS will
Dialogue: 0,0:01:43.14,0:01:44.31,Default,,0,0,0,,automatically display the Now
Dialogue: 0,0:01:44.31,0:01:45.25,Default,,0,0,0,,Playing metadata in a
Dialogue: 0,0:01:45.25,0:01:46.37,Default,,0,0,0,,full-screen view like you see
Dialogue: 0,0:01:46.37,0:01:47.53,Default,,0,0,0,,here which really shows off the
Dialogue: 0,0:01:47.53,0:01:47.90,Default,,0,0,0,,artwork.
Dialogue: 0,0:01:49.18,0:01:50.50,Default,,0,0,0,,So, hopefully I've convinced you
Dialogue: 0,0:01:50.50,0:01:51.63,Default,,0,0,0,,that providing the complete set
Dialogue: 0,0:01:51.63,0:01:52.74,Default,,0,0,0,,of Now Playing information is
Dialogue: 0,0:01:52.74,0:01:53.22,Default,,0,0,0,,worth your time.
Dialogue: 0,0:01:54.19,0:01:55.02,Default,,0,0,0,,Let's talk about some of the
Dialogue: 0,0:01:55.02,0:01:55.94,Default,,0,0,0,,different ways you can do that.
Dialogue: 0,0:01:56.58,0:01:57.81,Default,,0,0,0,,You have a few choices so it
Dialogue: 0,0:01:57.81,0:01:58.49,Default,,0,0,0,,depends on what kind of
Dialogue: 0,0:01:58.49,0:01:59.65,Default,,0,0,0,,technology you're using in your
Dialogue: 0,0:02:00.30,0:02:00.37,Default,,0,0,0,,app.
Dialogue: 0,0:02:01.50,0:02:03.58,Default,,0,0,0,,Those of you using TVML can add
Dialogue: 0,0:02:03.58,0:02:05.30,Default,,0,0,0,,metadata using the MediaItem
Dialogue: 0,0:02:05.30,0:02:06.09,Default,,0,0,0,,JavaScript object.
Dialogue: 0,0:02:06.95,0:02:07.81,Default,,0,0,0,,This object has several
Dialogue: 0,0:02:07.81,0:02:08.99,Default,,0,0,0,,properties on it for Now Playing
Dialogue: 0,0:02:08.99,0:02:10.63,Default,,0,0,0,,info, including a title,
Dialogue: 0,0:02:10.74,0:02:12.84,Default,,0,0,0,,subtitle and description, you
Dialogue: 0,0:02:12.84,0:02:14.25,Default,,0,0,0,,can provide a URL to an artwork
Dialogue: 0,0:02:14.25,0:02:16.13,Default,,0,0,0,,image and you can even provide
Dialogue: 0,0:02:16.13,0:02:17.23,Default,,0,0,0,,information about the content
Dialogue: 0,0:02:17.23,0:02:20.06,Default,,0,0,0,,rating such as PG-13 or R and
Dialogue: 0,0:02:20.06,0:02:21.32,Default,,0,0,0,,whether the content is explicit.
Dialogue: 0,0:02:21.59,0:02:24.20,Default,,0,0,0,,In the code sample, here you can
Dialogue: 0,0:02:24.20,0:02:25.06,Default,,0,0,0,,see that I'm creating a
Dialogue: 0,0:02:25.06,0:02:27.03,Default,,0,0,0,,MediaItem object with a URL to a
Dialogue: 0,0:02:27.03,0:02:28.94,Default,,0,0,0,,video and then configuring a
Dialogue: 0,0:02:28.94,0:02:30.73,Default,,0,0,0,,title and description on it and
Dialogue: 0,0:02:30.73,0:02:31.98,Default,,0,0,0,,providing a URL to an artwork
Dialogue: 0,0:02:31.98,0:02:32.25,Default,,0,0,0,,image.
Dialogue: 0,0:02:32.77,0:02:34.06,Default,,0,0,0,,If you're using AVKit to play
Dialogue: 0,0:02:34.06,0:02:36.15,Default,,0,0,0,,your content you'll want to use
Dialogue: 0,0:02:36.15,0:02:37.70,Default,,0,0,0,,the AV metadata item class to
Dialogue: 0,0:02:37.70,0:02:38.69,Default,,0,0,0,,provide Now Playing info.
Dialogue: 0,0:02:40.08,0:02:41.38,Default,,0,0,0,,For each piece of metadata you
Dialogue: 0,0:02:41.38,0:02:42.88,Default,,0,0,0,,want to provide, such as a title
Dialogue: 0,0:02:42.88,0:02:44.71,Default,,0,0,0,,or artwork, etcetera you'll
Dialogue: 0,0:02:44.71,0:02:46.66,Default,,0,0,0,,create an AV mutable metadata
Dialogue: 0,0:02:46.66,0:02:47.93,Default,,0,0,0,,item and configure several
Dialogue: 0,0:02:47.93,0:02:48.68,Default,,0,0,0,,properties on it.
Dialogue: 0,0:02:48.98,0:02:50.37,Default,,0,0,0,,You provide an identifier which
Dialogue: 0,0:02:50.37,0:02:51.59,Default,,0,0,0,,tells AVKit what kind of
Dialogue: 0,0:02:51.59,0:02:52.65,Default,,0,0,0,,metadata this represents.
Dialogue: 0,0:02:53.04,0:02:54.12,Default,,0,0,0,,This is how we know to tell the
Dialogue: 0,0:02:54.12,0:02:55.42,Default,,0,0,0,,difference between the object
Dialogue: 0,0:02:55.42,0:02:56.56,Default,,0,0,0,,that represents a title versus
Dialogue: 0,0:02:56.56,0:02:57.56,Default,,0,0,0,,the description and so on.
Dialogue: 0,0:02:58.11,0:02:59.13,Default,,0,0,0,,You provide the value of the
Dialogue: 0,0:02:59.13,0:03:00.81,Default,,0,0,0,,metadata itself, which may be a
Dialogue: 0,0:03:00.81,0:03:02.31,Default,,0,0,0,,string or raw data bytes.
Dialogue: 0,0:03:02.89,0:03:03.41,Default,,0,0,0,,You should set the
Dialogue: 0,0:03:03.41,0:03:04.99,Default,,0,0,0,,extendedLanguageTag to specify
Dialogue: 0,0:03:04.99,0:03:06.18,Default,,0,0,0,,what language the metadata is
Dialogue: 0,0:03:06.18,0:03:06.76,Default,,0,0,0,,intended for.
Dialogue: 0,0:03:07.46,0:03:08.51,Default,,0,0,0,,Unless you have a good reason to
Dialogue: 0,0:03:08.51,0:03:09.77,Default,,0,0,0,,do otherwise we strongly
Dialogue: 0,0:03:09.77,0:03:12.13,Default,,0,0,0,,recommend that you use the value
Dialogue: 0,0:03:12.38,0:03:13.42,Default,,0,0,0,,und which means undefined.
Dialogue: 0,0:03:14.36,0:03:15.68,Default,,0,0,0,,The way this property works is
Dialogue: 0,0:03:15.68,0:03:17.29,Default,,0,0,0,,that it will only be visible to
Dialogue: 0,0:03:17.29,0:03:18.86,Default,,0,0,0,,the user if the user's locale
Dialogue: 0,0:03:18.94,0:03:20.41,Default,,0,0,0,,matches the metadata's locale.
Dialogue: 0,0:03:20.91,0:03:22.29,Default,,0,0,0,,So, for example, if you had a
Dialogue: 0,0:03:22.29,0:03:23.25,Default,,0,0,0,,movie that was produced in the
Dialogue: 0,0:03:23.25,0:03:25.25,Default,,0,0,0,,USA you may be tempted to
Dialogue: 0,0:03:25.25,0:03:26.86,Default,,0,0,0,,provide the title of that movie
Dialogue: 0,0:03:26.89,0:03:28.36,Default,,0,0,0,,with the language tag of English
Dialogue: 0,0:03:28.36,0:03:29.58,Default,,0,0,0,,since the title is in English.
Dialogue: 0,0:03:30.26,0:03:31.25,Default,,0,0,0,,But if you did that then a
Dialogue: 0,0:03:31.25,0:03:32.71,Default,,0,0,0,,viewer in Germany wouldn't see
Dialogue: 0,0:03:32.71,0:03:34.19,Default,,0,0,0,,any title at all because the
Dialogue: 0,0:03:34.19,0:03:35.59,Default,,0,0,0,,metadata language doesn't match
Dialogue: 0,0:03:35.59,0:03:36.33,Default,,0,0,0,,their language.
Dialogue: 0,0:03:36.83,0:03:38.69,Default,,0,0,0,,But if you had used the tag und
Dialogue: 0,0:03:38.89,0:03:39.68,Default,,0,0,0,,then everyone will see the
Dialogue: 0,0:03:39.68,0:03:40.84,Default,,0,0,0,,metadata regardless of their
Dialogue: 0,0:03:40.84,0:03:41.54,Default,,0,0,0,,language settings.
Dialogue: 0,0:03:42.97,0:03:44.65,Default,,0,0,0,,Finally, in some cases you need
Dialogue: 0,0:03:44.65,0:03:46.09,Default,,0,0,0,,to give us a hint about how to
Dialogue: 0,0:03:46.09,0:03:47.04,Default,,0,0,0,,interpret the value you've
Dialogue: 0,0:03:47.04,0:03:47.49,Default,,0,0,0,,provided.
Dialogue: 0,0:03:48.17,0:03:49.49,Default,,0,0,0,,In the case of providing artwork
Dialogue: 0,0:03:49.49,0:03:50.80,Default,,0,0,0,,image you'll give us the raw
Dialogue: 0,0:03:50.80,0:03:52.18,Default,,0,0,0,,bytes of the image as the value
Dialogue: 0,0:03:52.44,0:03:53.47,Default,,0,0,0,,and then use the dataType to
Dialogue: 0,0:03:53.47,0:03:55.18,Default,,0,0,0,,tell us if the image is a JPEG
Dialogue: 0,0:03:55.18,0:03:55.69,Default,,0,0,0,,or a PNG.
Dialogue: 0,0:03:56.51,0:03:58.22,Default,,0,0,0,,Let's look at some code samples
Dialogue: 0,0:03:58.22,0:03:59.22,Default,,0,0,0,,to get a feel for how this
Dialogue: 0,0:03:59.22,0:03:59.58,Default,,0,0,0,,works.
Dialogue: 0,0:04:00.11,0:04:03.41,Default,,0,0,0,,Here you can see the code where
Dialogue: 0,0:04:03.41,0:04:05.08,Default,,0,0,0,,I'm creating an AV playerItem
Dialogue: 0,0:04:05.08,0:04:06.31,Default,,0,0,0,,and giving it a title and
Dialogue: 0,0:04:06.31,0:04:06.71,Default,,0,0,0,,description.
Dialogue: 0,0:04:07.62,0:04:08.78,Default,,0,0,0,,In the first large code block
Dialogue: 0,0:04:08.98,0:04:10.10,Default,,0,0,0,,I'm creating an
Dialogue: 0,0:04:10.10,0:04:11.37,Default,,0,0,0,,AVMutableMetadataItem to
Dialogue: 0,0:04:11.37,0:04:13.56,Default,,0,0,0,,represent the title.
Dialogue: 0,0:04:13.72,0:04:15.15,Default,,0,0,0,,The first thing that I do is I
Dialogue: 0,0:04:15.15,0:04:16.44,Default,,0,0,0,,set the identifier to
Dialogue: 0,0:04:16.44,0:04:17.85,Default,,0,0,0,,AVMetadataCommon
Dialogue: 0,0:04:17.85,0:04:19.79,Default,,0,0,0,,IdentifierTitle so that AVKit
Dialogue: 0,0:04:19.79,0:04:21.31,Default,,0,0,0,,knows that this metadata item is
Dialogue: 0,0:04:21.31,0:04:21.63,Default,,0,0,0,,the title.
Dialogue: 0,0:04:21.68,0:04:25.53,Default,,0,0,0,,Then I set the actual value as a
Dialogue: 0,0:04:25.53,0:04:25.83,Default,,0,0,0,,string.
Dialogue: 0,0:04:26.67,0:04:28.18,Default,,0,0,0,,The AV metadata item API
Dialogue: 0,0:04:28.47,0:04:29.72,Default,,0,0,0,,requires these values to be NS
Dialogue: 0,0:04:29.72,0:04:31.22,Default,,0,0,0,,object types so casting the
Dialogue: 0,0:04:31.22,0:04:31.72,Default,,0,0,0,,[inaudible] string to an
Dialogue: 0,0:04:31.72,0:04:31.93,Default,,0,0,0,,NSString.
Dialogue: 0,0:04:36.06,0:04:36.91,Default,,0,0,0,,Finally, I'm setting the
Dialogue: 0,0:04:36.91,0:04:38.69,Default,,0,0,0,,extendedLanguageTag to und
Dialogue: 0,0:04:38.69,0:04:39.76,Default,,0,0,0,,because the title of this talk
Dialogue: 0,0:04:39.76,0:04:40.70,Default,,0,0,0,,should appear the same
Dialogue: 0,0:04:40.70,0:04:41.18,Default,,0,0,0,,worldwide.
Dialogue: 0,0:04:41.68,0:04:44.07,Default,,0,0,0,,In the second large code block,
Dialogue: 0,0:04:44.07,0:04:44.96,Default,,0,0,0,,I'm doing most of the same
Dialogue: 0,0:04:44.96,0:04:45.83,Default,,0,0,0,,things to assign the
Dialogue: 0,0:04:45.83,0:04:46.34,Default,,0,0,0,,description.
Dialogue: 0,0:04:47.01,0:04:48.10,Default,,0,0,0,,Other than providing a different
Dialogue: 0,0:04:48.10,0:04:50.14,Default,,0,0,0,,value you can see that on this
Dialogue: 0,0:04:50.14,0:04:51.94,Default,,0,0,0,,line I'm setting the identifier
Dialogue: 0,0:04:51.94,0:04:53.70,Default,,0,0,0,,to AVMetadataCommon
Dialogue: 0,0:04:53.70,0:04:55.72,Default,,0,0,0,,IdentifierDescription so that
Dialogue: 0,0:04:55.72,0:04:56.90,Default,,0,0,0,,AVKit knows how to interpret
Dialogue: 0,0:04:56.90,0:04:57.26,Default,,0,0,0,,this item.
Dialogue: 0,0:04:58.67,0:05:00.08,Default,,0,0,0,,Finally, on the last line I
Dialogue: 0,0:05:00.08,0:05:01.21,Default,,0,0,0,,assign an array of these
Dialogue: 0,0:05:01.21,0:05:02.87,Default,,0,0,0,,metadata items to the AV
Dialogue: 0,0:05:02.87,0:05:04.67,Default,,0,0,0,,playerItem's external metadata
Dialogue: 0,0:05:04.67,0:05:05.03,Default,,0,0,0,,property.
Dialogue: 0,0:05:05.62,0:05:08.71,Default,,0,0,0,,If you wanted to provide the
Dialogue: 0,0:05:08.71,0:05:09.90,Default,,0,0,0,,release date of your content as
Dialogue: 0,0:05:09.90,0:05:11.49,Default,,0,0,0,,a metadata item you can do that
Dialogue: 0,0:05:11.49,0:05:12.78,Default,,0,0,0,,if you format your release date
Dialogue: 0,0:05:12.78,0:05:14.04,Default,,0,0,0,,as a string in a specific
Dialogue: 0,0:05:14.04,0:05:14.40,Default,,0,0,0,,format.
Dialogue: 0,0:05:15.07,0:05:16.24,Default,,0,0,0,,This code sample shows you how
Dialogue: 0,0:05:16.24,0:05:16.75,Default,,0,0,0,,you can do that.
Dialogue: 0,0:05:17.31,0:05:19.04,Default,,0,0,0,,Here you see that I'm creating
Dialogue: 0,0:05:19.04,0:05:21.04,Default,,0,0,0,,the date object for an arbitrary
Dialogue: 0,0:05:21.04,0:05:21.13,Default,,0,0,0,,date.
Dialogue: 0,0:05:21.89,0:05:23.34,Default,,0,0,0,,Then I create a date formatter
Dialogue: 0,0:05:23.46,0:05:24.89,Default,,0,0,0,,and provide a specific date
Dialogue: 0,0:05:24.89,0:05:26.67,Default,,0,0,0,,format string here on this line.
Dialogue: 0,0:05:27.27,0:05:29.91,Default,,0,0,0,,To create the metadata item, I
Dialogue: 0,0:05:29.91,0:05:31.01,Default,,0,0,0,,use the identifier
Dialogue: 0,0:05:31.24,0:05:32.55,Default,,0,0,0,,AVMetadataCommon
Dialogue: 0,0:05:32.55,0:05:35.02,Default,,0,0,0,,IdentifierCreationDate and
Dialogue: 0,0:05:35.02,0:05:36.05,Default,,0,0,0,,finally, I use the date
Dialogue: 0,0:05:36.05,0:05:37.44,Default,,0,0,0,,formatter to convert the date
Dialogue: 0,0:05:37.44,0:05:38.97,Default,,0,0,0,,object into a formatted string
Dialogue: 0,0:05:39.12,0:05:40.37,Default,,0,0,0,,and cast that string as an
Dialogue: 0,0:05:40.37,0:05:40.66,Default,,0,0,0,,NSString.
Dialogue: 0,0:05:41.88,0:05:43.34,Default,,0,0,0,,Now in AVPlayerViewController
Dialogue: 0,0:05:43.64,0:05:44.71,Default,,0,0,0,,viewers will be able to see the
Dialogue: 0,0:05:44.71,0:05:45.79,Default,,0,0,0,,release year of the video
Dialogue: 0,0:05:45.79,0:05:47.43,Default,,0,0,0,,alongside the other Now Playing
Dialogue: 0,0:05:47.97,0:05:48.12,Default,,0,0,0,,info.
Dialogue: 0,0:05:49.80,0:05:51.34,Default,,0,0,0,,Finally, here's an example of
Dialogue: 0,0:05:51.34,0:05:52.67,Default,,0,0,0,,how to provide image metadata
Dialogue: 0,0:05:52.67,0:05:53.32,Default,,0,0,0,,for your content.
Dialogue: 0,0:05:54.26,0:05:55.42,Default,,0,0,0,,Here you can see that the first
Dialogue: 0,0:05:55.42,0:05:56.95,Default,,0,0,0,,thing I need to do is to get my
Dialogue: 0,0:05:56.95,0:05:58.26,Default,,0,0,0,,image as a data object.
Dialogue: 0,0:05:58.81,0:05:59.87,Default,,0,0,0,,I'm doing that by loading the
Dialogue: 0,0:05:59.87,0:06:01.23,Default,,0,0,0,,image from a JPEG that's in my
Dialogue: 0,0:06:01.23,0:06:02.31,Default,,0,0,0,,app bundle, but you could get
Dialogue: 0,0:06:02.31,0:06:03.53,Default,,0,0,0,,your artwork from any source.
Dialogue: 0,0:06:03.98,0:06:06.50,Default,,0,0,0,,Then to create the metadata item
Dialogue: 0,0:06:06.68,0:06:07.39,Default,,0,0,0,,the first thing I need to
Dialogue: 0,0:06:07.39,0:06:09.42,Default,,0,0,0,,specify is my identifier, which
Dialogue: 0,0:06:09.42,0:06:10.41,Default,,0,0,0,,in this case should be
Dialogue: 0,0:06:10.66,0:06:12.06,Default,,0,0,0,,AVMetadataCommon
Dialogue: 0,0:06:12.06,0:06:13.24,Default,,0,0,0,,IdentifierArtwork.
Dialogue: 0,0:06:14.35,0:06:15.70,Default,,0,0,0,,Next, I provide the artwork data
Dialogue: 0,0:06:15.70,0:06:17.79,Default,,0,0,0,,itself and cast the Swift data
Dialogue: 0,0:06:17.79,0:06:19.82,Default,,0,0,0,,object to an NSData.
Dialogue: 0,0:06:20.88,0:06:22.16,Default,,0,0,0,,Finally, to indicate what kind
Dialogue: 0,0:06:22.16,0:06:23.79,Default,,0,0,0,,of image this is I need to set
Dialogue: 0,0:06:23.79,0:06:24.64,Default,,0,0,0,,the dataType property.
Dialogue: 0,0:06:25.19,0:06:26.12,Default,,0,0,0,,Since I know this image is a
Dialogue: 0,0:06:26.12,0:06:27.74,Default,,0,0,0,,JPEG I'm going to provide this
Dialogue: 0,0:06:27.74,0:06:29.01,Default,,0,0,0,,constant value here to indicate
Dialogue: 0,0:06:29.01,0:06:29.22,Default,,0,0,0,,that.
Dialogue: 0,0:06:29.72,0:06:32.88,Default,,0,0,0,,Okay to give you a visual
Dialogue: 0,0:06:32.88,0:06:33.99,Default,,0,0,0,,reference of where some of these
Dialogue: 0,0:06:33.99,0:06:35.63,Default,,0,0,0,,items appear onscreen here's a
Dialogue: 0,0:06:35.63,0:06:36.42,Default,,0,0,0,,screenshot of the
Dialogue: 0,0:06:36.42,0:06:37.91,Default,,0,0,0,,AVPlayerViewController with some
Dialogue: 0,0:06:37.91,0:06:38.86,Default,,0,0,0,,annotations on it.
Dialogue: 0,0:06:39.56,0:06:40.71,Default,,0,0,0,,The color coding will show where
Dialogue: 0,0:06:40.71,0:06:42.02,Default,,0,0,0,,each metadata identifier is
Dialogue: 0,0:06:42.02,0:06:42.42,Default,,0,0,0,,displayed.
Dialogue: 0,0:06:43.20,0:06:44.56,Default,,0,0,0,,So, this is where the artwork
Dialogue: 0,0:06:44.56,0:06:47.33,Default,,0,0,0,,will be displayed, the title,
Dialogue: 0,0:06:47.90,0:06:51.95,Default,,0,0,0,,the creation date, and the
Dialogue: 0,0:06:52.20,0:06:52.75,Default,,0,0,0,,description.
Dialogue: 0,0:06:53.29,0:06:56.30,Default,,0,0,0,,And here's a similar screenshot
Dialogue: 0,0:06:56.30,0:06:57.23,Default,,0,0,0,,of the TV Remote app.
Dialogue: 0,0:06:57.95,0:06:59.02,Default,,0,0,0,,You can see here the Remote app
Dialogue: 0,0:06:59.02,0:07:00.52,Default,,0,0,0,,doesn't display exactly the same
Dialogue: 0,0:07:00.52,0:07:01.79,Default,,0,0,0,,set of metadata as
Dialogue: 0,0:07:01.79,0:07:02.67,Default,,0,0,0,,AVPlayerViewController.
Dialogue: 0,0:07:02.96,0:07:05.38,Default,,0,0,0,,It displays the same artwork and
Dialogue: 0,0:07:05.87,0:07:08.35,Default,,0,0,0,,title, but instead of displaying
Dialogue: 0,0:07:08.35,0:07:09.60,Default,,0,0,0,,the description it instead
Dialogue: 0,0:07:09.60,0:07:12.34,Default,,0,0,0,,displays the artist and the
Dialogue: 0,0:07:12.34,0:07:12.84,Default,,0,0,0,,album name.
Dialogue: 0,0:07:14.20,0:07:15.01,Default,,0,0,0,,You can see the AV foundation
Dialogue: 0,0:07:15.01,0:07:15.97,Default,,0,0,0,,identifiers to use here.
Dialogue: 0,0:07:20.05,0:07:20.97,Default,,0,0,0,,Okay that's all for AVKit.
Dialogue: 0,0:07:21.30,0:07:22.27,Default,,0,0,0,,If you're just playing your
Dialogue: 0,0:07:22.27,0:07:23.40,Default,,0,0,0,,video using some other
Dialogue: 0,0:07:23.40,0:07:25.45,Default,,0,0,0,,technology like Video Toolbox or
Dialogue: 0,0:07:25.45,0:07:26.43,Default,,0,0,0,,if you're playing audio only
Dialogue: 0,0:07:26.43,0:07:28.07,Default,,0,0,0,,content then you'll need another
Dialogue: 0,0:07:28.07,0:07:29.45,Default,,0,0,0,,way to provide Now Playing info.
Dialogue: 0,0:07:30.24,0:07:32.28,Default,,0,0,0,,In those cases, you can use the
Dialogue: 0,0:07:32.28,0:07:34.00,Default,,0,0,0,,MPNowPlayingInfoCenter.
Dialogue: 0,0:07:35.01,0:07:36.29,Default,,0,0,0,,This is a singleton object that
Dialogue: 0,0:07:36.29,0:07:37.47,Default,,0,0,0,,has a dictionary property that
Dialogue: 0,0:07:37.47,0:07:38.48,Default,,0,0,0,,you can write your metadata
Dialogue: 0,0:07:38.48,0:07:38.80,Default,,0,0,0,,into.
Dialogue: 0,0:07:39.54,0:07:40.77,Default,,0,0,0,,So, there's a key for title, for
Dialogue: 0,0:07:40.77,0:07:42.15,Default,,0,0,0,,album name, for artwork and so
Dialogue: 0,0:07:42.15,0:07:42.28,Default,,0,0,0,,on.
Dialogue: 0,0:07:42.72,0:07:44.88,Default,,0,0,0,,In addition to the metadata that
Dialogue: 0,0:07:44.88,0:07:46.51,Default,,0,0,0,,you are probably expecting you
Dialogue: 0,0:07:46.51,0:07:48.22,Default,,0,0,0,,can also specify explicitly if
Dialogue: 0,0:07:48.22,0:07:49.59,Default,,0,0,0,,the content is audio or video.
Dialogue: 0,0:07:50.41,0:07:51.40,Default,,0,0,0,,You can also provide some
Dialogue: 0,0:07:51.40,0:07:52.62,Default,,0,0,0,,information about the content
Dialogue: 0,0:07:52.62,0:07:54.19,Default,,0,0,0,,duration and the user's current
Dialogue: 0,0:07:54.19,0:07:54.86,Default,,0,0,0,,playback position.
Dialogue: 0,0:07:55.43,0:07:57.99,Default,,0,0,0,,Your artwork is not provided as
Dialogue: 0,0:07:57.99,0:07:59.41,Default,,0,0,0,,raw bytes, but as an
Dialogue: 0,0:07:59.48,0:08:01.31,Default,,0,0,0,,MPMediaItemArtwork object which
Dialogue: 0,0:08:01.31,0:08:02.63,Default,,0,0,0,,we'll talk about more in just a
Dialogue: 0,0:08:03.07,0:08:03.25,Default,,0,0,0,,minute.
Dialogue: 0,0:08:04.57,0:08:05.24,Default,,0,0,0,,Finally, it's your
Dialogue: 0,0:08:05.24,0:08:06.61,Default,,0,0,0,,responsibility to update this
Dialogue: 0,0:08:06.61,0:08:07.78,Default,,0,0,0,,metadata dictionary as the
Dialogue: 0,0:08:07.78,0:08:08.94,Default,,0,0,0,,playback state changes.
Dialogue: 0,0:08:09.69,0:08:10.71,Default,,0,0,0,,You do not need to update it
Dialogue: 0,0:08:10.71,0:08:11.98,Default,,0,0,0,,every second or even every
Dialogue: 0,0:08:11.98,0:08:13.27,Default,,0,0,0,,minute, but you should update it
Dialogue: 0,0:08:13.27,0:08:14.26,Default,,0,0,0,,when certain events occur.
Dialogue: 0,0:08:14.96,0:08:16.02,Default,,0,0,0,,We recommend that you update it
Dialogue: 0,0:08:16.02,0:08:17.57,Default,,0,0,0,,when the currently playing item
Dialogue: 0,0:08:17.57,0:08:20.00,Default,,0,0,0,,changes, if any metadata about
Dialogue: 0,0:08:20.00,0:08:20.94,Default,,0,0,0,,the currently playing item
Dialogue: 0,0:08:20.94,0:08:22.23,Default,,0,0,0,,changes, such as the title or
Dialogue: 0,0:08:22.23,0:08:24.80,Default,,0,0,0,,artist name, if the user seeks
Dialogue: 0,0:08:24.80,0:08:26.02,Default,,0,0,0,,to a new position of the content
Dialogue: 0,0:08:26.02,0:08:27.28,Default,,0,0,0,,or if the playback rate changes
Dialogue: 0,0:08:27.91,0:08:29.33,Default,,0,0,0,,and finally, if playback begins
Dialogue: 0,0:08:29.33,0:08:29.88,Default,,0,0,0,,or stops.
Dialogue: 0,0:08:30.39,0:08:32.39,Default,,0,0,0,,Let's take a look at some code.
Dialogue: 0,0:08:33.70,0:08:34.79,Default,,0,0,0,,Here in the first code block,
Dialogue: 0,0:08:35.30,0:08:36.27,Default,,0,0,0,,I'm creating the object that's
Dialogue: 0,0:08:36.27,0:08:37.56,Default,,0,0,0,,going to represent my artwork.
Dialogue: 0,0:08:38.53,0:08:40.55,Default,,0,0,0,,The way this MPMediaItemArtwork
Dialogue: 0,0:08:40.55,0:08:42.10,Default,,0,0,0,,class works is that you provide
Dialogue: 0,0:08:42.10,0:08:43.18,Default,,0,0,0,,us with the native size of the
Dialogue: 0,0:08:43.18,0:08:45.27,Default,,0,0,0,,image in a block that we'll call
Dialogue: 0,0:08:45.27,0:08:46.77,Default,,0,0,0,,later with specific image sizes.
Dialogue: 0,0:08:47.11,0:08:49.68,Default,,0,0,0,,The way this MPMediaItemArtwork
Dialogue: 0,0:08:49.68,0:08:51.32,Default,,0,0,0,,class works is that you provide
Dialogue: 0,0:08:51.32,0:08:52.63,Default,,0,0,0,,us with a native size of the
Dialogue: 0,0:08:52.63,0:08:54.37,Default,,0,0,0,,image in a block that we'll call
Dialogue: 0,0:08:54.37,0:08:55.96,Default,,0,0,0,,later with specific image sizes.
Dialogue: 0,0:08:56.79,0:08:57.82,Default,,0,0,0,,This block should return a
Dialogue: 0,0:08:57.82,0:08:59.81,Default,,0,0,0,,UIImage object that closely fits
Dialogue: 0,0:08:59.81,0:09:01.10,Default,,0,0,0,,inside the size that's passed to
Dialogue: 0,0:09:01.10,0:09:01.48,Default,,0,0,0,,the block.
Dialogue: 0,0:09:02.12,0:09:03.44,Default,,0,0,0,,So, for example, your app may
Dialogue: 0,0:09:03.44,0:09:04.36,Default,,0,0,0,,have downloaded several
Dialogue: 0,0:09:04.36,0:09:05.49,Default,,0,0,0,,different sizes of the same
Dialogue: 0,0:09:05.49,0:09:07.82,Default,,0,0,0,,artwork say in small, medium and
Dialogue: 0,0:09:07.82,0:09:08.71,Default,,0,0,0,,large sizes.
Dialogue: 0,0:09:09.29,0:09:10.41,Default,,0,0,0,,When we call this block, you
Dialogue: 0,0:09:10.41,0:09:11.65,Default,,0,0,0,,should take the size we provide
Dialogue: 0,0:09:11.95,0:09:13.21,Default,,0,0,0,,and return the image that most
Dialogue: 0,0:09:13.21,0:09:14.65,Default,,0,0,0,,closely fits the requested size.
Dialogue: 0,0:09:16.00,0:09:17.02,Default,,0,0,0,,We would discourage you from
Dialogue: 0,0:09:17.02,0:09:18.28,Default,,0,0,0,,trying to perform expensive
Dialogue: 0,0:09:18.28,0:09:19.80,Default,,0,0,0,,image resizing operations here,
Dialogue: 0,0:09:19.89,0:09:20.98,Default,,0,0,0,,just return the image that you
Dialogue: 0,0:09:20.98,0:09:22.25,Default,,0,0,0,,already have.
Dialogue: 0,0:09:23.56,0:09:24.69,Default,,0,0,0,,In the second block of code,
Dialogue: 0,0:09:24.69,0:09:25.65,Default,,0,0,0,,this is where I'm actually
Dialogue: 0,0:09:25.65,0:09:26.97,Default,,0,0,0,,providing all of my metadata to
Dialogue: 0,0:09:26.97,0:09:28.49,Default,,0,0,0,,MPNowPlayingInfoCenter.
Dialogue: 0,0:09:29.24,0:09:30.37,Default,,0,0,0,,You can see that this is just a
Dialogue: 0,0:09:30.37,0:09:31.68,Default,,0,0,0,,plain Swift dictionary with some
Dialogue: 0,0:09:31.68,0:09:32.71,Default,,0,0,0,,keys that are provided by the
Dialogue: 0,0:09:32.71,0:09:33.81,Default,,0,0,0,,framework and I'm simply
Dialogue: 0,0:09:33.81,0:09:35.14,Default,,0,0,0,,providing my values as regular
Dialogue: 0,0:09:35.14,0:09:35.82,Default,,0,0,0,,Swift types.
Dialogue: 0,0:09:36.78,0:09:37.75,Default,,0,0,0,,There are two properties that I
Dialogue: 0,0:09:37.75,0:09:38.98,Default,,0,0,0,,want to call out in particular
Dialogue: 0,0:09:38.98,0:09:39.16,Default,,0,0,0,,though.
Dialogue: 0,0:09:39.86,0:09:41.18,Default,,0,0,0,,The ElapsedPlaybackTime and the
Dialogue: 0,0:09:41.18,0:09:41.99,Default,,0,0,0,,PlaybackDuration.
Dialogue: 0,0:09:42.81,0:09:43.87,Default,,0,0,0,,Like I mentioned earlier, you
Dialogue: 0,0:09:43.87,0:09:44.87,Default,,0,0,0,,should provide these keys so
Dialogue: 0,0:09:44.87,0:09:46.22,Default,,0,0,0,,that tvOS knows how long your
Dialogue: 0,0:09:46.22,0:09:47.93,Default,,0,0,0,,content is and where the user is
Dialogue: 0,0:09:47.93,0:09:49.28,Default,,0,0,0,,currently at within the content.
Dialogue: 0,0:09:50.00,0:09:51.37,Default,,0,0,0,,As various playback events occur
Dialogue: 0,0:09:51.37,0:09:52.07,Default,,0,0,0,,you should update the
Dialogue: 0,0:09:52.07,0:09:53.50,Default,,0,0,0,,ElapsedPlaybackTime to match
Dialogue: 0,0:09:53.50,0:09:54.74,Default,,0,0,0,,where the user currently is.
Dialogue: 0,0:09:55.61,0:09:56.00,Default,,0,0,0,,There's no
Dialogue: 0,0:09:56.00,0:09:57.54,Default,,0,0,0,,AVPlayerViewController for this
Dialogue: 0,0:09:57.54,0:09:59.49,Default,,0,0,0,,API on tvOS, but I can show you
Dialogue: 0,0:09:59.49,0:10:01.07,Default,,0,0,0,,what this metadata looks like in
Dialogue: 0,0:10:01.07,0:10:01.98,Default,,0,0,0,,the TV Remote app.
Dialogue: 0,0:10:02.73,0:10:03.82,Default,,0,0,0,,You can see where each property
Dialogue: 0,0:10:03.82,0:10:04.71,Default,,0,0,0,,is displayed onscreen.
Dialogue: 0,0:10:05.21,0:10:05.87,Default,,0,0,0,,These should look pretty
Dialogue: 0,0:10:05.87,0:10:07.23,Default,,0,0,0,,familiar compared to the AVKit
Dialogue: 0,0:10:07.23,0:10:07.51,Default,,0,0,0,,version.
Dialogue: 0,0:10:08.78,0:10:10.07,Default,,0,0,0,,Take note that in this version
Dialogue: 0,0:10:10.07,0:10:11.23,Default,,0,0,0,,though the scrubber bar is under
Dialogue: 0,0:10:11.23,0:10:11.75,Default,,0,0,0,,your control.
Dialogue: 0,0:10:12.55,0:10:14.41,Default,,0,0,0,,The ElapsedPlaybackTime and the
Dialogue: 0,0:10:14.41,0:10:16.57,Default,,0,0,0,,duration need to be provided by
Dialogue: 0,0:10:16.57,0:10:17.47,Default,,0,0,0,,your app to be displayed
Dialogue: 0,0:10:17.47,0:10:17.98,Default,,0,0,0,,correctly here.
Dialogue: 0,0:10:22.05,0:10:22.83,Default,,0,0,0,,All right, let's change gears a
Dialogue: 0,0:10:22.83,0:10:24.30,Default,,0,0,0,,bit now and talk about how your
Dialogue: 0,0:10:24.30,0:10:25.87,Default,,0,0,0,,app can handle external playback
Dialogue: 0,0:10:25.87,0:10:26.37,Default,,0,0,0,,commands.
Dialogue: 0,0:10:26.88,0:10:27.84,Default,,0,0,0,,Of course, your app will have
Dialogue: 0,0:10:27.84,0:10:29.00,Default,,0,0,0,,its own controls that the user
Dialogue: 0,0:10:29.00,0:10:30.22,Default,,0,0,0,,can interact with when your app
Dialogue: 0,0:10:30.22,0:10:31.79,Default,,0,0,0,,is displayed, but the user may
Dialogue: 0,0:10:31.79,0:10:33.11,Default,,0,0,0,,also want to control your app
Dialogue: 0,0:10:33.11,0:10:35.70,Default,,0,0,0,,from the TV Remote app on iOS or
Dialogue: 0,0:10:35.70,0:10:36.33,Default,,0,0,0,,if they're listening to
Dialogue: 0,0:10:36.33,0:10:37.69,Default,,0,0,0,,background audio from your app
Dialogue: 0,0:10:37.69,0:10:39.73,Default,,0,0,0,,on tvOS pressing the play pause
Dialogue: 0,0:10:39.73,0:10:41.29,Default,,0,0,0,,button on the Siri remote can
Dialogue: 0,0:10:41.29,0:10:42.62,Default,,0,0,0,,pause your app even while it's
Dialogue: 0,0:10:42.62,0:10:43.18,Default,,0,0,0,,in the background.
Dialogue: 0,0:10:43.87,0:10:44.75,Default,,0,0,0,,To support these kinds of
Dialogue: 0,0:10:44.75,0:10:46.19,Default,,0,0,0,,interactions you will need to
Dialogue: 0,0:10:46.19,0:10:47.36,Default,,0,0,0,,make sure your app can handle
Dialogue: 0,0:10:47.36,0:10:47.94,Default,,0,0,0,,these Remote Commands.
Dialogue: 0,0:10:50.05,0:10:50.78,Default,,0,0,0,,The way to do that is with an
Dialogue: 0,0:10:50.78,0:10:51.57,Default,,0,0,0,,API called
Dialogue: 0,0:10:51.57,0:10:52.71,Default,,0,0,0,,MPRemoteCommandCenter.
Dialogue: 0,0:10:53.58,0:10:54.57,Default,,0,0,0,,The way to do that is with an
Dialogue: 0,0:10:54.57,0:10:55.55,Default,,0,0,0,,API called
Dialogue: 0,0:10:55.61,0:10:56.65,Default,,0,0,0,,MPRemoteCommandCenter.
Dialogue: 0,0:10:57.29,0:10:58.62,Default,,0,0,0,,This is another singleton object
Dialogue: 0,0:10:58.62,0:11:00.01,Default,,0,0,0,,that has a property for each
Dialogue: 0,0:11:00.01,0:11:01.08,Default,,0,0,0,,different kind of command that
Dialogue: 0,0:11:01.08,0:11:02.32,Default,,0,0,0,,your app can choose to support.
Dialogue: 0,0:11:02.81,0:11:04.87,Default,,0,0,0,,For each command that you want
Dialogue: 0,0:11:04.87,0:11:06.78,Default,,0,0,0,,support you can register either
Dialogue: 0,0:11:06.78,0:11:07.98,Default,,0,0,0,,a target-action pair or a
Dialogue: 0,0:11:07.98,0:11:09.40,Default,,0,0,0,,callback block which will be
Dialogue: 0,0:11:09.40,0:11:10.38,Default,,0,0,0,,invoked when the command is
Dialogue: 0,0:11:10.38,0:11:10.74,Default,,0,0,0,,performed.
Dialogue: 0,0:11:11.30,0:11:13.25,Default,,0,0,0,,If you provide a target-action
Dialogue: 0,0:11:13.25,0:11:14.39,Default,,0,0,0,,or a block the command is
Dialogue: 0,0:11:14.39,0:11:15.40,Default,,0,0,0,,assumed to be supported.
Dialogue: 0,0:11:16.15,0:11:17.24,Default,,0,0,0,,If you want to provide a handler
Dialogue: 0,0:11:17.24,0:11:18.18,Default,,0,0,0,,for the command, but need to
Dialogue: 0,0:11:18.18,0:11:19.48,Default,,0,0,0,,temporarily indicate that it's
Dialogue: 0,0:11:19.48,0:11:21.24,Default,,0,0,0,,not available you can mark it as
Dialogue: 0,0:11:21.24,0:11:21.66,Default,,0,0,0,,disabled.
Dialogue: 0,0:11:21.95,0:11:24.07,Default,,0,0,0,,The method or block that you
Dialogue: 0,0:11:24.07,0:11:25.50,Default,,0,0,0,,provide must return an enum
Dialogue: 0,0:11:25.50,0:11:27.01,Default,,0,0,0,,value to indicate if your app
Dialogue: 0,0:11:27.01,0:11:28.43,Default,,0,0,0,,was able to successfully perform
Dialogue: 0,0:11:28.43,0:11:28.88,Default,,0,0,0,,the command.
Dialogue: 0,0:11:29.68,0:11:30.99,Default,,0,0,0,,The definition of success here
Dialogue: 0,0:11:30.99,0:11:31.59,Default,,0,0,0,,is pretty broad.
Dialogue: 0,0:11:32.07,0:11:33.20,Default,,0,0,0,,For example, if the user is
Dialogue: 0,0:11:33.20,0:11:34.18,Default,,0,0,0,,playing the last song in a
Dialogue: 0,0:11:34.18,0:11:35.72,Default,,0,0,0,,playlist and requests to skip to
Dialogue: 0,0:11:35.72,0:11:37.34,Default,,0,0,0,,the next track your app may
Dialogue: 0,0:11:37.34,0:11:38.80,Default,,0,0,0,,choose to simply end playback.
Dialogue: 0,0:11:39.27,0:11:40.43,Default,,0,0,0,,That would still be considered
Dialogue: 0,0:11:40.43,0:11:41.59,Default,,0,0,0,,successfully handling the
Dialogue: 0,0:11:41.59,0:11:42.95,Default,,0,0,0,,command so you should return the
Dialogue: 0,0:11:42.95,0:11:45.01,Default,,0,0,0,,success value in that case.
Dialogue: 0,0:11:47.06,0:11:48.09,Default,,0,0,0,,Some commands like play and
Dialogue: 0,0:11:48.09,0:11:49.05,Default,,0,0,0,,pause are pretty simple.
Dialogue: 0,0:11:49.32,0:11:50.62,Default,,0,0,0,,If the handler for the pause
Dialogue: 0,0:11:50.62,0:11:51.78,Default,,0,0,0,,command is invoked it's pretty
Dialogue: 0,0:11:51.78,0:11:52.91,Default,,0,0,0,,clear what your app needs to do.
Dialogue: 0,0:11:53.65,0:11:54.47,Default,,0,0,0,,But other commands are more
Dialogue: 0,0:11:54.47,0:11:56.18,Default,,0,0,0,,flexible and both accept
Dialogue: 0,0:11:56.18,0:11:57.83,Default,,0,0,0,,parameters from your app and can
Dialogue: 0,0:11:57.83,0:11:59.24,Default,,0,0,0,,provide more parameters back to
Dialogue: 0,0:11:59.24,0:11:59.81,Default,,0,0,0,,your handler.
Dialogue: 0,0:12:00.91,0:12:01.71,Default,,0,0,0,,For example, the
Dialogue: 0,0:12:01.71,0:12:03.70,Default,,0,0,0,,MPSkipIntervalCommand is used to
Dialogue: 0,0:12:03.70,0:12:05.24,Default,,0,0,0,,allow the user to skip forward
Dialogue: 0,0:12:05.24,0:12:06.51,Default,,0,0,0,,or backward by several seconds.
Dialogue: 0,0:12:07.37,0:12:08.21,Default,,0,0,0,,Your app can express a
Dialogue: 0,0:12:08.21,0:12:09.52,Default,,0,0,0,,preference for how many seconds
Dialogue: 0,0:12:09.52,0:12:10.31,Default,,0,0,0,,the user should be allowed to
Dialogue: 0,0:12:10.31,0:12:10.65,Default,,0,0,0,,skip.
Dialogue: 0,0:12:11.36,0:12:12.63,Default,,0,0,0,,The skip command object allows
Dialogue: 0,0:12:12.63,0:12:13.34,Default,,0,0,0,,you to configure that
Dialogue: 0,0:12:13.34,0:12:13.76,Default,,0,0,0,,preference.
Dialogue: 0,0:12:14.08,0:12:16.33,Default,,0,0,0,,When the user actually performs
Dialogue: 0,0:12:16.33,0:12:17.78,Default,,0,0,0,,the skip command your handler
Dialogue: 0,0:12:17.78,0:12:18.94,Default,,0,0,0,,will be invoked with an object
Dialogue: 0,0:12:18.94,0:12:19.42,Default,,0,0,0,,parameter.
Dialogue: 0,0:12:19.92,0:12:21.36,Default,,0,0,0,,That object is of the type
Dialogue: 0,0:12:21.36,0:12:23.40,Default,,0,0,0,,MPSkipIntervalCommandEvent and
Dialogue: 0,0:12:23.40,0:12:25.05,Default,,0,0,0,,it has an interval property that
Dialogue: 0,0:12:25.05,0:12:26.23,Default,,0,0,0,,tells your app how many seconds
Dialogue: 0,0:12:26.23,0:12:26.70,Default,,0,0,0,,you should skip.
Dialogue: 0,0:12:27.28,0:12:28.68,Default,,0,0,0,,And be careful this may not be
Dialogue: 0,0:12:28.68,0:12:30.13,Default,,0,0,0,,the same as the skip preference
Dialogue: 0,0:12:30.13,0:12:30.99,Default,,0,0,0,,you provided earlier.
Dialogue: 0,0:12:32.13,0:12:33.38,Default,,0,0,0,,Let's look at an example.
Dialogue: 0,0:12:33.99,0:12:34.82,Default,,0,0,0,,Here's how an app might
Dialogue: 0,0:12:34.82,0:12:35.96,Default,,0,0,0,,implement the skip backward
Dialogue: 0,0:12:35.96,0:12:36.32,Default,,0,0,0,,command.
Dialogue: 0,0:12:37.82,0:12:38.84,Default,,0,0,0,,You can see here that on the
Dialogue: 0,0:12:38.84,0:12:40.27,Default,,0,0,0,,first line I would prefer that
Dialogue: 0,0:12:40.27,0:12:41.62,Default,,0,0,0,,the user skips backward by 10
Dialogue: 0,0:12:41.62,0:12:43.33,Default,,0,0,0,,second intervals so I'm going to
Dialogue: 0,0:12:43.33,0:12:44.82,Default,,0,0,0,,assign the preferred intervals
Dialogue: 0,0:12:44.82,0:12:46.14,Default,,0,0,0,,property on the
Dialogue: 0,0:12:46.14,0:12:47.64,Default,,0,0,0,,SkipBackwardCommand object.
Dialogue: 0,0:12:48.01,0:12:50.74,Default,,0,0,0,,Then I'm going to provide my
Dialogue: 0,0:12:50.74,0:12:51.37,Default,,0,0,0,,handler block.
Dialogue: 0,0:12:51.91,0:12:53.17,Default,,0,0,0,,Now technically every command
Dialogue: 0,0:12:53.17,0:12:54.43,Default,,0,0,0,,handler receives the generic
Dialogue: 0,0:12:54.43,0:12:56.75,Default,,0,0,0,,type MPRemoteCommandEvent as the
Dialogue: 0,0:12:56.75,0:12:58.78,Default,,0,0,0,,parameter, but I need to cast it
Dialogue: 0,0:12:58.78,0:13:00.70,Default,,0,0,0,,to an MPSkipIntervalCommandEvent
Dialogue: 0,0:13:00.70,0:13:01.35,Default,,0,0,0,,so that I can get to its
Dialogue: 0,0:13:01.35,0:13:01.97,Default,,0,0,0,,interval property.
Dialogue: 0,0:13:05.28,0:13:06.20,Default,,0,0,0,,Then I'm going to actually
Dialogue: 0,0:13:06.20,0:13:06.78,Default,,0,0,0,,perform the command.
Dialogue: 0,0:13:07.32,0:13:08.42,Default,,0,0,0,,In this sample, I'm playing my
Dialogue: 0,0:13:08.42,0:13:09.63,Default,,0,0,0,,content with an AVPlayer.
Dialogue: 0,0:13:10.29,0:13:11.76,Default,,0,0,0,,Since AVPlayer expresses its
Dialogue: 0,0:13:11.76,0:13:13.74,Default,,0,0,0,,time using CMTime structs that's
Dialogue: 0,0:13:13.74,0:13:14.43,Default,,0,0,0,,how I'm going to need to
Dialogue: 0,0:13:14.43,0:13:15.58,Default,,0,0,0,,calculate my new playback
Dialogue: 0,0:13:15.58,0:13:15.93,Default,,0,0,0,,position.
Dialogue: 0,0:13:17.23,0:13:18.14,Default,,0,0,0,,You can see here that I'm
Dialogue: 0,0:13:18.14,0:13:18.98,Default,,0,0,0,,getting the player's current
Dialogue: 0,0:13:18.98,0:13:20.99,Default,,0,0,0,,composition then creating a new
Dialogue: 0,0:13:20.99,0:13:22.52,Default,,0,0,0,,CMTime struct with the skip
Dialogue: 0,0:13:22.52,0:13:22.92,Default,,0,0,0,,interval.
Dialogue: 0,0:13:23.95,0:13:25.14,Default,,0,0,0,,Finally, I'm subtracting that
Dialogue: 0,0:13:25.14,0:13:26.34,Default,,0,0,0,,interval from the current time.
Dialogue: 0,0:13:27.49,0:13:29.33,Default,,0,0,0,,I ask the player to seek to that
Dialogue: 0,0:13:29.33,0:13:30.78,Default,,0,0,0,,time and then return successful
Dialogue: 0,0:13:30.78,0:13:31.57,Default,,0,0,0,,from the command handler.
Dialogue: 0,0:13:32.07,0:13:34.38,Default,,0,0,0,,When the player finishes seeking
Dialogue: 0,0:13:34.38,0:13:36.06,Default,,0,0,0,,to the new time my completion
Dialogue: 0,0:13:36.06,0:13:37.30,Default,,0,0,0,,handler will be invoked and
Dialogue: 0,0:13:37.30,0:13:38.23,Default,,0,0,0,,that's where I'm going to update
Dialogue: 0,0:13:38.23,0:13:39.02,Default,,0,0,0,,my Now Playing info.
Dialogue: 0,0:13:39.74,0:13:41.15,Default,,0,0,0,,Remember, if we modify playback
Dialogue: 0,0:13:41.15,0:13:42.58,Default,,0,0,0,,state like seeking to a new time
Dialogue: 0,0:13:42.91,0:13:44.04,Default,,0,0,0,,we need to publish new Now
Dialogue: 0,0:13:44.04,0:13:45.45,Default,,0,0,0,,Playing info so we can update
Dialogue: 0,0:13:45.45,0:13:46.41,Default,,0,0,0,,the elapsed playback time.
Dialogue: 0,0:13:47.31,0:13:48.34,Default,,0,0,0,,Here I'm calling a function
Dialogue: 0,0:13:48.34,0:13:49.83,Default,,0,0,0,,called updateNowPlaying which
Dialogue: 0,0:13:49.83,0:13:51.48,Default,,0,0,0,,I'll show you on this next
Dialogue: 0,0:13:51.98,0:13:52.11,Default,,0,0,0,,slide.
Dialogue: 0,0:13:53.28,0:13:54.25,Default,,0,0,0,,Here you can see how I'm going
Dialogue: 0,0:13:54.25,0:13:55.42,Default,,0,0,0,,to update my Now Playing info.
Dialogue: 0,0:13:55.81,0:13:56.85,Default,,0,0,0,,This is basically the same as
Dialogue: 0,0:13:56.85,0:13:57.91,Default,,0,0,0,,the example I showed you at the
Dialogue: 0,0:13:57.91,0:13:59.36,Default,,0,0,0,,beginning of this section, but
Dialogue: 0,0:13:59.36,0:14:00.71,Default,,0,0,0,,want to call out one specific
Dialogue: 0,0:14:00.71,0:14:01.05,Default,,0,0,0,,detail.
Dialogue: 0,0:14:01.97,0:14:03.29,Default,,0,0,0,,Here you can see that I'm using
Dialogue: 0,0:14:03.29,0:14:04.83,Default,,0,0,0,,the AVPlayer's current time
Dialogue: 0,0:14:04.83,0:14:06.67,Default,,0,0,0,,property in order to provide an
Dialogue: 0,0:14:06.74,0:14:08.25,Default,,0,0,0,,accurate value for the elapsed
Dialogue: 0,0:14:08.25,0:14:09.17,Default,,0,0,0,,playback time property.
Dialogue: 0,0:14:10.08,0:14:11.63,Default,,0,0,0,,In this case, since AVPlayer is
Dialogue: 0,0:14:11.63,0:14:13.80,Default,,0,0,0,,going to return a CMTime, but
Dialogue: 0,0:14:13.80,0:14:15.41,Default,,0,0,0,,MPNowPlayingInfoCenter requires
Dialogue: 0,0:14:15.41,0:14:16.59,Default,,0,0,0,,a floating-point value, that's
Dialogue: 0,0:14:16.65,0:14:18.33,Default,,0,0,0,,the number of elapsed seconds, I
Dialogue: 0,0:14:18.33,0:14:20.51,Default,,0,0,0,,need to use the CMTimeGetSeconds
Dialogue: 0,0:14:20.51,0:14:21.77,Default,,0,0,0,,function to convert the value.
Dialogue: 0,0:14:22.82,0:14:23.81,Default,,0,0,0,,And that's all there is to
Dialogue: 0,0:14:23.81,0:14:25.06,Default,,0,0,0,,providing a great playback
Dialogue: 0,0:14:25.06,0:14:26.34,Default,,0,0,0,,experience with Remote Commands
Dialogue: 0,0:14:26.34,0:14:27.36,Default,,0,0,0,,and Now Playing information.
Dialogue: 0,0:14:28.45,0:14:29.46,Default,,0,0,0,,For more information, you can
Dialogue: 0,0:14:29.46,0:14:31.04,Default,,0,0,0,,visit the URL shown here to find
Dialogue: 0,0:14:31.04,0:14:32.20,Default,,0,0,0,,links to documentation and
Dialogue: 0,0:14:32.20,0:14:33.01,Default,,0,0,0,,related sessions.
Dialogue: 0,0:14:33.42,0:14:33.98,Default,,0,0,0,,Thanks for watching.
