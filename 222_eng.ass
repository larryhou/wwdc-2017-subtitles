[Script Info]
; Script generated by FFmpeg/Lavc57.89.100
ScriptType: v4.00+
PlayResX: 384
PlayResY: 288

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,16,&Hffffff,&Hffffff,&H0,&H0,0,0,0,0,100,100,0,0,1,1,0,2,10,10,10,0

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:22.25,0:00:24.25,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:00:24.49,0:00:27.88,Default,,0,0,0,,>> Hi, everyone.
Dialogue: 0,0:00:27.88,0:00:29.00,Default,,0,0,0,,I'm Donna Tom, and I'm a TextKit
Dialogue: 0,0:00:29.00,0:00:29.40,Default,,0,0,0,,engineer.
Dialogue: 0,0:00:30.05,0:00:31.88,Default,,0,0,0,,And today, my colleagues AppKit
Dialogue: 0,0:00:31.88,0:00:34.05,Default,,0,0,0,,engineers Jeff Nadeau and Taylor
Dialogue: 0,0:00:34.05,0:00:35.01,Default,,0,0,0,,Kelly will be joining me and
Dialogue: 0,0:00:35.01,0:00:36.61,Default,,0,0,0,,we're all really excited to talk
Dialogue: 0,0:00:36.61,0:00:37.75,Default,,0,0,0,,to you about advanced Touch Bar
Dialogue: 0,0:00:37.75,0:00:38.24,Default,,0,0,0,,concepts.
Dialogue: 0,0:00:39.53,0:00:41.06,Default,,0,0,0,,Now, hopefully most of you got a
Dialogue: 0,0:00:41.06,0:00:42.23,Default,,0,0,0,,chance to watch or attend the
Dialogue: 0,0:00:42.23,0:00:43.23,Default,,0,0,0,,Fundamental session earlier
Dialogue: 0,0:00:43.23,0:00:43.54,Default,,0,0,0,,today.
Dialogue: 0,0:00:44.13,0:00:45.29,Default,,0,0,0,,If you're following along at
Dialogue: 0,0:00:45.29,0:00:46.87,Default,,0,0,0,,home, go watch that now.
Dialogue: 0,0:00:47.69,0:00:48.83,Default,,0,0,0,,If you're here, please stay.
Dialogue: 0,0:00:51.06,0:00:52.12,Default,,0,0,0,,It's a really great talk, I do
Dialogue: 0,0:00:52.12,0:00:53.20,Default,,0,0,0,,recommend you go and watch it
Dialogue: 0,0:00:53.20,0:00:54.94,Default,,0,0,0,,later if you've got the time.
Dialogue: 0,0:00:55.20,0:00:56.67,Default,,0,0,0,,In it you've learned about how
Dialogue: 0,0:00:56.67,0:00:57.93,Default,,0,0,0,,to create your own NSTouchBars
Dialogue: 0,0:00:57.93,0:00:59.07,Default,,0,0,0,,and how to use their input
Dialogue: 0,0:00:59.07,0:01:00.45,Default,,0,0,0,,capabilities to enhance the user
Dialogue: 0,0:01:00.45,0:01:03.07,Default,,0,0,0,,experience in your app.
Dialogue: 0,0:01:03.07,0:01:04.26,Default,,0,0,0,,And you can easily adopt Touch
Dialogue: 0,0:01:04.26,0:01:05.50,Default,,0,0,0,,Bar by using just what you
Dialogue: 0,0:01:05.50,0:01:06.40,Default,,0,0,0,,learned in that fundamental
Dialogue: 0,0:01:06.43,0:01:06.79,Default,,0,0,0,,session.
Dialogue: 0,0:01:07.35,0:01:09.39,Default,,0,0,0,,But you're probably here because
Dialogue: 0,0:01:09.39,0:01:10.69,Default,,0,0,0,,you want something more to give
Dialogue: 0,0:01:10.69,0:01:11.89,Default,,0,0,0,,your app that extra edge.
Dialogue: 0,0:01:12.39,0:01:13.60,Default,,0,0,0,,Maybe you'd like to customize
Dialogue: 0,0:01:13.60,0:01:14.72,Default,,0,0,0,,the standard bars offered by
Dialogue: 0,0:01:14.72,0:01:16.21,Default,,0,0,0,,Touch Controls like the Mail
Dialogue: 0,0:01:16.21,0:01:17.51,Default,,0,0,0,,app's email Autocomplete item.
Dialogue: 0,0:01:18.63,0:01:19.93,Default,,0,0,0,,Or maybe you'd like to add a
Dialogue: 0,0:01:19.93,0:01:21.42,Default,,0,0,0,,Scrubber to your app so the user
Dialogue: 0,0:01:21.42,0:01:22.52,Default,,0,0,0,,can quickly scroll through and
Dialogue: 0,0:01:22.52,0:01:24.21,Default,,0,0,0,,select content like the Calendar
Dialogue: 0,0:01:24.21,0:01:24.83,Default,,0,0,0,,date selector.
Dialogue: 0,0:01:26.04,0:01:27.61,Default,,0,0,0,,Or maybe, you'd even like to add
Dialogue: 0,0:01:27.67,0:01:29.17,Default,,0,0,0,,your own completely custom
Dialogue: 0,0:01:29.17,0:01:30.83,Default,,0,0,0,,control like the system color
Dialogue: 0,0:01:30.83,0:01:31.10,Default,,0,0,0,,picker.
Dialogue: 0,0:01:31.99,0:01:33.45,Default,,0,0,0,,Now, in this session, we are
Dialogue: 0,0:01:33.45,0:01:34.44,Default,,0,0,0,,going to show you ways to build
Dialogue: 0,0:01:34.44,0:01:35.14,Default,,0,0,0,,all of these things.
Dialogue: 0,0:01:35.44,0:01:36.87,Default,,0,0,0,,We'll dive deep into techniques
Dialogue: 0,0:01:36.87,0:01:38.34,Default,,0,0,0,,and best practices for
Dialogue: 0,0:01:38.34,0:01:39.49,Default,,0,0,0,,customizing the standard
Dialogue: 0,0:01:39.49,0:01:40.88,Default,,0,0,0,,components as well as building
Dialogue: 0,0:01:40.88,0:01:42.40,Default,,0,0,0,,your own custom controls giving
Dialogue: 0,0:01:42.40,0:01:43.85,Default,,0,0,0,,you the power and flexibility to
Dialogue: 0,0:01:43.85,0:01:45.06,Default,,0,0,0,,build rich experiences for your
Dialogue: 0,0:01:45.06,0:01:45.42,Default,,0,0,0,,users.
Dialogue: 0,0:01:46.13,0:01:49.34,Default,,0,0,0,,So, first up, is to customizing
Dialogue: 0,0:01:49.34,0:01:49.83,Default,,0,0,0,,TextBars.
Dialogue: 0,0:01:49.83,0:01:52.71,Default,,0,0,0,,We're going to start by going
Dialogue: 0,0:01:52.71,0:01:54.85,Default,,0,0,0,,over the standard items, then
Dialogue: 0,0:01:55.45,0:01:56.58,Default,,0,0,0,,we'll talk about how to disable
Dialogue: 0,0:01:56.58,0:01:57.74,Default,,0,0,0,,the standard items, and how to
Dialogue: 0,0:01:57.74,0:01:58.91,Default,,0,0,0,,add your own custom items.
Dialogue: 0,0:01:59.98,0:02:01.15,Default,,0,0,0,,And finally we'll learn about
Dialogue: 0,0:02:01.15,0:02:02.13,Default,,0,0,0,,the Candidate List item and
Dialogue: 0,0:02:02.48,0:02:03.42,Default,,0,0,0,,we'll take a look at how to
Dialogue: 0,0:02:03.42,0:02:04.89,Default,,0,0,0,,build an email Autocomplete item
Dialogue: 0,0:02:04.98,0:02:06.04,Default,,0,0,0,,similar to what you'd see in the
Dialogue: 0,0:02:06.04,0:02:06.45,Default,,0,0,0,,Mail app.
Dialogue: 0,0:02:11.11,0:02:11.86,Default,,0,0,0,,So, let's get started with
Dialogue: 0,0:02:11.95,0:02:12.46,Default,,0,0,0,,standard items.
Dialogue: 0,0:02:13.66,0:02:14.73,Default,,0,0,0,,Now, we built a lot of great
Dialogue: 0,0:02:14.73,0:02:15.94,Default,,0,0,0,,functionality into the standard
Dialogue: 0,0:02:15.94,0:02:16.44,Default,,0,0,0,,TextBars.
Dialogue: 0,0:02:16.76,0:02:18.28,Default,,0,0,0,,If you're using a TextView or a
Dialogue: 0,0:02:18.28,0:02:19.56,Default,,0,0,0,,TextField, guess what?
Dialogue: 0,0:02:19.99,0:02:21.14,Default,,0,0,0,,These components support
Dialogue: 0,0:02:21.14,0:02:22.59,Default,,0,0,0,,NSTouchBar right out of the box.
Dialogue: 0,0:02:23.84,0:02:24.97,Default,,0,0,0,,Now, when a TextView or a
Dialogue: 0,0:02:24.97,0:02:26.84,Default,,0,0,0,,TextField becomes the first
Dialogue: 0,0:02:26.84,0:02:27.94,Default,,0,0,0,,responder on your app, it'll
Dialogue: 0,0:02:27.94,0:02:29.08,Default,,0,0,0,,automatically get a bar
Dialogue: 0,0:02:29.38,0:02:30.50,Default,,0,0,0,,populated with items that are
Dialogue: 0,0:02:30.50,0:02:31.60,Default,,0,0,0,,driven by the properties and
Dialogue: 0,0:02:31.60,0:02:32.54,Default,,0,0,0,,content of the control.
Dialogue: 0,0:02:33.17,0:02:34.79,Default,,0,0,0,,So, by default, here's what you
Dialogue: 0,0:02:34.92,0:02:35.00,Default,,0,0,0,,get.
Dialogue: 0,0:02:36.96,0:02:38.61,Default,,0,0,0,,QuickType suggestions, which can
Dialogue: 0,0:02:38.61,0:02:39.85,Default,,0,0,0,,be expanded and collapsed using
Dialogue: 0,0:02:39.85,0:02:40.83,Default,,0,0,0,,that little angle bracket on the
Dialogue: 0,0:02:40.83,0:02:41.04,Default,,0,0,0,,left.
Dialogue: 0,0:02:42.03,0:02:43.34,Default,,0,0,0,,Top bar shows what it looks like
Dialogue: 0,0:02:43.34,0:02:44.49,Default,,0,0,0,,when it's collapsed and the
Dialogue: 0,0:02:44.49,0:02:45.75,Default,,0,0,0,,bottom bar shows what it looks
Dialogue: 0,0:02:45.75,0:02:48.23,Default,,0,0,0,,like when it's expanded.
Dialogue: 0,0:02:48.23,0:02:49.51,Default,,0,0,0,,You'll also get a character
Dialogue: 0,0:02:49.51,0:02:50.72,Default,,0,0,0,,picker, for all those great
Dialogue: 0,0:02:50.72,0:02:51.19,Default,,0,0,0,,emojis.
Dialogue: 0,0:02:52.44,0:02:54.07,Default,,0,0,0,,And if rich text is enabled,
Dialogue: 0,0:02:54.44,0:02:56.76,Default,,0,0,0,,you'll get a color picker,
Dialogue: 0,0:02:57.50,0:03:00.37,Default,,0,0,0,,formatting controls, and
Dialogue: 0,0:03:01.04,0:03:02.07,Default,,0,0,0,,alignment and list controls.
Dialogue: 0,0:03:02.96,0:03:04.29,Default,,0,0,0,,And you get all of this for free
Dialogue: 0,0:03:04.72,0:03:05.98,Default,,0,0,0,,when you use NSTextView or
Dialogue: 0,0:03:05.98,0:03:06.66,Default,,0,0,0,,NSTextField.
Dialogue: 0,0:03:06.86,0:03:08.14,Default,,0,0,0,,You don't have to write a single
Dialogue: 0,0:03:08.14,0:03:08.81,Default,,0,0,0,,line of code.
Dialogue: 0,0:03:09.38,0:03:11.75,Default,,0,0,0,,But, how does all of that
Dialogue: 0,0:03:11.75,0:03:12.39,Default,,0,0,0,,actually work?
Dialogue: 0,0:03:13.20,0:03:16.35,Default,,0,0,0,,Well, NSTextView and NSTouchBar
Dialogue: 0,0:03:16.35,0:03:17.74,Default,,0,0,0,,are very tightly integrated in
Dialogue: 0,0:03:17.74,0:03:18.89,Default,,0,0,0,,order to be provide all of that
Dialogue: 0,0:03:18.89,0:03:19.65,Default,,0,0,0,,great functionality.
Dialogue: 0,0:03:20.69,0:03:22.50,Default,,0,0,0,,Since the items in the bar may
Dialogue: 0,0:03:22.50,0:03:23.80,Default,,0,0,0,,need to change depending on the
Dialogue: 0,0:03:23.80,0:03:24.95,Default,,0,0,0,,contents of the entered text,
Dialogue: 0,0:03:25.48,0:03:27.52,Default,,0,0,0,,NSTextView actually makes itself
Dialogue: 0,0:03:27.83,0:03:28.80,Default,,0,0,0,,the delegate of its own
Dialogue: 0,0:03:29.26,0:03:30.25,Default,,0,0,0,,NSTouchBar instance.
Dialogue: 0,0:03:31.24,0:03:32.15,Default,,0,0,0,,And if you're using an
Dialogue: 0,0:03:32.15,0:03:33.94,Default,,0,0,0,,NSTextField, remember that an
Dialogue: 0,0:03:33.94,0:03:35.49,Default,,0,0,0,,instance of NSTextField serves
Dialogue: 0,0:03:35.49,0:03:36.52,Default,,0,0,0,,as the field editor for the
Dialogue: 0,0:03:36.52,0:03:37.66,Default,,0,0,0,,currently active TextField.
Dialogue: 0,0:03:38.58,0:03:39.90,Default,,0,0,0,,And so when you place items in
Dialogue: 0,0:03:39.90,0:03:41.70,Default,,0,0,0,,the TextField's bar, that's not
Dialogue: 0,0:03:41.70,0:03:43.27,Default,,0,0,0,,the same instance of NSTouchBar
Dialogue: 0,0:03:43.35,0:03:44.19,Default,,0,0,0,,that contains the standard
Dialogue: 0,0:03:44.19,0:03:44.66,Default,,0,0,0,,items.
Dialogue: 0,0:03:45.80,0:03:47.23,Default,,0,0,0,,The field editor's bar will be
Dialogue: 0,0:03:47.23,0:03:47.93,Default,,0,0,0,,the one that contains the
Dialogue: 0,0:03:47.93,0:03:48.49,Default,,0,0,0,,standard items.
Dialogue: 0,0:03:49.17,0:03:51.24,Default,,0,0,0,,And while we're on the subject
Dialogue: 0,0:03:51.24,0:03:53.20,Default,,0,0,0,,of the field editor, remember
Dialogue: 0,0:03:53.20,0:03:54.52,Default,,0,0,0,,that the field editor is shared
Dialogue: 0,0:03:54.52,0:03:55.58,Default,,0,0,0,,among all text fields in a
Dialogue: 0,0:03:55.58,0:03:57.38,Default,,0,0,0,,window, so if you make changes
Dialogue: 0,0:03:57.56,0:03:58.64,Default,,0,0,0,,to that field editor's bar,
Dialogue: 0,0:03:59.03,0:04:00.38,Default,,0,0,0,,those changes are going to
Dialogue: 0,0:04:00.66,0:04:01.88,Default,,0,0,0,,affect all the text fields in
Dialogue: 0,0:04:01.88,0:04:02.27,Default,,0,0,0,,the window.
Dialogue: 0,0:04:02.58,0:04:03.79,Default,,0,0,0,,And this is an important concept
Dialogue: 0,0:04:03.79,0:04:05.04,Default,,0,0,0,,to keep in mind when working
Dialogue: 0,0:04:05.04,0:04:05.68,Default,,0,0,0,,with text fields.
Dialogue: 0,0:04:05.79,0:04:08.52,Default,,0,0,0,,So, now that we understand a
Dialogue: 0,0:04:08.62,0:04:09.98,Default,,0,0,0,,little bit more about how these
Dialogue: 0,0:04:09.98,0:04:11.62,Default,,0,0,0,,components work together, let's
Dialogue: 0,0:04:11.62,0:04:12.69,Default,,0,0,0,,talk about how to disable the
Dialogue: 0,0:04:12.69,0:04:13.23,Default,,0,0,0,,standard items.
Dialogue: 0,0:04:13.23,0:04:15.46,Default,,0,0,0,,It's actually pretty simple.
Dialogue: 0,0:04:15.92,0:04:17.09,Default,,0,0,0,,All you have to do is set the
Dialogue: 0,0:04:17.09,0:04:18.55,Default,,0,0,0,,corresponding property on your
Dialogue: 0,0:04:18.55,0:04:19.75,Default,,0,0,0,,textView or your textField.
Dialogue: 0,0:04:19.75,0:04:21.62,Default,,0,0,0,,And when you set these
Dialogue: 0,0:04:21.62,0:04:23.30,Default,,0,0,0,,properties, the textView will
Dialogue: 0,0:04:23.30,0:04:25.22,Default,,0,0,0,,automatically get notified that
Dialogue: 0,0:04:25.22,0:04:26.60,Default,,0,0,0,,its bar items need updating, so
Dialogue: 0,0:04:26.60,0:04:27.61,Default,,0,0,0,,there's nothing else you have to
Dialogue: 0,0:04:27.61,0:04:27.95,Default,,0,0,0,,do.
Dialogue: 0,0:04:29.57,0:04:30.58,Default,,0,0,0,,QuickType and the character
Dialogue: 0,0:04:30.58,0:04:31.67,Default,,0,0,0,,picker are each controlled by
Dialogue: 0,0:04:31.67,0:04:32.34,Default,,0,0,0,,their own property.
Dialogue: 0,0:04:33.49,0:04:34.81,Default,,0,0,0,,But the rest of the standard
Dialogue: 0,0:04:34.81,0:04:36.47,Default,,0,0,0,,items are text styling controls
Dialogue: 0,0:04:37.30,0:04:39.20,Default,,0,0,0,,and these will be present if
Dialogue: 0,0:04:39.44,0:04:42.03,Default,,0,0,0,,rich text is enabled on your
Dialogue: 0,0:04:42.03,0:04:43.46,Default,,0,0,0,,text field, and if it's not,
Dialogue: 0,0:04:43.46,0:04:46.08,Default,,0,0,0,,then you won't get those items.
Dialogue: 0,0:04:46.26,0:04:47.50,Default,,0,0,0,,Now, before you go and disable
Dialogue: 0,0:04:47.50,0:04:48.77,Default,,0,0,0,,QuickType on all your text
Dialogue: 0,0:04:48.77,0:04:50.49,Default,,0,0,0,,controls, please consider your
Dialogue: 0,0:04:50.49,0:04:50.88,Default,,0,0,0,,users.
Dialogue: 0,0:04:51.58,0:04:54.47,Default,,0,0,0,,I know some of you might not
Dialogue: 0,0:04:54.56,0:04:55.90,Default,,0,0,0,,like to use the QuickType item,
Dialogue: 0,0:04:56.36,0:04:57.78,Default,,0,0,0,,but I'd like to emphasize that
Dialogue: 0,0:04:57.78,0:04:59.15,Default,,0,0,0,,your users might not share your
Dialogue: 0,0:04:59.15,0:04:59.63,Default,,0,0,0,,preferences.
Dialogue: 0,0:05:00.35,0:05:02.69,Default,,0,0,0,,In fact, your users can disable
Dialogue: 0,0:05:02.87,0:05:04.59,Default,,0,0,0,,QuickType suggestions for
Dialogue: 0,0:05:04.73,0:05:05.64,Default,,0,0,0,,themselves
Dialogue: 0,0:05:05.75,0:05:06.55,Default,,0,0,0,,either through the System
Dialogue: 0,0:05:06.55,0:05:08.07,Default,,0,0,0,,Preferences pane as shown here,
Dialogue: 0,0:05:08.35,0:05:09.88,Default,,0,0,0,,or by customizing their Touch
Dialogue: 0,0:05:09.88,0:05:10.04,Default,,0,0,0,,Bar.
Dialogue: 0,0:05:10.54,0:05:11.78,Default,,0,0,0,,So, please, consider leaving
Dialogue: 0,0:05:11.78,0:05:13.07,Default,,0,0,0,,QuickType enabled and allowing
Dialogue: 0,0:05:13.07,0:05:14.40,Default,,0,0,0,,your users to make this decision
Dialogue: 0,0:05:14.40,0:05:14.97,Default,,0,0,0,,for themselves.
Dialogue: 0,0:05:17.58,0:05:18.25,Default,,0,0,0,,So, now that we know how to
Dialogue: 0,0:05:18.25,0:05:19.39,Default,,0,0,0,,disable the standard items,
Dialogue: 0,0:05:19.64,0:05:20.81,Default,,0,0,0,,let's talk about how to add your
Dialogue: 0,0:05:20.81,0:05:21.55,Default,,0,0,0,,own custom items.
Dialogue: 0,0:05:22.21,0:05:25.03,Default,,0,0,0,,So, here are a couple examples
Dialogue: 0,0:05:25.03,0:05:26.04,Default,,0,0,0,,of items that have been added
Dialogue: 0,0:05:26.04,0:05:27.74,Default,,0,0,0,,alongside the standard items in
Dialogue: 0,0:05:27.74,0:05:28.12,Default,,0,0,0,,a TextBar.
Dialogue: 0,0:05:29.31,0:05:30.42,Default,,0,0,0,,The bar on the top might look
Dialogue: 0,0:05:30.42,0:05:31.33,Default,,0,0,0,,familiar if you've seen the
Dialogue: 0,0:05:31.33,0:05:32.09,Default,,0,0,0,,Fundamentals talk.
Dialogue: 0,0:05:32.59,0:05:33.96,Default,,0,0,0,,It has the Send Mail button
Dialogue: 0,0:05:33.96,0:05:35.02,Default,,0,0,0,,placed all the way on the left.
Dialogue: 0,0:05:36.09,0:05:37.53,Default,,0,0,0,,The bottom bar has a Select All
Dialogue: 0,0:05:37.53,0:05:38.66,Default,,0,0,0,,button placed just to the right
Dialogue: 0,0:05:38.66,0:05:39.43,Default,,0,0,0,,of the character picker.
Dialogue: 0,0:05:40.26,0:05:41.90,Default,,0,0,0,,So, how do I go about adding
Dialogue: 0,0:05:41.90,0:05:43.25,Default,,0,0,0,,buttons like these to my
Dialogue: 0,0:05:43.46,0:05:43.66,Default,,0,0,0,,TextBar?
Dialogue: 0,0:05:45.47,0:05:46.62,Default,,0,0,0,,Well, you might be tempted to
Dialogue: 0,0:05:46.62,0:05:47.66,Default,,0,0,0,,put something like this in
Dialogue: 0,0:05:47.66,0:05:48.23,Default,,0,0,0,,ViewDidLoad.
Dialogue: 0,0:05:49.44,0:05:50.70,Default,,0,0,0,,Grab your textField's Touch bar,
Dialogue: 0,0:05:51.27,0:05:52.93,Default,,0,0,0,,append your new button to the
Dialogue: 0,0:05:52.93,0:05:54.15,Default,,0,0,0,,defaultItemIdentifiers and
Dialogue: 0,0:05:54.84,0:05:55.51,Default,,0,0,0,,that's it, right?
Dialogue: 0,0:05:56.73,0:05:59.09,Default,,0,0,0,,No. Please don't do this.
Dialogue: 0,0:05:59.09,0:06:00.69,Default,,0,0,0,,You're going to have a bad time
Dialogue: 0,0:06:00.69,0:06:00.88,Default,,0,0,0,,guys.
Dialogue: 0,0:06:00.88,0:06:03.59,Default,,0,0,0,,And why? It's because the text
Dialogue: 0,0:06:03.59,0:06:06.04,Default,,0,0,0,,view needs to be able to reset
Dialogue: 0,0:06:06.04,0:06:07.29,Default,,0,0,0,,its bar items based on the
Dialogue: 0,0:06:07.29,0:06:08.27,Default,,0,0,0,,current configuration.
Dialogue: 0,0:06:08.84,0:06:10.38,Default,,0,0,0,,And so here's what's going to
Dialogue: 0,0:06:10.38,0:06:10.55,Default,,0,0,0,,happen.
Dialogue: 0,0:06:10.55,0:06:12.70,Default,,0,0,0,,You're going to just have a bar
Dialogue: 0,0:06:12.70,0:06:13.67,Default,,0,0,0,,that looks something like this
Dialogue: 0,0:06:13.67,0:06:15.15,Default,,0,0,0,,after you add your new button,
Dialogue: 0,0:06:15.15,0:06:15.97,Default,,0,0,0,,which is just as you would have
Dialogue: 0,0:06:15.97,0:06:16.25,Default,,0,0,0,,expect.
Dialogue: 0,0:06:17.13,0:06:19.06,Default,,0,0,0,,But, if you the user disables
Dialogue: 0,0:06:19.06,0:06:20.12,Default,,0,0,0,,rich text while your app is
Dialogue: 0,0:06:20.12,0:06:22.48,Default,,0,0,0,,running, that text view will get
Dialogue: 0,0:06:22.48,0:06:23.75,Default,,0,0,0,,notified and it's going to need
Dialogue: 0,0:06:23.98,0:06:24.96,Default,,0,0,0,,to reset its bar items.
Dialogue: 0,0:06:25.01,0:06:26.72,Default,,0,0,0,,And it's going to do this by
Dialogue: 0,0:06:26.72,0:06:28.08,Default,,0,0,0,,removing all the existing items
Dialogue: 0,0:06:28.11,0:06:29.58,Default,,0,0,0,,and then just recreating the
Dialogue: 0,0:06:29.58,0:06:30.72,Default,,0,0,0,,ones it needs based on the
Dialogue: 0,0:06:30.72,0:06:31.59,Default,,0,0,0,,current configuration.
Dialogue: 0,0:06:32.94,0:06:34.33,Default,,0,0,0,,But remember, that the TextView
Dialogue: 0,0:06:34.33,0:06:35.83,Default,,0,0,0,,is the delegate of its own
Dialogue: 0,0:06:35.92,0:06:36.74,Default,,0,0,0,,NSTouchBar instance.
Dialogue: 0,0:06:36.81,0:06:38.20,Default,,0,0,0,,So, it's going to recreate these
Dialogue: 0,0:06:38.20,0:06:39.32,Default,,0,0,0,,items by calling its own
Dialogue: 0,0:06:39.32,0:06:40.19,Default,,0,0,0,,implementation of
Dialogue: 0,0:06:40.19,0:06:41.40,Default,,0,0,0,,makeItemForIdentifier.
Dialogue: 0,0:06:42.20,0:06:43.23,Default,,0,0,0,,And so it will recreate the
Dialogue: 0,0:06:43.23,0:06:44.67,Default,,0,0,0,,QuickType item, it'll recreate
Dialogue: 0,0:06:45.90,0:06:49.83,Default,,0,0,0,,the character picker, but it's
Dialogue: 0,0:06:50.07,0:06:51.43,Default,,0,0,0,,not going to know how to
Dialogue: 0,0:06:51.43,0:06:52.93,Default,,0,0,0,,recreate your custom item.
Dialogue: 0,0:06:53.74,0:06:55.16,Default,,0,0,0,,So, it just won't get recreated.
Dialogue: 0,0:06:56.76,0:06:57.97,Default,,0,0,0,,Now to avoid this you're going
Dialogue: 0,0:06:57.97,0:06:58.81,Default,,0,0,0,,to need an approach that works
Dialogue: 0,0:06:58.81,0:06:59.96,Default,,0,0,0,,with the TextView and there are
Dialogue: 0,0:06:59.96,0:07:00.92,Default,,0,0,0,,a couple of different ways to do
Dialogue: 0,0:07:00.92,0:07:01.14,Default,,0,0,0,,that.
Dialogue: 0,0:07:03.06,0:07:04.48,Default,,0,0,0,,The first approach is to use a
Dialogue: 0,0:07:04.48,0:07:05.98,Default,,0,0,0,,higher-level responder to
Dialogue: 0,0:07:05.98,0:07:07.00,Default,,0,0,0,,provide your custom item.
Dialogue: 0,0:07:07.60,0:07:08.70,Default,,0,0,0,,And this is a good approach to
Dialogue: 0,0:07:08.70,0:07:09.92,Default,,0,0,0,,use when it makes sense for your
Dialogue: 0,0:07:09.92,0:07:11.27,Default,,0,0,0,,item to appear in more than one
Dialogue: 0,0:07:11.27,0:07:11.84,Default,,0,0,0,,context.
Dialogue: 0,0:07:12.30,0:07:15.23,Default,,0,0,0,,And our Send Mail bar from
Dialogue: 0,0:07:15.23,0:07:16.48,Default,,0,0,0,,earlier is a good example of it.
Dialogue: 0,0:07:17.20,0:07:18.40,Default,,0,0,0,,So, here, we have a Send Mail
Dialogue: 0,0:07:18.40,0:07:20.12,Default,,0,0,0,,button and ideally we'd like
Dialogue: 0,0:07:20.12,0:07:21.58,Default,,0,0,0,,this button to be present in the
Dialogue: 0,0:07:21.58,0:07:23.05,Default,,0,0,0,,bar, when the Compose Mail
Dialogue: 0,0:07:23.05,0:07:23.75,Default,,0,0,0,,window is open.
Dialogue: 0,0:07:24.31,0:07:25.83,Default,,0,0,0,,It doesn't matter which TextView
Dialogue: 0,0:07:25.83,0:07:27.57,Default,,0,0,0,,or which TextField within that
Dialogue: 0,0:07:27.57,0:07:28.89,Default,,0,0,0,,window has a first responder.
Dialogue: 0,0:07:28.93,0:07:29.78,Default,,0,0,0,,We want this button to be
Dialogue: 0,0:07:29.78,0:07:31.35,Default,,0,0,0,,present for any of them.
Dialogue: 0,0:07:31.45,0:07:33.17,Default,,0,0,0,,And so, this is a good situation
Dialogue: 0,0:07:33.25,0:07:34.35,Default,,0,0,0,,in which to use a higher-level
Dialogue: 0,0:07:34.35,0:07:35.94,Default,,0,0,0,,responder like a ViewController
Dialogue: 0,0:07:35.94,0:07:36.96,Default,,0,0,0,,to provide your custom item.
Dialogue: 0,0:07:37.64,0:07:40.01,Default,,0,0,0,,And here's what that might look
Dialogue: 0,0:07:40.01,0:07:40.50,Default,,0,0,0,,like.
Dialogue: 0,0:07:40.75,0:07:41.82,Default,,0,0,0,,Here we have our ViewController.
Dialogue: 0,0:07:42.52,0:07:44.35,Default,,0,0,0,,We're going to override
Dialogue: 0,0:07:44.35,0:07:44.99,Default,,0,0,0,,makeTouchBar.
Dialogue: 0,0:07:45.68,0:07:49.31,Default,,0,0,0,,We'll create our custom Touch
Dialogue: 0,0:07:49.31,0:07:51.02,Default,,0,0,0,,Bar item and set its view to the
Dialogue: 0,0:07:51.08,0:07:51.53,Default,,0,0,0,,Send button.
Dialogue: 0,0:07:52.14,0:07:55.81,Default,,0,0,0,,And then, we'll create our Touch
Dialogue: 0,0:07:55.81,0:07:57.75,Default,,0,0,0,,Bar, we'll configure it with our
Dialogue: 0,0:07:58.04,0:07:59.33,Default,,0,0,0,,custom item, and then we'll
Dialogue: 0,0:07:59.33,0:08:00.57,Default,,0,0,0,,return it.
Dialogue: 0,0:08:01.41,0:08:02.23,Default,,0,0,0,,Now, note the use of the
Dialogue: 0,0:08:02.23,0:08:03.33,Default,,0,0,0,,otherItemsProxy here.
Dialogue: 0,0:08:03.33,0:08:04.88,Default,,0,0,0,,And this is going to nest the
Dialogue: 0,0:08:04.88,0:08:06.07,Default,,0,0,0,,bar items from the field editor
Dialogue: 0,0:08:06.07,0:08:07.50,Default,,0,0,0,,so that they appear alongside
Dialogue: 0,0:08:07.50,0:08:08.19,Default,,0,0,0,,our custom item.
Dialogue: 0,0:08:09.32,0:08:10.96,Default,,0,0,0,,And that's a basic example of
Dialogue: 0,0:08:10.96,0:08:11.96,Default,,0,0,0,,how to use a higher-level
Dialogue: 0,0:08:11.96,0:08:13.38,Default,,0,0,0,,responder to provide a custom
Dialogue: 0,0:08:13.38,0:08:14.59,Default,,0,0,0,,item along the standard items.
Dialogue: 0,0:08:14.59,0:08:17.60,Default,,0,0,0,,So, now onto the second
Dialogue: 0,0:08:17.60,0:08:18.79,Default,,0,0,0,,approach, subclassing
Dialogue: 0,0:08:18.79,0:08:19.56,Default,,0,0,0,,NSTextView.
Dialogue: 0,0:08:20.24,0:08:21.38,Default,,0,0,0,,Now this is a good approach to
Dialogue: 0,0:08:21.38,0:08:23.62,Default,,0,0,0,,use when you have an item where
Dialogue: 0,0:08:24.02,0:08:25.51,Default,,0,0,0,,you only want it to appear in
Dialogue: 0,0:08:25.51,0:08:27.45,Default,,0,0,0,,the bar when your TextView is
Dialogue: 0,0:08:27.45,0:08:28.15,Default,,0,0,0,,the first responder.
Dialogue: 0,0:08:28.77,0:08:31.28,Default,,0,0,0,,And to see what I mean, let's
Dialogue: 0,0:08:31.28,0:08:32.08,Default,,0,0,0,,take a look at the second
Dialogue: 0,0:08:32.08,0:08:32.88,Default,,0,0,0,,example from earlier.
Dialogue: 0,0:08:33.29,0:08:34.54,Default,,0,0,0,,Here we have a Select All button
Dialogue: 0,0:08:34.64,0:08:36.04,Default,,0,0,0,,that selects all of the text in
Dialogue: 0,0:08:36.04,0:08:36.56,Default,,0,0,0,,the TextView.
Dialogue: 0,0:08:37.53,0:08:39.11,Default,,0,0,0,,Now in this case, we only want
Dialogue: 0,0:08:39.11,0:08:40.36,Default,,0,0,0,,our button to appear when our
Dialogue: 0,0:08:40.36,0:08:41.55,Default,,0,0,0,,TextView is first responder
Dialogue: 0,0:08:41.55,0:08:43.37,Default,,0,0,0,,because it wouldn't really make
Dialogue: 0,0:08:43.37,0:08:44.28,Default,,0,0,0,,a whole lot of sense for a
Dialogue: 0,0:08:44.28,0:08:45.70,Default,,0,0,0,,Select All button to be there if
Dialogue: 0,0:08:45.70,0:08:46.84,Default,,0,0,0,,nobody's editing any text.
Dialogue: 0,0:08:48.27,0:08:49.98,Default,,0,0,0,,And so this situation is a good
Dialogue: 0,0:08:49.98,0:08:52.13,Default,,0,0,0,,one to subclass NSTextView and
Dialogue: 0,0:08:52.13,0:08:53.43,Default,,0,0,0,,put your button in that same
Dialogue: 0,0:08:53.55,0:08:54.69,Default,,0,0,0,,NSTouchBar instance as the
Dialogue: 0,0:08:54.69,0:08:55.28,Default,,0,0,0,,standard items.
Dialogue: 0,0:08:55.94,0:08:58.47,Default,,0,0,0,,And so there's two methods
Dialogue: 0,0:08:58.47,0:08:59.72,Default,,0,0,0,,you're going to want to override
Dialogue: 0,0:08:59.72,0:09:00.68,Default,,0,0,0,,in your TextView subclass.
Dialogue: 0,0:09:01.80,0:09:02.23,Default,,0,0,0,,One is
Dialogue: 0,0:09:02.23,0:09:04.03,Default,,0,0,0,,updateTouchBarItemIdentifiers
Dialogue: 0,0:09:04.70,0:09:05.72,Default,,0,0,0,,and you want to override this
Dialogue: 0,0:09:05.72,0:09:07.04,Default,,0,0,0,,method because this is called
Dialogue: 0,0:09:07.04,0:09:07.95,Default,,0,0,0,,each time the state of the
Dialogue: 0,0:09:07.95,0:09:09.55,Default,,0,0,0,,TextView's bar needs changed.
Dialogue: 0,0:09:10.53,0:09:11.51,Default,,0,0,0,,And this method is where you'll
Dialogue: 0,0:09:11.51,0:09:13.78,Default,,0,0,0,,actually add the text bar to
Dialogue: 0,0:09:13.78,0:09:16.50,Default,,0,0,0,,display your custom item, to the
Dialogue: 0,0:09:16.50,0:09:17.62,Default,,0,0,0,,defaultItemIdentifiers array.
Dialogue: 0,0:09:18.78,0:09:20.02,Default,,0,0,0,,And the second method to
Dialogue: 0,0:09:20.02,0:09:21.40,Default,,0,0,0,,override is the delegate method
Dialogue: 0,0:09:21.88,0:09:23.05,Default,,0,0,0,,makeItemForIdentifier.
Dialogue: 0,0:09:23.05,0:09:24.62,Default,,0,0,0,,And you'll want to override this
Dialogue: 0,0:09:24.62,0:09:25.74,Default,,0,0,0,,method because this is what the
Dialogue: 0,0:09:25.74,0:09:27.56,Default,,0,0,0,,TextView uses to actually create
Dialogue: 0,0:09:27.56,0:09:28.16,Default,,0,0,0,,its bar items.
Dialogue: 0,0:09:28.96,0:09:29.93,Default,,0,0,0,,And so this method is where
Dialogue: 0,0:09:29.93,0:09:31.09,Default,,0,0,0,,you'll create and you're
Dialogue: 0,0:09:31.09,0:09:32.35,Default,,0,0,0,,configure your custom item.
Dialogue: 0,0:09:34.06,0:09:34.68,Default,,0,0,0,,Now, with both of these
Dialogue: 0,0:09:34.68,0:09:35.83,Default,,0,0,0,,approaches you're going to want
Dialogue: 0,0:09:35.83,0:09:37.50,Default,,0,0,0,,to make sure that you call the
Dialogue: 0,0:09:37.55,0:09:39.05,Default,,0,0,0,,superclass implementation before
Dialogue: 0,0:09:39.05,0:09:39.84,Default,,0,0,0,,you do any of the work
Dialogue: 0,0:09:39.84,0:09:41.12,Default,,0,0,0,,associated with your custom
Dialogue: 0,0:09:41.12,0:09:41.35,Default,,0,0,0,,item.
Dialogue: 0,0:09:41.80,0:09:42.94,Default,,0,0,0,,And by using this approach
Dialogue: 0,0:09:43.11,0:09:44.36,Default,,0,0,0,,you'll ensure that your custom
Dialogue: 0,0:09:44.36,0:09:46.11,Default,,0,0,0,,item will be recreated along
Dialogue: 0,0:09:46.11,0:09:47.87,Default,,0,0,0,,with the standard items whenever
Dialogue: 0,0:09:47.87,0:09:49.17,Default,,0,0,0,,the TextView needs to reset its
Dialogue: 0,0:09:49.17,0:09:49.33,Default,,0,0,0,,bar.
Dialogue: 0,0:09:50.00,0:09:53.27,Default,,0,0,0,,And that wraps up the two
Dialogue: 0,0:09:53.27,0:09:54.40,Default,,0,0,0,,approaches for adding custom
Dialogue: 0,0:09:54.40,0:09:54.68,Default,,0,0,0,,items.
Dialogue: 0,0:09:55.19,0:09:56.22,Default,,0,0,0,,Let's shift gears and learn
Dialogue: 0,0:09:56.22,0:09:58.64,Default,,0,0,0,,about the Candidate List item.
Dialogue: 0,0:09:59.11,0:09:59.96,Default,,0,0,0,,The Candidate List item is a
Dialogue: 0,0:09:59.96,0:10:01.64,Default,,0,0,0,,pretty nifty control for giving
Dialogue: 0,0:10:01.64,0:10:03.07,Default,,0,0,0,,your users a list of contextual
Dialogue: 0,0:10:03.07,0:10:04.23,Default,,0,0,0,,suggestions to choose from.
Dialogue: 0,0:10:05.62,0:10:06.43,Default,,0,0,0,,And we'll refer to these
Dialogue: 0,0:10:06.43,0:10:07.67,Default,,0,0,0,,suggestions as candidates.
Dialogue: 0,0:10:08.37,0:10:12.13,Default,,0,0,0,,And this item is also tightly
Dialogue: 0,0:10:12.13,0:10:13.32,Default,,0,0,0,,integrated with NSTextView.
Dialogue: 0,0:10:13.93,0:10:14.90,Default,,0,0,0,,So, every TextView has a
Dialogue: 0,0:10:14.90,0:10:16.12,Default,,0,0,0,,reference to the Candidate List
Dialogue: 0,0:10:16.12,0:10:18.10,Default,,0,0,0,,in the bar, accessible via the
Dialogue: 0,0:10:18.10,0:10:19.56,Default,,0,0,0,,candidateListTouchBarItem
Dialogue: 0,0:10:19.56,0:10:19.97,Default,,0,0,0,,property.
Dialogue: 0,0:10:21.08,0:10:22.49,Default,,0,0,0,,Now once again, remember the
Dialogue: 0,0:10:22.49,0:10:23.42,Default,,0,0,0,,Candidate List you see with a
Dialogue: 0,0:10:23.42,0:10:25.26,Default,,0,0,0,,TextField is actually in the bar
Dialogue: 0,0:10:25.41,0:10:26.51,Default,,0,0,0,,associated with the window's
Dialogue: 0,0:10:26.59,0:10:27.86,Default,,0,0,0,,field editor.
Dialogue: 0,0:10:29.50,0:10:31.30,Default,,0,0,0,,Candidate data generally comes
Dialogue: 0,0:10:31.44,0:10:32.31,Default,,0,0,0,,from these three sources.
Dialogue: 0,0:10:33.38,0:10:34.93,Default,,0,0,0,,In the QuickType case, the data
Dialogue: 0,0:10:34.93,0:10:36.05,Default,,0,0,0,,for the Candidates is supplied
Dialogue: 0,0:10:36.05,0:10:36.86,Default,,0,0,0,,by NSSpellChecker.
Dialogue: 0,0:10:37.97,0:10:39.01,Default,,0,0,0,,But the control can also be
Dialogue: 0,0:10:39.01,0:10:40.08,Default,,0,0,0,,configured to show Candidates
Dialogue: 0,0:10:40.08,0:10:41.69,Default,,0,0,0,,from other sources, like the
Dialogue: 0,0:10:41.69,0:10:43.18,Default,,0,0,0,,system input method, which
Dialogue: 0,0:10:43.18,0:10:44.48,Default,,0,0,0,,allows you to type Chinese,
Dialogue: 0,0:10:44.48,0:10:46.05,Default,,0,0,0,,Japanese, Korean, or Indic
Dialogue: 0,0:10:46.05,0:10:47.17,Default,,0,0,0,,characters using a Latin
Dialogue: 0,0:10:47.17,0:10:47.53,Default,,0,0,0,,Keyboard.
Dialogue: 0,0:10:47.58,0:10:49.37,Default,,0,0,0,,But what most of you are
Dialogue: 0,0:10:49.37,0:10:50.61,Default,,0,0,0,,probably interested in is the
Dialogue: 0,0:10:50.61,0:10:51.88,Default,,0,0,0,,ability to provide your own
Dialogue: 0,0:10:51.88,0:10:52.96,Default,,0,0,0,,completely custom Candidates.
Dialogue: 0,0:10:53.56,0:10:54.36,Default,,0,0,0,,And there are two different
Dialogue: 0,0:10:54.36,0:10:55.60,Default,,0,0,0,,approaches your can take to do
Dialogue: 0,0:10:55.60,0:10:56.00,Default,,0,0,0,,this.
Dialogue: 0,0:10:57.80,0:10:59.25,Default,,0,0,0,,The first approach is to use a
Dialogue: 0,0:10:59.25,0:10:59.85,Default,,0,0,0,,delegate method.
Dialogue: 0,0:11:00.67,0:11:01.64,Default,,0,0,0,,The benefit of using this
Dialogue: 0,0:11:01.64,0:11:02.50,Default,,0,0,0,,approach is that it's the
Dialogue: 0,0:11:02.55,0:11:03.81,Default,,0,0,0,,simplest one since the TextField
Dialogue: 0,0:11:03.81,0:11:04.56,Default,,0,0,0,,does most of the work.
Dialogue: 0,0:11:05.19,0:11:08.22,Default,,0,0,0,,So, to use this approach, you'll
Dialogue: 0,0:11:08.22,0:11:09.65,Default,,0,0,0,,implement a delegate method
Dialogue: 0,0:11:09.91,0:11:11.64,Default,,0,0,0,,candidatesForSelectedRange in
Dialogue: 0,0:11:11.72,0:11:13.03,Default,,0,0,0,,your TextField or your TextView.
Dialogue: 0,0:11:13.86,0:11:14.95,Default,,0,0,0,,And you'll get the original text
Dialogue: 0,0:11:14.95,0:11:17.02,Default,,0,0,0,,control, the field editor if
Dialogue: 0,0:11:17.02,0:11:19.09,Default,,0,0,0,,applicable, and the range of the
Dialogue: 0,0:11:19.09,0:11:20.62,Default,,0,0,0,,text, which you can then use to
Dialogue: 0,0:11:20.62,0:11:21.51,Default,,0,0,0,,determine your Candidates.
Dialogue: 0,0:11:22.35,0:11:23.25,Default,,0,0,0,,So, you'll simply return an
Dialogue: 0,0:11:23.25,0:11:24.45,Default,,0,0,0,,array containing your custom
Dialogue: 0,0:11:24.45,0:11:25.32,Default,,0,0,0,,Candidates, and they'll be
Dialogue: 0,0:11:25.32,0:11:26.34,Default,,0,0,0,,displayed in the standard
Dialogue: 0,0:11:26.34,0:11:26.98,Default,,0,0,0,,Candidate List.
Dialogue: 0,0:11:27.81,0:11:29.02,Default,,0,0,0,,Now since this approach uses the
Dialogue: 0,0:11:29.02,0:11:30.81,Default,,0,0,0,,standard list, there's nothing
Dialogue: 0,0:11:30.81,0:11:31.57,Default,,0,0,0,,else you have to do.
Dialogue: 0,0:11:31.63,0:11:33.47,Default,,0,0,0,,The TextView will do the rest.
Dialogue: 0,0:11:35.10,0:11:36.70,Default,,0,0,0,,The second approach is to use a
Dialogue: 0,0:11:36.70,0:11:37.69,Default,,0,0,0,,higher-level responder.
Dialogue: 0,0:11:38.68,0:11:39.90,Default,,0,0,0,,And the benefit of this approach
Dialogue: 0,0:11:39.90,0:11:41.26,Default,,0,0,0,,is it allows you to use model
Dialogue: 0,0:11:41.26,0:11:42.78,Default,,0,0,0,,objects rather than strings for
Dialogue: 0,0:11:42.78,0:11:43.33,Default,,0,0,0,,your Candidates.
Dialogue: 0,0:11:45.46,0:11:46.40,Default,,0,0,0,,So, this is similar to the
Dialogue: 0,0:11:46.46,0:11:47.61,Default,,0,0,0,,higher-level responder approach
Dialogue: 0,0:11:47.61,0:11:48.49,Default,,0,0,0,,that we looked at a little bit
Dialogue: 0,0:11:48.49,0:11:49.86,Default,,0,0,0,,earlier for adding custom items
Dialogue: 0,0:11:49.86,0:11:50.28,Default,,0,0,0,,to your bar.
Dialogue: 0,0:11:50.96,0:11:52.03,Default,,0,0,0,,Here, you'll use a view
Dialogue: 0,0:11:52.03,0:11:53.28,Default,,0,0,0,,controller or some other object
Dialogue: 0,0:11:53.61,0:11:55.68,Default,,0,0,0,,to create your own instance of
Dialogue: 0,0:11:56.00,0:11:57.28,Default,,0,0,0,,NSCandidateListTouchBarItem and
Dialogue: 0,0:11:57.28,0:11:58.49,Default,,0,0,0,,provide that instead of using
Dialogue: 0,0:11:58.49,0:11:59.04,Default,,0,0,0,,the standard one.
Dialogue: 0,0:12:00.50,0:12:01.36,Default,,0,0,0,,Now, this approach is a little
Dialogue: 0,0:12:01.36,0:12:02.32,Default,,0,0,0,,bit more complex than the
Dialogue: 0,0:12:02.32,0:12:04.15,Default,,0,0,0,,delegation one, but again it's
Dialogue: 0,0:12:04.15,0:12:05.79,Default,,0,0,0,,really useful if you'd like to
Dialogue: 0,0:12:05.79,0:12:06.75,Default,,0,0,0,,use model objects for your
Dialogue: 0,0:12:06.75,0:12:08.19,Default,,0,0,0,,candidates instead of strings.
Dialogue: 0,0:12:08.19,0:12:10.78,Default,,0,0,0,,And we'll go over this approach
Dialogue: 0,0:12:10.78,0:12:11.79,Default,,0,0,0,,in greater detail a little bit
Dialogue: 0,0:12:11.79,0:12:12.10,Default,,0,0,0,,later.
Dialogue: 0,0:12:12.67,0:12:14.90,Default,,0,0,0,,But for now, let's take a look
Dialogue: 0,0:12:14.90,0:12:16.21,Default,,0,0,0,,at implementing a simple version
Dialogue: 0,0:12:16.21,0:12:17.48,Default,,0,0,0,,of the email Autocomplete item
Dialogue: 0,0:12:17.74,0:12:18.65,Default,,0,0,0,,that we've been teasing you with
Dialogue: 0,0:12:18.65,0:12:19.51,Default,,0,0,0,,since the beginning of this
Dialogue: 0,0:12:19.51,0:12:19.67,Default,,0,0,0,,talk.
Dialogue: 0,0:12:20.42,0:12:21.24,Default,,0,0,0,,We're going to use the
Dialogue: 0,0:12:21.24,0:12:22.39,Default,,0,0,0,,delegation approach for this.
Dialogue: 0,0:12:23.09,0:12:26.06,Default,,0,0,0,,But we have a slight problem
Dialogue: 0,0:12:26.06,0:12:26.24,Default,,0,0,0,,here.
Dialogue: 0,0:12:26.75,0:12:27.93,Default,,0,0,0,,Now, since our text field is
Dialogue: 0,0:12:27.93,0:12:30.07,Default,,0,0,0,,intended for email addresses, it
Dialogue: 0,0:12:30.12,0:12:31.24,Default,,0,0,0,,really wouldn't make a whole lot
Dialogue: 0,0:12:31.24,0:12:32.63,Default,,0,0,0,,of sense for it to have emojis
Dialogue: 0,0:12:32.63,0:12:33.52,Default,,0,0,0,,in it, or rich text.
Dialogue: 0,0:12:34.94,0:12:36.00,Default,,0,0,0,,But if we turn those properties
Dialogue: 0,0:12:36.00,0:12:37.15,Default,,0,0,0,,off on the bar, look at what
Dialogue: 0,0:12:37.15,0:12:38.54,Default,,0,0,0,,happens when we collapse our
Dialogue: 0,0:12:38.54,0:12:39.13,Default,,0,0,0,,Candidate List.
Dialogue: 0,0:12:39.88,0:12:40.98,Default,,0,0,0,,You've kind of got this weird
Dialogue: 0,0:12:40.98,0:12:42.25,Default,,0,0,0,,empty bar just sitting there,
Dialogue: 0,0:12:42.25,0:12:43.80,Default,,0,0,0,,and that doesn't really look
Dialogue: 0,0:12:43.80,0:12:46.86,Default,,0,0,0,,good, so we don't want that to
Dialogue: 0,0:12:47.04,0:12:47.20,Default,,0,0,0,,happen.
Dialogue: 0,0:12:47.20,0:12:48.60,Default,,0,0,0,,And we're going to prevent that
Dialogue: 0,0:12:48.60,0:12:51.00,Default,,0,0,0,,from happening by turning off
Dialogue: 0,0:12:51.00,0:12:52.18,Default,,0,0,0,,the collapsing functionality
Dialogue: 0,0:12:52.33,0:12:54.40,Default,,0,0,0,,using the allowsCollapsing
Dialogue: 0,0:12:54.40,0:12:54.80,Default,,0,0,0,,property.
Dialogue: 0,0:12:54.80,0:12:56.94,Default,,0,0,0,,And when we set this property
Dialogue: 0,0:12:57.64,0:12:58.66,Default,,0,0,0,,that little angle bracket on the
Dialogue: 0,0:12:58.66,0:13:00.52,Default,,0,0,0,,left goes away and you can no
Dialogue: 0,0:13:00.52,0:13:02.59,Default,,0,0,0,,longer collapse the list.
Dialogue: 0,0:13:05.36,0:13:06.57,Default,,0,0,0,,But now, we have another
Dialogue: 0,0:13:06.57,0:13:06.99,Default,,0,0,0,,problem.
Dialogue: 0,0:13:06.99,0:13:10.37,Default,,0,0,0,,We set that allowsCollapsing
Dialogue: 0,0:13:10.37,0:13:12.79,Default,,0,0,0,,property on the field editor
Dialogue: 0,0:13:13.43,0:13:15.56,Default,,0,0,0,,Candidate List item and the
Dialogue: 0,0:13:15.56,0:13:17.03,Default,,0,0,0,,field editor is shared among all
Dialogue: 0,0:13:17.03,0:13:18.11,Default,,0,0,0,,the text fields in the window.
Dialogue: 0,0:13:18.62,0:13:19.97,Default,,0,0,0,,And so, if we set the
Dialogue: 0,0:13:19.97,0:13:21.73,Default,,0,0,0,,allowsCollapsing property on
Dialogue: 0,0:13:21.73,0:13:23.25,Default,,0,0,0,,this field editor's Candidate
Dialogue: 0,0:13:23.25,0:13:24.87,Default,,0,0,0,,List it's going to affect all of
Dialogue: 0,0:13:24.87,0:13:26.34,Default,,0,0,0,,these text fields, which we
Dialogue: 0,0:13:26.34,0:13:26.88,Default,,0,0,0,,might not want.
Dialogue: 0,0:13:27.99,0:13:28.85,Default,,0,0,0,,And so we're going to solve this
Dialogue: 0,0:13:28.85,0:13:30.14,Default,,0,0,0,,problem by providing our own
Dialogue: 0,0:13:30.14,0:13:32.01,Default,,0,0,0,,field editor for our email
Dialogue: 0,0:13:32.01,0:13:33.47,Default,,0,0,0,,TextField and then that way,
Dialogue: 0,0:13:33.47,0:13:34.82,Default,,0,0,0,,when we modify its properties,
Dialogue: 0,0:13:35.26,0:13:36.07,Default,,0,0,0,,it won't affect the shared
Dialogue: 0,0:13:36.07,0:13:36.36,Default,,0,0,0,,editor.
Dialogue: 0,0:13:36.98,0:13:39.63,Default,,0,0,0,,And so, to create the custom
Dialogue: 0,0:13:39.63,0:13:41.32,Default,,0,0,0,,field editor, we'll subclass
Dialogue: 0,0:13:41.32,0:13:42.25,Default,,0,0,0,,NSTextFieldCell.
Dialogue: 0,0:13:42.25,0:13:45.50,Default,,0,0,0,,In our subclass, we're going to
Dialogue: 0,0:13:45.50,0:13:46.72,Default,,0,0,0,,override fieldEditor for
Dialogue: 0,0:13:46.72,0:13:47.28,Default,,0,0,0,,controlView.
Dialogue: 0,0:13:47.89,0:13:51.27,Default,,0,0,0,,And then we'll create a
Dialogue: 0,0:13:51.27,0:13:52.38,Default,,0,0,0,,fieldEditor and return it.
Dialogue: 0,0:13:52.88,0:13:53.93,Default,,0,0,0,,And that's all there is to it.
Dialogue: 0,0:13:54.38,0:13:55.29,Default,,0,0,0,,We're not adding any custom
Dialogue: 0,0:13:55.29,0:13:55.76,Default,,0,0,0,,behavior.
Dialogue: 0,0:13:55.76,0:13:56.80,Default,,0,0,0,,We're just providing our own
Dialogue: 0,0:13:56.80,0:13:58.44,Default,,0,0,0,,instance of the stock NSTextView
Dialogue: 0,0:13:59.40,0:14:00.70,Default,,0,0,0,,to use as the field editor
Dialogue: 0,0:14:00.70,0:14:01.78,Default,,0,0,0,,whenever someone wants to edit
Dialogue: 0,0:14:01.78,0:14:03.04,Default,,0,0,0,,the contents of our Text Field.
Dialogue: 0,0:14:04.07,0:14:05.19,Default,,0,0,0,,And don't forget to set your
Dialogue: 0,0:14:05.19,0:14:06.24,Default,,0,0,0,,TextField to use your new
Dialogue: 0,0:14:06.24,0:14:07.62,Default,,0,0,0,,subclass, either through
Dialogue: 0,0:14:07.62,0:14:08.62,Default,,0,0,0,,Interface Builder or
Dialogue: 0,0:14:08.62,0:14:09.31,Default,,0,0,0,,Programatically.
Dialogue: 0,0:14:11.16,0:14:12.89,Default,,0,0,0,,So, now, we can implement our
Dialogue: 0,0:14:12.89,0:14:13.91,Default,,0,0,0,,textField delegate method.
Dialogue: 0,0:14:14.16,0:14:15.16,Default,,0,0,0,,Here, we'll turn off the
Dialogue: 0,0:14:15.16,0:14:16.31,Default,,0,0,0,,collapsing behavior of the field
Dialogue: 0,0:14:16.31,0:14:17.83,Default,,0,0,0,,editor and return to our array
Dialogue: 0,0:14:17.83,0:14:18.58,Default,,0,0,0,,of custom Candidates.
Dialogue: 0,0:14:18.58,0:14:20.08,Default,,0,0,0,,And that's a simple
Dialogue: 0,0:14:20.08,0:14:21.04,Default,,0,0,0,,implementation of email
Dialogue: 0,0:14:21.04,0:14:22.39,Default,,0,0,0,,Autocomplete with the Candidate
Dialogue: 0,0:14:22.39,0:14:23.00,Default,,0,0,0,,List item.
Dialogue: 0,0:14:25.38,0:14:26.33,Default,,0,0,0,,Now earlier we touched on a
Dialogue: 0,0:14:26.33,0:14:27.72,Default,,0,0,0,,second more complex approach for
Dialogue: 0,0:14:27.72,0:14:29.16,Default,,0,0,0,,returning custom Candidates by
Dialogue: 0,0:14:29.16,0:14:30.16,Default,,0,0,0,,providing your own Candidate
Dialogue: 0,0:14:30.16,0:14:31.36,Default,,0,0,0,,List item from a higher-level
Dialogue: 0,0:14:31.36,0:14:31.76,Default,,0,0,0,,responder.
Dialogue: 0,0:14:32.76,0:14:33.82,Default,,0,0,0,,Now if you need finer grain
Dialogue: 0,0:14:33.82,0:14:35.15,Default,,0,0,0,,control over the candidate list
Dialogue: 0,0:14:35.15,0:14:36.24,Default,,0,0,0,,item, this is the way to go.
Dialogue: 0,0:14:36.24,0:14:37.36,Default,,0,0,0,,And if you want to use this
Dialogue: 0,0:14:37.36,0:14:38.67,Default,,0,0,0,,approach, here's what you'll
Dialogue: 0,0:14:38.67,0:14:41.22,Default,,0,0,0,,have to do.
Dialogue: 0,0:14:41.45,0:14:42.94,Default,,0,0,0,,First, you want to disable
Dialogue: 0,0:14:42.94,0:14:44.10,Default,,0,0,0,,QuickType for your text field or
Dialogue: 0,0:14:44.10,0:14:44.32,Default,,0,0,0,,view.
Dialogue: 0,0:14:45.02,0:14:46.23,Default,,0,0,0,,Since you're providing your own
Dialogue: 0,0:14:46.44,0:14:47.59,Default,,0,0,0,,Candidate List, there's no need
Dialogue: 0,0:14:47.59,0:14:48.33,Default,,0,0,0,,for the standard one.
Dialogue: 0,0:14:51.42,0:14:53.33,Default,,0,0,0,,Second, you want to implement
Dialogue: 0,0:14:53.33,0:14:55.16,Default,,0,0,0,,the NSTouchBar delegate method
Dialogue: 0,0:14:55.16,0:14:56.40,Default,,0,0,0,,makeItemForIdentifier.
Dialogue: 0,0:14:57.06,0:14:58.20,Default,,0,0,0,,And this method is where you
Dialogue: 0,0:14:58.39,0:14:59.42,Default,,0,0,0,,will create your custom
Dialogue: 0,0:14:59.42,0:15:00.56,Default,,0,0,0,,Candidate List item.
Dialogue: 0,0:15:01.76,0:15:02.83,Default,,0,0,0,,And if you're using model
Dialogue: 0,0:15:02.83,0:15:04.34,Default,,0,0,0,,objects as your candidates, this
Dialogue: 0,0:15:04.34,0:15:05.50,Default,,0,0,0,,is also where you're going to
Dialogue: 0,0:15:05.50,0:15:06.66,Default,,0,0,0,,map your model objects into
Dialogue: 0,0:15:06.66,0:15:08.22,Default,,0,0,0,,string representations that can
Dialogue: 0,0:15:08.22,0:15:09.13,Default,,0,0,0,,be displayed in the Candidate
Dialogue: 0,0:15:09.13,0:15:09.62,Default,,0,0,0,,List item.
Dialogue: 0,0:15:10.89,0:15:12.45,Default,,0,0,0,,And so to do this, you're going
Dialogue: 0,0:15:12.45,0:15:13.69,Default,,0,0,0,,to use this block property
Dialogue: 0,0:15:13.69,0:15:15.33,Default,,0,0,0,,attributedStringForCandidate.
Dialogue: 0,0:15:19.07,0:15:20.96,Default,,0,0,0,,Third, if you're using the model
Dialogue: 0,0:15:20.96,0:15:24.11,Default,,0,0,0,,object candidates, you need,
Dialogue: 0,0:15:24.32,0:15:26.24,Default,,0,0,0,,you're going to need to
Dialogue: 0,0:15:27.42,0:15:29.35,Default,,0,0,0,,implement the delegate method
Dialogue: 0,0:15:29.35,0:15:30.94,Default,,0,0,0,,endSelectingCandidateAt index
Dialogue: 0,0:15:30.94,0:15:32.84,Default,,0,0,0,,and this is where you're going
Dialogue: 0,0:15:32.84,0:15:34.06,Default,,0,0,0,,to provide a mapping in the
Dialogue: 0,0:15:34.06,0:15:35.78,Default,,0,0,0,,other direction from user's
Dialogue: 0,0:15:35.78,0:15:37.01,Default,,0,0,0,,candidate selection to an
Dialogue: 0,0:15:37.01,0:15:38.21,Default,,0,0,0,,instance of your model object.
Dialogue: 0,0:15:38.71,0:15:42.56,Default,,0,0,0,,And finally, you want to update
Dialogue: 0,0:15:42.56,0:15:43.46,Default,,0,0,0,,the candidates that are
Dialogue: 0,0:15:43.46,0:15:45.68,Default,,0,0,0,,displayed when someone types
Dialogue: 0,0:15:45.68,0:15:47.22,Default,,0,0,0,,into your text field or view.
Dialogue: 0,0:15:47.63,0:15:48.54,Default,,0,0,0,,And so you can do that by
Dialogue: 0,0:15:48.54,0:15:50.16,Default,,0,0,0,,overriding controlTextDidChange
Dialogue: 0,0:15:50.57,0:15:52.24,Default,,0,0,0,,and then calling setCandidates
Dialogue: 0,0:15:52.31,0:15:53.88,Default,,0,0,0,,for selected range and string on
Dialogue: 0,0:15:53.88,0:15:55.91,Default,,0,0,0,,your custom Candidate List item.
Dialogue: 0,0:15:56.50,0:15:59.32,Default,,0,0,0,,And that wraps up customizing
Dialogue: 0,0:15:59.32,0:15:59.80,Default,,0,0,0,,Text Bars.
Dialogue: 0,0:16:00.75,0:16:02.39,Default,,0,0,0,,So, to recap, we covered two
Dialogue: 0,0:16:02.39,0:16:03.76,Default,,0,0,0,,approaches for adding custom
Dialogue: 0,0:16:03.76,0:16:05.52,Default,,0,0,0,,items in text bars and two
Dialogue: 0,0:16:05.52,0:16:06.76,Default,,0,0,0,,approaches for providing custom
Dialogue: 0,0:16:06.76,0:16:08.00,Default,,0,0,0,,candidates in the candidate bar.
Dialogue: 0,0:16:08.08,0:16:09.81,Default,,0,0,0,,I encourage you all to try out
Dialogue: 0,0:16:10.03,0:16:11.42,Default,,0,0,0,,customizing your text bars using
Dialogue: 0,0:16:11.42,0:16:12.32,Default,,0,0,0,,these approaches that we
Dialogue: 0,0:16:12.32,0:16:13.04,Default,,0,0,0,,recommended today.
Dialogue: 0,0:16:13.04,0:16:16.20,Default,,0,0,0,,Now, next I'd like to invite
Dialogue: 0,0:16:16.20,0:16:17.49,Default,,0,0,0,,Jeff Nadeau up to talk about
Dialogue: 0,0:16:17.49,0:16:19.17,Default,,0,0,0,,NSScrubber, a control especially
Dialogue: 0,0:16:19.17,0:16:20.20,Default,,0,0,0,,created for NS Touch Bar.
Dialogue: 0,0:16:20.60,0:16:20.76,Default,,0,0,0,,Jeff?
Dialogue: 0,0:16:21.52,0:16:24.88,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:16:25.38,0:16:25.96,Default,,0,0,0,,>> All right, thank you.
Dialogue: 0,0:16:26.72,0:16:27.89,Default,,0,0,0,,So, as Donna just said,
Dialogue: 0,0:16:27.94,0:16:29.37,Default,,0,0,0,,NSScrubber is our very first
Dialogue: 0,0:16:29.37,0:16:30.29,Default,,0,0,0,,Cocoa control that we've
Dialogue: 0,0:16:30.29,0:16:31.54,Default,,0,0,0,,designed especially for the
Dialogue: 0,0:16:31.54,0:16:32.48,Default,,0,0,0,,Touch Bar environment.
Dialogue: 0,0:16:33.65,0:16:35.33,Default,,0,0,0,,And, the central theme of this
Dialogue: 0,0:16:35.33,0:16:36.92,Default,,0,0,0,,control is taking your app's
Dialogue: 0,0:16:36.92,0:16:38.52,Default,,0,0,0,,content and bringing it forward
Dialogue: 0,0:16:38.52,0:16:39.77,Default,,0,0,0,,conveniently right at your
Dialogue: 0,0:16:39.77,0:16:40.46,Default,,0,0,0,,fingertips.
Dialogue: 0,0:16:40.46,0:16:43.59,Default,,0,0,0,,Now just some examples, we've
Dialogue: 0,0:16:43.59,0:16:44.62,Default,,0,0,0,,been showing you this nice
Dialogue: 0,0:16:44.62,0:16:46.04,Default,,0,0,0,,Calendar timeline as an example
Dialogue: 0,0:16:46.04,0:16:47.17,Default,,0,0,0,,of NSScrubber, but in fact we
Dialogue: 0,0:16:47.17,0:16:48.49,Default,,0,0,0,,use it in several places across
Dialogue: 0,0:16:48.49,0:16:49.35,Default,,0,0,0,,the operating system.
Dialogue: 0,0:16:49.79,0:16:51.21,Default,,0,0,0,,And two more of them are
Dialogue: 0,0:16:51.71,0:16:54.02,Default,,0,0,0,,Safari's tab picker, and also
Dialogue: 0,0:16:54.02,0:16:55.68,Default,,0,0,0,,Keynote's slide navigator, which
Dialogue: 0,0:16:55.68,0:16:57.22,Default,,0,0,0,,appears while you're giving a
Dialogue: 0,0:16:57.22,0:16:58.34,Default,,0,0,0,,presentation in Keynote.
Dialogue: 0,0:16:58.34,0:17:00.53,Default,,0,0,0,,And just putting these side by
Dialogue: 0,0:17:00.53,0:17:02.06,Default,,0,0,0,,side, you can tell that this
Dialogue: 0,0:17:02.06,0:17:03.38,Default,,0,0,0,,control is very versatile.
Dialogue: 0,0:17:03.38,0:17:04.43,Default,,0,0,0,,It's capable of expressing a
Dialogue: 0,0:17:04.43,0:17:06.28,Default,,0,0,0,,wide variety of visual and
Dialogue: 0,0:17:06.28,0:17:07.47,Default,,0,0,0,,interactive designs.
Dialogue: 0,0:17:08.35,0:17:11.12,Default,,0,0,0,,But before we dive into any of
Dialogue: 0,0:17:11.12,0:17:12.27,Default,,0,0,0,,the API, we should probably
Dialogue: 0,0:17:12.27,0:17:13.45,Default,,0,0,0,,answer the question, what is
Dialogue: 0,0:17:13.60,0:17:14.05,Default,,0,0,0,,NSScrubber?
Dialogue: 0,0:17:14.99,0:17:16.33,Default,,0,0,0,,It's a collection-like control
Dialogue: 0,0:17:16.97,0:17:18.11,Default,,0,0,0,,that is all about arranging a
Dialogue: 0,0:17:18.11,0:17:19.61,Default,,0,0,0,,list of your app's content and
Dialogue: 0,0:17:19.71,0:17:20.76,Default,,0,0,0,,then providing touch
Dialogue: 0,0:17:20.76,0:17:22.07,Default,,0,0,0,,gesture-based highlighting and
Dialogue: 0,0:17:22.11,0:17:23.61,Default,,0,0,0,,selection of that content using
Dialogue: 0,0:17:23.61,0:17:25.40,Default,,0,0,0,,both tap and pan gestures.
Dialogue: 0,0:17:26.41,0:17:27.82,Default,,0,0,0,,And if you used NSCollectionView
Dialogue: 0,0:17:27.82,0:17:29.26,Default,,0,0,0,,before, this API is going to
Dialogue: 0,0:17:29.26,0:17:30.39,Default,,0,0,0,,feel very familiar.
Dialogue: 0,0:17:30.71,0:17:32.26,Default,,0,0,0,,However, it has been streamlined
Dialogue: 0,0:17:32.26,0:17:33.86,Default,,0,0,0,,and adapted for the unique Touch
Dialogue: 0,0:17:33.86,0:17:34.60,Default,,0,0,0,,Bar environment.
Dialogue: 0,0:17:34.99,0:17:38.60,Default,,0,0,0,,Like NSCollectionView,
Dialogue: 0,0:17:38.86,0:17:40.61,Default,,0,0,0,,NSScrubber has a compositional
Dialogue: 0,0:17:40.61,0:17:41.79,Default,,0,0,0,,interface, which means that it
Dialogue: 0,0:17:41.79,0:17:42.83,Default,,0,0,0,,delegates a lot of its
Dialogue: 0,0:17:42.83,0:17:44.01,Default,,0,0,0,,responsibilities to other
Dialogue: 0,0:17:44.01,0:17:44.55,Default,,0,0,0,,objects.
Dialogue: 0,0:17:45.01,0:17:46.49,Default,,0,0,0,,And the best way to see these is
Dialogue: 0,0:17:46.49,0:17:47.65,Default,,0,0,0,,to actually pull the control
Dialogue: 0,0:17:47.65,0:17:48.98,Default,,0,0,0,,apart and take a look at each
Dialogue: 0,0:17:48.98,0:17:51.40,Default,,0,0,0,,piece in turn.
Dialogue: 0,0:17:51.40,0:17:52.93,Default,,0,0,0,,First, we have the control view
Dialogue: 0,0:17:52.93,0:17:54.37,Default,,0,0,0,,itself, NSScrubber, which
Dialogue: 0,0:17:54.37,0:17:55.68,Default,,0,0,0,,manages all of the user
Dialogue: 0,0:17:55.68,0:17:56.92,Default,,0,0,0,,interaction with the control.
Dialogue: 0,0:17:57.36,0:17:58.40,Default,,0,0,0,,It also provides a couple of
Dialogue: 0,0:17:58.40,0:18:00.16,Default,,0,0,0,,nice cosmetic properties like
Dialogue: 0,0:18:00.30,0:18:02.09,Default,,0,0,0,,backgrounds and other such
Dialogue: 0,0:18:02.09,0:18:02.42,Default,,0,0,0,,things.
Dialogue: 0,0:18:03.53,0:18:05.88,Default,,0,0,0,,Next, we also have the selection
Dialogue: 0,0:18:05.88,0:18:06.48,Default,,0,0,0,,decoration.
Dialogue: 0,0:18:06.52,0:18:07.47,Default,,0,0,0,,These are the views, which
Dialogue: 0,0:18:07.47,0:18:09.43,Default,,0,0,0,,appear to indicate that a
Dialogue: 0,0:18:09.49,0:18:10.85,Default,,0,0,0,,specific piece of content is
Dialogue: 0,0:18:10.85,0:18:11.43,Default,,0,0,0,,selected.
Dialogue: 0,0:18:11.54,0:18:14.26,Default,,0,0,0,,We have a dedicated layout
Dialogue: 0,0:18:14.26,0:18:16.05,Default,,0,0,0,,object, which abstractly defines
Dialogue: 0,0:18:16.05,0:18:17.06,Default,,0,0,0,,how the contents of the
Dialogue: 0,0:18:17.06,0:18:18.11,Default,,0,0,0,,controller are arranged.
Dialogue: 0,0:18:18.11,0:18:20.05,Default,,0,0,0,,And then, of course, we've got
Dialogue: 0,0:18:20.05,0:18:21.78,Default,,0,0,0,,your content, which is provided
Dialogue: 0,0:18:21.78,0:18:23.19,Default,,0,0,0,,using a data source protocol.
Dialogue: 0,0:18:23.85,0:18:26.22,Default,,0,0,0,,Now, we're going to look at each
Dialogue: 0,0:18:26.22,0:18:27.38,Default,,0,0,0,,of these pieces in turn;
Dialogue: 0,0:18:27.93,0:18:29.06,Default,,0,0,0,,however, we should first look at
Dialogue: 0,0:18:29.06,0:18:30.23,Default,,0,0,0,,what we can configure on the
Dialogue: 0,0:18:30.23,0:18:31.12,Default,,0,0,0,,control view itself.
Dialogue: 0,0:18:32.37,0:18:33.93,Default,,0,0,0,,And the first and most important
Dialogue: 0,0:18:33.93,0:18:34.82,Default,,0,0,0,,thing is the mode of
Dialogue: 0,0:18:34.82,0:18:36.30,Default,,0,0,0,,interaction, which is controlled
Dialogue: 0,0:18:36.30,0:18:37.34,Default,,0,0,0,,appropriately enough with the
Dialogue: 0,0:18:37.34,0:18:38.01,Default,,0,0,0,,mode property.
Dialogue: 0,0:18:38.76,0:18:40.58,Default,,0,0,0,,NSScrubber has two primary modes
Dialogue: 0,0:18:40.58,0:18:41.23,Default,,0,0,0,,of interaction.
Dialogue: 0,0:18:41.79,0:18:43.35,Default,,0,0,0,,The first, called "fixed",
Dialogue: 0,0:18:44.31,0:18:47.87,Default,,0,0,0,,offers a touch-based selection
Dialogue: 0,0:18:47.87,0:18:49.68,Default,,0,0,0,,that directly selects and
Dialogue: 0,0:18:49.73,0:18:50.85,Default,,0,0,0,,highlights the item underneath
Dialogue: 0,0:18:50.85,0:18:51.43,Default,,0,0,0,,your touch.
Dialogue: 0,0:18:52.29,0:18:54.26,Default,,0,0,0,,The second, "free", is kind of
Dialogue: 0,0:18:54.26,0:18:55.52,Default,,0,0,0,,like a free wheel, which you can
Dialogue: 0,0:18:55.52,0:18:56.52,Default,,0,0,0,,freely scroll the way that you
Dialogue: 0,0:18:56.52,0:18:57.72,Default,,0,0,0,,would any other touch driven
Dialogue: 0,0:18:57.72,0:18:58.28,Default,,0,0,0,,scroll view.
Dialogue: 0,0:18:59.76,0:19:00.92,Default,,0,0,0,,Once you've chosen between these
Dialogue: 0,0:19:00.92,0:19:02.75,Default,,0,0,0,,two modes, there's also the
Dialogue: 0,0:19:02.75,0:19:03.93,Default,,0,0,0,,continuous property.
Dialogue: 0,0:19:04.89,0:19:05.95,Default,,0,0,0,,This is a familiar name from
Dialogue: 0,0:19:05.95,0:19:07.66,Default,,0,0,0,,several other Cocoa controls and
Dialogue: 0,0:19:07.66,0:19:09.43,Default,,0,0,0,,we typically use it to mean that
Dialogue: 0,0:19:09.43,0:19:11.36,Default,,0,0,0,,a control continuously in
Dialogue: 0,0:19:11.36,0:19:12.91,Default,,0,0,0,,response to user interaction is
Dialogue: 0,0:19:12.91,0:19:14.71,Default,,0,0,0,,updating its value or sending
Dialogue: 0,0:19:14.71,0:19:15.29,Default,,0,0,0,,its action.
Dialogue: 0,0:19:15.85,0:19:19.69,Default,,0,0,0,,Now, when continuous is false,
Dialogue: 0,0:19:20.52,0:19:22.48,Default,,0,0,0,,in an NSScrubber you can see
Dialogue: 0,0:19:22.48,0:19:23.89,Default,,0,0,0,,that tapping on an item and
Dialogue: 0,0:19:23.89,0:19:25.15,Default,,0,0,0,,panning across highlights an
Dialogue: 0,0:19:25.15,0:19:26.99,Default,,0,0,0,,item but the selection stays put
Dialogue: 0,0:19:26.99,0:19:28.29,Default,,0,0,0,,until we finish our gesture and
Dialogue: 0,0:19:28.29,0:19:29.65,Default,,0,0,0,,we commit a new selection.
Dialogue: 0,0:19:29.72,0:19:32.15,Default,,0,0,0,,But if we turn it to true, we
Dialogue: 0,0:19:32.15,0:19:33.29,Default,,0,0,0,,can see the effect in something
Dialogue: 0,0:19:33.29,0:19:34.19,Default,,0,0,0,,like Safari.
Dialogue: 0,0:19:34.89,0:19:36.27,Default,,0,0,0,,Where as we pan across tabs,
Dialogue: 0,0:19:36.27,0:19:38.57,Default,,0,0,0,,they are immediately selected as
Dialogue: 0,0:19:38.57,0:19:39.59,Default,,0,0,0,,your touch passes over each
Dialogue: 0,0:19:40.30,0:19:40.51,Default,,0,0,0,,item.
Dialogue: 0,0:19:41.64,0:19:43.19,Default,,0,0,0,,This also goes for free style
Dialogue: 0,0:19:43.19,0:19:44.36,Default,,0,0,0,,scrubbers, for example, the
Dialogue: 0,0:19:44.36,0:19:45.70,Default,,0,0,0,,Keynote slide navigator we just
Dialogue: 0,0:19:45.70,0:19:46.09,Default,,0,0,0,,looked at.
Dialogue: 0,0:19:46.42,0:19:48.82,Default,,0,0,0,,We can scroll through here, look
Dialogue: 0,0:19:48.82,0:19:50.08,Default,,0,0,0,,at what, you know, navigate our
Dialogue: 0,0:19:50.08,0:19:51.41,Default,,0,0,0,,content and then we can tap
Dialogue: 0,0:19:51.41,0:19:52.55,Default,,0,0,0,,items to select them.
Dialogue: 0,0:19:53.40,0:19:55.01,Default,,0,0,0,,But if we set continuous to
Dialogue: 0,0:19:55.01,0:19:58.18,Default,,0,0,0,,true, just the act of scrolling
Dialogue: 0,0:19:58.40,0:20:00.07,Default,,0,0,0,,is going to be fluidly and
Dialogue: 0,0:20:00.07,0:20:01.50,Default,,0,0,0,,continuously updating the
Dialogue: 0,0:20:01.50,0:20:02.98,Default,,0,0,0,,selection within the content.
Dialogue: 0,0:20:03.05,0:20:05.73,Default,,0,0,0,,And so this gives us a very
Dialogue: 0,0:20:06.06,0:20:07.33,Default,,0,0,0,,stark distinction between
Dialogue: 0,0:20:07.33,0:20:08.76,Default,,0,0,0,,continuous being false, where
Dialogue: 0,0:20:08.76,0:20:10.04,Default,,0,0,0,,selection is a very deliberate
Dialogue: 0,0:20:10.04,0:20:10.93,Default,,0,0,0,,thing, which might be
Dialogue: 0,0:20:10.93,0:20:11.94,Default,,0,0,0,,appropriate if it's kind of a
Dialogue: 0,0:20:11.94,0:20:13.38,Default,,0,0,0,,heavyweight action, and
Dialogue: 0,0:20:13.38,0:20:15.41,Default,,0,0,0,,continuous being true where
Dialogue: 0,0:20:15.49,0:20:16.63,Default,,0,0,0,,navigating and selecting viewer
Dialogue: 0,0:20:16.63,0:20:18.44,Default,,0,0,0,,content is very fast and fluid,
Dialogue: 0,0:20:18.48,0:20:20.07,Default,,0,0,0,,and may be ideal for lightweight
Dialogue: 0,0:20:20.07,0:20:20.87,Default,,0,0,0,,interactions.
Dialogue: 0,0:20:21.34,0:20:24.55,Default,,0,0,0,,Once we've decided what we want
Dialogue: 0,0:20:24.55,0:20:25.89,Default,,0,0,0,,or how we want to select our
Dialogue: 0,0:20:25.89,0:20:28.06,Default,,0,0,0,,items, we need to decide what we
Dialogue: 0,0:20:28.06,0:20:29.11,Default,,0,0,0,,want that selection to look
Dialogue: 0,0:20:29.11,0:20:29.41,Default,,0,0,0,,like.
Dialogue: 0,0:20:29.48,0:20:30.55,Default,,0,0,0,,And that's controlled with the
Dialogue: 0,0:20:30.55,0:20:32.02,Default,,0,0,0,,selectionBackgroundStyle, and
Dialogue: 0,0:20:32.02,0:20:33.40,Default,,0,0,0,,OverlayStyle properties.
Dialogue: 0,0:20:34.22,0:20:35.81,Default,,0,0,0,,We provide two built-in styles.
Dialogue: 0,0:20:35.94,0:20:37.56,Default,,0,0,0,,We have the outlineOverlay
Dialogue: 0,0:20:37.56,0:20:39.22,Default,,0,0,0,,style, which is that nice bold
Dialogue: 0,0:20:39.22,0:20:40.28,Default,,0,0,0,,white outline that you've seen
Dialogue: 0,0:20:40.28,0:20:41.55,Default,,0,0,0,,in several of our examples.
Dialogue: 0,0:20:42.12,0:20:42.92,Default,,0,0,0,,And then we also have a
Dialogue: 0,0:20:42.92,0:20:44.28,Default,,0,0,0,,roundedBackground style, which
Dialogue: 0,0:20:44.28,0:20:45.78,Default,,0,0,0,,looks great behind text items.
Dialogue: 0,0:20:47.55,0:20:49.12,Default,,0,0,0,,Now if you're particularly
Dialogue: 0,0:20:49.12,0:20:50.13,Default,,0,0,0,,observant, you may have noticed
Dialogue: 0,0:20:50.13,0:20:51.27,Default,,0,0,0,,that the NSScrubber selection
Dialogue: 0,0:20:51.27,0:20:52.80,Default,,0,0,0,,style declaration is not
Dialogue: 0,0:20:52.80,0:20:53.73,Default,,0,0,0,,enclosed enumeration.
Dialogue: 0,0:20:53.73,0:20:54.58,Default,,0,0,0,,It's actually a class.
Dialogue: 0,0:20:55.16,0:20:56.50,Default,,0,0,0,,And so you can subclass this and
Dialogue: 0,0:20:56.50,0:20:57.79,Default,,0,0,0,,define your own selection styles
Dialogue: 0,0:20:57.79,0:20:58.38,Default,,0,0,0,,if you'd like.
Dialogue: 0,0:21:01.07,0:21:02.53,Default,,0,0,0,,One other fun cosmetic option
Dialogue: 0,0:21:02.53,0:21:03.52,Default,,0,0,0,,for selections is this
Dialogue: 0,0:21:03.58,0:21:05.26,Default,,0,0,0,,floatSelectionViews property.
Dialogue: 0,0:21:06.16,0:21:08.01,Default,,0,0,0,,When it's false, changing
Dialogue: 0,0:21:08.01,0:21:09.31,Default,,0,0,0,,selection looks pretty much like
Dialogue: 0,0:21:09.31,0:21:09.87,Default,,0,0,0,,you'd expect.
Dialogue: 0,0:21:09.87,0:21:11.13,Default,,0,0,0,,The old selection disappears and
Dialogue: 0,0:21:11.13,0:21:11.95,Default,,0,0,0,,then the new one appears
Dialogue: 0,0:21:11.95,0:21:12.52,Default,,0,0,0,,immediately.
Dialogue: 0,0:21:13.50,0:21:15.45,Default,,0,0,0,,But if we set this to true, we
Dialogue: 0,0:21:15.45,0:21:18.23,Default,,0,0,0,,actually get a nice, smoothly
Dialogue: 0,0:21:18.23,0:21:19.67,Default,,0,0,0,,floating and gliding selection,
Dialogue: 0,0:21:19.67,0:21:20.57,Default,,0,0,0,,which is kind of a very cool
Dialogue: 0,0:21:20.63,0:21:21.00,Default,,0,0,0,,effect.
Dialogue: 0,0:21:24.53,0:21:25.50,Default,,0,0,0,,There's one other trick that you
Dialogue: 0,0:21:25.50,0:21:26.53,Default,,0,0,0,,may have noticed in several of
Dialogue: 0,0:21:26.53,0:21:27.30,Default,,0,0,0,,our examples.
Dialogue: 0,0:21:28.37,0:21:29.54,Default,,0,0,0,,Some of these controls, when you
Dialogue: 0,0:21:29.54,0:21:31.00,Default,,0,0,0,,scroll, flick, or pan through
Dialogue: 0,0:21:31.00,0:21:33.13,Default,,0,0,0,,them, always glide smoothly so
Dialogue: 0,0:21:33.13,0:21:34.75,Default,,0,0,0,,that some item always lands
Dialogue: 0,0:21:34.82,0:21:36.22,Default,,0,0,0,,neatly in one place, in this
Dialogue: 0,0:21:36.22,0:21:36.97,Default,,0,0,0,,case the center.
Dialogue: 0,0:21:37.01,0:21:38.27,Default,,0,0,0,,And that's controlled with the
Dialogue: 0,0:21:38.27,0:21:39.44,Default,,0,0,0,,itemAlignment property.
Dialogue: 0,0:21:40.12,0:21:41.40,Default,,0,0,0,,Now by default this is none,
Dialogue: 0,0:21:41.47,0:21:42.53,Default,,0,0,0,,which means that we won't do any
Dialogue: 0,0:21:42.53,0:21:43.64,Default,,0,0,0,,kind of adjustment on your
Dialogue: 0,0:21:43.64,0:21:45.05,Default,,0,0,0,,scroll, but if you set it to
Dialogue: 0,0:21:45.05,0:21:46.41,Default,,0,0,0,,leading, trailing, or center,
Dialogue: 0,0:21:46.69,0:21:48.47,Default,,0,0,0,,after a scroll event, flicking,
Dialogue: 0,0:21:48.47,0:21:49.89,Default,,0,0,0,,panning, momentum, anything like
Dialogue: 0,0:21:49.89,0:21:51.80,Default,,0,0,0,,that, will always adjust it so
Dialogue: 0,0:21:51.80,0:21:53.30,Default,,0,0,0,,that some item appears neatly
Dialogue: 0,0:21:53.30,0:21:54.58,Default,,0,0,0,,aligned with either a leading,
Dialogue: 0,0:21:54.58,0:21:55.72,Default,,0,0,0,,trailing, or center of the
Dialogue: 0,0:21:55.72,0:21:56.00,Default,,0,0,0,,control.
Dialogue: 0,0:21:59.34,0:22:01.22,Default,,0,0,0,,Finally, NSScrubber as a couple
Dialogue: 0,0:22:01.22,0:22:02.62,Default,,0,0,0,,of nice cosmetic options for the
Dialogue: 0,0:22:02.72,0:22:04.15,Default,,0,0,0,,area behind your content,
Dialogue: 0,0:22:04.28,0:22:06.03,Default,,0,0,0,,including a background color, or
Dialogue: 0,0:22:06.06,0:22:07.22,Default,,0,0,0,,if you want to draw anything you
Dialogue: 0,0:22:07.22,0:22:08.26,Default,,0,0,0,,like, you can place it in view
Dialogue: 0,0:22:08.26,0:22:09.09,Default,,0,0,0,,behind your content.
Dialogue: 0,0:22:10.34,0:22:12.22,Default,,0,0,0,,And we actually provide a named
Dialogue: 0,0:22:12.22,0:22:13.67,Default,,0,0,0,,color on NSColor called the
Dialogue: 0,0:22:13.67,0:22:14.81,Default,,0,0,0,,scrubberTexturedBackground
Dialogue: 0,0:22:14.81,0:22:17.03,Default,,0,0,0,,color, which works great in the
Dialogue: 0,0:22:17.03,0:22:18.03,Default,,0,0,0,,backgroundColor property to
Dialogue: 0,0:22:18.03,0:22:19.65,Default,,0,0,0,,provide this cool textured
Dialogue: 0,0:22:19.94,0:22:21.24,Default,,0,0,0,,vertically hashed appearance
Dialogue: 0,0:22:21.24,0:22:22.10,Default,,0,0,0,,which you may have noticed in
Dialogue: 0,0:22:22.10,0:22:23.08,Default,,0,0,0,,apps like Calendar.
Dialogue: 0,0:22:23.62,0:22:25.99,Default,,0,0,0,,Now that seems like a lot of
Dialogue: 0,0:22:25.99,0:22:27.36,Default,,0,0,0,,properties, but if we pull it
Dialogue: 0,0:22:27.36,0:22:28.55,Default,,0,0,0,,all together, we can fully
Dialogue: 0,0:22:28.55,0:22:30.08,Default,,0,0,0,,configure an NSScrubber in only
Dialogue: 0,0:22:30.08,0:22:31.01,Default,,0,0,0,,a couple lines of code.
Dialogue: 0,0:22:32.38,0:22:34.20,Default,,0,0,0,,So, we create our control, and
Dialogue: 0,0:22:34.20,0:22:35.45,Default,,0,0,0,,then we assign it a layout, a
Dialogue: 0,0:22:35.45,0:22:36.82,Default,,0,0,0,,delegate, and a dataSource.
Dialogue: 0,0:22:36.86,0:22:37.91,Default,,0,0,0,,We won't dwell on this, but I
Dialogue: 0,0:22:37.91,0:22:38.90,Default,,0,0,0,,promise we'll look at each of
Dialogue: 0,0:22:38.90,0:22:40.19,Default,,0,0,0,,them in turn in just a moment.
Dialogue: 0,0:22:41.30,0:22:42.22,Default,,0,0,0,,We decide how we want to
Dialogue: 0,0:22:42.22,0:22:43.25,Default,,0,0,0,,interact with the control.
Dialogue: 0,0:22:43.90,0:22:45.01,Default,,0,0,0,,In this case we want one that
Dialogue: 0,0:22:45.01,0:22:46.61,Default,,0,0,0,,scrolls freely, but has a
Dialogue: 0,0:22:46.61,0:22:47.90,Default,,0,0,0,,continuous selection as we
Dialogue: 0,0:22:47.90,0:22:48.27,Default,,0,0,0,,scroll.
Dialogue: 0,0:22:48.81,0:22:50.04,Default,,0,0,0,,And then we also want the
Dialogue: 0,0:22:50.04,0:22:51.23,Default,,0,0,0,,itemAlignment to be center so
Dialogue: 0,0:22:51.23,0:22:53.14,Default,,0,0,0,,that after we scroll, some item
Dialogue: 0,0:22:53.14,0:22:54.17,Default,,0,0,0,,always lands neatly in the
Dialogue: 0,0:22:54.17,0:22:54.44,Default,,0,0,0,,middle.
Dialogue: 0,0:22:56.06,0:22:56.90,Default,,0,0,0,,Then we'll choose what we want
Dialogue: 0,0:22:56.90,0:22:58.23,Default,,0,0,0,,our selection to look like, in
Dialogue: 0,0:22:58.23,0:22:59.07,Default,,0,0,0,,this case we're going to apply
Dialogue: 0,0:22:59.07,0:23:00.42,Default,,0,0,0,,both of the built-in effects.
Dialogue: 0,0:23:00.61,0:23:01.61,Default,,0,0,0,,And we'll turn on that nice
Dialogue: 0,0:23:01.61,0:23:03.01,Default,,0,0,0,,floating selection so that as
Dialogue: 0,0:23:03.01,0:23:04.46,Default,,0,0,0,,the selection changes, it floats
Dialogue: 0,0:23:04.46,0:23:05.73,Default,,0,0,0,,neatly between the views.
Dialogue: 0,0:23:06.79,0:23:07.82,Default,,0,0,0,,And then finally we'll apply
Dialogue: 0,0:23:07.82,0:23:08.93,Default,,0,0,0,,that cool textured background
Dialogue: 0,0:23:08.93,0:23:09.21,Default,,0,0,0,,color.
Dialogue: 0,0:23:09.90,0:23:10.99,Default,,0,0,0,,And with just these couple of
Dialogue: 0,0:23:10.99,0:23:12.28,Default,,0,0,0,,lines of code, we've produced
Dialogue: 0,0:23:12.28,0:23:13.52,Default,,0,0,0,,the blueprint for exactly
Dialogue: 0,0:23:13.52,0:23:14.58,Default,,0,0,0,,Calendar's scrubber that we've
Dialogue: 0,0:23:14.58,0:23:15.55,Default,,0,0,0,,been looking at this entire
Dialogue: 0,0:23:15.55,0:23:15.88,Default,,0,0,0,,time.
Dialogue: 0,0:23:16.69,0:23:20.18,Default,,0,0,0,,Now that we've configured the
Dialogue: 0,0:23:20.18,0:23:21.53,Default,,0,0,0,,control the way that we'd like,
Dialogue: 0,0:23:22.08,0:23:23.46,Default,,0,0,0,,we need to layout the items.
Dialogue: 0,0:23:23.50,0:23:25.13,Default,,0,0,0,,And that's done with the
Dialogue: 0,0:23:25.13,0:23:26.28,Default,,0,0,0,,NSScrubberLayout class.
Dialogue: 0,0:23:27.23,0:23:28.45,Default,,0,0,0,,This defines the arrangement of
Dialogue: 0,0:23:28.45,0:23:29.40,Default,,0,0,0,,all of the content within the
Dialogue: 0,0:23:29.40,0:23:31.10,Default,,0,0,0,,control and it does this
Dialogue: 0,0:23:31.10,0:23:32.40,Default,,0,0,0,,abstractly using these
Dialogue: 0,0:23:32.40,0:23:33.73,Default,,0,0,0,,NSScrubberLayoutAttributes
Dialogue: 0,0:23:33.73,0:23:34.88,Default,,0,0,0,,objects, which are essentially
Dialogue: 0,0:23:34.88,0:23:36.55,Default,,0,0,0,,value types that bundle up in
Dialogue: 0,0:23:36.55,0:23:38.49,Default,,0,0,0,,itemIndex, and where it should
Dialogue: 0,0:23:38.49,0:23:39.51,Default,,0,0,0,,be laid out within the
Dialogue: 0,0:23:39.51,0:23:42.26,Default,,0,0,0,,coordinate space of its content.
Dialogue: 0,0:23:43.35,0:23:45.13,Default,,0,0,0,,We provide a couple of built in
Dialogue: 0,0:23:45.13,0:23:46.67,Default,,0,0,0,,layouts that you can just pull
Dialogue: 0,0:23:46.67,0:23:47.74,Default,,0,0,0,,off the shelf and use if you'd
Dialogue: 0,0:23:47.74,0:23:48.96,Default,,0,0,0,,like to, you know, just really
Dialogue: 0,0:23:48.96,0:23:50.36,Default,,0,0,0,,quickly get started and that
Dialogue: 0,0:23:50.36,0:23:51.75,Default,,0,0,0,,includes a flow layout, which is
Dialogue: 0,0:23:51.75,0:23:54.26,Default,,0,0,0,,comparable to NSCollectionView
Dialogue: 0,0:23:54.26,0:23:54.88,Default,,0,0,0,,flow layout.
Dialogue: 0,0:23:55.46,0:23:56.35,Default,,0,0,0,,But if you want to define your
Dialogue: 0,0:23:56.35,0:23:57.95,Default,,0,0,0,,own, it's really not very hard.
Dialogue: 0,0:23:58.22,0:23:59.93,Default,,0,0,0,,There's only three key methods
Dialogue: 0,0:23:59.93,0:24:00.58,Default,,0,0,0,,that you really need to
Dialogue: 0,0:24:00.58,0:24:01.06,Default,,0,0,0,,implement.
Dialogue: 0,0:24:01.94,0:24:03.96,Default,,0,0,0,,The first, scrubberContentSize
Dialogue: 0,0:24:04.00,0:24:05.30,Default,,0,0,0,,defines the entire size of
Dialogue: 0,0:24:05.30,0:24:06.93,Default,,0,0,0,,everything in the control, and
Dialogue: 0,0:24:07.07,0:24:08.41,Default,,0,0,0,,this defines how far we can
Dialogue: 0,0:24:08.41,0:24:09.45,Default,,0,0,0,,scroll within all of the
Dialogue: 0,0:24:09.45,0:24:10.00,Default,,0,0,0,,content.
Dialogue: 0,0:24:11.26,0:24:12.09,Default,,0,0,0,,There is
Dialogue: 0,0:24:12.09,0:24:13.41,Default,,0,0,0,,layoutAttributesForItems in
Dialogue: 0,0:24:13.41,0:24:15.85,Default,,0,0,0,,rectangle, which provides a set
Dialogue: 0,0:24:15.85,0:24:17.25,Default,,0,0,0,,of the attributes for every item
Dialogue: 0,0:24:17.25,0:24:18.58,Default,,0,0,0,,that falls within some specific
Dialogue: 0,0:24:18.58,0:24:19.06,Default,,0,0,0,,rectangle.
Dialogue: 0,0:24:19.46,0:24:20.55,Default,,0,0,0,,And that might be the currently
Dialogue: 0,0:24:20.55,0:24:22.05,Default,,0,0,0,,visible rectangle or it might be
Dialogue: 0,0:24:22.05,0:24:23.15,Default,,0,0,0,,one that the user is about to
Dialogue: 0,0:24:23.15,0:24:24.13,Default,,0,0,0,,scroll to and you want to get
Dialogue: 0,0:24:24.13,0:24:25.19,Default,,0,0,0,,ready and lay everything out.
Dialogue: 0,0:24:25.19,0:24:27.41,Default,,0,0,0,,And then finally,
Dialogue: 0,0:24:27.41,0:24:28.66,Default,,0,0,0,,layoutAttributesForItem at
Dialogue: 0,0:24:28.66,0:24:29.78,Default,,0,0,0,,index, so we can determine the
Dialogue: 0,0:24:29.78,0:24:31.76,Default,,0,0,0,,layout for some specific item if
Dialogue: 0,0:24:31.76,0:24:33.06,Default,,0,0,0,,we need to.
Dialogue: 0,0:24:34.74,0:24:36.48,Default,,0,0,0,,The other half of the layout
Dialogue: 0,0:24:36.48,0:24:38.41,Default,,0,0,0,,life cycle is invalidation.
Dialogue: 0,0:24:39.40,0:24:40.91,Default,,0,0,0,,InvalidateLayout signals to the
Dialogue: 0,0:24:40.91,0:24:41.92,Default,,0,0,0,,control that your layout has
Dialogue: 0,0:24:41.92,0:24:43.44,Default,,0,0,0,,changed in some way and it needs
Dialogue: 0,0:24:43.44,0:24:45.35,Default,,0,0,0,,to refresh new fresh layout
Dialogue: 0,0:24:45.35,0:24:46.77,Default,,0,0,0,,information from the NSScrubber
Dialogue: 0,0:24:46.77,0:24:47.18,Default,,0,0,0,,layout.
Dialogue: 0,0:24:48.53,0:24:49.71,Default,,0,0,0,,Now, if your layout depends on
Dialogue: 0,0:24:49.71,0:24:50.70,Default,,0,0,0,,certain information like the
Dialogue: 0,0:24:50.70,0:24:52.09,Default,,0,0,0,,selection highlight or visible
Dialogue: 0,0:24:52.09,0:24:53.44,Default,,0,0,0,,rectangle like maybe you want to
Dialogue: 0,0:24:53.44,0:24:55.03,Default,,0,0,0,,make the selection be twice as
Dialogue: 0,0:24:55.03,0:24:57.06,Default,,0,0,0,,large as every other item, you
Dialogue: 0,0:24:57.06,0:24:58.38,Default,,0,0,0,,can optionally request that your
Dialogue: 0,0:24:58.45,0:25:00.37,Default,,0,0,0,,automatically invalidated when
Dialogue: 0,0:25:00.37,0:25:01.31,Default,,0,0,0,,those things change.
Dialogue: 0,0:25:01.53,0:25:02.42,Default,,0,0,0,,And this prevents you from
Dialogue: 0,0:25:02.42,0:25:04.14,Default,,0,0,0,,having to track that information
Dialogue: 0,0:25:04.14,0:25:05.47,Default,,0,0,0,,yourself and manually call
Dialogue: 0,0:25:05.47,0:25:06.33,Default,,0,0,0,,invalidate layout.
Dialogue: 0,0:25:07.79,0:25:09.72,Default,,0,0,0,,Finally, after your layouts been
Dialogue: 0,0:25:09.72,0:25:11.71,Default,,0,0,0,,invalidated, before we do any
Dialogue: 0,0:25:11.71,0:25:12.95,Default,,0,0,0,,further layout passes, we'll
Dialogue: 0,0:25:12.95,0:25:14.34,Default,,0,0,0,,call the prepare method on your
Dialogue: 0,0:25:14.34,0:25:15.07,Default,,0,0,0,,layout object.
Dialogue: 0,0:25:15.46,0:25:16.70,Default,,0,0,0,,The base implementation doesn't
Dialogue: 0,0:25:16.70,0:25:18.06,Default,,0,0,0,,do anything but this is a great
Dialogue: 0,0:25:18.06,0:25:19.92,Default,,0,0,0,,opportunity for your subclass to
Dialogue: 0,0:25:20.15,0:25:21.78,Default,,0,0,0,,run some calculations, do some
Dialogue: 0,0:25:21.78,0:25:22.76,Default,,0,0,0,,measurements, and prepare some
Dialogue: 0,0:25:22.76,0:25:24.21,Default,,0,0,0,,caches so that subsequent
Dialogue: 0,0:25:24.21,0:25:25.60,Default,,0,0,0,,outcalls are really fast.
Dialogue: 0,0:25:26.19,0:25:28.97,Default,,0,0,0,,And that's all you need to do to
Dialogue: 0,0:25:28.97,0:25:29.87,Default,,0,0,0,,put together a layout.
Dialogue: 0,0:25:30.99,0:25:31.97,Default,,0,0,0,,Now that we've configured our
Dialogue: 0,0:25:31.97,0:25:33.36,Default,,0,0,0,,control and we want, we know how
Dialogue: 0,0:25:33.36,0:25:34.27,Default,,0,0,0,,we want to arrange all of our
Dialogue: 0,0:25:34.27,0:25:35.46,Default,,0,0,0,,content, we need to get our
Dialogue: 0,0:25:35.46,0:25:36.83,Default,,0,0,0,,content into the control in the
Dialogue: 0,0:25:36.83,0:25:37.62,Default,,0,0,0,,first place.
Dialogue: 0,0:25:39.42,0:25:40.92,Default,,0,0,0,,Content in NSScrubber is
Dialogue: 0,0:25:40.92,0:25:42.32,Default,,0,0,0,,represented using simple views,
Dialogue: 0,0:25:42.32,0:25:43.44,Default,,0,0,0,,subclasses of the
Dialogue: 0,0:25:43.44,0:25:45.50,Default,,0,0,0,,NSScrubberItemView class, and
Dialogue: 0,0:25:45.50,0:25:46.42,Default,,0,0,0,,that's comparable to
Dialogue: 0,0:25:46.58,0:25:47.51,Default,,0,0,0,,NSTableCellView.
Dialogue: 0,0:25:48.92,0:25:50.56,Default,,0,0,0,,Like NSTableCell, or like
Dialogue: 0,0:25:50.56,0:25:52.07,Default,,0,0,0,,NSTable and NSCollectionView,
Dialogue: 0,0:25:52.53,0:25:54.05,Default,,0,0,0,,NSScrubber provides a reuse
Dialogue: 0,0:25:54.05,0:25:54.94,Default,,0,0,0,,queue so that you can
Dialogue: 0,0:25:54.94,0:25:56.48,Default,,0,0,0,,efficiently recycle views as
Dialogue: 0,0:25:56.48,0:25:57.76,Default,,0,0,0,,they cycle out of the control,
Dialogue: 0,0:25:58.21,0:25:59.50,Default,,0,0,0,,rather than allocating a brand
Dialogue: 0,0:25:59.50,0:26:00.47,Default,,0,0,0,,new one every time it's
Dialogue: 0,0:26:00.47,0:26:01.05,Default,,0,0,0,,requested.
Dialogue: 0,0:26:01.85,0:26:03.40,Default,,0,0,0,,The dataSource protocol for
Dialogue: 0,0:26:03.50,0:26:04.78,Default,,0,0,0,,NSScrubber is really super
Dialogue: 0,0:26:04.78,0:26:05.17,Default,,0,0,0,,simple.
Dialogue: 0,0:26:05.39,0:26:06.80,Default,,0,0,0,,There's only two methods that
Dialogue: 0,0:26:06.80,0:26:07.56,Default,,0,0,0,,you have to implement.
Dialogue: 0,0:26:08.15,0:26:09.36,Default,,0,0,0,,The numberOfItems in the entire
Dialogue: 0,0:26:09.36,0:26:10.76,Default,,0,0,0,,control, and then you just need
Dialogue: 0,0:26:10.76,0:26:12.52,Default,,0,0,0,,to be able to prepare a view
Dialogue: 0,0:26:12.52,0:26:14.11,Default,,0,0,0,,that represents a specific item.
Dialogue: 0,0:26:15.72,0:26:17.04,Default,,0,0,0,,To aid you in this task, we have
Dialogue: 0,0:26:17.04,0:26:18.65,Default,,0,0,0,,two built-in NSScrubberItemView
Dialogue: 0,0:26:18.65,0:26:19.43,Default,,0,0,0,,subclasses.
Dialogue: 0,0:26:19.56,0:26:21.81,Default,,0,0,0,,We have a TextItem and all you
Dialogue: 0,0:26:21.81,0:26:22.92,Default,,0,0,0,,need to do is provide a string
Dialogue: 0,0:26:22.92,0:26:24.04,Default,,0,0,0,,that you'd like to present and
Dialogue: 0,0:26:24.04,0:26:25.09,Default,,0,0,0,,we'll present it in a way that
Dialogue: 0,0:26:25.09,0:26:26.45,Default,,0,0,0,,is consistent with many similar
Dialogue: 0,0:26:26.45,0:26:27.61,Default,,0,0,0,,controls across the operating
Dialogue: 0,0:26:27.61,0:26:27.98,Default,,0,0,0,,system.
Dialogue: 0,0:26:28.85,0:26:30.09,Default,,0,0,0,,And then we also have an image
Dialogue: 0,0:26:30.09,0:26:32.30,Default,,0,0,0,,view class, which provides
Dialogue: 0,0:26:32.30,0:26:34.28,Default,,0,0,0,,aspect fill presentation of your
Dialogue: 0,0:26:34.28,0:26:35.49,Default,,0,0,0,,image and then allows you to
Dialogue: 0,0:26:35.49,0:26:36.99,Default,,0,0,0,,specify an alignment beyond
Dialogue: 0,0:26:37.88,0:26:38.00,Default,,0,0,0,,that.
Dialogue: 0,0:26:38.73,0:26:39.74,Default,,0,0,0,,Now, if neither of these are
Dialogue: 0,0:26:39.74,0:26:40.91,Default,,0,0,0,,exactly what you're looking for,
Dialogue: 0,0:26:41.16,0:26:42.31,Default,,0,0,0,,you can alway subclass
Dialogue: 0,0:26:42.36,0:26:43.73,Default,,0,0,0,,NSScrubberItemView and just do
Dialogue: 0,0:26:43.73,0:26:44.92,Default,,0,0,0,,whatever drawing you'd like.
Dialogue: 0,0:26:45.91,0:26:47.17,Default,,0,0,0,,When you do this, you get access
Dialogue: 0,0:26:47.17,0:26:48.49,Default,,0,0,0,,to a couple of nice properties.
Dialogue: 0,0:26:48.49,0:26:49.51,Default,,0,0,0,,You get isSelected and
Dialogue: 0,0:26:49.51,0:26:50.88,Default,,0,0,0,,isHighlighted, which you can use
Dialogue: 0,0:26:50.88,0:26:52.08,Default,,0,0,0,,to alter your drawing based on
Dialogue: 0,0:26:52.08,0:26:52.63,Default,,0,0,0,,that state.
Dialogue: 0,0:26:52.98,0:26:53.80,Default,,0,0,0,,And your drawing will be
Dialogue: 0,0:26:53.80,0:26:55.17,Default,,0,0,0,,automatically invalidated when
Dialogue: 0,0:26:55.17,0:26:56.27,Default,,0,0,0,,these change so you don't need
Dialogue: 0,0:26:56.27,0:26:57.26,Default,,0,0,0,,to observe them yourself.
Dialogue: 0,0:26:57.89,0:26:59.77,Default,,0,0,0,,And you can also override the
Dialogue: 0,0:26:59.77,0:27:01.18,Default,,0,0,0,,applyLayoutAttributes method,
Dialogue: 0,0:27:01.53,0:27:03.18,Default,,0,0,0,,which allows you to inspect and
Dialogue: 0,0:27:03.18,0:27:04.32,Default,,0,0,0,,interpret the attributes, which
Dialogue: 0,0:27:04.32,0:27:05.46,Default,,0,0,0,,were produced by the layout
Dialogue: 0,0:27:05.46,0:27:05.97,Default,,0,0,0,,object.
Dialogue: 0,0:27:06.55,0:27:08.97,Default,,0,0,0,,And that's how you provide
Dialogue: 0,0:27:08.97,0:27:09.45,Default,,0,0,0,,content.
Dialogue: 0,0:27:10.30,0:27:12.12,Default,,0,0,0,,Finally, we assume that the user
Dialogue: 0,0:27:12.12,0:27:13.76,Default,,0,0,0,,is going to use this, this
Dialogue: 0,0:27:13.76,0:27:14.81,Default,,0,0,0,,control and so we want to
Dialogue: 0,0:27:14.81,0:27:15.55,Default,,0,0,0,,respond to that.
Dialogue: 0,0:27:16.57,0:27:18.00,Default,,0,0,0,,And that's done using a delegate
Dialogue: 0,0:27:18.00,0:27:18.49,Default,,0,0,0,,protocol.
Dialogue: 0,0:27:19.19,0:27:20.18,Default,,0,0,0,,You can be informed when the
Dialogue: 0,0:27:20.18,0:27:21.60,Default,,0,0,0,,selection changes, the highlight
Dialogue: 0,0:27:21.60,0:27:23.55,Default,,0,0,0,,changes, and if the range of the
Dialogue: 0,0:27:23.55,0:27:24.64,Default,,0,0,0,,visible items in the control
Dialogue: 0,0:27:24.64,0:27:26.06,Default,,0,0,0,,changes due to either scrolling
Dialogue: 0,0:27:26.06,0:27:27.23,Default,,0,0,0,,or layout.
Dialogue: 0,0:27:28.10,0:27:29.40,Default,,0,0,0,,You can also be informed when
Dialogue: 0,0:27:29.40,0:27:31.24,Default,,0,0,0,,interaction begins, ends, or is
Dialogue: 0,0:27:31.24,0:27:31.76,Default,,0,0,0,,cancelled.
Dialogue: 0,0:27:32.01,0:27:33.23,Default,,0,0,0,,And this might be useful for
Dialogue: 0,0:27:33.23,0:27:35.12,Default,,0,0,0,,example, to create an undo
Dialogue: 0,0:27:35.21,0:27:36.61,Default,,0,0,0,,grouping around a single
Dialogue: 0,0:27:36.61,0:27:37.72,Default,,0,0,0,,interaction with the control.
Dialogue: 0,0:27:37.72,0:27:39.23,Default,,0,0,0,,So, as the user is rapidly
Dialogue: 0,0:27:39.23,0:27:40.50,Default,,0,0,0,,scrubbing through, you can
Dialogue: 0,0:27:40.50,0:27:42.56,Default,,0,0,0,,bundle all of those changes into
Dialogue: 0,0:27:42.56,0:27:43.79,Default,,0,0,0,,a single undo grouping.
Dialogue: 0,0:27:44.72,0:27:48.47,Default,,0,0,0,,And that's all you need to do to
Dialogue: 0,0:27:48.47,0:27:49.26,Default,,0,0,0,,put together your own
Dialogue: 0,0:27:49.33,0:27:49.95,Default,,0,0,0,,NSScrubber.
Dialogue: 0,0:27:49.95,0:27:52.64,Default,,0,0,0,,I hope you've, you've come up
Dialogue: 0,0:27:52.64,0:27:53.63,Default,,0,0,0,,with some great ideas for
Dialogue: 0,0:27:53.63,0:27:54.78,Default,,0,0,0,,content in your application you
Dialogue: 0,0:27:54.78,0:27:55.90,Default,,0,0,0,,can surface with this control.
Dialogue: 0,0:27:57.35,0:28:00.67,Default,,0,0,0,,But, we've -- between the
Dialogue: 0,0:28:00.67,0:28:03.07,Default,,0,0,0,,Fundamentals talk and this one,
Dialogue: 0,0:28:03.55,0:28:04.45,Default,,0,0,0,,we spent a lot of time
Dialogue: 0,0:28:04.45,0:28:05.55,Default,,0,0,0,,explaining how to use AppKit's
Dialogue: 0,0:28:05.55,0:28:07.57,Default,,0,0,0,,built-in controls and classes to
Dialogue: 0,0:28:07.57,0:28:08.61,Default,,0,0,0,,really build up your Touch Bar
Dialogue: 0,0:28:08.61,0:28:09.22,Default,,0,0,0,,experience.
Dialogue: 0,0:28:10.07,0:28:11.74,Default,,0,0,0,,But if you want to, to really
Dialogue: 0,0:28:11.74,0:28:13.18,Default,,0,0,0,,unleash your creativity and
Dialogue: 0,0:28:13.18,0:28:14.46,Default,,0,0,0,,build something truly custom,
Dialogue: 0,0:28:14.95,0:28:16.14,Default,,0,0,0,,you're going to want to stay put
Dialogue: 0,0:28:16.14,0:28:17.06,Default,,0,0,0,,for the next section where
Dialogue: 0,0:28:17.06,0:28:18.10,Default,,0,0,0,,Taylor is going to walk you
Dialogue: 0,0:28:18.10,0:28:19.75,Default,,0,0,0,,through doing -- doing
Dialogue: 0,0:28:20.06,0:28:22.17,Default,,0,0,0,,completely custom controls for
Dialogue: 0,0:28:22.17,0:28:22.72,Default,,0,0,0,,Touch Bar.
Dialogue: 0,0:28:23.78,0:28:23.93,Default,,0,0,0,,Thanks.
Dialogue: 0,0:28:24.34,0:28:26.34,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:28:27.62,0:28:30.34,Default,,0,0,0,,>> Here they go.
Dialogue: 0,0:28:31.35,0:28:35.45,Default,,0,0,0,,Hello. So, when it comes to
Dialogue: 0,0:28:35.45,0:28:36.79,Default,,0,0,0,,building custom controls for the
Dialogue: 0,0:28:36.79,0:28:38.51,Default,,0,0,0,,Touch Bar there are four areas
Dialogue: 0,0:28:38.51,0:28:39.57,Default,,0,0,0,,that you want to keep in mind.
Dialogue: 0,0:28:40.19,0:28:41.92,Default,,0,0,0,,The first is handling the touch
Dialogue: 0,0:28:41.92,0:28:43.00,Default,,0,0,0,,events that are coming in.
Dialogue: 0,0:28:43.68,0:28:45.51,Default,,0,0,0,,Second is styling your view so
Dialogue: 0,0:28:45.51,0:28:46.62,Default,,0,0,0,,it looks and feels at home in
Dialogue: 0,0:28:46.62,0:28:47.18,Default,,0,0,0,,the Touch Bar.
Dialogue: 0,0:28:47.96,0:28:49.44,Default,,0,0,0,,Third is making sure it's the
Dialogue: 0,0:28:49.44,0:28:51.08,Default,,0,0,0,,right size and position amongst
Dialogue: 0,0:28:51.08,0:28:52.10,Default,,0,0,0,,all the other controls.
Dialogue: 0,0:28:52.59,0:28:54.04,Default,,0,0,0,,And finally it's tying
Dialogue: 0,0:28:54.04,0:28:55.39,Default,,0,0,0,,everything together by applying
Dialogue: 0,0:28:55.39,0:28:56.40,Default,,0,0,0,,a little bit of animation.
Dialogue: 0,0:28:57.29,0:28:58.63,Default,,0,0,0,,Let's get started with event
Dialogue: 0,0:28:58.63,0:28:59.03,Default,,0,0,0,,handling.
Dialogue: 0,0:28:59.30,0:29:01.20,Default,,0,0,0,,Now the obvious thing here is
Dialogue: 0,0:29:01.20,0:29:02.88,Default,,0,0,0,,that we have direct touches on
Dialogue: 0,0:29:02.88,0:29:03.13,Default,,0,0,0,,the Mac.
Dialogue: 0,0:29:04.13,0:29:05.27,Default,,0,0,0,,And I really want to qualify the
Dialogue: 0,0:29:05.27,0:29:07.01,Default,,0,0,0,,difference between direct and
Dialogue: 0,0:29:07.01,0:29:07.78,Default,,0,0,0,,indirect touches.
Dialogue: 0,0:29:08.89,0:29:09.95,Default,,0,0,0,,Those of you who are might be
Dialogue: 0,0:29:09.95,0:29:11.39,Default,,0,0,0,,iList developers are already
Dialogue: 0,0:29:11.39,0:29:12.53,Default,,0,0,0,,familiar with this distinction
Dialogue: 0,0:29:12.81,0:29:14.24,Default,,0,0,0,,where you have direct touches,
Dialogue: 0,0:29:14.24,0:29:14.94,Default,,0,0,0,,where you're directly
Dialogue: 0,0:29:14.94,0:29:16.26,Default,,0,0,0,,manipulating content on the
Dialogue: 0,0:29:16.26,0:29:18.12,Default,,0,0,0,,iPhone or iPad versus the
Dialogue: 0,0:29:18.12,0:29:19.83,Default,,0,0,0,,indirect touches on the Siri
Dialogue: 0,0:29:19.83,0:29:21.36,Default,,0,0,0,,Remote's touch surface.
Dialogue: 0,0:29:21.63,0:29:22.34,Default,,0,0,0,,Where you're remotely
Dialogue: 0,0:29:22.34,0:29:23.30,Default,,0,0,0,,interacting content that's
Dialogue: 0,0:29:23.30,0:29:24.23,Default,,0,0,0,,actually on the TV.
Dialogue: 0,0:29:25.35,0:29:26.97,Default,,0,0,0,,On the new MacBook Pros, we have
Dialogue: 0,0:29:27.09,0:29:28.25,Default,,0,0,0,,both of these in a single
Dialogue: 0,0:29:28.25,0:29:28.89,Default,,0,0,0,,device.
Dialogue: 0,0:29:29.66,0:29:31.11,Default,,0,0,0,,We've already had indirect
Dialogue: 0,0:29:31.11,0:29:32.46,Default,,0,0,0,,touches on the gesture-rich
Dialogue: 0,0:29:32.46,0:29:33.83,Default,,0,0,0,,trackpads, where you can get
Dialogue: 0,0:29:33.83,0:29:35.92,Default,,0,0,0,,access to individual touches on
Dialogue: 0,0:29:35.92,0:29:36.47,Default,,0,0,0,,that trackpad.
Dialogue: 0,0:29:37.73,0:29:39.01,Default,,0,0,0,,Now, with the Touch Bar, we
Dialogue: 0,0:29:39.01,0:29:40.50,Default,,0,0,0,,support having direct touches
Dialogue: 0,0:29:40.50,0:29:41.38,Default,,0,0,0,,where you can directly
Dialogue: 0,0:29:41.38,0:29:42.66,Default,,0,0,0,,manipulate content on the
Dialogue: 0,0:29:42.66,0:29:43.10,Default,,0,0,0,,screen.
Dialogue: 0,0:29:43.67,0:29:46.76,Default,,0,0,0,,So, the existing NSTouch class
Dialogue: 0,0:29:46.76,0:29:48.23,Default,,0,0,0,,has now been extended to add a
Dialogue: 0,0:29:48.23,0:29:49.89,Default,,0,0,0,,TouchType to describe whether it
Dialogue: 0,0:29:49.89,0:29:51.09,Default,,0,0,0,,is this direct or indirect
Dialogue: 0,0:29:51.09,0:29:51.49,Default,,0,0,0,,touch.
Dialogue: 0,0:29:52.53,0:29:53.93,Default,,0,0,0,,For direct touches, you can now
Dialogue: 0,0:29:53.93,0:29:55.14,Default,,0,0,0,,get the location of that touch
Dialogue: 0,0:29:55.25,0:29:56.15,Default,,0,0,0,,provided some view.
Dialogue: 0,0:29:56.70,0:29:57.62,Default,,0,0,0,,And providing that view is
Dialogue: 0,0:29:57.62,0:29:59.16,Default,,0,0,0,,extremely important because it
Dialogue: 0,0:29:59.16,0:30:00.41,Default,,0,0,0,,provides the coordinate space
Dialogue: 0,0:30:00.41,0:30:01.31,Default,,0,0,0,,for what that point will be
Dialogue: 0,0:30:01.31,0:30:01.97,Default,,0,0,0,,relative to.
Dialogue: 0,0:30:03.02,0:30:04.44,Default,,0,0,0,,As an example, when the user
Dialogue: 0,0:30:04.44,0:30:06.58,Default,,0,0,0,,taps down on the slider, we want
Dialogue: 0,0:30:06.58,0:30:07.61,Default,,0,0,0,,to get the location of that
Dialogue: 0,0:30:07.61,0:30:09.49,Default,,0,0,0,,touch, relative to the slider as
Dialogue: 0,0:30:09.49,0:30:11.13,Default,,0,0,0,,a whole, and we can take that
Dialogue: 0,0:30:11.13,0:30:12.38,Default,,0,0,0,,offset and simply divide it by
Dialogue: 0,0:30:12.38,0:30:14.02,Default,,0,0,0,,the overall width to get our new
Dialogue: 0,0:30:14.02,0:30:14.45,Default,,0,0,0,,value.
Dialogue: 0,0:30:15.08,0:30:16.12,Default,,0,0,0,,It's pretty straightforward.
Dialogue: 0,0:30:17.39,0:30:19.07,Default,,0,0,0,,Now, one very important
Dialogue: 0,0:30:19.07,0:30:20.53,Default,,0,0,0,,difference with NSTouch and
Dialogue: 0,0:30:20.53,0:30:22.61,Default,,0,0,0,,UITouch is that while UITouch is
Dialogue: 0,0:30:22.61,0:30:24.00,Default,,0,0,0,,this long lived object whose
Dialogue: 0,0:30:24.00,0:30:25.54,Default,,0,0,0,,location will update over time,
Dialogue: 0,0:30:25.99,0:30:27.16,Default,,0,0,0,,NSTouch is essentially a
Dialogue: 0,0:30:27.16,0:30:28.77,Default,,0,0,0,,value-type snapshot of that
Dialogue: 0,0:30:28.77,0:30:31.45,Default,,0,0,0,,touch on -- at a certain point
Dialogue: 0,0:30:31.45,0:30:32.61,Default,,0,0,0,,in time in that gesture.
Dialogue: 0,0:30:33.23,0:30:34.23,Default,,0,0,0,,And you can use the identify
Dialogue: 0,0:30:34.23,0:30:35.96,Default,,0,0,0,,property to tie a sequence of
Dialogue: 0,0:30:35.96,0:30:37.37,Default,,0,0,0,,touches together when forming a
Dialogue: 0,0:30:37.37,0:30:37.83,Default,,0,0,0,,gesture.
Dialogue: 0,0:30:38.62,0:30:39.98,Default,,0,0,0,,So, as events are coming in
Dialogue: 0,0:30:39.98,0:30:41.38,Default,,0,0,0,,through the Touch Bar, each of
Dialogue: 0,0:30:41.38,0:30:42.37,Default,,0,0,0,,these events will contain a
Dialogue: 0,0:30:42.37,0:30:44.09,Default,,0,0,0,,collection of one or more
Dialogue: 0,0:30:44.09,0:30:44.53,Default,,0,0,0,,touches.
Dialogue: 0,0:30:45.62,0:30:46.64,Default,,0,0,0,,And each of these touches are
Dialogue: 0,0:30:46.64,0:30:48.24,Default,,0,0,0,,unique instances, so again the
Dialogue: 0,0:30:48.24,0:30:49.70,Default,,0,0,0,,way you tie them together is by
Dialogue: 0,0:30:49.70,0:30:50.67,Default,,0,0,0,,looking at that identity
Dialogue: 0,0:30:50.67,0:30:51.12,Default,,0,0,0,,property.
Dialogue: 0,0:30:52.17,0:30:53.36,Default,,0,0,0,,So, even when the user touches
Dialogue: 0,0:30:53.36,0:30:54.87,Default,,0,0,0,,down with multiple fingers, we
Dialogue: 0,0:30:54.87,0:30:56.08,Default,,0,0,0,,can distinguish which is the one
Dialogue: 0,0:30:56.08,0:30:58.99,Default,,0,0,0,,we're tracking by comparing its
Dialogue: 0,0:30:58.99,0:31:00.62,Default,,0,0,0,,identity to the one that we're
Dialogue: 0,0:31:00.62,0:31:01.02,Default,,0,0,0,,tracking.
Dialogue: 0,0:31:01.02,0:31:02.67,Default,,0,0,0,,We can make this a little bit
Dialogue: 0,0:31:02.67,0:31:03.82,Default,,0,0,0,,more concrete with some code.
Dialogue: 0,0:31:04.43,0:31:05.66,Default,,0,0,0,,So, we want to keep a variable
Dialogue: 0,0:31:05.66,0:31:06.86,Default,,0,0,0,,to hold onto that opaque
Dialogue: 0,0:31:06.86,0:31:07.75,Default,,0,0,0,,identity object.
Dialogue: 0,0:31:08.33,0:31:09.58,Default,,0,0,0,,When we first get some touches
Dialogue: 0,0:31:09.58,0:31:10.99,Default,,0,0,0,,on our view, we go through
Dialogue: 0,0:31:10.99,0:31:12.70,Default,,0,0,0,,those, pick up the first one,
Dialogue: 0,0:31:13.07,0:31:14.51,Default,,0,0,0,,and save its identity as the one
Dialogue: 0,0:31:14.51,0:31:15.08,Default,,0,0,0,,we're tracking.
Dialogue: 0,0:31:15.87,0:31:17.06,Default,,0,0,0,,Later, when additional touches
Dialogue: 0,0:31:17.06,0:31:18.58,Default,,0,0,0,,come in, we go through the ones
Dialogue: 0,0:31:18.58,0:31:20.81,Default,,0,0,0,,that have changed, and compare
Dialogue: 0,0:31:20.81,0:31:21.75,Default,,0,0,0,,each of their identity to the
Dialogue: 0,0:31:21.75,0:31:23.16,Default,,0,0,0,,one we're tracking to find our
Dialogue: 0,0:31:23.16,0:31:23.84,Default,,0,0,0,,new touch.
Dialogue: 0,0:31:24.27,0:31:25.65,Default,,0,0,0,,We can now use that new location
Dialogue: 0,0:31:25.65,0:31:27.50,Default,,0,0,0,,to update any events in our
Dialogue: 0,0:31:27.50,0:31:27.79,Default,,0,0,0,,view.
Dialogue: 0,0:31:29.14,0:31:30.34,Default,,0,0,0,,Now, where do these events and
Dialogue: 0,0:31:30.34,0:31:31.17,Default,,0,0,0,,touches come from?
Dialogue: 0,0:31:31.84,0:31:32.95,Default,,0,0,0,,Well, one place are these
Dialogue: 0,0:31:32.95,0:31:34.51,Default,,0,0,0,,existing NSResponder methods
Dialogue: 0,0:31:34.69,0:31:36.69,Default,,0,0,0,,touchesBegan, Moved, Ended, and
Dialogue: 0,0:31:36.69,0:31:38.23,Default,,0,0,0,,Cancelled, which will be called
Dialogue: 0,0:31:38.23,0:31:39.48,Default,,0,0,0,,back over the lifecycle of our
Dialogue: 0,0:31:39.48,0:31:39.81,Default,,0,0,0,,view.
Dialogue: 0,0:31:40.64,0:31:41.84,Default,,0,0,0,,We can opt into receiving them
Dialogue: 0,0:31:41.84,0:31:43.17,Default,,0,0,0,,by setting the allowedTouchTypes
Dialogue: 0,0:31:43.17,0:31:44.48,Default,,0,0,0,,to include direct or indirect
Dialogue: 0,0:31:44.48,0:31:46.01,Default,,0,0,0,,touches, but once you link on
Dialogue: 0,0:31:46.01,0:31:47.54,Default,,0,0,0,,the Sierra SDK, you'll be
Dialogue: 0,0:31:47.54,0:31:48.67,Default,,0,0,0,,automatically opted in to
Dialogue: 0,0:31:48.67,0:31:51.26,Default,,0,0,0,,receiving direct touches.
Dialogue: 0,0:31:51.40,0:31:52.79,Default,,0,0,0,,One really important method here
Dialogue: 0,0:31:52.79,0:31:53.92,Default,,0,0,0,,is toucheisCancelled.
Dialogue: 0,0:31:54.72,0:31:55.52,Default,,0,0,0,,While there's not really a
Dialogue: 0,0:31:55.52,0:31:57.02,Default,,0,0,0,,notion of cancelling mouse
Dialogue: 0,0:31:57.02,0:31:58.29,Default,,0,0,0,,tracking events, this is
Dialogue: 0,0:31:58.29,0:31:59.27,Default,,0,0,0,,extremely important for the
Dialogue: 0,0:31:59.27,0:32:00.68,Default,,0,0,0,,Touch Bar because it's so
Dialogue: 0,0:32:00.68,0:32:01.57,Default,,0,0,0,,context sensitive.
Dialogue: 0,0:32:02.32,0:32:03.74,Default,,0,0,0,,As the user switches active
Dialogue: 0,0:32:03.74,0:32:05.25,Default,,0,0,0,,applications, or active windows,
Dialogue: 0,0:32:05.58,0:32:06.61,Default,,0,0,0,,the content in the Touch Bar
Dialogue: 0,0:32:06.61,0:32:08.60,Default,,0,0,0,,will reflect that and if the
Dialogue: 0,0:32:08.60,0:32:09.83,Default,,0,0,0,,user's interacting with any
Dialogue: 0,0:32:09.83,0:32:11.38,Default,,0,0,0,,views at that moment, we'll send
Dialogue: 0,0:32:11.38,0:32:12.85,Default,,0,0,0,,touchesCancelled so it can clean
Dialogue: 0,0:32:12.85,0:32:14.57,Default,,0,0,0,,up any event handling, but
Dialogue: 0,0:32:14.57,0:32:15.61,Default,,0,0,0,,separate that from the user
Dialogue: 0,0:32:15.61,0:32:16.70,Default,,0,0,0,,actually lifting their finger.
Dialogue: 0,0:32:17.17,0:32:19.24,Default,,0,0,0,,However, for the most part, you
Dialogue: 0,0:32:19.24,0:32:20.01,Default,,0,0,0,,actually don't have to worry
Dialogue: 0,0:32:20.01,0:32:21.44,Default,,0,0,0,,about this, and you can just use
Dialogue: 0,0:32:21.44,0:32:22.69,Default,,0,0,0,,gestureRecognizers.
Dialogue: 0,0:32:23.24,0:32:24.24,Default,,0,0,0,,These have gained all these same
Dialogue: 0,0:32:24.24,0:32:26.21,Default,,0,0,0,,methods to for subclasses to
Dialogue: 0,0:32:26.21,0:32:27.21,Default,,0,0,0,,implement so they can handle
Dialogue: 0,0:32:27.21,0:32:28.62,Default,,0,0,0,,touches, as well as the same
Dialogue: 0,0:32:28.62,0:32:30.00,Default,,0,0,0,,opt-in method with the only
Dialogue: 0,0:32:30.00,0:32:30.97,Default,,0,0,0,,difference here being your
Dialogue: 0,0:32:30.97,0:32:32.30,Default,,0,0,0,,explicitly have to opt-in,
Dialogue: 0,0:32:32.66,0:32:33.81,Default,,0,0,0,,there's no automatic link check.
Dialogue: 0,0:32:35.19,0:32:36.28,Default,,0,0,0,,And pretty much you can use all
Dialogue: 0,0:32:36.28,0:32:37.56,Default,,0,0,0,,the built in GestureRecognizers,
Dialogue: 0,0:32:37.56,0:32:38.89,Default,,0,0,0,,which now work in the Touch Bar.
Dialogue: 0,0:32:39.58,0:32:40.67,Default,,0,0,0,,For instance, the color picker
Dialogue: 0,0:32:40.67,0:32:42.09,Default,,0,0,0,,simply uses a combination of
Dialogue: 0,0:32:42.14,0:32:43.78,Default,,0,0,0,,press and pan recognizers to
Dialogue: 0,0:32:43.78,0:32:44.83,Default,,0,0,0,,implement all of its event
Dialogue: 0,0:32:44.83,0:32:45.20,Default,,0,0,0,,handling.
Dialogue: 0,0:32:45.61,0:32:46.84,Default,,0,0,0,,It had to do no extra work.
Dialogue: 0,0:32:46.84,0:32:49.11,Default,,0,0,0,,But it's important to remember
Dialogue: 0,0:32:49.11,0:32:50.58,Default,,0,0,0,,even for these you still do have
Dialogue: 0,0:32:50.58,0:32:52.09,Default,,0,0,0,,to opt them in to receiving
Dialogue: 0,0:32:52.09,0:32:53.55,Default,,0,0,0,,direct touches when you do use
Dialogue: 0,0:32:53.55,0:32:55.91,Default,,0,0,0,,them in the Touch Bar.
Dialogue: 0,0:32:56.13,0:32:57.26,Default,,0,0,0,,Now, one really interesting
Dialogue: 0,0:32:57.26,0:32:58.36,Default,,0,0,0,,context when it comes to event
Dialogue: 0,0:32:58.36,0:32:59.38,Default,,0,0,0,,handling, are inside
Dialogue: 0,0:32:59.38,0:33:00.51,Default,,0,0,0,,Press-and-Hold popovers.
Dialogue: 0,0:33:01.33,0:33:02.49,Default,,0,0,0,,In the Fundamentals section you
Dialogue: 0,0:33:02.49,0:33:03.35,Default,,0,0,0,,heard how you can set the
Dialogue: 0,0:33:03.35,0:33:04.67,Default,,0,0,0,,Press-and-Hold Touch Bar of your
Dialogue: 0,0:33:04.67,0:33:06.94,Default,,0,0,0,,NSTouchBar to have it when the
Dialogue: 0,0:33:06.94,0:33:08.09,Default,,0,0,0,,user long presses on that
Dialogue: 0,0:33:08.12,0:33:09.77,Default,,0,0,0,,button, for it to immediately
Dialogue: 0,0:33:09.77,0:33:10.80,Default,,0,0,0,,present some very simple lists
Dialogue: 0,0:33:10.80,0:33:11.00,Default,,0,0,0,,like UI.
Dialogue: 0,0:33:12.59,0:33:13.55,Default,,0,0,0,,You can put your own custom
Dialogue: 0,0:33:13.55,0:33:14.83,Default,,0,0,0,,views in here and as the user
Dialogue: 0,0:33:14.83,0:33:16.21,Default,,0,0,0,,continues that gesture and pans
Dialogue: 0,0:33:16.21,0:33:17.82,Default,,0,0,0,,over your view, you'll get call
Dialogue: 0,0:33:17.82,0:33:19.87,Default,,0,0,0,,to touchesBegan, Moved, and
Dialogue: 0,0:33:19.87,0:33:21.47,Default,,0,0,0,,Cancelled as they exit the view,
Dialogue: 0,0:33:21.75,0:33:22.73,Default,,0,0,0,,and finally once they lift their
Dialogue: 0,0:33:22.73,0:33:23.85,Default,,0,0,0,,finger, the Touch Bar will be
Dialogue: 0,0:33:23.85,0:33:24.41,Default,,0,0,0,,dismissed.
Dialogue: 0,0:33:25.31,0:33:26.41,Default,,0,0,0,,However, because of this very
Dialogue: 0,0:33:26.41,0:33:27.66,Default,,0,0,0,,unique event handling model,
Dialogue: 0,0:33:27.89,0:33:29.02,Default,,0,0,0,,GestureRecognizers are not
Dialogue: 0,0:33:29.02,0:33:30.37,Default,,0,0,0,,supported in this context, so
Dialogue: 0,0:33:30.42,0:33:31.31,Default,,0,0,0,,you have to use those
Dialogue: 0,0:33:31.31,0:33:32.23,Default,,0,0,0,,NSResponder methods.
Dialogue: 0,0:33:33.12,0:33:34.24,Default,,0,0,0,,However, again, outside of
Dialogue: 0,0:33:34.30,0:33:35.76,Default,,0,0,0,,Press-and-Hold popovers it's so
Dialogue: 0,0:33:35.76,0:33:36.97,Default,,0,0,0,,much simpler just to use
Dialogue: 0,0:33:36.97,0:33:37.84,Default,,0,0,0,,GestureRecognizers.
Dialogue: 0,0:33:39.51,0:33:41.04,Default,,0,0,0,,One very interesting aspect of
Dialogue: 0,0:33:41.04,0:33:42.66,Default,,0,0,0,,the Touch Bar is around event
Dialogue: 0,0:33:42.66,0:33:43.38,Default,,0,0,0,,modality.
Dialogue: 0,0:33:44.27,0:33:45.39,Default,,0,0,0,,Since the Touch Bar is this
Dialogue: 0,0:33:45.39,0:33:47.02,Default,,0,0,0,,input device akin to a keyboard
Dialogue: 0,0:33:47.15,0:33:48.49,Default,,0,0,0,,it should always be responsive.
Dialogue: 0,0:33:48.85,0:33:50.11,Default,,0,0,0,,Just because the user's dragging
Dialogue: 0,0:33:50.11,0:33:51.14,Default,,0,0,0,,something around on the screen
Dialogue: 0,0:33:51.14,0:33:52.33,Default,,0,0,0,,doesn't mean your keyboard stops
Dialogue: 0,0:33:52.33,0:33:52.72,Default,,0,0,0,,working.
Dialogue: 0,0:33:53.54,0:33:54.80,Default,,0,0,0,,So, even where you previously
Dialogue: 0,0:33:54.80,0:33:56.45,Default,,0,0,0,,had a modal event-tracking loop,
Dialogue: 0,0:33:56.84,0:33:57.79,Default,,0,0,0,,the Touch Bar will still be
Dialogue: 0,0:33:57.79,0:33:59.68,Default,,0,0,0,,responsive and still be able to
Dialogue: 0,0:33:59.68,0:34:00.61,Default,,0,0,0,,issue state changes.
Dialogue: 0,0:34:01.35,0:34:02.31,Default,,0,0,0,,So, you might want to go back
Dialogue: 0,0:34:02.31,0:34:03.05,Default,,0,0,0,,and actually look at those
Dialogue: 0,0:34:03.05,0:34:04.25,Default,,0,0,0,,event-tracking loops to make
Dialogue: 0,0:34:04.25,0:34:05.27,Default,,0,0,0,,sure they can handle the type of
Dialogue: 0,0:34:05.27,0:34:06.47,Default,,0,0,0,,state changes that could occur.
Dialogue: 0,0:34:07.79,0:34:09.02,Default,,0,0,0,,In addition, the Touch Bar
Dialogue: 0,0:34:09.02,0:34:10.62,Default,,0,0,0,,itself is capable of multitouch.
Dialogue: 0,0:34:11.00,0:34:12.86,Default,,0,0,0,,So, while the user's interacting
Dialogue: 0,0:34:12.86,0:34:14.30,Default,,0,0,0,,with one control, they could
Dialogue: 0,0:34:14.30,0:34:15.74,Default,,0,0,0,,begin and end interacting with
Dialogue: 0,0:34:15.74,0:34:16.14,Default,,0,0,0,,another.
Dialogue: 0,0:34:16.14,0:34:17.72,Default,,0,0,0,,And again, you want to make sure
Dialogue: 0,0:34:17.72,0:34:18.68,Default,,0,0,0,,you can handle those state
Dialogue: 0,0:34:18.68,0:34:19.05,Default,,0,0,0,,changes.
Dialogue: 0,0:34:20.44,0:34:22.12,Default,,0,0,0,,However, once you do that,
Dialogue: 0,0:34:22.12,0:34:23.36,Default,,0,0,0,,you're afforded a lot of really
Dialogue: 0,0:34:23.36,0:34:24.40,Default,,0,0,0,,interesting interaction
Dialogue: 0,0:34:24.40,0:34:26.24,Default,,0,0,0,,opportunities by combining all
Dialogue: 0,0:34:26.24,0:34:27.87,Default,,0,0,0,,the input devices that exist on
Dialogue: 0,0:34:27.87,0:34:28.67,Default,,0,0,0,,this device.
Dialogue: 0,0:34:29.42,0:34:30.60,Default,,0,0,0,,You can create either really
Dialogue: 0,0:34:30.60,0:34:31.80,Default,,0,0,0,,advanced work flows for your
Dialogue: 0,0:34:31.80,0:34:33.40,Default,,0,0,0,,users or these kind of
Dialogue: 0,0:34:33.40,0:34:34.66,Default,,0,0,0,,delightful experiences that the
Dialogue: 0,0:34:34.66,0:34:35.98,Default,,0,0,0,,user's might discover by playing
Dialogue: 0,0:34:35.98,0:34:36.43,Default,,0,0,0,,around.
Dialogue: 0,0:34:37.39,0:34:38.13,Default,,0,0,0,,For instance, in the
Dialogue: 0,0:34:38.13,0:34:40.46,Default,,0,0,0,,customization UI, we've added
Dialogue: 0,0:34:40.52,0:34:42.41,Default,,0,0,0,,individual pan recognizers to
Dialogue: 0,0:34:42.41,0:34:44.42,Default,,0,0,0,,each item, so that users can tab
Dialogue: 0,0:34:44.42,0:34:45.96,Default,,0,0,0,,down with multiple fingers and
Dialogue: 0,0:34:45.96,0:34:47.54,Default,,0,0,0,,reorder multiple items at once.
Dialogue: 0,0:34:49.07,0:34:50.97,Default,,0,0,0,,Similarly, the color picker has
Dialogue: 0,0:34:51.15,0:34:52.53,Default,,0,0,0,,Press-and-Pan recognizers on
Dialogue: 0,0:34:52.53,0:34:54.25,Default,,0,0,0,,each individual slider, so you
Dialogue: 0,0:34:54.25,0:34:55.28,Default,,0,0,0,,could be editing multiple
Dialogue: 0,0:34:55.28,0:34:57.16,Default,,0,0,0,,components at once, or while
Dialogue: 0,0:34:57.16,0:34:58.50,Default,,0,0,0,,your'e editing that color, you
Dialogue: 0,0:34:58.50,0:34:59.64,Default,,0,0,0,,can save it to your favorites
Dialogue: 0,0:34:59.76,0:35:00.63,Default,,0,0,0,,all at the same time.
Dialogue: 0,0:35:00.63,0:35:02.36,Default,,0,0,0,,And that's just using
Dialogue: 0,0:35:02.36,0:35:03.04,Default,,0,0,0,,Multi-Touch.
Dialogue: 0,0:35:03.40,0:35:04.25,Default,,0,0,0,,Once you combine it in the
Dialogue: 0,0:35:04.25,0:35:05.53,Default,,0,0,0,,keyboard or trackpad, you can
Dialogue: 0,0:35:05.53,0:35:06.60,Default,,0,0,0,,really take things to the next
Dialogue: 0,0:35:06.60,0:35:08.27,Default,,0,0,0,,level, such as being able to
Dialogue: 0,0:35:08.27,0:35:09.93,Default,,0,0,0,,edit the color of your text as
Dialogue: 0,0:35:09.93,0:35:11.68,Default,,0,0,0,,you're entering it, or editing
Dialogue: 0,0:35:11.68,0:35:13.48,Default,,0,0,0,,properties of your cursor as
Dialogue: 0,0:35:13.48,0:35:14.33,Default,,0,0,0,,you're moving around.
Dialogue: 0,0:35:15.54,0:35:16.49,Default,,0,0,0,,So, I really encourage you to
Dialogue: 0,0:35:16.55,0:35:17.99,Default,,0,0,0,,think about how you can easily
Dialogue: 0,0:35:17.99,0:35:19.49,Default,,0,0,0,,use gestureRecognizers to add
Dialogue: 0,0:35:19.49,0:35:20.65,Default,,0,0,0,,this event handling support for
Dialogue: 0,0:35:20.65,0:35:22.28,Default,,0,0,0,,your app while also
Dialogue: 0,0:35:22.28,0:35:23.68,Default,,0,0,0,,simul-handing these simultaneous
Dialogue: 0,0:35:23.68,0:35:24.30,Default,,0,0,0,,state changes.
Dialogue: 0,0:35:25.60,0:35:26.85,Default,,0,0,0,,Next, let's take a look at
Dialogue: 0,0:35:26.85,0:35:27.94,Default,,0,0,0,,styling and appearance.
Dialogue: 0,0:35:28.58,0:35:30.75,Default,,0,0,0,,And so, obviously the styling
Dialogue: 0,0:35:30.75,0:35:31.77,Default,,0,0,0,,inside of the Touch Bar is
Dialogue: 0,0:35:31.77,0:35:33.40,Default,,0,0,0,,extremely different from the
Dialogue: 0,0:35:33.40,0:35:34.62,Default,,0,0,0,,[inaudible] on the main display.
Dialogue: 0,0:35:35.25,0:35:36.14,Default,,0,0,0,,I'm going to cover a number of
Dialogue: 0,0:35:36.14,0:35:37.65,Default,,0,0,0,,these areas, but I want to start
Dialogue: 0,0:35:37.65,0:35:38.51,Default,,0,0,0,,with something that you might
Dialogue: 0,0:35:38.51,0:35:39.53,Default,,0,0,0,,not have even noticed.
Dialogue: 0,0:35:40.21,0:35:41.00,Default,,0,0,0,,This is something that you can
Dialogue: 0,0:35:41.00,0:35:42.36,Default,,0,0,0,,only see by taking your MacBook
Dialogue: 0,0:35:42.40,0:35:44.09,Default,,0,0,0,,Pro into different environments.
Dialogue: 0,0:35:44.88,0:35:46.01,Default,,0,0,0,,So, our standard stock photos
Dialogue: 0,0:35:46.01,0:35:46.94,Default,,0,0,0,,look something like this with
Dialogue: 0,0:35:46.94,0:35:49.01,Default,,0,0,0,,nice even lighting, if you use
Dialogue: 0,0:35:49.01,0:35:49.94,Default,,0,0,0,,it in a bright studio
Dialogue: 0,0:35:49.94,0:35:50.90,Default,,0,0,0,,environment, or maybe even take
Dialogue: 0,0:35:50.90,0:35:51.87,Default,,0,0,0,,it outside, it might look
Dialogue: 0,0:35:51.87,0:35:53.00,Default,,0,0,0,,something closer to this.
Dialogue: 0,0:35:53.75,0:35:54.59,Default,,0,0,0,,If you're like me you might
Dialogue: 0,0:35:54.63,0:35:55.88,Default,,0,0,0,,primarily use it in the dark,
Dialogue: 0,0:35:55.88,0:35:57.47,Default,,0,0,0,,and it's pretty cool how the
Dialogue: 0,0:35:57.47,0:35:59.12,Default,,0,0,0,,blacks on that OLED display
Dialogue: 0,0:35:59.12,0:36:00.36,Default,,0,0,0,,basically disappear.
Dialogue: 0,0:36:01.24,0:36:03.09,Default,,0,0,0,,And finally, if you get pretty
Dialogue: 0,0:36:03.09,0:36:04.62,Default,,0,0,0,,tired as it gets later on in the
Dialogue: 0,0:36:04.62,0:36:05.36,Default,,0,0,0,,night, you might turn on the
Dialogue: 0,0:36:05.36,0:36:06.64,Default,,0,0,0,,keyboard backlight and get that
Dialogue: 0,0:36:06.64,0:36:07.33,Default,,0,0,0,,nice glow.
Dialogue: 0,0:36:08.14,0:36:09.25,Default,,0,0,0,,And so, while physically the
Dialogue: 0,0:36:09.25,0:36:10.59,Default,,0,0,0,,MacBook Pro looks very different
Dialogue: 0,0:36:10.59,0:36:11.94,Default,,0,0,0,,in all these environments, the
Dialogue: 0,0:36:11.94,0:36:13.37,Default,,0,0,0,,Touch Bar content is actually
Dialogue: 0,0:36:13.37,0:36:14.24,Default,,0,0,0,,adjusting as well.
Dialogue: 0,0:36:14.96,0:36:16.06,Default,,0,0,0,,The bezel colors of the
Dialogue: 0,0:36:16.06,0:36:17.52,Default,,0,0,0,,different controls is adjusting
Dialogue: 0,0:36:17.52,0:36:19.70,Default,,0,0,0,,to that ambient brightness, and
Dialogue: 0,0:36:19.70,0:36:21.12,Default,,0,0,0,,even the glyphs within the
Dialogue: 0,0:36:21.12,0:36:23.01,Default,,0,0,0,,controls is reacting to that
Dialogue: 0,0:36:23.14,0:36:24.33,Default,,0,0,0,,white point change of the
Dialogue: 0,0:36:24.33,0:36:25.21,Default,,0,0,0,,keyboard backlight.
Dialogue: 0,0:36:26.22,0:36:27.57,Default,,0,0,0,,And so if you implementing your
Dialogue: 0,0:36:27.57,0:36:29.19,Default,,0,0,0,,own custom controls, you want to
Dialogue: 0,0:36:29.19,0:36:29.97,Default,,0,0,0,,make sure that you can do the
Dialogue: 0,0:36:29.97,0:36:30.39,Default,,0,0,0,,same.
Dialogue: 0,0:36:31.09,0:36:32.04,Default,,0,0,0,,And thankfully this is pretty
Dialogue: 0,0:36:32.04,0:36:33.98,Default,,0,0,0,,easy by using system colors.
Dialogue: 0,0:36:34.57,0:36:36.23,Default,,0,0,0,,These are existing named colors
Dialogue: 0,0:36:36.23,0:36:37.81,Default,,0,0,0,,that semantically describe how
Dialogue: 0,0:36:37.81,0:36:39.61,Default,,0,0,0,,they should be used, and once
Dialogue: 0,0:36:39.61,0:36:41.34,Default,,0,0,0,,you go to draw with them, that's
Dialogue: 0,0:36:41.34,0:36:42.28,Default,,0,0,0,,when they'll be dynamically
Dialogue: 0,0:36:42.28,0:36:43.37,Default,,0,0,0,,resolved against their current
Dialogue: 0,0:36:43.37,0:36:45.03,Default,,0,0,0,,context to determine what color
Dialogue: 0,0:36:45.03,0:36:46.71,Default,,0,0,0,,should be drawn with, taking
Dialogue: 0,0:36:46.71,0:36:47.91,Default,,0,0,0,,into consideration if it's being
Dialogue: 0,0:36:47.91,0:36:49.25,Default,,0,0,0,,used in the Touch Bar versus
Dialogue: 0,0:36:49.25,0:36:50.83,Default,,0,0,0,,Aqua, as well as whether the
Dialogue: 0,0:36:50.83,0:36:52.00,Default,,0,0,0,,white point or brightness has
Dialogue: 0,0:36:52.00,0:36:52.50,Default,,0,0,0,,changed.
Dialogue: 0,0:36:53.89,0:36:55.58,Default,,0,0,0,,In addition, new in High Sierra
Dialogue: 0,0:36:55.69,0:36:57.15,Default,,0,0,0,,is this expressive palette of
Dialogue: 0,0:36:57.15,0:36:59.50,Default,,0,0,0,,colors that you can use to match
Dialogue: 0,0:36:59.50,0:37:00.98,Default,,0,0,0,,system UI and have been
Dialogue: 0,0:37:00.98,0:37:02.33,Default,,0,0,0,,specifically designed for the
Dialogue: 0,0:37:02.33,0:37:04.24,Default,,0,0,0,,out glow appearance and for the
Dialogue: 0,0:37:04.52,0:37:07.09,Default,,0,0,0,,Touch Bar.
Dialogue: 0,0:37:07.29,0:37:08.39,Default,,0,0,0,,So, one important thing to keep
Dialogue: 0,0:37:08.39,0:37:09.70,Default,,0,0,0,,in mind is how you draw with
Dialogue: 0,0:37:09.70,0:37:11.10,Default,,0,0,0,,these colors in order to take
Dialogue: 0,0:37:11.10,0:37:12.30,Default,,0,0,0,,advantage of all that context
Dialogue: 0,0:37:12.30,0:37:12.90,Default,,0,0,0,,sensitivity.
Dialogue: 0,0:37:13.53,0:37:15.61,Default,,0,0,0,,So, if you're using layers to
Dialogue: 0,0:37:15.61,0:37:17.07,Default,,0,0,0,,draw your views, you might be
Dialogue: 0,0:37:17.07,0:37:18.82,Default,,0,0,0,,tempted to init with frame,
Dialogue: 0,0:37:18.82,0:37:20.28,Default,,0,0,0,,ViewDidLoad or immediate
Dialogue: 0,0:37:20.28,0:37:21.32,Default,,0,0,0,,response to event handling,
Dialogue: 0,0:37:21.65,0:37:22.57,Default,,0,0,0,,immediately update the
Dialogue: 0,0:37:22.57,0:37:23.62,Default,,0,0,0,,properties of your layers.
Dialogue: 0,0:37:24.41,0:37:25.44,Default,,0,0,0,,And you don't want to do this
Dialogue: 0,0:37:25.44,0:37:26.60,Default,,0,0,0,,because when you get that CG
Dialogue: 0,0:37:26.60,0:37:28.20,Default,,0,0,0,,color to set it on the layer,
Dialogue: 0,0:37:28.20,0:37:29.79,Default,,0,0,0,,that will immediately resolve
Dialogue: 0,0:37:29.79,0:37:31.12,Default,,0,0,0,,those RGB values against
Dialogue: 0,0:37:31.12,0:37:32.13,Default,,0,0,0,,whatever the current context
Dialogue: 0,0:37:32.13,0:37:32.84,Default,,0,0,0,,happens to be.
Dialogue: 0,0:37:33.73,0:37:34.66,Default,,0,0,0,,So, as the whitepoint or
Dialogue: 0,0:37:34.66,0:37:35.87,Default,,0,0,0,,brightness changes over time,
Dialogue: 0,0:37:36.17,0:37:37.55,Default,,0,0,0,,your layers will stay exactly as
Dialogue: 0,0:37:37.55,0:37:38.93,Default,,0,0,0,,they were at this moment.
Dialogue: 0,0:37:40.11,0:37:41.14,Default,,0,0,0,,So, what should we do instead?
Dialogue: 0,0:37:41.64,0:37:42.46,Default,,0,0,0,,Well, we can override this
Dialogue: 0,0:37:42.46,0:37:44.17,Default,,0,0,0,,method called updateLayer and
Dialogue: 0,0:37:44.29,0:37:45.77,Default,,0,0,0,,well, update our layers there.
Dialogue: 0,0:37:46.39,0:37:46.96,Default,,0,0,0,,This will get called
Dialogue: 0,0:37:46.96,0:37:48.25,Default,,0,0,0,,automatically for you when your
Dialogue: 0,0:37:48.25,0:37:49.84,Default,,0,0,0,,view is displayed, such as the
Dialogue: 0,0:37:49.84,0:37:51.21,Default,,0,0,0,,first time it's shown on screen
Dialogue: 0,0:37:51.21,0:37:52.18,Default,,0,0,0,,or windows white point or
Dialogue: 0,0:37:52.18,0:37:53.17,Default,,0,0,0,,brightness changes.
Dialogue: 0,0:37:54.04,0:37:55.47,Default,,0,0,0,,And if you have a dynamic color
Dialogue: 0,0:37:55.47,0:37:56.60,Default,,0,0,0,,that you actually want to set,
Dialogue: 0,0:37:56.82,0:37:57.74,Default,,0,0,0,,it's important that you hold
Dialogue: 0,0:37:57.74,0:37:59.76,Default,,0,0,0,,onto that color as an NSColor
Dialogue: 0,0:38:00.16,0:38:01.19,Default,,0,0,0,,because again this maintains
Dialogue: 0,0:38:01.19,0:38:02.25,Default,,0,0,0,,that semantic nature of the
Dialogue: 0,0:38:02.25,0:38:04.09,Default,,0,0,0,,color as well as the context
Dialogue: 0,0:38:04.09,0:38:04.76,Default,,0,0,0,,sensitivity.
Dialogue: 0,0:38:05.78,0:38:07.10,Default,,0,0,0,,Any time that color changes, you
Dialogue: 0,0:38:07.10,0:38:08.49,Default,,0,0,0,,just set needsDisplay to true
Dialogue: 0,0:38:08.66,0:38:10.05,Default,,0,0,0,,and we'll recall this method for
Dialogue: 0,0:38:10.05,0:38:10.25,Default,,0,0,0,,you.
Dialogue: 0,0:38:10.81,0:38:13.35,Default,,0,0,0,,This same exact approach can be
Dialogue: 0,0:38:13.35,0:38:14.21,Default,,0,0,0,,used if you're using
Dialogue: 0,0:38:14.28,0:38:15.91,Default,,0,0,0,,DrawRectBasedViews, where here
Dialogue: 0,0:38:15.91,0:38:16.89,Default,,0,0,0,,the only difference is that
Dialogue: 0,0:38:16.89,0:38:17.81,Default,,0,0,0,,you're setting that color
Dialogue: 0,0:38:18.11,0:38:19.29,Default,,0,0,0,,against the current context.
Dialogue: 0,0:38:19.89,0:38:22.57,Default,,0,0,0,,So, that's how you can use these
Dialogue: 0,0:38:22.57,0:38:23.61,Default,,0,0,0,,custom colors and your own
Dialogue: 0,0:38:23.61,0:38:24.31,Default,,0,0,0,,custom drawing.
Dialogue: 0,0:38:24.91,0:38:25.90,Default,,0,0,0,,However, a number of our
Dialogue: 0,0:38:25.90,0:38:27.19,Default,,0,0,0,,controls support customization
Dialogue: 0,0:38:27.19,0:38:28.45,Default,,0,0,0,,of their colors just out of the
Dialogue: 0,0:38:28.45,0:38:29.05,Default,,0,0,0,,box.
Dialogue: 0,0:38:29.86,0:38:31.26,Default,,0,0,0,,You can now set the bezel color
Dialogue: 0,0:38:31.26,0:38:32.96,Default,,0,0,0,,of your NS buttons, the selected
Dialogue: 0,0:38:32.96,0:38:34.62,Default,,0,0,0,,segment color or even the fill
Dialogue: 0,0:38:34.62,0:38:35.77,Default,,0,0,0,,color of your sliders.
Dialogue: 0,0:38:36.41,0:38:37.46,Default,,0,0,0,,You can use our built in system
Dialogue: 0,0:38:37.46,0:38:38.72,Default,,0,0,0,,colors or even your own customer
Dialogue: 0,0:38:38.72,0:38:40.41,Default,,0,0,0,,colors if you have some overall
Dialogue: 0,0:38:40.41,0:38:40.79,Default,,0,0,0,,app theme.
Dialogue: 0,0:38:41.73,0:38:43.22,Default,,0,0,0,,What's really cool here is that
Dialogue: 0,0:38:43.22,0:38:44.46,Default,,0,0,0,,the text and image effects
Dialogue: 0,0:38:44.46,0:38:45.58,Default,,0,0,0,,within these controls is
Dialogue: 0,0:38:45.58,0:38:46.87,Default,,0,0,0,,actually adjusting depending on
Dialogue: 0,0:38:46.87,0:38:47.81,Default,,0,0,0,,the lightness of the colors
Dialogue: 0,0:38:47.81,0:38:48.29,Default,,0,0,0,,you're setting.
Dialogue: 0,0:38:48.79,0:38:50.21,Default,,0,0,0,,You actually don't have to do
Dialogue: 0,0:38:50.21,0:38:52.57,Default,,0,0,0,,any work to get that.
Dialogue: 0,0:38:52.79,0:38:53.49,Default,,0,0,0,,One thing you might have seen
Dialogue: 0,0:38:53.49,0:38:54.89,Default,,0,0,0,,across the system are these
Dialogue: 0,0:38:54.97,0:38:56.51,Default,,0,0,0,,default button blue colors.
Dialogue: 0,0:38:57.09,0:38:58.31,Default,,0,0,0,,And it's important to note that
Dialogue: 0,0:38:58.31,0:38:59.63,Default,,0,0,0,,this not achieved by setting the
Dialogue: 0,0:38:59.63,0:39:00.88,Default,,0,0,0,,systemBlue color as the
Dialogue: 0,0:39:00.88,0:39:01.60,Default,,0,0,0,,bezelColor.
Dialogue: 0,0:39:02.04,0:39:02.92,Default,,0,0,0,,There's actually a subtly
Dialogue: 0,0:39:02.92,0:39:04.09,Default,,0,0,0,,different color that's used for
Dialogue: 0,0:39:04.09,0:39:05.75,Default,,0,0,0,,these, and you can get that
Dialogue: 0,0:39:05.78,0:39:07.71,Default,,0,0,0,,keyEquivalent to the return key,
Dialogue: 0,0:39:08.08,0:39:08.89,Default,,0,0,0,,just like you would have done on
Dialogue: 0,0:39:08.89,0:39:09.59,Default,,0,0,0,,the main display.
Dialogue: 0,0:39:10.17,0:39:12.71,Default,,0,0,0,,One thing you might have noticed
Dialogue: 0,0:39:12.71,0:39:14.29,Default,,0,0,0,,in these past few slides as well
Dialogue: 0,0:39:14.29,0:39:15.97,Default,,0,0,0,,is that the Esc key has been
Dialogue: 0,0:39:15.97,0:39:17.16,Default,,0,0,0,,replaced by this Done button.
Dialogue: 0,0:39:17.16,0:39:18.66,Default,,0,0,0,,And this is pretty easy to
Dialogue: 0,0:39:18.66,0:39:19.69,Default,,0,0,0,,achieve by setting the
Dialogue: 0,0:39:19.69,0:39:20.82,Default,,0,0,0,,escapeKeyReplacement
Dialogue: 0,0:39:20.82,0:39:22.65,Default,,0,0,0,,ItemIdentifier on your presented
Dialogue: 0,0:39:22.72,0:39:24.82,Default,,0,0,0,,NSTouchBar and whatever control
Dialogue: 0,0:39:24.82,0:39:26.35,Default,,0,0,0,,that references will be placed
Dialogue: 0,0:39:26.35,0:39:27.41,Default,,0,0,0,,in that Esc key region.
Dialogue: 0,0:39:28.57,0:39:29.55,Default,,0,0,0,,However, it's important to
Dialogue: 0,0:39:29.55,0:39:30.70,Default,,0,0,0,,consider if an when you should
Dialogue: 0,0:39:30.70,0:39:31.60,Default,,0,0,0,,be using this.
Dialogue: 0,0:39:32.04,0:39:33.18,Default,,0,0,0,,It should really only be used
Dialogue: 0,0:39:33.23,0:39:34.54,Default,,0,0,0,,when the user has entered into
Dialogue: 0,0:39:34.54,0:39:36.46,Default,,0,0,0,,some modal context and they can
Dialogue: 0,0:39:36.72,0:39:38.24,Default,,0,0,0,,use that control to exit that
Dialogue: 0,0:39:38.24,0:39:38.78,Default,,0,0,0,,context.
Dialogue: 0,0:39:39.61,0:39:40.77,Default,,0,0,0,,Any actions they take in this
Dialogue: 0,0:39:40.77,0:39:42.56,Default,,0,0,0,,context should be undoable, so
Dialogue: 0,0:39:42.56,0:39:44.14,Default,,0,0,0,,if I edit my photo here and tap
Dialogue: 0,0:39:44.14,0:39:45.75,Default,,0,0,0,,Done, I can still undo that
Dialogue: 0,0:39:45.75,0:39:46.55,Default,,0,0,0,,change afterwards.
Dialogue: 0,0:39:47.74,0:39:48.91,Default,,0,0,0,,And finally, you don't want to
Dialogue: 0,0:39:48.91,0:39:50.17,Default,,0,0,0,,be adding explicit constraints
Dialogue: 0,0:39:50.17,0:39:51.15,Default,,0,0,0,,to this button to try and make
Dialogue: 0,0:39:51.15,0:39:52.33,Default,,0,0,0,,it be the standard size of the
Dialogue: 0,0:39:52.33,0:39:52.94,Default,,0,0,0,,Esc key.
Dialogue: 0,0:39:53.39,0:39:54.45,Default,,0,0,0,,We'll automatically apply
Dialogue: 0,0:39:54.45,0:39:55.59,Default,,0,0,0,,metrics to make it be that
Dialogue: 0,0:39:55.59,0:39:57.60,Default,,0,0,0,,standard size as well as even
Dialogue: 0,0:39:57.60,0:39:59.00,Default,,0,0,0,,adjust the padding around the
Dialogue: 0,0:39:59.00,0:40:00.81,Default,,0,0,0,,text to fit the most characters
Dialogue: 0,0:40:00.81,0:40:01.30,Default,,0,0,0,,possible.
Dialogue: 0,0:40:02.36,0:40:03.53,Default,,0,0,0,,So, for instance, we found that
Dialogue: 0,0:40:03.53,0:40:05.73,Default,,0,0,0,,the longest translation of Done
Dialogue: 0,0:40:05.73,0:40:06.78,Default,,0,0,0,,is [foreign language] and even
Dialogue: 0,0:40:06.78,0:40:08.01,Default,,0,0,0,,that is able to fit in with
Dialogue: 0,0:40:08.01,0:40:09.04,Default,,0,0,0,,these adjusted metrics.
Dialogue: 0,0:40:10.01,0:40:11.81,Default,,0,0,0,,However, as a last resort we
Dialogue: 0,0:40:11.81,0:40:13.28,Default,,0,0,0,,will allow this control to grow
Dialogue: 0,0:40:13.28,0:40:14.55,Default,,0,0,0,,in case there are some
Dialogue: 0,0:40:14.79,0:40:16.18,Default,,0,0,0,,extenuating circumstances.
Dialogue: 0,0:40:16.89,0:40:19.06,Default,,0,0,0,,Now another really important
Dialogue: 0,0:40:19.06,0:40:20.03,Default,,0,0,0,,aspect of the styling in the
Dialogue: 0,0:40:20.03,0:40:21.15,Default,,0,0,0,,Touch Bar is when it comes to
Dialogue: 0,0:40:21.15,0:40:21.68,Default,,0,0,0,,the font.
Dialogue: 0,0:40:22.62,0:40:23.43,Default,,0,0,0,,Now you might have noticed that
Dialogue: 0,0:40:23.43,0:40:24.52,Default,,0,0,0,,the font has changed within the
Dialogue: 0,0:40:24.52,0:40:26.50,Default,,0,0,0,,Touch Bar on the main display in
Dialogue: 0,0:40:26.50,0:40:28.41,Default,,0,0,0,,Aqua, we use a standard font of
Dialogue: 0,0:40:28.58,0:40:30.84,Default,,0,0,0,,San Francisco UI size 13.
Dialogue: 0,0:40:31.30,0:40:32.53,Default,,0,0,0,,And in Touch Bar we use
Dialogue: 0,0:40:32.53,0:40:33.38,Default,,0,0,0,,something actually closer to the
Dialogue: 0,0:40:33.38,0:40:35.41,Default,,0,0,0,,Watch, San Francisco Condensed
Dialogue: 0,0:40:35.55,0:40:36.40,Default,,0,0,0,,size 15.
Dialogue: 0,0:40:36.91,0:40:38.07,Default,,0,0,0,,So, the family and the size have
Dialogue: 0,0:40:38.07,0:40:38.77,Default,,0,0,0,,both changed.
Dialogue: 0,0:40:39.44,0:40:40.23,Default,,0,0,0,,And those of you who have
Dialogue: 0,0:40:40.23,0:40:41.45,Default,,0,0,0,,followed the font Mac font
Dialogue: 0,0:40:41.45,0:40:42.74,Default,,0,0,0,,transition perhaps all the way
Dialogue: 0,0:40:42.74,0:40:44.62,Default,,0,0,0,,from Chicago to Charcoal, to
Dialogue: 0,0:40:44.62,0:40:46.60,Default,,0,0,0,,Lucida to Helvetica to San
Dialogue: 0,0:40:46.60,0:40:48.22,Default,,0,0,0,,Francisco, know that you should
Dialogue: 0,0:40:48.22,0:40:49.53,Default,,0,0,0,,not be hardcoding your fonts in
Dialogue: 0,0:40:49.53,0:40:51.26,Default,,0,0,0,,your application, and instead
Dialogue: 0,0:40:51.26,0:40:52.72,Default,,0,0,0,,you can use systemFont of size
Dialogue: 0,0:40:52.72,0:40:54.49,Default,,0,0,0,,0, which will give you back this
Dialogue: 0,0:40:54.53,0:40:56.47,Default,,0,0,0,,dynamic font that when used will
Dialogue: 0,0:40:56.47,0:40:57.77,Default,,0,0,0,,be resolved against its current
Dialogue: 0,0:40:57.77,0:40:59.47,Default,,0,0,0,,context, just like those system
Dialogue: 0,0:40:59.47,0:41:01.07,Default,,0,0,0,,colors, and pick the right
Dialogue: 0,0:41:01.07,0:41:02.01,Default,,0,0,0,,family and size.
Dialogue: 0,0:41:03.03,0:41:03.91,Default,,0,0,0,,In addition, there's a weight
Dialogue: 0,0:41:03.91,0:41:05.09,Default,,0,0,0,,variance that you can get
Dialogue: 0,0:41:05.09,0:41:07.58,Default,,0,0,0,,thinner or bolder fonts, and
Dialogue: 0,0:41:07.58,0:41:08.39,Default,,0,0,0,,another really interesting
Dialogue: 0,0:41:08.39,0:41:09.24,Default,,0,0,0,,aspect of font you might have
Dialogue: 0,0:41:09.24,0:41:10.91,Default,,0,0,0,,noticed are these monospaced
Dialogue: 0,0:41:10.91,0:41:12.14,Default,,0,0,0,,digits used in things like the
Dialogue: 0,0:41:12.14,0:41:14.09,Default,,0,0,0,,AVKit Player or even the
Dialogue: 0,0:41:14.09,0:41:15.95,Default,,0,0,0,,component value of the sliders.
Dialogue: 0,0:41:16.60,0:41:18.00,Default,,0,0,0,,And even as the value changes,
Dialogue: 0,0:41:18.00,0:41:19.35,Default,,0,0,0,,those numbers aren't jiggling as
Dialogue: 0,0:41:19.35,0:41:20.23,Default,,0,0,0,,the metrics adjust.
Dialogue: 0,0:41:20.48,0:41:21.54,Default,,0,0,0,,They're monospaced.
Dialogue: 0,0:41:22.25,0:41:23.53,Default,,0,0,0,,And so you can get this by using
Dialogue: 0,0:41:23.53,0:41:25.14,Default,,0,0,0,,the monospacedDigitSystemFont of
Dialogue: 0,0:41:25.14,0:41:27.42,Default,,0,0,0,,size weight to get this same
Dialogue: 0,0:41:27.42,0:41:27.83,Default,,0,0,0,,effect.
Dialogue: 0,0:41:28.82,0:41:29.94,Default,,0,0,0,,Now, there are actually a ton
Dialogue: 0,0:41:29.94,0:41:31.18,Default,,0,0,0,,more interesting typographic
Dialogue: 0,0:41:31.18,0:41:32.43,Default,,0,0,0,,features when it comes to San
Dialogue: 0,0:41:32.43,0:41:34.22,Default,,0,0,0,,Francisco, and there are some
Dialogue: 0,0:41:34.22,0:41:35.51,Default,,0,0,0,,great talks in the past few
Dialogue: 0,0:41:35.51,0:41:36.45,Default,,0,0,0,,years that I'd recommend
Dialogue: 0,0:41:36.45,0:41:37.31,Default,,0,0,0,,checking out if you're
Dialogue: 0,0:41:37.31,0:41:38.27,Default,,0,0,0,,interested in learning more.
Dialogue: 0,0:41:39.65,0:41:40.82,Default,,0,0,0,,However, the other important
Dialogue: 0,0:41:40.82,0:41:42.20,Default,,0,0,0,,type of glyphs in the Touch Bar
Dialogue: 0,0:41:42.20,0:41:43.60,Default,,0,0,0,,are, of course, images.
Dialogue: 0,0:41:45.01,0:41:47.79,Default,,0,0,0,,And, since the Touch Bar is this
Dialogue: 0,0:41:47.83,0:41:49.71,Default,,0,0,0,,P3 Retina display, all you need
Dialogue: 0,0:41:49.71,0:41:51.53,Default,,0,0,0,,to provide are 2x assets for the
Dialogue: 0,0:41:51.53,0:41:52.43,Default,,0,0,0,,images used there.
Dialogue: 0,0:41:53.03,0:41:53.85,Default,,0,0,0,,However, they should be
Dialogue: 0,0:41:53.85,0:41:55.34,Default,,0,0,0,,specifically designed for the
Dialogue: 0,0:41:55.34,0:41:55.83,Default,,0,0,0,,Touch Bar.
Dialogue: 0,0:41:56.23,0:41:56.88,Default,,0,0,0,,You shouldn't just take your
Dialogue: 0,0:41:56.88,0:41:58.33,Default,,0,0,0,,toolbar icons and plop them in.
Dialogue: 0,0:41:59.60,0:42:00.87,Default,,0,0,0,,In addition, you should be using
Dialogue: 0,0:42:00.87,0:42:01.78,Default,,0,0,0,,template rendering to take
Dialogue: 0,0:42:01.78,0:42:02.80,Default,,0,0,0,,advantage of those white point
Dialogue: 0,0:42:02.80,0:42:03.85,Default,,0,0,0,,and brightness adjustments I
Dialogue: 0,0:42:03.85,0:42:04.62,Default,,0,0,0,,mentioned earlier.
Dialogue: 0,0:42:05.84,0:42:07.26,Default,,0,0,0,,To illustrate this, let's say
Dialogue: 0,0:42:07.26,0:42:08.18,Default,,0,0,0,,we're making a custom light
Dialogue: 0,0:42:08.22,0:42:08.52,Default,,0,0,0,,button.
Dialogue: 0,0:42:09.12,0:42:10.26,Default,,0,0,0,,We've specifically designed it
Dialogue: 0,0:42:10.26,0:42:11.55,Default,,0,0,0,,nicely for the Touch Bar, and
Dialogue: 0,0:42:11.55,0:42:12.94,Default,,0,0,0,,we're using it alongside a bunch
Dialogue: 0,0:42:12.94,0:42:14.03,Default,,0,0,0,,of other standard icons.
Dialogue: 0,0:42:14.62,0:42:15.42,Default,,0,0,0,,For the most part it looks
Dialogue: 0,0:42:15.42,0:42:17.31,Default,,0,0,0,,pretty good, except for later
Dialogue: 0,0:42:17.31,0:42:18.55,Default,,0,0,0,,that night, we take it home and
Dialogue: 0,0:42:18.55,0:42:19.34,Default,,0,0,0,,we turn on our computer
Dialogue: 0,0:42:19.34,0:42:20.72,Default,,0,0,0,,backlight and it looks something
Dialogue: 0,0:42:20.72,0:42:21.37,Default,,0,0,0,,like this.
Dialogue: 0,0:42:21.94,0:42:23.55,Default,,0,0,0,,All the other icons adjust and
Dialogue: 0,0:42:23.55,0:42:24.94,Default,,0,0,0,,our icon basically sticks out
Dialogue: 0,0:42:24.94,0:42:25.76,Default,,0,0,0,,like a sore thumb.
Dialogue: 0,0:42:26.60,0:42:27.74,Default,,0,0,0,,So, let's not do this.
Dialogue: 0,0:42:28.15,0:42:31.14,Default,,0,0,0,,Instead what we can use, is
Dialogue: 0,0:42:31.14,0:42:32.28,Default,,0,0,0,,provide an image that
Dialogue: 0,0:42:32.28,0:42:34.02,Default,,0,0,0,,communicates its shape purely
Dialogue: 0,0:42:34.02,0:42:36.13,Default,,0,0,0,,via the alpha channel and uses
Dialogue: 0,0:42:36.13,0:42:37.15,Default,,0,0,0,,template rendering so that
Dialogue: 0,0:42:37.15,0:42:38.71,Default,,0,0,0,,AppKit can take care of all of
Dialogue: 0,0:42:38.71,0:42:40.43,Default,,0,0,0,,the different styling that might
Dialogue: 0,0:42:40.43,0:42:41.68,Default,,0,0,0,,occur for that image such as the
Dialogue: 0,0:42:41.68,0:42:43.71,Default,,0,0,0,,white or even the blue styling
Dialogue: 0,0:42:43.83,0:42:44.95,Default,,0,0,0,,when the whitepoint is adjusted.
Dialogue: 0,0:42:46.44,0:42:47.50,Default,,0,0,0,,Now, before you have your
Dialogue: 0,0:42:47.50,0:42:48.51,Default,,0,0,0,,designers go off and create a
Dialogue: 0,0:42:48.51,0:42:49.83,Default,,0,0,0,,bunch of awesome icon
Dialogue: 0,0:42:49.83,0:42:51.18,Default,,0,0,0,,specifically for the Touch Bar
Dialogue: 0,0:42:51.36,0:42:52.38,Default,,0,0,0,,to take advantage of template
Dialogue: 0,0:42:52.38,0:42:53.95,Default,,0,0,0,,rendering, do be sure to check
Dialogue: 0,0:42:53.95,0:42:55.11,Default,,0,0,0,,out all of the standard icons
Dialogue: 0,0:42:55.11,0:42:55.89,Default,,0,0,0,,that the system already
Dialogue: 0,0:42:55.89,0:42:56.31,Default,,0,0,0,,provides.
Dialogue: 0,0:42:56.93,0:42:57.82,Default,,0,0,0,,There are really a lot of them
Dialogue: 0,0:42:57.82,0:42:58.94,Default,,0,0,0,,here and the Human Interface
Dialogue: 0,0:42:58.94,0:42:59.98,Default,,0,0,0,,Guidelines goes over all of
Dialogue: 0,0:42:59.98,0:43:00.15,Default,,0,0,0,,them.
Dialogue: 0,0:43:00.15,0:43:01.83,Default,,0,0,0,,And what's really cool is that
Dialogue: 0,0:43:01.83,0:43:03.00,Default,,0,0,0,,these are all public constants
Dialogue: 0,0:43:03.03,0:43:04.72,Default,,0,0,0,,provided by NSImage so you can
Dialogue: 0,0:43:04.72,0:43:06.07,Default,,0,0,0,,very easily drop them into your
Dialogue: 0,0:43:06.07,0:43:07.72,Default,,0,0,0,,application with really not a
Dialogue: 0,0:43:07.72,0:43:09.38,Default,,0,0,0,,lot of work.
Dialogue: 0,0:43:09.57,0:43:11.24,Default,,0,0,0,,So, those are some aspects of
Dialogue: 0,0:43:11.24,0:43:12.69,Default,,0,0,0,,styling an appearance, what's
Dialogue: 0,0:43:12.69,0:43:13.89,Default,,0,0,0,,really cool is that for the most
Dialogue: 0,0:43:13.89,0:43:15.10,Default,,0,0,0,,part, you can just use system
Dialogue: 0,0:43:15.10,0:43:16.31,Default,,0,0,0,,standard techniques and get a
Dialogue: 0,0:43:16.31,0:43:17.57,Default,,0,0,0,,lot of this behavior for free.
Dialogue: 0,0:43:19.04,0:43:20.51,Default,,0,0,0,,Next, let's talk about layout.
Dialogue: 0,0:43:20.69,0:43:23.06,Default,,0,0,0,,In the Fundamentals section, you
Dialogue: 0,0:43:23.06,0:43:24.34,Default,,0,0,0,,saw how the standard item layout
Dialogue: 0,0:43:24.34,0:43:25.59,Default,,0,0,0,,is to simply stack the items
Dialogue: 0,0:43:25.59,0:43:27.01,Default,,0,0,0,,along inside the Touch Bar.
Dialogue: 0,0:43:27.73,0:43:29.12,Default,,0,0,0,,You can use flexible spaces to
Dialogue: 0,0:43:29.12,0:43:30.06,Default,,0,0,0,,give your items a little bit of
Dialogue: 0,0:43:30.06,0:43:31.55,Default,,0,0,0,,breathing room, or you can use
Dialogue: 0,0:43:31.55,0:43:32.92,Default,,0,0,0,,the principal item to center a
Dialogue: 0,0:43:32.92,0:43:34.29,Default,,0,0,0,,single or group of items.
Dialogue: 0,0:43:35.53,0:43:37.18,Default,,0,0,0,,Now, layout in NSTouchBar works
Dialogue: 0,0:43:37.18,0:43:39.12,Default,,0,0,0,,very similarly to NSStackView,
Dialogue: 0,0:43:39.66,0:43:40.83,Default,,0,0,0,,where the items themselves
Dialogue: 0,0:43:40.83,0:43:42.17,Default,,0,0,0,,provide their sizing information
Dialogue: 0,0:43:42.60,0:43:44.15,Default,,0,0,0,,and NSTouchBar positions them
Dialogue: 0,0:43:44.36,0:43:45.21,Default,,0,0,0,,based on that size.
Dialogue: 0,0:43:46.38,0:43:47.42,Default,,0,0,0,,And when it comes to describing
Dialogue: 0,0:43:47.42,0:43:48.95,Default,,0,0,0,,that size, it works exactly like
Dialogue: 0,0:43:48.95,0:43:49.82,Default,,0,0,0,,it does outside of the Touch
Dialogue: 0,0:43:49.82,0:43:50.00,Default,,0,0,0,,Bar.
Dialogue: 0,0:43:52.23,0:43:53.38,Default,,0,0,0,,For instance, you do override
Dialogue: 0,0:43:53.38,0:43:54.82,Default,,0,0,0,,intrinsicContentSize and
Dialogue: 0,0:43:54.82,0:43:55.84,Default,,0,0,0,,calculate the size you want your
Dialogue: 0,0:43:55.84,0:43:57.19,Default,,0,0,0,,control to be and just return
Dialogue: 0,0:43:57.19,0:43:57.41,Default,,0,0,0,,that.
Dialogue: 0,0:43:58.32,0:43:59.95,Default,,0,0,0,,In case any state changes, such
Dialogue: 0,0:43:59.95,0:44:01.14,Default,,0,0,0,,as the button's title changing,
Dialogue: 0,0:44:01.68,0:44:02.71,Default,,0,0,0,,and when you want to note that
Dialogue: 0,0:44:02.71,0:44:04.07,Default,,0,0,0,,the intrinsicContentSize has
Dialogue: 0,0:44:04.07,0:44:05.53,Default,,0,0,0,,changed, you can call
Dialogue: 0,0:44:05.53,0:44:07.15,Default,,0,0,0,,invalidateIntrinsicContentSize
Dialogue: 0,0:44:07.47,0:44:08.89,Default,,0,0,0,,and NSTouchBar will relay
Dialogue: 0,0:44:08.89,0:44:09.45,Default,,0,0,0,,everything out.
Dialogue: 0,0:44:10.77,0:44:11.63,Default,,0,0,0,,Another approach that you might
Dialogue: 0,0:44:11.63,0:44:13.19,Default,,0,0,0,,have used in the past was to add
Dialogue: 0,0:44:13.19,0:44:14.56,Default,,0,0,0,,an explicit widthConstraint to
Dialogue: 0,0:44:14.56,0:44:15.96,Default,,0,0,0,,your control and then update
Dialogue: 0,0:44:15.96,0:44:17.01,Default,,0,0,0,,that constant over time.
Dialogue: 0,0:44:17.62,0:44:19.31,Default,,0,0,0,,This again works, the same way,
Dialogue: 0,0:44:19.55,0:44:21.26,Default,,0,0,0,,and NSTouchBar will again lay
Dialogue: 0,0:44:21.26,0:44:22.49,Default,,0,0,0,,everything out.
Dialogue: 0,0:44:24.68,0:44:25.82,Default,,0,0,0,,When you're building custom
Dialogue: 0,0:44:25.82,0:44:27.31,Default,,0,0,0,,controls, you also might have
Dialogue: 0,0:44:27.31,0:44:29.12,Default,,0,0,0,,flexibly sized controls similar
Dialogue: 0,0:44:29.12,0:44:30.87,Default,,0,0,0,,to NSSlider or NSScrubber, and
Dialogue: 0,0:44:31.39,0:44:32.59,Default,,0,0,0,,here the only difference is that
Dialogue: 0,0:44:32.59,0:44:33.84,Default,,0,0,0,,that simply doesn't have a width
Dialogue: 0,0:44:33.88,0:44:35.27,Default,,0,0,0,,constraint, or it has an
Dialogue: 0,0:44:35.27,0:44:36.63,Default,,0,0,0,,intrinsic content width of
Dialogue: 0,0:44:36.63,0:44:37.61,Default,,0,0,0,,noIntrinsicMetric.
Dialogue: 0,0:44:38.59,0:44:39.94,Default,,0,0,0,,NSTouch Bar will take all of the
Dialogue: 0,0:44:39.94,0:44:41.35,Default,,0,0,0,,available space within the Touch
Dialogue: 0,0:44:41.38,0:44:43.15,Default,,0,0,0,,Bar and divide it up amongst all
Dialogue: 0,0:44:43.15,0:44:44.26,Default,,0,0,0,,these flexible controls.
Dialogue: 0,0:44:44.95,0:44:46.52,Default,,0,0,0,,In this example, the slider is
Dialogue: 0,0:44:46.52,0:44:47.77,Default,,0,0,0,,the only control in there so it
Dialogue: 0,0:44:47.77,0:44:49.05,Default,,0,0,0,,takes up the entire application
Dialogue: 0,0:44:49.05,0:44:49.33,Default,,0,0,0,,region.
Dialogue: 0,0:44:50.43,0:44:51.57,Default,,0,0,0,,Now, if we want to restrict it
Dialogue: 0,0:44:51.57,0:44:53.05,Default,,0,0,0,,to a minimum and maximum size,
Dialogue: 0,0:44:53.55,0:44:55.03,Default,,0,0,0,,we can simply add inequality
Dialogue: 0,0:44:55.03,0:44:56.62,Default,,0,0,0,,constraints just like we did
Dialogue: 0,0:44:56.71,0:44:57.58,Default,,0,0,0,,outside the Touch Bar.
Dialogue: 0,0:44:58.34,0:45:00.06,Default,,0,0,0,,NSTouchBar will follow that
Dialogue: 0,0:45:00.06,0:45:00.54,Default,,0,0,0,,right along.
Dialogue: 0,0:45:01.52,0:45:02.62,Default,,0,0,0,,What's really great about having
Dialogue: 0,0:45:02.62,0:45:04.63,Default,,0,0,0,,this flexibility is, as the user
Dialogue: 0,0:45:04.87,0:45:06.41,Default,,0,0,0,,customizes in additional items,
Dialogue: 0,0:45:06.77,0:45:08.18,Default,,0,0,0,,they're still some flexibility
Dialogue: 0,0:45:08.18,0:45:09.36,Default,,0,0,0,,around how big that control can
Dialogue: 0,0:45:09.36,0:45:10.92,Default,,0,0,0,,be, and the user can really make
Dialogue: 0,0:45:10.92,0:45:12.30,Default,,0,0,0,,the most out of their Touch Bar.
Dialogue: 0,0:45:12.89,0:45:15.27,Default,,0,0,0,,So, that's how you can customize
Dialogue: 0,0:45:15.27,0:45:16.24,Default,,0,0,0,,the sizing and layout of
Dialogue: 0,0:45:16.30,0:45:17.33,Default,,0,0,0,,individual items.
Dialogue: 0,0:45:17.56,0:45:18.33,Default,,0,0,0,,But you also might want to
Dialogue: 0,0:45:18.33,0:45:19.61,Default,,0,0,0,,coordinate the layout across
Dialogue: 0,0:45:19.61,0:45:20.30,Default,,0,0,0,,groups of items.
Dialogue: 0,0:45:21.81,0:45:23.51,Default,,0,0,0,,One new thing in High Sierra is
Dialogue: 0,0:45:23.51,0:45:24.82,Default,,0,0,0,,that prefersEqualWidths property
Dialogue: 0,0:45:24.82,0:45:26.33,Default,,0,0,0,,on GroupTouchBarItem where you
Dialogue: 0,0:45:26.33,0:45:27.51,Default,,0,0,0,,can have all the items within
Dialogue: 0,0:45:27.51,0:45:28.92,Default,,0,0,0,,that group prefer to be equal
Dialogue: 0,0:45:28.92,0:45:29.16,Default,,0,0,0,,width.
Dialogue: 0,0:45:30.17,0:45:31.27,Default,,0,0,0,,What's cool is that this works
Dialogue: 0,0:45:31.27,0:45:32.52,Default,,0,0,0,,with user customization.
Dialogue: 0,0:45:32.80,0:45:34.20,Default,,0,0,0,,So, not only can users customize
Dialogue: 0,0:45:34.20,0:45:35.51,Default,,0,0,0,,items in and out of this equal
Dialogue: 0,0:45:35.51,0:45:37.60,Default,,0,0,0,,sizing group, but the equal
Dialogue: 0,0:45:37.60,0:45:39.47,Default,,0,0,0,,sizing only effects the items
Dialogue: 0,0:45:39.47,0:45:40.66,Default,,0,0,0,,that are actually present in the
Dialogue: 0,0:45:40.66,0:45:42.23,Default,,0,0,0,,Touch Bar, it's not relative to
Dialogue: 0,0:45:42.23,0:45:43.71,Default,,0,0,0,,all the possible items that the
Dialogue: 0,0:45:43.71,0:45:44.37,Default,,0,0,0,,user could add.
Dialogue: 0,0:45:45.38,0:45:46.56,Default,,0,0,0,,This also works really nicely
Dialogue: 0,0:45:46.56,0:45:47.36,Default,,0,0,0,,with localization.
Dialogue: 0,0:45:47.97,0:45:48.73,Default,,0,0,0,,In case one of these buttons
Dialogue: 0,0:45:48.73,0:45:49.87,Default,,0,0,0,,becomes extremely long when
Dialogue: 0,0:45:49.87,0:45:51.54,Default,,0,0,0,,localized, we'll choose to break
Dialogue: 0,0:45:51.54,0:45:52.89,Default,,0,0,0,,that equal width rather than
Dialogue: 0,0:45:52.96,0:45:55.01,Default,,0,0,0,,overflow the Touch Bar and then
Dialogue: 0,0:45:55.01,0:45:56.17,Default,,0,0,0,,cause items to be hidden.
Dialogue: 0,0:45:57.63,0:45:59.44,Default,,0,0,0,,However, sometimes that overflow
Dialogue: 0,0:45:59.44,0:46:00.20,Default,,0,0,0,,might just happen.
Dialogue: 0,0:46:00.39,0:46:02.05,Default,,0,0,0,,And that's where visibility
Dialogue: 0,0:46:02.05,0:46:03.13,Default,,0,0,0,,priority comes into play.
Dialogue: 0,0:46:04.72,0:46:06.17,Default,,0,0,0,,Here you see some start window
Dialogue: 0,0:46:06.17,0:46:07.55,Default,,0,0,0,,UI that looks pretty nice in
Dialogue: 0,0:46:07.55,0:46:09.04,Default,,0,0,0,,English, but when we initially
Dialogue: 0,0:46:09.04,0:46:10.41,Default,,0,0,0,,run it in German, it looks
Dialogue: 0,0:46:10.41,0:46:11.29,Default,,0,0,0,,something like this.
Dialogue: 0,0:46:12.06,0:46:13.59,Default,,0,0,0,,There's no clipping, however the
Dialogue: 0,0:46:13.59,0:46:14.67,Default,,0,0,0,,New Collection button has become
Dialogue: 0,0:46:14.67,0:46:15.01,Default,,0,0,0,,missing.
Dialogue: 0,0:46:15.66,0:46:16.76,Default,,0,0,0,,And the reason is that all the
Dialogue: 0,0:46:16.76,0:46:18.26,Default,,0,0,0,,items in the Touch Bar can't fit
Dialogue: 0,0:46:18.26,0:46:19.51,Default,,0,0,0,,in the space that we've allotted
Dialogue: 0,0:46:20.06,0:46:21.39,Default,,0,0,0,,and so NSTouchBar has overflowed
Dialogue: 0,0:46:21.39,0:46:22.60,Default,,0,0,0,,that New Collection button and
Dialogue: 0,0:46:22.60,0:46:22.97,Default,,0,0,0,,hidden it.
Dialogue: 0,0:46:23.62,0:46:25.00,Default,,0,0,0,,In this example, we might
Dialogue: 0,0:46:25.00,0:46:26.55,Default,,0,0,0,,instead want to hide that
Dialogue: 0,0:46:26.66,0:46:27.98,Default,,0,0,0,,Bookmarks button instead of the
Dialogue: 0,0:46:27.98,0:46:29.73,Default,,0,0,0,,New Collection button and we can
Dialogue: 0,0:46:29.73,0:46:30.53,Default,,0,0,0,,do that by setting its
Dialogue: 0,0:46:30.53,0:46:32.37,Default,,0,0,0,,visibilityPriority to be lower
Dialogue: 0,0:46:32.46,0:46:33.45,Default,,0,0,0,,than all of the rest.
Dialogue: 0,0:46:33.94,0:46:35.37,Default,,0,0,0,,And NSTouchBar will detach the
Dialogue: 0,0:46:35.37,0:46:36.50,Default,,0,0,0,,lower ones first.
Dialogue: 0,0:46:37.36,0:46:38.03,Default,,0,0,0,,And this time we'll get
Dialogue: 0,0:46:38.03,0:46:39.54,Default,,0,0,0,,something like this, which is a
Dialogue: 0,0:46:39.54,0:46:41.39,Default,,0,0,0,,bit better but really it's not a
Dialogue: 0,0:46:41.39,0:46:42.71,Default,,0,0,0,,great user experience to hide
Dialogue: 0,0:46:42.75,0:46:43.34,Default,,0,0,0,,any items.
Dialogue: 0,0:46:43.95,0:46:44.97,Default,,0,0,0,,So, in this case, we could
Dialogue: 0,0:46:44.97,0:46:46.04,Default,,0,0,0,,probably do a bit better.
Dialogue: 0,0:46:46.74,0:46:48.03,Default,,0,0,0,,And using the new Compression
Dialogue: 0,0:46:48.03,0:46:50.24,Default,,0,0,0,,behavior in High Sierra, we can.
Dialogue: 0,0:46:51.51,0:46:52.97,Default,,0,0,0,,So, in this example, we can note
Dialogue: 0,0:46:52.97,0:46:54.28,Default,,0,0,0,,that the titles of the different
Dialogue: 0,0:46:54.28,0:46:55.28,Default,,0,0,0,,buttons actually fully
Dialogue: 0,0:46:55.28,0:46:56.60,Default,,0,0,0,,communicate what effect they'll
Dialogue: 0,0:46:56.60,0:46:56.89,Default,,0,0,0,,have.
Dialogue: 0,0:46:57.40,0:46:59.19,Default,,0,0,0,,And so instead of dropping any
Dialogue: 0,0:46:59.19,0:47:00.85,Default,,0,0,0,,items, we can drop those hidden
Dialogue: 0,0:47:00.85,0:47:01.70,Default,,0,0,0,,images instead.
Dialogue: 0,0:47:02.63,0:47:03.63,Default,,0,0,0,,We can set the prioritize
Dialogue: 0,0:47:03.63,0:47:04.75,Default,,0,0,0,,compression options of this
Dialogue: 0,0:47:04.75,0:47:06.67,Default,,0,0,0,,group to be hideImages and now
Dialogue: 0,0:47:06.67,0:47:08.26,Default,,0,0,0,,when we run in German, it looks
Dialogue: 0,0:47:08.26,0:47:08.84,Default,,0,0,0,,like this.
Dialogue: 0,0:47:09.70,0:47:10.84,Default,,0,0,0,,What's really cool is that this
Dialogue: 0,0:47:10.84,0:47:11.74,Default,,0,0,0,,happens atomically.
Dialogue: 0,0:47:12.19,0:47:13.20,Default,,0,0,0,,We don't end up with half the
Dialogue: 0,0:47:13.20,0:47:14.29,Default,,0,0,0,,buttons having images and half
Dialogue: 0,0:47:14.29,0:47:15.62,Default,,0,0,0,,of them not, it's an all or
Dialogue: 0,0:47:15.62,0:47:16.19,Default,,0,0,0,,nothing thing.
Dialogue: 0,0:47:16.85,0:47:17.69,Default,,0,0,0,,And there's really a lot of
Dialogue: 0,0:47:17.69,0:47:18.50,Default,,0,0,0,,flexibility here.
Dialogue: 0,0:47:19.04,0:47:20.16,Default,,0,0,0,,We can instead think that our
Dialogue: 0,0:47:20.16,0:47:22.93,Default,,0,0,0,,icons are descriptive enough and
Dialogue: 0,0:47:22.93,0:47:24.82,Default,,0,0,0,,opt to hide the text instead in
Dialogue: 0,0:47:24.82,0:47:25.89,Default,,0,0,0,,which case we get this.
Dialogue: 0,0:47:26.76,0:47:28.07,Default,,0,0,0,,And you can even go so far as if
Dialogue: 0,0:47:28.07,0:47:29.45,Default,,0,0,0,,you have your own custom ways
Dialogue: 0,0:47:29.45,0:47:30.92,Default,,0,0,0,,that your custom controls can
Dialogue: 0,0:47:30.92,0:47:33.17,Default,,0,0,0,,compress, you can add additional
Dialogue: 0,0:47:33.17,0:47:34.62,Default,,0,0,0,,options to these prioritize
Dialogue: 0,0:47:34.62,0:47:36.89,Default,,0,0,0,,options to describe that your
Dialogue: 0,0:47:36.89,0:47:38.32,Default,,0,0,0,,custom control should compress
Dialogue: 0,0:47:38.42,0:47:40.03,Default,,0,0,0,,in those different ways.
Dialogue: 0,0:47:40.68,0:47:42.05,Default,,0,0,0,,So, these are a few ways that
Dialogue: 0,0:47:42.05,0:47:43.20,Default,,0,0,0,,you can use different group
Dialogue: 0,0:47:43.24,0:47:44.96,Default,,0,0,0,,Touch Bar properties to control
Dialogue: 0,0:47:44.96,0:47:46.08,Default,,0,0,0,,the group layout of your items.
Dialogue: 0,0:47:46.72,0:47:48.06,Default,,0,0,0,,However, the container views
Dialogue: 0,0:47:48.06,0:47:48.93,Default,,0,0,0,,that you're used to using
Dialogue: 0,0:47:48.93,0:47:50.55,Default,,0,0,0,,outside the Touch Bar, can also
Dialogue: 0,0:47:50.55,0:47:51.48,Default,,0,0,0,,be used within.
Dialogue: 0,0:47:52.64,0:47:53.57,Default,,0,0,0,,There was a really great talk
Dialogue: 0,0:47:53.57,0:47:54.82,Default,,0,0,0,,earlier today "Choosing the
Dialogue: 0,0:47:54.82,0:47:56.03,Default,,0,0,0,,right Cocoa Container View" that
Dialogue: 0,0:47:56.03,0:47:56.84,Default,,0,0,0,,discussed some of the
Dialogue: 0,0:47:56.84,0:47:58.43,Default,,0,0,0,,differences between these as
Dialogue: 0,0:47:58.46,0:48:00.13,Default,,0,0,0,,used outside the Touch Bar, but
Dialogue: 0,0:48:00.13,0:48:00.99,Default,,0,0,0,,I'd like to highlight a few of
Dialogue: 0,0:48:00.99,0:48:02.08,Default,,0,0,0,,the ways that you can use them
Dialogue: 0,0:48:02.11,0:48:02.48,Default,,0,0,0,,within.
Dialogue: 0,0:48:03.92,0:48:05.48,Default,,0,0,0,,You can use NSStackView to have
Dialogue: 0,0:48:05.48,0:48:06.77,Default,,0,0,0,,really precise control of the
Dialogue: 0,0:48:06.77,0:48:08.57,Default,,0,0,0,,spacing or sizing of your items,
Dialogue: 0,0:48:08.83,0:48:09.92,Default,,0,0,0,,such as what Calendar's doing
Dialogue: 0,0:48:09.92,0:48:11.28,Default,,0,0,0,,here where they've completely
Dialogue: 0,0:48:11.28,0:48:12.77,Default,,0,0,0,,eliminated the spacing between
Dialogue: 0,0:48:12.77,0:48:13.43,Default,,0,0,0,,these two buttons.
Dialogue: 0,0:48:14.86,0:48:15.94,Default,,0,0,0,,You can also put that StackView
Dialogue: 0,0:48:15.94,0:48:17.56,Default,,0,0,0,,into a ScrollView to enable
Dialogue: 0,0:48:17.56,0:48:19.10,Default,,0,0,0,,scrollability of these small
Dialogue: 0,0:48:19.10,0:48:20.81,Default,,0,0,0,,list of items right inside the
Dialogue: 0,0:48:20.81,0:48:21.26,Default,,0,0,0,,Touch Bar.
Dialogue: 0,0:48:21.81,0:48:24.40,Default,,0,0,0,,Jeff talked earlier about how
Dialogue: 0,0:48:24.40,0:48:26.13,Default,,0,0,0,,you can use NSScrubber when you
Dialogue: 0,0:48:26.13,0:48:27.41,Default,,0,0,0,,have these unbounded list of
Dialogue: 0,0:48:27.41,0:48:29.05,Default,,0,0,0,,items where you want to maintain
Dialogue: 0,0:48:29.05,0:48:31.06,Default,,0,0,0,,a selection over time as well as
Dialogue: 0,0:48:31.06,0:48:32.15,Default,,0,0,0,,benefit from some of the other
Dialogue: 0,0:48:32.15,0:48:33.26,Default,,0,0,0,,aspects that Scrubber can
Dialogue: 0,0:48:33.26,0:48:33.69,Default,,0,0,0,,provide.
Dialogue: 0,0:48:35.02,0:48:36.79,Default,,0,0,0,,Finally, you can go all the way
Dialogue: 0,0:48:36.79,0:48:38.37,Default,,0,0,0,,to using NSCollectionView right
Dialogue: 0,0:48:38.37,0:48:39.87,Default,,0,0,0,,in the Touch Bar to really have
Dialogue: 0,0:48:39.91,0:48:41.71,Default,,0,0,0,,precise control of the layout,
Dialogue: 0,0:48:42.10,0:48:43.03,Default,,0,0,0,,or completely custom
Dialogue: 0,0:48:43.03,0:48:44.50,Default,,0,0,0,,interactions, such as what the
Dialogue: 0,0:48:44.50,0:48:45.52,Default,,0,0,0,,favorites list in the color
Dialogue: 0,0:48:45.52,0:48:46.16,Default,,0,0,0,,picker does.
Dialogue: 0,0:48:46.77,0:48:50.13,Default,,0,0,0,,So, that's layout.
Dialogue: 0,0:48:50.87,0:48:51.72,Default,,0,0,0,,What's really cool is that for
Dialogue: 0,0:48:51.72,0:48:52.90,Default,,0,0,0,,the most part, layout works
Dialogue: 0,0:48:52.90,0:48:54.57,Default,,0,0,0,,exactly like it does outside the
Dialogue: 0,0:48:54.57,0:48:55.90,Default,,0,0,0,,Touch Bay, so any concepts
Dialogue: 0,0:48:55.90,0:48:57.14,Default,,0,0,0,,you're used to are using, you
Dialogue: 0,0:48:57.14,0:48:58.24,Default,,0,0,0,,can use within.
Dialogue: 0,0:48:59.50,0:49:00.69,Default,,0,0,0,,Now finally, let's talk about
Dialogue: 0,0:49:00.69,0:49:02.16,Default,,0,0,0,,how we can use layout to really
Dialogue: 0,0:49:02.16,0:49:03.06,Default,,0,0,0,,tie all this together.
Dialogue: 0,0:49:04.15,0:49:05.46,Default,,0,0,0,,Before we do that, I really want
Dialogue: 0,0:49:05.46,0:49:06.71,Default,,0,0,0,,to reiterate that the Touch Bar
Dialogue: 0,0:49:06.71,0:49:08.38,Default,,0,0,0,,is an input device and not this
Dialogue: 0,0:49:08.38,0:49:09.00,Default,,0,0,0,,extra display.
Dialogue: 0,0:49:09.67,0:49:10.64,Default,,0,0,0,,It's not the right venue for you
Dialogue: 0,0:49:10.64,0:49:11.54,Default,,0,0,0,,to be showing off your different
Dialogue: 0,0:49:11.54,0:49:13.48,Default,,0,0,0,,animation skills with animations
Dialogue: 0,0:49:13.48,0:49:14.57,Default,,0,0,0,,that might be distracting from
Dialogue: 0,0:49:14.57,0:49:15.80,Default,,0,0,0,,what the user's trying to focus
Dialogue: 0,0:49:15.80,0:49:17.20,Default,,0,0,0,,on the main display.
Dialogue: 0,0:49:17.20,0:49:19.30,Default,,0,0,0,,And any animations that you do
Dialogue: 0,0:49:19.30,0:49:20.96,Default,,0,0,0,,add should always be relative to
Dialogue: 0,0:49:20.96,0:49:21.68,Default,,0,0,0,,user input.
Dialogue: 0,0:49:22.30,0:49:23.60,Default,,0,0,0,,And because that user input can
Dialogue: 0,0:49:23.60,0:49:25.42,Default,,0,0,0,,change at any time, your
Dialogue: 0,0:49:25.42,0:49:26.04,Default,,0,0,0,,animation should be
Dialogue: 0,0:49:26.04,0:49:27.33,Default,,0,0,0,,interruptible and updatable.
Dialogue: 0,0:49:28.52,0:49:29.84,Default,,0,0,0,,So, one obvious thing we might
Dialogue: 0,0:49:29.84,0:49:31.28,Default,,0,0,0,,want to animate are the sizes of
Dialogue: 0,0:49:31.28,0:49:32.68,Default,,0,0,0,,our items as they're changing.
Dialogue: 0,0:49:33.65,0:49:35.48,Default,,0,0,0,,We saw earlier how we can add an
Dialogue: 0,0:49:35.48,0:49:36.83,Default,,0,0,0,,explicit width constraint to
Dialogue: 0,0:49:36.83,0:49:38.67,Default,,0,0,0,,control that size, and what's
Dialogue: 0,0:49:38.67,0:49:39.93,Default,,0,0,0,,really great is that to actually
Dialogue: 0,0:49:39.93,0:49:41.76,Default,,0,0,0,,animate that size change, all we
Dialogue: 0,0:49:41.76,0:49:43.17,Default,,0,0,0,,need to do is use the animator
Dialogue: 0,0:49:43.17,0:49:44.62,Default,,0,0,0,,proxy on that constraint and
Dialogue: 0,0:49:44.62,0:49:45.93,Default,,0,0,0,,update its constant instead.
Dialogue: 0,0:49:46.43,0:49:47.64,Default,,0,0,0,,And we get all the animation
Dialogue: 0,0:49:47.64,0:49:49.64,Default,,0,0,0,,benefits that you'd expect, such
Dialogue: 0,0:49:49.64,0:49:51.26,Default,,0,0,0,,as simultaneous animations and
Dialogue: 0,0:49:51.26,0:49:52.88,Default,,0,0,0,,even interruptibility just with
Dialogue: 0,0:49:52.88,0:49:53.70,Default,,0,0,0,,this one change.
Dialogue: 0,0:49:54.27,0:49:56.82,Default,,0,0,0,,If instead we opted to use
Dialogue: 0,0:49:56.82,0:49:58.49,Default,,0,0,0,,intrinsicContentSize to express
Dialogue: 0,0:49:58.49,0:49:59.98,Default,,0,0,0,,the size of our items,
Dialogue: 0,0:50:00.06,0:50:00.25,Default,,0,0,0,,and then
Dialogue: 0,0:50:00.25,0:50:01.42,Default,,0,0,0,,invalidateIntrinsicContentSize
Dialogue: 0,0:50:01.46,0:50:03.24,Default,,0,0,0,,to note it changed, what we can
Dialogue: 0,0:50:03.24,0:50:04.52,Default,,0,0,0,,do here is we can wrap that in
Dialogue: 0,0:50:04.52,0:50:06.26,Default,,0,0,0,,an animation group, set
Dialogue: 0,0:50:06.26,0:50:07.89,Default,,0,0,0,,allowsImplicitAnimation to true,
Dialogue: 0,0:50:08.15,0:50:09.28,Default,,0,0,0,,and then call layoutIfNeeded.
Dialogue: 0,0:50:09.33,0:50:11.06,Default,,0,0,0,,And again we get all the same
Dialogue: 0,0:50:11.06,0:50:12.72,Default,,0,0,0,,animation benefits that we saw
Dialogue: 0,0:50:12.72,0:50:13.51,Default,,0,0,0,,in the other approach.
Dialogue: 0,0:50:14.98,0:50:16.26,Default,,0,0,0,,Something else we might not want
Dialogue: 0,0:50:16.26,0:50:17.95,Default,,0,0,0,,to animate is whether an item is
Dialogue: 0,0:50:17.95,0:50:18.79,Default,,0,0,0,,flexible or not.
Dialogue: 0,0:50:19.20,0:50:20.48,Default,,0,0,0,,So, we can see here as the item
Dialogue: 0,0:50:20.48,0:50:21.95,Default,,0,0,0,,takes up all the available space
Dialogue: 0,0:50:22.18,0:50:24.52,Default,,0,0,0,,animatedly, and the same exact
Dialogue: 0,0:50:24.52,0:50:25.50,Default,,0,0,0,,technique of using that
Dialogue: 0,0:50:25.50,0:50:27.23,Default,,0,0,0,,animation group can be used here
Dialogue: 0,0:50:27.58,0:50:28.56,Default,,0,0,0,,with the only difference being
Dialogue: 0,0:50:28.56,0:50:30.22,Default,,0,0,0,,the same as before, where when
Dialogue: 0,0:50:30.22,0:50:31.62,Default,,0,0,0,,the item's considered flexible,
Dialogue: 0,0:50:31.62,0:50:34.12,Default,,0,0,0,,it has a intrinsicContentSize of
Dialogue: 0,0:50:34.12,0:50:35.80,Default,,0,0,0,,noIntrinsicMetric for its width.
Dialogue: 0,0:50:37.33,0:50:38.53,Default,,0,0,0,,Now we can tie all this together
Dialogue: 0,0:50:38.53,0:50:39.64,Default,,0,0,0,,and start to build something
Dialogue: 0,0:50:39.64,0:50:40.80,Default,,0,0,0,,similar to the color picker
Dialogue: 0,0:50:41.17,0:50:42.56,Default,,0,0,0,,where as you change the active
Dialogue: 0,0:50:42.56,0:50:44.37,Default,,0,0,0,,item, it grows to take up all
Dialogue: 0,0:50:44.37,0:50:45.70,Default,,0,0,0,,the available space and the
Dialogue: 0,0:50:45.70,0:50:47.36,Default,,0,0,0,,other items shrink down.
Dialogue: 0,0:50:48.88,0:50:50.37,Default,,0,0,0,,So, we can start by defining
Dialogue: 0,0:50:50.37,0:50:52.69,Default,,0,0,0,,this custom AccordionView that
Dialogue: 0,0:50:52.69,0:50:54.00,Default,,0,0,0,,has an active state as well as
Dialogue: 0,0:50:54.00,0:50:55.49,Default,,0,0,0,,defines an intrinsicContentSize.
Dialogue: 0,0:50:56.47,0:50:58.42,Default,,0,0,0,,When it's inactive, it has this
Dialogue: 0,0:50:58.42,0:50:59.78,Default,,0,0,0,,small fixed size.
Dialogue: 0,0:51:00.55,0:51:01.68,Default,,0,0,0,,However, once we set it to be
Dialogue: 0,0:51:01.68,0:51:03.31,Default,,0,0,0,,active, we want it to have that
Dialogue: 0,0:51:03.36,0:51:04.94,Default,,0,0,0,,flexible size that takes up all
Dialogue: 0,0:51:04.94,0:51:05.96,Default,,0,0,0,,the available space.
Dialogue: 0,0:51:06.17,0:51:07.18,Default,,0,0,0,,And again, we can use
Dialogue: 0,0:51:07.18,0:51:08.67,Default,,0,0,0,,noIntrinsicMetric to achieve
Dialogue: 0,0:51:08.67,0:51:08.93,Default,,0,0,0,,that.
Dialogue: 0,0:51:10.19,0:51:11.21,Default,,0,0,0,,Now we stack a few of these
Dialogue: 0,0:51:11.21,0:51:12.61,Default,,0,0,0,,items together in our Touch Bar,
Dialogue: 0,0:51:12.61,0:51:14.72,Default,,0,0,0,,and we add pressRecognizers to
Dialogue: 0,0:51:14.72,0:51:15.69,Default,,0,0,0,,each individual one.
Dialogue: 0,0:51:16.90,0:51:18.22,Default,,0,0,0,,When the user taps down on one
Dialogue: 0,0:51:18.22,0:51:20.18,Default,,0,0,0,,of our accordion views, we can
Dialogue: 0,0:51:20.18,0:51:22.35,Default,,0,0,0,,handle that press and then take
Dialogue: 0,0:51:22.35,0:51:24.94,Default,,0,0,0,,the oldActiveAccordionView and
Dialogue: 0,0:51:24.94,0:51:26.53,Default,,0,0,0,,set it to be inactive, so to
Dialogue: 0,0:51:26.53,0:51:29.13,Default,,0,0,0,,have that small fixed size, get
Dialogue: 0,0:51:29.13,0:51:31.13,Default,,0,0,0,,the newActiveAccordionView and
Dialogue: 0,0:51:31.13,0:51:31.89,Default,,0,0,0,,activate it.
Dialogue: 0,0:51:32.64,0:51:33.61,Default,,0,0,0,,And finally using that
Dialogue: 0,0:51:33.61,0:51:35.36,Default,,0,0,0,,allowsImplicitAnimations simply
Dialogue: 0,0:51:35.36,0:51:36.31,Default,,0,0,0,,layout that change.
Dialogue: 0,0:51:37.18,0:51:38.78,Default,,0,0,0,,And we get exactly what you'd
Dialogue: 0,0:51:38.78,0:51:39.35,Default,,0,0,0,,expect.
Dialogue: 0,0:51:39.52,0:51:40.84,Default,,0,0,0,,It's pretty straightforward.
Dialogue: 0,0:51:41.45,0:51:43.20,Default,,0,0,0,,So, that's how you can animate
Dialogue: 0,0:51:43.20,0:51:44.60,Default,,0,0,0,,different item size, but you
Dialogue: 0,0:51:44.60,0:51:45.45,Default,,0,0,0,,also might want to animate the
Dialogue: 0,0:51:45.45,0:51:47.84,Default,,0,0,0,,content within the items, such
Dialogue: 0,0:51:47.84,0:51:48.77,Default,,0,0,0,,as the content within the
Dialogue: 0,0:51:48.77,0:51:49.45,Default,,0,0,0,,different scrubber.
Dialogue: 0,0:51:50.59,0:51:52.13,Default,,0,0,0,,Now, if you're using constraints
Dialogue: 0,0:51:52.13,0:51:53.46,Default,,0,0,0,,or overriding layout and setting
Dialogue: 0,0:51:53.46,0:51:54.43,Default,,0,0,0,,your frames or updating your
Dialogue: 0,0:51:54.43,0:51:55.95,Default,,0,0,0,,properties there, what's really
Dialogue: 0,0:51:55.95,0:51:57.25,Default,,0,0,0,,great is that there's no extra
Dialogue: 0,0:51:57.25,0:51:58.30,Default,,0,0,0,,work needed to actually achieve
Dialogue: 0,0:51:58.30,0:51:58.68,Default,,0,0,0,,this.
Dialogue: 0,0:51:59.17,0:52:00.61,Default,,0,0,0,,So, as we resize this custom
Dialogue: 0,0:52:00.61,0:52:02.62,Default,,0,0,0,,item animatedly, you'll see that
Dialogue: 0,0:52:02.62,0:52:04.33,Default,,0,0,0,,the Scrubber's items flexibly
Dialogue: 0,0:52:04.33,0:52:06.55,Default,,0,0,0,,resize down, fluidly resize down
Dialogue: 0,0:52:07.21,0:52:08.60,Default,,0,0,0,,and even the images within them
Dialogue: 0,0:52:08.65,0:52:09.75,Default,,0,0,0,,nicely resize up.
Dialogue: 0,0:52:09.75,0:52:11.94,Default,,0,0,0,,And what's really cool is that
Dialogue: 0,0:52:11.94,0:52:13.14,Default,,0,0,0,,there is no extra work needed on
Dialogue: 0,0:52:13.14,0:52:15.09,Default,,0,0,0,,my part or by NSScrubber to
Dialogue: 0,0:52:15.09,0:52:15.89,Default,,0,0,0,,achieve this effect.
Dialogue: 0,0:52:16.52,0:52:17.75,Default,,0,0,0,,Because NSScrubber overrides
Dialogue: 0,0:52:17.81,0:52:19.49,Default,,0,0,0,,layout to achieve all its layout
Dialogue: 0,0:52:19.49,0:52:22.53,Default,,0,0,0,,and view properties, all of this
Dialogue: 0,0:52:22.53,0:52:23.64,Default,,0,0,0,,came completely for free.
Dialogue: 0,0:52:24.33,0:52:27.11,Default,,0,0,0,,The other type of content that
Dialogue: 0,0:52:27.11,0:52:28.26,Default,,0,0,0,,you often use in your Touch Bar
Dialogue: 0,0:52:28.47,0:52:29.00,Default,,0,0,0,,are buttons.
Dialogue: 0,0:52:29.78,0:52:31.05,Default,,0,0,0,,Now as your state changes, you
Dialogue: 0,0:52:31.05,0:52:32.15,Default,,0,0,0,,might in the past have updated
Dialogue: 0,0:52:32.15,0:52:33.23,Default,,0,0,0,,the properties of these buttons,
Dialogue: 0,0:52:33.71,0:52:34.54,Default,,0,0,0,,but you might want to achieve
Dialogue: 0,0:52:34.54,0:52:35.30,Default,,0,0,0,,something similar to what
Dialogue: 0,0:52:35.30,0:52:36.68,Default,,0,0,0,,FaceTime does where it actually
Dialogue: 0,0:52:36.68,0:52:38.26,Default,,0,0,0,,animates those property changes.
Dialogue: 0,0:52:39.07,0:52:40.40,Default,,0,0,0,,New in High Sierra is the
Dialogue: 0,0:52:40.40,0:52:41.49,Default,,0,0,0,,ability to use the animator
Dialogue: 0,0:52:41.49,0:52:42.89,Default,,0,0,0,,proxy on these buttons and
Dialogue: 0,0:52:42.89,0:52:43.95,Default,,0,0,0,,update your properties there,
Dialogue: 0,0:52:43.95,0:52:45.34,Default,,0,0,0,,and again you'll get these
Dialogue: 0,0:52:45.34,0:52:46.84,Default,,0,0,0,,animations completely for free.
Dialogue: 0,0:52:47.46,0:52:49.94,Default,,0,0,0,,If you focus in on that Remind
Dialogue: 0,0:52:49.94,0:52:51.32,Default,,0,0,0,,Me Later button, you'll note
Dialogue: 0,0:52:51.32,0:52:52.50,Default,,0,0,0,,that as the image position
Dialogue: 0,0:52:52.50,0:52:54.06,Default,,0,0,0,,changes, so does the overall
Dialogue: 0,0:52:54.06,0:52:55.65,Default,,0,0,0,,layout of the Touch Bar and we
Dialogue: 0,0:52:55.65,0:52:57.02,Default,,0,0,0,,can combine all these approaches
Dialogue: 0,0:52:57.11,0:52:58.32,Default,,0,0,0,,of setting the imagePosition
Dialogue: 0,0:52:58.32,0:52:59.68,Default,,0,0,0,,against the animator and then
Dialogue: 0,0:52:59.68,0:53:01.19,Default,,0,0,0,,using allowsImplicitAnimations
Dialogue: 0,0:53:01.46,0:53:02.27,Default,,0,0,0,,to apply both of these
Dialogue: 0,0:53:02.27,0:53:05.91,Default,,0,0,0,,animations all at the same time.
Dialogue: 0,0:53:06.13,0:53:07.35,Default,,0,0,0,,Now, when it comes to building
Dialogue: 0,0:53:07.35,0:53:08.45,Default,,0,0,0,,your own custom controls, you
Dialogue: 0,0:53:08.68,0:53:09.80,Default,,0,0,0,,might also have completely
Dialogue: 0,0:53:09.80,0:53:11.21,Default,,0,0,0,,custom animations that happen
Dialogue: 0,0:53:11.21,0:53:12.83,Default,,0,0,0,,alongside item sizes, or maybe
Dialogue: 0,0:53:12.83,0:53:14.97,Default,,0,0,0,,even independently, such as the
Dialogue: 0,0:53:14.97,0:53:16.90,Default,,0,0,0,,fluid knob resize happens when
Dialogue: 0,0:53:16.90,0:53:18.29,Default,,0,0,0,,you activate these sliders.
Dialogue: 0,0:53:19.48,0:53:20.36,Default,,0,0,0,,Now there's a few different
Dialogue: 0,0:53:20.36,0:53:21.20,Default,,0,0,0,,approaches you could actually
Dialogue: 0,0:53:21.20,0:53:22.95,Default,,0,0,0,,use here, such as using the
Dialogue: 0,0:53:22.95,0:53:24.54,Default,,0,0,0,,animator proxy on your custom
Dialogue: 0,0:53:24.54,0:53:26.36,Default,,0,0,0,,view to animate built-in view
Dialogue: 0,0:53:26.36,0:53:27.76,Default,,0,0,0,,properties or your own custom
Dialogue: 0,0:53:27.76,0:53:28.45,Default,,0,0,0,,properties.
Dialogue: 0,0:53:29.18,0:53:30.72,Default,,0,0,0,,You can also take explicit
Dialogue: 0,0:53:30.72,0:53:32.52,Default,,0,0,0,,CAAnimations and add them to the
Dialogue: 0,0:53:32.57,0:53:35.47,Default,,0,0,0,,content of that view, or if
Dialogue: 0,0:53:35.47,0:53:36.74,Default,,0,0,0,,you're able to express this as a
Dialogue: 0,0:53:36.74,0:53:38.29,Default,,0,0,0,,state change in your layout
Dialogue: 0,0:53:38.29,0:53:40.26,Default,,0,0,0,,override, where you update your
Dialogue: 0,0:53:40.26,0:53:41.55,Default,,0,0,0,,view properties there, you can
Dialogue: 0,0:53:41.55,0:53:42.70,Default,,0,0,0,,again take advantage of that
Dialogue: 0,0:53:42.70,0:53:44.23,Default,,0,0,0,,allowsImplicitAnimation call and
Dialogue: 0,0:53:44.23,0:53:45.79,Default,,0,0,0,,actually do no extra work as
Dialogue: 0,0:53:45.79,0:53:47.64,Default,,0,0,0,,part of animating that change.
Dialogue: 0,0:53:49.03,0:53:49.89,Default,,0,0,0,,There was a talk from a few
Dialogue: 0,0:53:49.89,0:53:51.13,Default,,0,0,0,,years ago that actually went
Dialogue: 0,0:53:51.13,0:53:52.23,Default,,0,0,0,,into a lot of detail about these
Dialogue: 0,0:53:52.29,0:53:53.38,Default,,0,0,0,,three different approaches and
Dialogue: 0,0:53:53.38,0:53:54.92,Default,,0,0,0,,their pros and cons "Best
Dialogue: 0,0:53:54.92,0:53:56.26,Default,,0,0,0,,Practices for Cocoa Animation."
Dialogue: 0,0:53:56.74,0:53:57.80,Default,,0,0,0,,I'd recommend checking that out
Dialogue: 0,0:53:57.80,0:53:58.92,Default,,0,0,0,,if you want to know more.
Dialogue: 0,0:53:59.55,0:54:02.18,Default,,0,0,0,,So, we talked about a pretty
Dialogue: 0,0:54:02.18,0:54:03.61,Default,,0,0,0,,wide variety of content today.
Dialogue: 0,0:54:03.61,0:54:04.95,Default,,0,0,0,,And I hope you can take
Dialogue: 0,0:54:04.95,0:54:06.02,Default,,0,0,0,,inspiration from some of these
Dialogue: 0,0:54:06.02,0:54:07.24,Default,,0,0,0,,areas and actually go back and
Dialogue: 0,0:54:07.24,0:54:08.23,Default,,0,0,0,,create some really rich Touch
Dialogue: 0,0:54:08.23,0:54:09.25,Default,,0,0,0,,Bar content for your
Dialogue: 0,0:54:09.25,0:54:10.73,Default,,0,0,0,,applications to really create a
Dialogue: 0,0:54:10.73,0:54:12.74,Default,,0,0,0,,nice user experience, taking
Dialogue: 0,0:54:12.74,0:54:13.91,Default,,0,0,0,,things like custom candidates in
Dialogue: 0,0:54:13.91,0:54:14.95,Default,,0,0,0,,the Candidate List item,
Dialogue: 0,0:54:15.32,0:54:16.26,Default,,0,0,0,,creating your own unique
Dialogue: 0,0:54:16.26,0:54:17.86,Default,,0,0,0,,Scrubber layout, or combining
Dialogue: 0,0:54:17.86,0:54:18.90,Default,,0,0,0,,gestureRecognizers in really
Dialogue: 0,0:54:18.90,0:54:21.21,Default,,0,0,0,,unique ways to really make your
Dialogue: 0,0:54:21.21,0:54:22.30,Default,,0,0,0,,UI pretty interesting.
Dialogue: 0,0:54:23.08,0:54:24.12,Default,,0,0,0,,For more information, you can
Dialogue: 0,0:54:24.12,0:54:25.08,Default,,0,0,0,,see this website where we have
Dialogue: 0,0:54:25.08,0:54:26.69,Default,,0,0,0,,links to documentation and the
Dialogue: 0,0:54:26.69,0:54:27.95,Default,,0,0,0,,Human Interface Guidelines.
Dialogue: 0,0:54:28.59,0:54:30.17,Default,,0,0,0,,And most of the related sessions
Dialogue: 0,0:54:30.17,0:54:31.66,Default,,0,0,0,,we have are in the past, but
Dialogue: 0,0:54:31.66,0:54:33.17,Default,,0,0,0,,there's actually one tomorrow at
Dialogue: 0,0:54:33.17,0:54:35.06,Default,,0,0,0,,the same time "Building Visually
Dialogue: 0,0:54:35.06,0:54:36.44,Default,,0,0,0,,Rich User Experiences" that will
Dialogue: 0,0:54:36.44,0:54:37.59,Default,,0,0,0,,actually go into a few tips and
Dialogue: 0,0:54:37.59,0:54:39.05,Default,,0,0,0,,tricks of using Core Animation
Dialogue: 0,0:54:39.39,0:54:40.37,Default,,0,0,0,,to achieve some of these really
Dialogue: 0,0:54:40.37,0:54:42.02,Default,,0,0,0,,interesting effects that equally
Dialogue: 0,0:54:42.02,0:54:43.41,Default,,0,0,0,,apply when used in the Touch
Dialogue: 0,0:54:43.41,0:54:43.66,Default,,0,0,0,,Bar.
Dialogue: 0,0:54:45.26,0:54:46.45,Default,,0,0,0,,That's it for our talk and I
Dialogue: 0,0:54:46.45,0:54:47.64,Default,,0,0,0,,hope you guys have a great rest
Dialogue: 0,0:54:47.64,0:54:48.05,Default,,0,0,0,,of your WWDC.
Dialogue: 0,0:54:48.05,0:54:48.98,Default,,0,0,0,,Thank you.
Dialogue: 0,0:54:49.51,0:54:51.51,Default,,0,0,0,,[ Applause ]
