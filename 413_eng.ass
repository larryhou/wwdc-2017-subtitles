[Script Info]
; Script generated by FFmpeg/Lavc57.89.100
ScriptType: v4.00+
PlayResX: 384
PlayResY: 288

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,16,&Hffffff,&Hffffff,&H0,&H0,0,0,0,0,100,100,0,0,1,1,0,2,10,10,10,0

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:22.52,0:00:26.60,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:00:27.10,0:00:27.92,Default,,0,0,0,,Thanks for coming out this
Dialogue: 0,0:00:27.92,0:00:28.37,Default,,0,0,0,,morning.
Dialogue: 0,0:00:28.81,0:00:29.96,Default,,0,0,0,,I'm Louis Gerbarg.
Dialogue: 0,0:00:29.96,0:00:31.63,Default,,0,0,0,,I work on the dyld Team, and
Dialogue: 0,0:00:31.93,0:00:33.07,Default,,0,0,0,,today we're going to talk about
Dialogue: 0,0:00:33.07,0:00:34.90,Default,,0,0,0,,App Startup, Past, Present and
Dialogue: 0,0:00:34.90,0:00:35.30,Default,,0,0,0,,Future.
Dialogue: 0,0:00:36.45,0:00:37.68,Default,,0,0,0,,So we got a lot to go through,
Dialogue: 0,0:00:37.68,0:00:38.60,Default,,0,0,0,,so I'm just going to get into
Dialogue: 0,0:00:38.60,0:00:38.72,Default,,0,0,0,,it.
Dialogue: 0,0:00:39.80,0:00:40.67,Default,,0,0,0,,So first off I want to do an
Dialogue: 0,0:00:40.67,0:00:41.57,Default,,0,0,0,,overview of what we're going to
Dialogue: 0,0:00:41.57,0:00:42.43,Default,,0,0,0,,be talking about today.
Dialogue: 0,0:00:43.51,0:00:46.35,Default,,0,0,0,,So first we're going to review
Dialogue: 0,0:00:46.35,0:00:47.86,Default,,0,0,0,,some advice we gave from last
Dialogue: 0,0:00:47.86,0:00:48.12,Default,,0,0,0,,year.
Dialogue: 0,0:00:49.19,0:00:50.25,Default,,0,0,0,,Then I want to talk about some
Dialogue: 0,0:00:50.25,0:00:52.13,Default,,0,0,0,,new tooling we've developed to
Dialogue: 0,0:00:52.13,0:00:53.82,Default,,0,0,0,,make finding certain types of
Dialogue: 0,0:00:53.82,0:00:55.32,Default,,0,0,0,,app startup time problems
Dialogue: 0,0:00:55.32,0:00:55.72,Default,,0,0,0,,easier.
Dialogue: 0,0:00:56.85,0:00:58.40,Default,,0,0,0,,After that I want to take a side
Dialogue: 0,0:00:58.40,0:00:59.95,Default,,0,0,0,,tour into a brief history of
Dialogue: 0,0:00:59.95,0:01:02.77,Default,,0,0,0,,dyld on our platforms, and then
Dialogue: 0,0:01:02.77,0:01:03.98,Default,,0,0,0,,I want to discuss the all new
Dialogue: 0,0:01:03.98,0:01:06.55,Default,,0,0,0,,dyld that we're going to be
Dialogue: 0,0:01:06.80,0:01:08.66,Default,,0,0,0,,shipping in macOS High Sierra
Dialogue: 0,0:01:08.66,0:01:10.22,Default,,0,0,0,,and iOS 11.
Dialogue: 0,0:01:10.22,0:01:11.90,Default,,0,0,0,,And then finally, I want to talk
Dialogue: 0,0:01:11.90,0:01:13.48,Default,,0,0,0,,about best practices for this
Dialogue: 0,0:01:13.48,0:01:15.97,Default,,0,0,0,,new dyld.
Dialogue: 0,0:01:16.10,0:01:18.97,Default,,0,0,0,,So before that I just want to do
Dialogue: 0,0:01:18.97,0:01:20.18,Default,,0,0,0,,a little bit of bookkeeping.
Dialogue: 0,0:01:21.62,0:01:23.09,Default,,0,0,0,,So first off, we want your
Dialogue: 0,0:01:23.09,0:01:23.80,Default,,0,0,0,,feedback.
Dialogue: 0,0:01:24.21,0:01:27.33,Default,,0,0,0,,So if you have anything you want
Dialogue: 0,0:01:27.33,0:01:28.61,Default,,0,0,0,,to tell us, please file bugs
Dialogue: 0,0:01:28.61,0:01:30.68,Default,,0,0,0,,with the title DYLD USAGE, and
Dialogue: 0,0:01:30.68,0:01:31.75,Default,,0,0,0,,hopefully they will get back to
Dialogue: 0,0:01:31.75,0:01:32.06,Default,,0,0,0,,us.
Dialogue: 0,0:01:32.06,0:01:35.30,Default,,0,0,0,,And now I want to talk about
Dialogue: 0,0:01:35.30,0:01:36.40,Default,,0,0,0,,some terminology that I'm going
Dialogue: 0,0:01:36.40,0:01:37.36,Default,,0,0,0,,to use in the rest of this talk.
Dialogue: 0,0:01:38.78,0:01:41.95,Default,,0,0,0,,So first off, what does startup
Dialogue: 0,0:01:41.95,0:01:42.71,Default,,0,0,0,,time mean?
Dialogue: 0,0:01:43.82,0:01:44.92,Default,,0,0,0,,And startup time for the
Dialogue: 0,0:01:44.92,0:01:47.68,Default,,0,0,0,,purposes of this talk means time
Dialogue: 0,0:01:47.68,0:01:49.45,Default,,0,0,0,,spent before main.
Dialogue: 0,0:01:49.84,0:01:52.40,Default,,0,0,0,,Now, if you are writing an app,
Dialogue: 0,0:01:52.40,0:01:53.68,Default,,0,0,0,,you have to do more than that.
Dialogue: 0,0:01:53.68,0:01:55.15,Default,,0,0,0,,After that happens, there will
Dialogue: 0,0:01:55.15,0:01:56.54,Default,,0,0,0,,be nib loading and other things
Dialogue: 0,0:01:56.54,0:01:58.60,Default,,0,0,0,,like that and you have codes to
Dialogue: 0,0:01:58.60,0:02:00.74,Default,,0,0,0,,run after you -- in UI
Dialogue: 0,0:02:00.74,0:02:02.09,Default,,0,0,0,,application delegates and what
Dialogue: 0,0:02:02.81,0:02:04.32,Default,,0,0,0,,not, but you have more
Dialogue: 0,0:02:04.32,0:02:05.84,Default,,0,0,0,,visibility into that and there
Dialogue: 0,0:02:05.84,0:02:07.45,Default,,0,0,0,,are many other talks about that.
Dialogue: 0,0:02:07.60,0:02:08.80,Default,,0,0,0,,Today we just want to talk about
Dialogue: 0,0:02:08.80,0:02:09.74,Default,,0,0,0,,what happens before your main
Dialogue: 0,0:02:09.74,0:02:11.06,Default,,0,0,0,,executes and how you can speed
Dialogue: 0,0:02:11.06,0:02:11.36,Default,,0,0,0,,that up.
Dialogue: 0,0:02:12.79,0:02:15.36,Default,,0,0,0,,Additionally, I want to define a
Dialogue: 0,0:02:15.36,0:02:16.74,Default,,0,0,0,,launch closure, and this is a
Dialogue: 0,0:02:16.74,0:02:17.50,Default,,0,0,0,,new term.
Dialogue: 0,0:02:18.08,0:02:21.05,Default,,0,0,0,,And a launch closure is all of
Dialogue: 0,0:02:21.05,0:02:22.23,Default,,0,0,0,,the information necessary to
Dialogue: 0,0:02:22.23,0:02:23.36,Default,,0,0,0,,launch your application.
Dialogue: 0,0:02:23.67,0:02:25.56,Default,,0,0,0,,So what dylibs it uses, what the
Dialogue: 0,0:02:25.60,0:02:27.30,Default,,0,0,0,,offsets in them are for various
Dialogue: 0,0:02:27.30,0:02:28.72,Default,,0,0,0,,symbols, where their code
Dialogue: 0,0:02:28.72,0:02:29.44,Default,,0,0,0,,signatures are.
Dialogue: 0,0:02:30.66,0:02:33.21,Default,,0,0,0,,And with that, let's go into the
Dialogue: 0,0:02:33.21,0:02:35.45,Default,,0,0,0,,main body of the talk.
Dialogue: 0,0:02:35.68,0:02:39.39,Default,,0,0,0,,So last year I said do less, and
Dialogue: 0,0:02:39.39,0:02:40.39,Default,,0,0,0,,I'm going to say that again this
Dialogue: 0,0:02:40.39,0:02:41.38,Default,,0,0,0,,year and I'm always going to say
Dialogue: 0,0:02:41.38,0:02:43.58,Default,,0,0,0,,that because the less you do,
Dialogue: 0,0:02:44.30,0:02:45.55,Default,,0,0,0,,the faster we can launch.
Dialogue: 0,0:02:45.80,0:02:47.42,Default,,0,0,0,,And no matter how much we speed
Dialogue: 0,0:02:47.42,0:02:49.12,Default,,0,0,0,,things up, if we have less work,
Dialogue: 0,0:02:49.59,0:02:50.59,Default,,0,0,0,,it's going to go faster.
Dialogue: 0,0:02:51.77,0:02:53.06,Default,,0,0,0,,And the advice is basically the
Dialogue: 0,0:02:53.06,0:02:53.50,Default,,0,0,0,,same.
Dialogue: 0,0:02:54.65,0:02:57.37,Default,,0,0,0,,You should use fewer dylibs, if
Dialogue: 0,0:02:57.37,0:02:59.15,Default,,0,0,0,,you can, you should embed fewer
Dialogue: 0,0:02:59.15,0:02:59.63,Default,,0,0,0,,dylibs.
Dialogue: 0,0:02:59.85,0:03:01.72,Default,,0,0,0,,System ones are better in
Dialogue: 0,0:03:01.72,0:03:03.06,Default,,0,0,0,,certain ways from a time
Dialogue: 0,0:03:03.06,0:03:03.86,Default,,0,0,0,,perspective, and we'll go into
Dialogue: 0,0:03:03.86,0:03:04.06,Default,,0,0,0,,that.
Dialogue: 0,0:03:05.51,0:03:06.90,Default,,0,0,0,,You should declare fewer classes
Dialogue: 0,0:03:06.90,0:03:09.96,Default,,0,0,0,,and methods and you should run
Dialogue: 0,0:03:09.96,0:03:11.55,Default,,0,0,0,,fewer initializers.
Dialogue: 0,0:03:13.40,0:03:15.17,Default,,0,0,0,,Finally, I'm going to tell you
Dialogue: 0,0:03:15.17,0:03:16.27,Default,,0,0,0,,you can do a little bit more of
Dialogue: 0,0:03:16.27,0:03:16.55,Default,,0,0,0,,something.
Dialogue: 0,0:03:16.55,0:03:18.42,Default,,0,0,0,,You can use more Swift, and the
Dialogue: 0,0:03:18.42,0:03:21.36,Default,,0,0,0,,reason is Swift is designed in
Dialogue: 0,0:03:21.36,0:03:23.51,Default,,0,0,0,,such a way that it avoids a lot
Dialogue: 0,0:03:23.51,0:03:25.46,Default,,0,0,0,,of pitfalls that C, C++ and
Dialogue: 0,0:03:25.46,0:03:27.03,Default,,0,0,0,,Objective-C allow you to do.
Dialogue: 0,0:03:27.49,0:03:28.48,Default,,0,0,0,,Swift does not have
Dialogue: 0,0:03:28.48,0:03:29.46,Default,,0,0,0,,initializers.
Dialogue: 0,0:03:29.93,0:03:31.22,Default,,0,0,0,,Swift does not allow certain
Dialogue: 0,0:03:31.22,0:03:32.24,Default,,0,0,0,,types of misaligned data
Dialogue: 0,0:03:32.24,0:03:33.78,Default,,0,0,0,,structures that cost us time in
Dialogue: 0,0:03:33.78,0:03:34.21,Default,,0,0,0,,launch.
Dialogue: 0,0:03:34.63,0:03:36.52,Default,,0,0,0,,So, in general, moving to Swift
Dialogue: 0,0:03:36.72,0:03:39.07,Default,,0,0,0,,will make it easier for you to
Dialogue: 0,0:03:39.07,0:03:41.00,Default,,0,0,0,,get very responsive app startup.
Dialogue: 0,0:03:42.41,0:03:44.27,Default,,0,0,0,,So also, there are the Swift
Dialogue: 0,0:03:44.27,0:03:45.73,Default,,0,0,0,,size improvements and smaller is
Dialogue: 0,0:03:45.73,0:03:47.58,Default,,0,0,0,,better, so please move to this
Dialogue: 0,0:03:47.58,0:03:48.59,Default,,0,0,0,,new Swift that we've shipped
Dialogue: 0,0:03:48.59,0:03:49.34,Default,,0,0,0,,this year with the size
Dialogue: 0,0:03:49.34,0:03:50.32,Default,,0,0,0,,improvements and that's going to
Dialogue: 0,0:03:50.32,0:03:50.99,Default,,0,0,0,,help you out.
Dialogue: 0,0:03:51.98,0:03:53.65,Default,,0,0,0,,So now let me talk about some
Dialogue: 0,0:03:53.65,0:03:57.15,Default,,0,0,0,,new tooling we have.
Dialogue: 0,0:03:57.36,0:04:00.46,Default,,0,0,0,,So new in iOS 11 and macOS High
Dialogue: 0,0:04:00.46,0:04:02.56,Default,,0,0,0,,Sierra, we've added Static
Dialogue: 0,0:04:02.56,0:04:03.75,Default,,0,0,0,,Initializer Tracing to
Dialogue: 0,0:04:03.75,0:04:05.13,Default,,0,0,0,,Instruments.
Dialogue: 0,0:04:06.22,0:04:07.89,Default,,0,0,0,,So, yes, this is pretty exciting
Dialogue: 0,0:04:07.89,0:04:09.88,Default,,0,0,0,,stuff because initializers are
Dialogue: 0,0:04:09.88,0:04:11.05,Default,,0,0,0,,code that have to run before
Dialogue: 0,0:04:11.05,0:04:12.93,Default,,0,0,0,,main to set up objects for you,
Dialogue: 0,0:04:13.62,0:04:14.62,Default,,0,0,0,,and you haven't had much
Dialogue: 0,0:04:14.62,0:04:15.74,Default,,0,0,0,,visibility into what happens
Dialogue: 0,0:04:15.74,0:04:16.39,Default,,0,0,0,,before main.
Dialogue: 0,0:04:17.38,0:04:19.11,Default,,0,0,0,,So they're available through
Dialogue: 0,0:04:19.11,0:04:20.28,Default,,0,0,0,,Instruments and they provide
Dialogue: 0,0:04:20.28,0:04:21.75,Default,,0,0,0,,precise timing for each static
Dialogue: 0,0:04:21.75,0:04:22.33,Default,,0,0,0,,initializer.
Dialogue: 0,0:04:22.74,0:04:24.60,Default,,0,0,0,,So with that, I'd like to go to
Dialogue: 0,0:04:24.60,0:04:25.33,Default,,0,0,0,,a demo right now.
Dialogue: 0,0:04:25.75,0:04:27.55,Default,,0,0,0,,So over here I have an
Dialogue: 0,0:04:27.55,0:04:29.80,Default,,0,0,0,,application, and as most
Dialogue: 0,0:04:29.80,0:04:31.71,Default,,0,0,0,,applications at WWDC are, it's a
Dialogue: 0,0:04:31.71,0:04:33.64,Default,,0,0,0,,way of sharing cute pictures of
Dialogue: 0,0:04:33.64,0:04:34.09,Default,,0,0,0,,animals.
Dialogue: 0,0:04:35.16,0:04:36.21,Default,,0,0,0,,So here, let me launch it.
Dialogue: 0,0:04:36.79,0:04:39.59,Default,,0,0,0,,And, you know, it's taking a
Dialogue: 0,0:04:39.94,0:04:44.07,Default,,0,0,0,,little while here, but it's
Dialogue: 0,0:04:44.07,0:04:45.83,Default,,0,0,0,,still taking a while and it gets
Dialogue: 0,0:04:45.83,0:04:47.38,Default,,0,0,0,,up and we can see some
Dialogue: 0,0:04:47.38,0:04:50.83,Default,,0,0,0,,chinchillas and some cats.
Dialogue: 0,0:04:50.83,0:04:53.35,Default,,0,0,0,,And so let's take a look at why
Dialogue: 0,0:04:53.35,0:04:54.83,Default,,0,0,0,,it took that time.
Dialogue: 0,0:04:54.95,0:04:56.64,Default,,0,0,0,,So I'm going to go and I'm going
Dialogue: 0,0:04:56.64,0:04:58.06,Default,,0,0,0,,to rerun it under Instruments.
Dialogue: 0,0:04:58.92,0:05:01.97,Default,,0,0,0,,So we'll stop the execution of
Dialogue: 0,0:05:01.97,0:05:06.31,Default,,0,0,0,,the current one and run it.
Dialogue: 0,0:05:06.31,0:05:08.08,Default,,0,0,0,,And now if we go in, I'm going
Dialogue: 0,0:05:08.08,0:05:09.53,Default,,0,0,0,,to start with a blank template
Dialogue: 0,0:05:09.90,0:05:12.27,Default,,0,0,0,,and we can add the new Static
Dialogue: 0,0:05:12.27,0:05:16.95,Default,,0,0,0,,Initializer tool, which is right
Dialogue: 0,0:05:16.95,0:05:17.35,Default,,0,0,0,,there.
Dialogue: 0,0:05:17.61,0:05:18.41,Default,,0,0,0,,And while we're at it, I'm also
Dialogue: 0,0:05:18.41,0:05:19.51,Default,,0,0,0,,going to add a Time Profiler
Dialogue: 0,0:05:19.51,0:05:20.39,Default,,0,0,0,,because it's always kind of nice
Dialogue: 0,0:05:20.39,0:05:20.98,Default,,0,0,0,,to see what's going on.
Dialogue: 0,0:05:28.30,0:05:28.77,Default,,0,0,0,,There we go.
Dialogue: 0,0:05:29.88,0:05:31.60,Default,,0,0,0,,Okay. So now that we have those,
Dialogue: 0,0:05:31.60,0:05:32.60,Default,,0,0,0,,let's start running our
Dialogue: 0,0:05:32.60,0:05:33.14,Default,,0,0,0,,application.
Dialogue: 0,0:05:34.96,0:05:36.98,Default,,0,0,0,,So we're getting in our trace
Dialogue: 0,0:05:36.98,0:05:41.52,Default,,0,0,0,,data, and it's still not up, but
Dialogue: 0,0:05:41.52,0:05:42.71,Default,,0,0,0,,it just came up and as you can
Dialogue: 0,0:05:42.71,0:05:46.01,Default,,0,0,0,,see in the background there, we
Dialogue: 0,0:05:46.01,0:05:47.08,Default,,0,0,0,,had something fill in there.
Dialogue: 0,0:05:47.08,0:05:48.69,Default,,0,0,0,,So I'm going to just zoom in so
Dialogue: 0,0:05:48.69,0:05:51.03,Default,,0,0,0,,you can get a look, and I have a
Dialogue: 0,0:05:51.03,0:05:51.69,Default,,0,0,0,,function there called
Dialogue: 0,0:05:51.69,0:05:53.77,Default,,0,0,0,,waitForNetworkDebugger, and
Dialogue: 0,0:05:53.77,0:05:54.56,Default,,0,0,0,,that's right, because I was
Dialogue: 0,0:05:54.56,0:05:56.09,Default,,0,0,0,,loading these off of an adjacent
Dialogue: 0,0:05:56.09,0:05:57.74,Default,,0,0,0,,feed that we had up on our site.
Dialogue: 0,0:05:57.74,0:05:59.78,Default,,0,0,0,,I was trying to debug that.
Dialogue: 0,0:05:59.85,0:06:01.82,Default,,0,0,0,,So let's go and -- I just want
Dialogue: 0,0:06:01.82,0:06:02.88,Default,,0,0,0,,to actually take a quick look
Dialogue: 0,0:06:02.88,0:06:04.50,Default,,0,0,0,,here in the CPU Usage tool.
Dialogue: 0,0:06:04.62,0:06:07.41,Default,,0,0,0,,So you can see that that
Dialogue: 0,0:06:07.41,0:06:08.78,Default,,0,0,0,,initializer's roughly the same
Dialogue: 0,0:06:08.78,0:06:10.78,Default,,0,0,0,,length as my CPU usage.
Dialogue: 0,0:06:11.28,0:06:12.28,Default,,0,0,0,,So if I go down there, I can
Dialogue: 0,0:06:12.28,0:06:15.24,Default,,0,0,0,,actually drill down into dyld,
Dialogue: 0,0:06:15.65,0:06:18.44,Default,,0,0,0,,and if I do that, we're actually
Dialogue: 0,0:06:18.44,0:06:19.33,Default,,0,0,0,,going to see what was taking all
Dialogue: 0,0:06:19.33,0:06:24.45,Default,,0,0,0,,that time, and that time is 9.5
Dialogue: 0,0:06:24.45,0:06:28.69,Default,,0,0,0,,seconds, 9.5 seconds into the
Dialogue: 0,0:06:28.69,0:06:29.27,Default,,0,0,0,,initializer.
Dialogue: 0,0:06:29.27,0:06:29.92,Default,,0,0,0,,It's pretty deep.
Dialogue: 0,0:06:29.92,0:06:30.99,Default,,0,0,0,,You don't usually have to do
Dialogue: 0,0:06:30.99,0:06:31.82,Default,,0,0,0,,this, but I want to show you
Dialogue: 0,0:06:31.82,0:06:33.86,Default,,0,0,0,,what's going on.
Dialogue: 0,0:06:34.76,0:06:36.30,Default,,0,0,0,,And down in here I can finally
Dialogue: 0,0:06:36.30,0:06:38.39,Default,,0,0,0,,see waitForNetworkDebugger,
Dialogue: 0,0:06:38.39,0:06:39.23,Default,,0,0,0,,which is what we saw up in the
Dialogue: 0,0:06:39.23,0:06:40.64,Default,,0,0,0,,initializer call, but now it's
Dialogue: 0,0:06:40.64,0:06:41.98,Default,,0,0,0,,very easy for you to find that.
Dialogue: 0,0:06:42.71,0:06:45.08,Default,,0,0,0,,So now that we've done that, I'm
Dialogue: 0,0:06:45.08,0:06:49.82,Default,,0,0,0,,going to go back over into Xcode
Dialogue: 0,0:06:49.82,0:06:51.63,Default,,0,0,0,,and, oh, yeah, that's the
Dialogue: 0,0:06:51.63,0:06:52.86,Default,,0,0,0,,waitForNetworkDebugger call that
Dialogue: 0,0:06:52.86,0:06:53.38,Default,,0,0,0,,I implemented.
Dialogue: 0,0:06:53.38,0:06:54.52,Default,,0,0,0,,I implemented it in C because
Dialogue: 0,0:06:54.52,0:06:55.52,Default,,0,0,0,,Swift won't even let you do
Dialogue: 0,0:06:55.52,0:06:57.62,Default,,0,0,0,,something like this, which is
Dialogue: 0,0:06:57.68,0:06:59.69,Default,,0,0,0,,because this is a bad idea, but
Dialogue: 0,0:06:59.69,0:07:01.16,Default,,0,0,0,,I created a constructor there.
Dialogue: 0,0:07:01.16,0:07:02.64,Default,,0,0,0,,So if I go back to my source
Dialogue: 0,0:07:02.64,0:07:06.28,Default,,0,0,0,,code -- if I go back to my
Dialogue: 0,0:07:06.28,0:07:08.79,Default,,0,0,0,,source code, I can just delete
Dialogue: 0,0:07:08.79,0:07:11.43,Default,,0,0,0,,that function because it was
Dialogue: 0,0:07:11.43,0:07:12.33,Default,,0,0,0,,just for debugging anyway.
Dialogue: 0,0:07:13.20,0:07:16.66,Default,,0,0,0,,If I run it, my app's going to
Dialogue: 0,0:07:16.66,0:07:17.84,Default,,0,0,0,,come up almost instantly.
Dialogue: 0,0:07:18.92,0:07:21.23,Default,,0,0,0,,So we just saw how to quickly
Dialogue: 0,0:07:21.23,0:07:23.28,Default,,0,0,0,,find what stack initializers are
Dialogue: 0,0:07:23.28,0:07:24.21,Default,,0,0,0,,causing you slowdowns.
Dialogue: 0,0:07:24.21,0:07:26.49,Default,,0,0,0,,This will work across multiple
Dialogue: 0,0:07:26.49,0:07:28.25,Default,,0,0,0,,dylibs, including system dylibs
Dialogue: 0,0:07:28.25,0:07:29.51,Default,,0,0,0,,that may be taking a long time
Dialogue: 0,0:07:29.51,0:07:30.66,Default,,0,0,0,,because of inputs you've given
Dialogue: 0,0:07:30.66,0:07:32.04,Default,,0,0,0,,them, such as complicated nibs.
Dialogue: 0,0:07:32.04,0:07:35.36,Default,,0,0,0,,It depends on new infrastructure
Dialogue: 0,0:07:35.36,0:07:39.38,Default,,0,0,0,,in High Sierra and iOS 11's
Dialogue: 0,0:07:39.38,0:07:41.77,Default,,0,0,0,,kernel and dyld, so you need to
Dialogue: 0,0:07:41.77,0:07:42.97,Default,,0,0,0,,be running the new builds to see
Dialogue: 0,0:07:42.97,0:07:43.24,Default,,0,0,0,,this.
Dialogue: 0,0:07:43.91,0:07:45.99,Default,,0,0,0,,And it catches most initializers
Dialogue: 0,0:07:45.99,0:07:47.04,Default,,0,0,0,,now and there's some edge cases
Dialogue: 0,0:07:47.04,0:07:48.17,Default,,0,0,0,,we're still working on adding,
Dialogue: 0,0:07:48.66,0:07:50.22,Default,,0,0,0,,but we think this is going to
Dialogue: 0,0:07:50.22,0:07:52.41,Default,,0,0,0,,allow you to quickly find out
Dialogue: 0,0:07:52.61,0:07:54.29,Default,,0,0,0,,what is taking time during your
Dialogue: 0,0:07:54.29,0:07:55.27,Default,,0,0,0,,app launch so that you get
Dialogue: 0,0:07:55.27,0:07:56.85,Default,,0,0,0,,quicker, more responsive
Dialogue: 0,0:07:56.85,0:07:58.01,Default,,0,0,0,,application launches that will
Dialogue: 0,0:07:58.01,0:07:58.87,Default,,0,0,0,,make your users happy.
Dialogue: 0,0:07:59.65,0:07:59.96,Default,,0,0,0,,Thank you.
Dialogue: 0,0:08:00.52,0:08:05.11,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:08:05.61,0:08:07.29,Default,,0,0,0,,Okay. So now I said we'd do a
Dialogue: 0,0:08:07.29,0:08:10.02,Default,,0,0,0,,brief history of dyld.
Dialogue: 0,0:08:10.02,0:08:11.68,Default,,0,0,0,,So Dynamic Linking Through the
Dialogue: 0,0:08:11.68,0:08:12.26,Default,,0,0,0,,Ages.
Dialogue: 0,0:08:12.89,0:08:14.21,Default,,0,0,0,,So originally we shipped the
Dialogue: 0,0:08:14.21,0:08:16.35,Default,,0,0,0,,first dyld -- these didn't have
Dialogue: 0,0:08:16.35,0:08:16.99,Default,,0,0,0,,version numbers, but
Dialogue: 0,0:08:16.99,0:08:18.09,Default,,0,0,0,,retroactively we're giving them
Dialogue: 0,0:08:18.09,0:08:18.24,Default,,0,0,0,,them.
Dialogue: 0,0:08:19.34,0:08:21.01,Default,,0,0,0,,And this was dyld 1 and it
Dialogue: 0,0:08:21.01,0:08:23.31,Default,,0,0,0,,shipped as part of NeXTStep 3.3
Dialogue: 0,0:08:24.28,0:08:26.57,Default,,0,0,0,,back in 1996.
Dialogue: 0,0:08:26.57,0:08:30.81,Default,,0,0,0,,Before that, NeXT used static
Dialogue: 0,0:08:30.81,0:08:31.28,Default,,0,0,0,,binaries.
Dialogue: 0,0:08:32.56,0:08:34.27,Default,,0,0,0,,And it's worth noting this
Dialogue: 0,0:08:34.38,0:08:37.54,Default,,0,0,0,,predates the POSIX dlopen calls
Dialogue: 0,0:08:37.54,0:08:38.50,Default,,0,0,0,,being standardized.
Dialogue: 0,0:08:38.68,0:08:40.56,Default,,0,0,0,,Now, dlopen did exist on some
Dialogue: 0,0:08:40.56,0:08:40.92,Default,,0,0,0,,Unix.
Dialogue: 0,0:08:40.92,0:08:42.39,Default,,0,0,0,,They were proprietary extensions
Dialogue: 0,0:08:42.82,0:08:44.58,Default,,0,0,0,,that later people adopted.
Dialogue: 0,0:08:45.14,0:08:46.67,Default,,0,0,0,,And NeXTStep had different
Dialogue: 0,0:08:46.73,0:08:48.70,Default,,0,0,0,,proprietary extensions, so
Dialogue: 0,0:08:49.49,0:08:50.40,Default,,0,0,0,,people wrote third-party
Dialogue: 0,0:08:50.40,0:08:51.71,Default,,0,0,0,,wrappers on the early versions
Dialogue: 0,0:08:51.71,0:08:53.56,Default,,0,0,0,,of macOS 10 to support standard
Dialogue: 0,0:08:53.56,0:08:54.30,Default,,0,0,0,,Unix software.
Dialogue: 0,0:08:54.80,0:08:56.79,Default,,0,0,0,,The problem was they didn't
Dialogue: 0,0:08:56.79,0:08:57.63,Default,,0,0,0,,quite support the same
Dialogue: 0,0:08:57.63,0:08:58.13,Default,,0,0,0,,semantics.
Dialogue: 0,0:08:58.13,0:08:59.17,Default,,0,0,0,,There were some weird edge cases
Dialogue: 0,0:08:59.17,0:09:01.05,Default,,0,0,0,,where it didn't work, and
Dialogue: 0,0:09:01.05,0:09:01.92,Default,,0,0,0,,ultimately they were kind of
Dialogue: 0,0:09:01.92,0:09:02.34,Default,,0,0,0,,slow.
Dialogue: 0,0:09:03.17,0:09:05.18,Default,,0,0,0,,It also was written before most
Dialogue: 0,0:09:05.18,0:09:07.52,Default,,0,0,0,,systems used large C++ dynamic
Dialogue: 0,0:09:07.52,0:09:08.33,Default,,0,0,0,,libraries, and this is
Dialogue: 0,0:09:08.33,0:09:08.90,Default,,0,0,0,,important.
Dialogue: 0,0:09:09.55,0:09:11.44,Default,,0,0,0,,C++ has a number of features,
Dialogue: 0,0:09:11.44,0:09:12.62,Default,,0,0,0,,such as how its initializer
Dialogue: 0,0:09:12.62,0:09:13.59,Default,,0,0,0,,ordering works.
Dialogue: 0,0:09:13.59,0:09:16.56,Default,,0,0,0,,And one definition rule; they
Dialogue: 0,0:09:16.56,0:09:17.46,Default,,0,0,0,,work well in a static
Dialogue: 0,0:09:17.46,0:09:18.56,Default,,0,0,0,,environment, but are actually
Dialogue: 0,0:09:18.56,0:09:20.84,Default,,0,0,0,,fairly hard to do, at least with
Dialogue: 0,0:09:20.90,0:09:22.09,Default,,0,0,0,,good performance, in a dynamic
Dialogue: 0,0:09:22.09,0:09:22.58,Default,,0,0,0,,environment.
Dialogue: 0,0:09:23.05,0:09:25.01,Default,,0,0,0,,So large C++ code bases cause
Dialogue: 0,0:09:25.01,0:09:26.10,Default,,0,0,0,,the dynamic linker to have to do
Dialogue: 0,0:09:26.10,0:09:28.80,Default,,0,0,0,,a lot of work and it was quite
Dialogue: 0,0:09:28.80,0:09:29.08,Default,,0,0,0,,slow.
Dialogue: 0,0:09:32.86,0:09:35.10,Default,,0,0,0,,We also added one other feature
Dialogue: 0,0:09:35.38,0:09:37.75,Default,,0,0,0,,before we shipped macOS 10.0,
Dialogue: 0,0:09:37.75,0:09:39.16,Default,,0,0,0,,Cheetah, and that's called
Dialogue: 0,0:09:39.16,0:09:39.81,Default,,0,0,0,,prebinding.
Dialogue: 0,0:09:40.60,0:09:41.61,Default,,0,0,0,,And for those of you in the
Dialogue: 0,0:09:41.61,0:09:43.46,Default,,0,0,0,,audience who know what
Dialogue: 0,0:09:43.46,0:09:45.66,Default,,0,0,0,,prebinding is, I know it was
Dialogue: 0,0:09:46.27,0:09:47.67,Default,,0,0,0,,kind of painful; and for the
Dialogue: 0,0:09:47.67,0:09:49.31,Default,,0,0,0,,rest of you, prebinding was a
Dialogue: 0,0:09:49.31,0:09:51.35,Default,,0,0,0,,technology where we would try to
Dialogue: 0,0:09:51.35,0:09:53.00,Default,,0,0,0,,find fixed addresses for every
Dialogue: 0,0:09:53.00,0:09:55.24,Default,,0,0,0,,dylib in the system and for your
Dialogue: 0,0:09:55.24,0:09:58.29,Default,,0,0,0,,application, and the dynamic
Dialogue: 0,0:09:58.29,0:09:59.08,Default,,0,0,0,,loader would try to load
Dialogue: 0,0:09:59.08,0:10:00.04,Default,,0,0,0,,everything at those addresses
Dialogue: 0,0:10:00.04,0:10:01.89,Default,,0,0,0,,and if it succeeded, it would
Dialogue: 0,0:10:01.93,0:10:04.32,Default,,0,0,0,,edit all of those binaries to
Dialogue: 0,0:10:04.32,0:10:05.73,Default,,0,0,0,,have those precalculated
Dialogue: 0,0:10:05.73,0:10:06.88,Default,,0,0,0,,addresses in it, and then the
Dialogue: 0,0:10:06.88,0:10:07.94,Default,,0,0,0,,next time when it put them in
Dialogue: 0,0:10:07.94,0:10:09.13,Default,,0,0,0,,the same addresses, it didn't
Dialogue: 0,0:10:09.13,0:10:10.36,Default,,0,0,0,,have to do any additional work.
Dialogue: 0,0:10:11.21,0:10:13.20,Default,,0,0,0,,And that sped up launch a lot,
Dialogue: 0,0:10:14.09,0:10:16.49,Default,,0,0,0,,but it meant that we were
Dialogue: 0,0:10:16.57,0:10:18.07,Default,,0,0,0,,editing your binaries on every
Dialogue: 0,0:10:18.07,0:10:20.92,Default,,0,0,0,,launch, and that's not great for
Dialogue: 0,0:10:20.92,0:10:22.68,Default,,0,0,0,,all sorts of reasons, not the
Dialogue: 0,0:10:22.68,0:10:23.72,Default,,0,0,0,,least of which is security.
Dialogue: 0,0:10:24.28,0:10:27.51,Default,,0,0,0,,So then came dyld 2, and we
Dialogue: 0,0:10:27.51,0:10:28.58,Default,,0,0,0,,shipped that as part of macOS
Dialogue: 0,0:10:28.71,0:10:29.10,Default,,0,0,0,,Tiger.
Dialogue: 0,0:10:30.30,0:10:32.70,Default,,0,0,0,,And dyld 2 was a complete
Dialogue: 0,0:10:32.70,0:10:33.53,Default,,0,0,0,,rewrite of dyld.
Dialogue: 0,0:10:33.53,0:10:37.82,Default,,0,0,0,,It had correct support for C++
Dialogue: 0,0:10:37.82,0:10:39.09,Default,,0,0,0,,initializer semantics, so we
Dialogue: 0,0:10:39.09,0:10:40.13,Default,,0,0,0,,slightly extended the mach-o
Dialogue: 0,0:10:40.13,0:10:43.61,Default,,0,0,0,,format and we updated dyld so
Dialogue: 0,0:10:43.61,0:10:46.13,Default,,0,0,0,,that we could get efficient C++
Dialogue: 0,0:10:46.13,0:10:47.03,Default,,0,0,0,,library support.
Dialogue: 0,0:10:47.84,0:10:49.54,Default,,0,0,0,,It also has a full native dlopen
Dialogue: 0,0:10:49.54,0:10:51.59,Default,,0,0,0,,and dlsym implementation with
Dialogue: 0,0:10:51.59,0:10:52.57,Default,,0,0,0,,correct semantics, at which
Dialogue: 0,0:10:52.57,0:10:54.21,Default,,0,0,0,,point we deprecated the Legacy
Dialogue: 0,0:10:54.21,0:10:54.63,Default,,0,0,0,,API's.
Dialogue: 0,0:10:55.07,0:10:56.23,Default,,0,0,0,,They are still on macOS.
Dialogue: 0,0:10:56.31,0:10:57.54,Default,,0,0,0,,They have never shipped on any
Dialogue: 0,0:10:57.54,0:10:58.67,Default,,0,0,0,,of our other platforms.
Dialogue: 0,0:10:59.22,0:11:03.78,Default,,0,0,0,,It was designed for speed and
Dialogue: 0,0:11:03.78,0:11:04.67,Default,,0,0,0,,because it was designed for
Dialogue: 0,0:11:04.67,0:11:06.66,Default,,0,0,0,,speed, it had limited sanity
Dialogue: 0,0:11:06.66,0:11:07.00,Default,,0,0,0,,checking.
Dialogue: 0,0:11:07.00,0:11:08.70,Default,,0,0,0,,We did not have the malware
Dialogue: 0,0:11:08.70,0:11:09.82,Default,,0,0,0,,environment we have today.
Dialogue: 0,0:11:11.26,0:11:13.25,Default,,0,0,0,,It also has security issues
Dialogue: 0,0:11:13.25,0:11:14.84,Default,,0,0,0,,because of that, that we had to
Dialogue: 0,0:11:14.84,0:11:16.43,Default,,0,0,0,,go back and retrofit in a number
Dialogue: 0,0:11:16.43,0:11:18.33,Default,,0,0,0,,of features to make it safer on
Dialogue: 0,0:11:18.52,0:11:20.10,Default,,0,0,0,,today's platforms.
Dialogue: 0,0:11:21.22,0:11:23.30,Default,,0,0,0,,Finally, because it was so much
Dialogue: 0,0:11:23.30,0:11:24.30,Default,,0,0,0,,faster we could reduce the
Dialogue: 0,0:11:24.30,0:11:25.25,Default,,0,0,0,,amount of prebinding.
Dialogue: 0,0:11:25.25,0:11:26.54,Default,,0,0,0,,Rather than editing your
Dialogue: 0,0:11:26.54,0:11:29.72,Default,,0,0,0,,applications, we just edited the
Dialogue: 0,0:11:29.72,0:11:31.05,Default,,0,0,0,,system libraries and we could do
Dialogue: 0,0:11:31.05,0:11:33.11,Default,,0,0,0,,that just at software update
Dialogue: 0,0:11:33.11,0:11:33.51,Default,,0,0,0,,times.
Dialogue: 0,0:11:33.51,0:11:34.78,Default,,0,0,0,,And if you've ever seen the
Dialogue: 0,0:11:34.78,0:11:36.42,Default,,0,0,0,,phrase optimizing system
Dialogue: 0,0:11:36.42,0:11:37.83,Default,,0,0,0,,performance appear in your
Dialogue: 0,0:11:37.83,0:11:40.00,Default,,0,0,0,,software update, that was added
Dialogue: 0,0:11:40.49,0:11:43.40,Default,,0,0,0,,to the installer to be displayed
Dialogue: 0,0:11:43.40,0:11:45.70,Default,,0,0,0,,during the time we were updating
Dialogue: 0,0:11:45.76,0:11:46.28,Default,,0,0,0,,prebinding.
Dialogue: 0,0:11:46.57,0:11:48.32,Default,,0,0,0,,Nowadays it is used for all the
Dialogue: 0,0:11:48.32,0:11:50.76,Default,,0,0,0,,optimizations, but that was the
Dialogue: 0,0:11:51.41,0:11:51.62,Default,,0,0,0,,impetus.
Dialogue: 0,0:11:51.76,0:11:54.00,Default,,0,0,0,,So we shipped dyld 2 back then
Dialogue: 0,0:11:55.26,0:11:57.04,Default,,0,0,0,,and we've done a number of
Dialogue: 0,0:11:57.04,0:11:58.08,Default,,0,0,0,,improvements over the years,
Dialogue: 0,0:11:58.08,0:11:59.29,Default,,0,0,0,,significant improvements.
Dialogue: 0,0:11:59.45,0:12:01.07,Default,,0,0,0,,First off, we've added a ton of
Dialogue: 0,0:12:01.07,0:12:02.17,Default,,0,0,0,,more architectures and
Dialogue: 0,0:12:02.17,0:12:02.90,Default,,0,0,0,,platforms.
Dialogue: 0,0:12:02.90,0:12:08.07,Default,,0,0,0,,Since dyld 2 shipped on PowerPC,
Dialogue: 0,0:12:08.07,0:12:10.47,Default,,0,0,0,,we've added x86, x86 64 arm,
Dialogue: 0,0:12:10.47,0:12:11.58,Default,,0,0,0,,arm64, and a number of
Dialogue: 0,0:12:11.58,0:12:12.66,Default,,0,0,0,,subvariants of those.
Dialogue: 0,0:12:13.69,0:12:15.39,Default,,0,0,0,,We've also shipped iOS, tvOS,
Dialogue: 0,0:12:15.39,0:12:16.75,Default,,0,0,0,,and watchOS, all of which
Dialogue: 0,0:12:16.75,0:12:18.10,Default,,0,0,0,,required significant new work in
Dialogue: 0,0:12:18.10,0:12:18.34,Default,,0,0,0,,dyld.
Dialogue: 0,0:12:18.34,0:12:21.77,Default,,0,0,0,,We've improved security in a
Dialogue: 0,0:12:21.77,0:12:22.84,Default,,0,0,0,,number of ways.
Dialogue: 0,0:12:23.70,0:12:25.70,Default,,0,0,0,,We added codesigning support, we
Dialogue: 0,0:12:25.70,0:12:27.39,Default,,0,0,0,,added some for ASLR, which is a
Dialogue: 0,0:12:27.39,0:12:29.01,Default,,0,0,0,,technology Address Space Layout
Dialogue: 0,0:12:29.01,0:12:32.17,Default,,0,0,0,,Randomization, which means that
Dialogue: 0,0:12:32.17,0:12:33.01,Default,,0,0,0,,every time you loaded the
Dialogue: 0,0:12:33.01,0:12:33.75,Default,,0,0,0,,libraries it may be at a
Dialogue: 0,0:12:33.75,0:12:34.69,Default,,0,0,0,,different address.
Dialogue: 0,0:12:34.69,0:12:36.45,Default,,0,0,0,,If you want more details on
Dialogue: 0,0:12:36.45,0:12:38.63,Default,,0,0,0,,that, last year's talk where
Dialogue: 0,0:12:38.63,0:12:41.65,Default,,0,0,0,,Nick went into extreme detail on
Dialogue: 0,0:12:41.65,0:12:43.28,Default,,0,0,0,,how we launch an app, goes into
Dialogue: 0,0:12:43.28,0:12:43.48,Default,,0,0,0,,that.
Dialogue: 0,0:12:43.48,0:12:44.76,Default,,0,0,0,,And finally, we added a
Dialogue: 0,0:12:44.76,0:12:46.46,Default,,0,0,0,,significant bounds checking to a
Dialogue: 0,0:12:46.46,0:12:47.63,Default,,0,0,0,,number of things in the mach-o
Dialogue: 0,0:12:47.63,0:12:49.47,Default,,0,0,0,,header so that you couldn't do
Dialogue: 0,0:12:49.47,0:12:50.45,Default,,0,0,0,,certain types of attach with
Dialogue: 0,0:12:50.45,0:12:51.40,Default,,0,0,0,,malformed binaries.
Dialogue: 0,0:12:52.66,0:12:54.40,Default,,0,0,0,,Finally, we improved
Dialogue: 0,0:12:54.40,0:12:56.45,Default,,0,0,0,,performance, and because we
Dialogue: 0,0:12:56.45,0:12:58.41,Default,,0,0,0,,improved performance, we could
Dialogue: 0,0:12:58.41,0:12:59.77,Default,,0,0,0,,get rid of prebinding and
Dialogue: 0,0:12:59.77,0:13:01.10,Default,,0,0,0,,replace it with something called
Dialogue: 0,0:13:01.10,0:13:02.16,Default,,0,0,0,,the shared cache.
Dialogue: 0,0:13:03.15,0:13:04.78,Default,,0,0,0,,So what is the shared cache?
Dialogue: 0,0:13:05.33,0:13:08.67,Default,,0,0,0,,Well, it was introduced in iOS
Dialogue: 0,0:13:08.67,0:13:11.61,Default,,0,0,0,,3.1 and macOS Snow Leopard, and
Dialogue: 0,0:13:11.88,0:13:13.33,Default,,0,0,0,,it completely replaced
Dialogue: 0,0:13:13.33,0:13:13.81,Default,,0,0,0,,prebinding.
Dialogue: 0,0:13:14.90,0:13:16.68,Default,,0,0,0,,It's a single file containing
Dialogue: 0,0:13:16.68,0:13:18.57,Default,,0,0,0,,most of the system dylibs.
Dialogue: 0,0:13:18.94,0:13:20.11,Default,,0,0,0,,And because we merged them into
Dialogue: 0,0:13:20.11,0:13:21.36,Default,,0,0,0,,a single file, we can do certain
Dialogue: 0,0:13:21.36,0:13:22.47,Default,,0,0,0,,types of optimizations.
Dialogue: 0,0:13:22.99,0:13:24.50,Default,,0,0,0,,We can rearrange all of their
Dialogue: 0,0:13:24.50,0:13:25.73,Default,,0,0,0,,text segments and all of their
Dialogue: 0,0:13:25.73,0:13:27.12,Default,,0,0,0,,data segments and rewrite their
Dialogue: 0,0:13:27.12,0:13:29.27,Default,,0,0,0,,entire symbol tables to reduce
Dialogue: 0,0:13:29.27,0:13:31.32,Default,,0,0,0,,the size and to make it so we
Dialogue: 0,0:13:31.32,0:13:33.46,Default,,0,0,0,,need to mount fewer regions in
Dialogue: 0,0:13:33.46,0:13:34.49,Default,,0,0,0,,each process.
Dialogue: 0,0:13:35.33,0:13:36.77,Default,,0,0,0,,It also allows us to pack binary
Dialogue: 0,0:13:36.77,0:13:39.87,Default,,0,0,0,,segments and save a lot of RAM.
Dialogue: 0,0:13:39.87,0:13:41.49,Default,,0,0,0,,It effectively is a prelinker
Dialogue: 0,0:13:41.49,0:13:42.52,Default,,0,0,0,,for the dylibs.
Dialogue: 0,0:13:43.46,0:13:45.00,Default,,0,0,0,,And while I'm not going to go
Dialogue: 0,0:13:45.00,0:13:45.81,Default,,0,0,0,,into any particular
Dialogue: 0,0:13:45.81,0:13:48.17,Default,,0,0,0,,optimizations here, the RAM
Dialogue: 0,0:13:48.17,0:13:49.78,Default,,0,0,0,,savings are substantial.
Dialogue: 0,0:13:49.78,0:13:51.32,Default,,0,0,0,,On an average iOS system, this
Dialogue: 0,0:13:51.32,0:13:53.25,Default,,0,0,0,,is the difference in about 500
Dialogue: 0,0:13:53.25,0:13:54.99,Default,,0,0,0,,megs to a gigabyte of RAM at
Dialogue: 0,0:13:54.99,0:13:55.50,Default,,0,0,0,,runtime.
Dialogue: 0,0:13:57.30,0:13:59.08,Default,,0,0,0,,It also prebuilds data
Dialogue: 0,0:13:59.08,0:14:01.33,Default,,0,0,0,,structures that dyld and Ob-C
Dialogue: 0,0:14:01.33,0:14:02.54,Default,,0,0,0,,are going to use at runtime so
Dialogue: 0,0:14:02.54,0:14:03.70,Default,,0,0,0,,that we don't have to do it on
Dialogue: 0,0:14:03.70,0:14:04.07,Default,,0,0,0,,launch.
Dialogue: 0,0:14:04.07,0:14:05.14,Default,,0,0,0,,And again, that saves more RAM
Dialogue: 0,0:14:05.14,0:14:07.56,Default,,0,0,0,,and a lot of time.
Dialogue: 0,0:14:07.77,0:14:09.43,Default,,0,0,0,,It's built locally on macOS, so
Dialogue: 0,0:14:09.43,0:14:10.84,Default,,0,0,0,,when you see optimizing system
Dialogue: 0,0:14:11.07,0:14:12.90,Default,,0,0,0,,performance, we are running
Dialogue: 0,0:14:12.90,0:14:15.20,Default,,0,0,0,,update dyld shared cache, among
Dialogue: 0,0:14:15.20,0:14:17.86,Default,,0,0,0,,things that happen, but on all
Dialogue: 0,0:14:17.86,0:14:18.81,Default,,0,0,0,,of our other platforms we
Dialogue: 0,0:14:18.81,0:14:20.10,Default,,0,0,0,,actually build it at Apple and
Dialogue: 0,0:14:20.10,0:14:20.82,Default,,0,0,0,,ship it to you.
Dialogue: 0,0:14:21.36,0:14:23.53,Default,,0,0,0,,So now that I've talked about
Dialogue: 0,0:14:23.53,0:14:25.67,Default,,0,0,0,,the shared cache, I want to move
Dialogue: 0,0:14:25.67,0:14:27.35,Default,,0,0,0,,into dyld 3.
Dialogue: 0,0:14:28.74,0:14:30.94,Default,,0,0,0,,dyld 3 is a brand-new dynamic
Dialogue: 0,0:14:30.94,0:14:32.63,Default,,0,0,0,,linker, and we're announcing it
Dialogue: 0,0:14:32.63,0:14:32.96,Default,,0,0,0,,today.
Dialogue: 0,0:14:33.56,0:14:36.04,Default,,0,0,0,,It's a complete rethink of how
Dialogue: 0,0:14:36.04,0:14:38.76,Default,,0,0,0,,we do dynamic linking and it's
Dialogue: 0,0:14:38.76,0:14:41.31,Default,,0,0,0,,going to be on by default for
Dialogue: 0,0:14:41.31,0:14:43.43,Default,,0,0,0,,most macOS system apps in this
Dialogue: 0,0:14:43.43,0:14:46.56,Default,,0,0,0,,week's seed, and it will be on
Dialogue: 0,0:14:46.56,0:14:48.19,Default,,0,0,0,,by default for all system apps
Dialogue: 0,0:14:48.48,0:14:51.68,Default,,0,0,0,,on 2017 Apple OS platforms.
Dialogue: 0,0:14:53.38,0:14:55.05,Default,,0,0,0,,We will completely replace dyld
Dialogue: 0,0:14:55.05,0:14:57.15,Default,,0,0,0,,2 in future Apple OS platforms
Dialogue: 0,0:14:57.36,0:14:58.51,Default,,0,0,0,,for all third-party apps as
Dialogue: 0,0:14:58.51,0:14:58.93,Default,,0,0,0,,well.
Dialogue: 0,0:15:00.31,0:15:02.09,Default,,0,0,0,,So why did we rewrite the
Dialogue: 0,0:15:02.09,0:15:03.81,Default,,0,0,0,,dynamic linker again?
Dialogue: 0,0:15:06.12,0:15:08.30,Default,,0,0,0,,Well, first off, performance.
Dialogue: 0,0:15:08.78,0:15:09.82,Default,,0,0,0,,In case that's not a recurring
Dialogue: 0,0:15:09.86,0:15:12.11,Default,,0,0,0,,theme, we want every ounce of
Dialogue: 0,0:15:12.11,0:15:13.94,Default,,0,0,0,,launch speed we can get.
Dialogue: 0,0:15:14.37,0:15:16.62,Default,,0,0,0,,Additionally, we thought what is
Dialogue: 0,0:15:16.62,0:15:17.73,Default,,0,0,0,,the minimum, what is the
Dialogue: 0,0:15:17.91,0:15:19.01,Default,,0,0,0,,theoretical minimum that we
Dialogue: 0,0:15:19.01,0:15:20.25,Default,,0,0,0,,could do to get an app up and
Dialogue: 0,0:15:20.25,0:15:21.90,Default,,0,0,0,,running and how could we achieve
Dialogue: 0,0:15:21.90,0:15:22.15,Default,,0,0,0,,that.
Dialogue: 0,0:15:23.45,0:15:26.50,Default,,0,0,0,,Security. So as I said, we
Dialogue: 0,0:15:26.50,0:15:27.80,Default,,0,0,0,,retrofitted a number of security
Dialogue: 0,0:15:27.80,0:15:29.73,Default,,0,0,0,,features into dyld 2, but it's
Dialogue: 0,0:15:29.73,0:15:31.28,Default,,0,0,0,,really hard to add that kind of
Dialogue: 0,0:15:31.28,0:15:32.18,Default,,0,0,0,,stuff after the fact.
Dialogue: 0,0:15:32.58,0:15:33.59,Default,,0,0,0,,I think we've done a good job
Dialogue: 0,0:15:33.59,0:15:36.01,Default,,0,0,0,,with it in recent years, but
Dialogue: 0,0:15:36.68,0:15:38.00,Default,,0,0,0,,it's really, really difficult to
Dialogue: 0,0:15:38.00,0:15:38.40,Default,,0,0,0,,do that.
Dialogue: 0,0:15:38.40,0:15:40.50,Default,,0,0,0,,And so can we have more
Dialogue: 0,0:15:40.50,0:15:42.35,Default,,0,0,0,,aggressive security checking and
Dialogue: 0,0:15:42.35,0:15:43.36,Default,,0,0,0,,be designed for security up
Dialogue: 0,0:15:43.36,0:15:43.71,Default,,0,0,0,,front?
Dialogue: 0,0:15:44.65,0:15:47.08,Default,,0,0,0,,Finally, testability and
Dialogue: 0,0:15:47.08,0:15:47.92,Default,,0,0,0,,reliability.
Dialogue: 0,0:15:48.49,0:15:50.38,Default,,0,0,0,,Can we make dyld easier to test?
Dialogue: 0,0:15:50.38,0:15:52.69,Default,,0,0,0,,So Apple ships a ton of great
Dialogue: 0,0:15:52.69,0:15:53.85,Default,,0,0,0,,testing frameworks, like XCTest,
Dialogue: 0,0:15:53.85,0:15:55.32,Default,,0,0,0,,that you should be using, and we
Dialogue: 0,0:15:55.32,0:15:57.77,Default,,0,0,0,,should be using, but they depend
Dialogue: 0,0:15:57.77,0:15:59.22,Default,,0,0,0,,on low level features of dynamic
Dialogue: 0,0:15:59.22,0:16:00.79,Default,,0,0,0,,linker to insert those libraries
Dialogue: 0,0:16:00.79,0:16:02.51,Default,,0,0,0,,into processes, so they
Dialogue: 0,0:16:02.62,0:16:04.28,Default,,0,0,0,,fundamentally cannot be used for
Dialogue: 0,0:16:04.28,0:16:05.62,Default,,0,0,0,,testing the existing dyld code,
Dialogue: 0,0:16:05.62,0:16:06.93,Default,,0,0,0,,and that also makes it harder
Dialogue: 0,0:16:06.93,0:16:08.43,Default,,0,0,0,,for us to test security and
Dialogue: 0,0:16:08.43,0:16:09.30,Default,,0,0,0,,performance features.
Dialogue: 0,0:16:10.68,0:16:13.57,Default,,0,0,0,,And so how did we do that?
Dialogue: 0,0:16:13.57,0:16:15.92,Default,,0,0,0,,Well, we've moved most of dyld
Dialogue: 0,0:16:15.92,0:16:17.18,Default,,0,0,0,,out of process.
Dialogue: 0,0:16:17.74,0:16:20.53,Default,,0,0,0,,It's now mostly just a regular
Dialogue: 0,0:16:20.53,0:16:22.30,Default,,0,0,0,,daemon and we can test that just
Dialogue: 0,0:16:22.30,0:16:23.86,Default,,0,0,0,,like everybody else does with
Dialogue: 0,0:16:23.86,0:16:25.67,Default,,0,0,0,,standard testing tools, which is
Dialogue: 0,0:16:25.67,0:16:26.67,Default,,0,0,0,,going to allow us to move even
Dialogue: 0,0:16:26.67,0:16:27.77,Default,,0,0,0,,faster in the future in
Dialogue: 0,0:16:27.77,0:16:30.03,Default,,0,0,0,,improving this.
Dialogue: 0,0:16:30.23,0:16:32.76,Default,,0,0,0,,It also lets the bit of dyld
Dialogue: 0,0:16:32.87,0:16:35.42,Default,,0,0,0,,that stays in process be as
Dialogue: 0,0:16:35.42,0:16:36.97,Default,,0,0,0,,small as possible and that
Dialogue: 0,0:16:36.97,0:16:38.79,Default,,0,0,0,,reduces the attack surface in
Dialogue: 0,0:16:38.79,0:16:39.93,Default,,0,0,0,,your applications.
Dialogue: 0,0:16:41.86,0:16:44.28,Default,,0,0,0,,It also speeds up launch because
Dialogue: 0,0:16:44.28,0:16:46.51,Default,,0,0,0,,the fastest code is code you
Dialogue: 0,0:16:46.51,0:16:49.54,Default,,0,0,0,,never write, followed closely by
Dialogue: 0,0:16:49.54,0:16:51.10,Default,,0,0,0,,code you almost never execute.
Dialogue: 0,0:16:52.49,0:16:53.73,Default,,0,0,0,,So to tell you how we did this
Dialogue: 0,0:16:53.92,0:16:56.09,Default,,0,0,0,,I'm going to briefly show how
Dialogue: 0,0:16:56.09,0:16:57.70,Default,,0,0,0,,dyld 2 launches an app.
Dialogue: 0,0:16:58.02,0:16:59.74,Default,,0,0,0,,And again, we went into this in
Dialogue: 0,0:16:59.74,0:17:01.64,Default,,0,0,0,,much more detail in last year's
Dialogue: 0,0:17:01.64,0:17:02.90,Default,,0,0,0,,talk, Optimizing App Startup
Dialogue: 0,0:17:02.90,0:17:04.57,Default,,0,0,0,,Time, so if you want to pause,
Dialogue: 0,0:17:04.57,0:17:05.24,Default,,0,0,0,,if you're watching this on
Dialogue: 0,0:17:05.24,0:17:06.91,Default,,0,0,0,,video, and go watch that, that
Dialogue: 0,0:17:06.91,0:17:07.69,Default,,0,0,0,,might be a good idea.
Dialogue: 0,0:17:07.69,0:17:09.20,Default,,0,0,0,,Or if you just want to follow
Dialogue: 0,0:17:09.20,0:17:11.02,Default,,0,0,0,,along here, I'm going to go
Dialogue: 0,0:17:11.02,0:17:11.59,Default,,0,0,0,,through it briefly.
Dialogue: 0,0:17:12.76,0:17:14.33,Default,,0,0,0,,So first off we have dyld 2 and
Dialogue: 0,0:17:15.02,0:17:15.98,Default,,0,0,0,,your app starts launching.
Dialogue: 0,0:17:16.73,0:17:18.50,Default,,0,0,0,,So we have to parse your mach-o,
Dialogue: 0,0:17:18.50,0:17:20.62,Default,,0,0,0,,and as we parse your mach-o we
Dialogue: 0,0:17:20.62,0:17:21.79,Default,,0,0,0,,find what libraries you need,
Dialogue: 0,0:17:22.85,0:17:24.75,Default,,0,0,0,,and then they may have other
Dialogue: 0,0:17:24.75,0:17:26.04,Default,,0,0,0,,libraries that they need, and we
Dialogue: 0,0:17:26.12,0:17:27.92,Default,,0,0,0,,do that recursively until we
Dialogue: 0,0:17:27.92,0:17:29.01,Default,,0,0,0,,have a complete graph of all
Dialogue: 0,0:17:29.01,0:17:30.37,Default,,0,0,0,,your dylibs, and for an average
Dialogue: 0,0:17:30.75,0:17:32.33,Default,,0,0,0,,graph of application on iOS
Dialogue: 0,0:17:32.33,0:17:33.56,Default,,0,0,0,,that's between 3- and 600
Dialogue: 0,0:17:33.56,0:17:34.51,Default,,0,0,0,,dylibs, so it's a lot of them
Dialogue: 0,0:17:34.51,0:17:36.72,Default,,0,0,0,,and a lot of work.
Dialogue: 0,0:17:36.92,0:17:38.20,Default,,0,0,0,,We then map in all the mach-o
Dialogue: 0,0:17:38.20,0:17:40.23,Default,,0,0,0,,files so we get them into your
Dialogue: 0,0:17:40.23,0:17:40.97,Default,,0,0,0,,address space.
Dialogue: 0,0:17:41.56,0:17:44.00,Default,,0,0,0,,We then perform symbol lookups,
Dialogue: 0,0:17:44.00,0:17:45.76,Default,,0,0,0,,so we actually look and say if
Dialogue: 0,0:17:45.76,0:17:47.41,Default,,0,0,0,,your application uses printf, we
Dialogue: 0,0:17:47.41,0:17:48.73,Default,,0,0,0,,go and look and see that printf
Dialogue: 0,0:17:48.73,0:17:51.38,Default,,0,0,0,,is in lib system, and we find
Dialogue: 0,0:17:51.38,0:17:52.21,Default,,0,0,0,,the address of it and we
Dialogue: 0,0:17:52.21,0:17:53.31,Default,,0,0,0,,basically copy that into a
Dialogue: 0,0:17:53.31,0:17:54.21,Default,,0,0,0,,function pointer in your
Dialogue: 0,0:17:54.21,0:17:54.75,Default,,0,0,0,,application.
Dialogue: 0,0:17:56.30,0:17:57.84,Default,,0,0,0,,Then we do what's called binding
Dialogue: 0,0:17:57.84,0:17:58.79,Default,,0,0,0,,and rebasing, which is where we
Dialogue: 0,0:17:58.87,0:18:00.28,Default,,0,0,0,,copy those pointers in and we
Dialogue: 0,0:18:00.28,0:18:02.14,Default,,0,0,0,,also -- because you're at a
Dialogue: 0,0:18:02.14,0:18:03.74,Default,,0,0,0,,random address all of your
Dialogue: 0,0:18:03.74,0:18:05.29,Default,,0,0,0,,pointers have to have that base
Dialogue: 0,0:18:05.29,0:18:05.98,Default,,0,0,0,,address added to them.
Dialogue: 0,0:18:06.16,0:18:08.82,Default,,0,0,0,,And then finally, we can run all
Dialogue: 0,0:18:08.82,0:18:09.85,Default,,0,0,0,,of your initializers, which is
Dialogue: 0,0:18:09.85,0:18:10.81,Default,,0,0,0,,what I showed the tooling for
Dialogue: 0,0:18:10.81,0:18:12.55,Default,,0,0,0,,earlier, and at that point we're
Dialogue: 0,0:18:12.55,0:18:13.52,Default,,0,0,0,,ready to call your main in
Dialogue: 0,0:18:13.52,0:18:14.58,Default,,0,0,0,,launch, and that's a lot of
Dialogue: 0,0:18:14.58,0:18:14.91,Default,,0,0,0,,work.
Dialogue: 0,0:18:15.93,0:18:17.60,Default,,0,0,0,,So how can we make this faster
Dialogue: 0,0:18:17.78,0:18:18.92,Default,,0,0,0,,and how can we move it out of
Dialogue: 0,0:18:18.92,0:18:19.36,Default,,0,0,0,,process?
Dialogue: 0,0:18:19.36,0:18:21.66,Default,,0,0,0,,Well, first off we identify the
Dialogue: 0,0:18:21.66,0:18:23.36,Default,,0,0,0,,security sensitive components.
Dialogue: 0,0:18:23.90,0:18:25.19,Default,,0,0,0,,And from our perspective the
Dialogue: 0,0:18:25.45,0:18:27.10,Default,,0,0,0,,biggest ones of those are
Dialogue: 0,0:18:27.10,0:18:28.36,Default,,0,0,0,,parsing mach-o headers and
Dialogue: 0,0:18:28.36,0:18:30.49,Default,,0,0,0,,finding dependencies because
Dialogue: 0,0:18:30.84,0:18:32.27,Default,,0,0,0,,malformed mach-o headers allow
Dialogue: 0,0:18:32.27,0:18:34.47,Default,,0,0,0,,people to do certain attacks and
Dialogue: 0,0:18:35.27,0:18:36.92,Default,,0,0,0,,your applications may use
Dialogue: 0,0:18:37.20,0:18:39.22,Default,,0,0,0,,@rpaths, which are search paths,
Dialogue: 0,0:18:39.22,0:18:41.89,Default,,0,0,0,,and by malforming those or
Dialogue: 0,0:18:41.89,0:18:42.90,Default,,0,0,0,,inserting libraries in the right
Dialogue: 0,0:18:42.90,0:18:44.17,Default,,0,0,0,,places, people can subvert
Dialogue: 0,0:18:44.17,0:18:45.02,Default,,0,0,0,,applications.
Dialogue: 0,0:18:45.45,0:18:47.66,Default,,0,0,0,,So we do all of that out of
Dialogue: 0,0:18:47.66,0:18:49.89,Default,,0,0,0,,process in the daemon, and then
Dialogue: 0,0:18:49.89,0:18:51.46,Default,,0,0,0,,we identify the expensive parts
Dialogue: 0,0:18:51.46,0:18:54.00,Default,,0,0,0,,of it, which are cache-able, and
Dialogue: 0,0:18:54.00,0:18:55.11,Default,,0,0,0,,those are the symbol lookups.
Dialogue: 0,0:18:55.15,0:18:57.07,Default,,0,0,0,,Because in a given library,
Dialogue: 0,0:18:57.07,0:18:58.25,Default,,0,0,0,,unless you perform the software
Dialogue: 0,0:18:58.25,0:19:00.25,Default,,0,0,0,,update or change the library on
Dialogue: 0,0:19:00.25,0:19:01.95,Default,,0,0,0,,disk, the symbols will always be
Dialogue: 0,0:19:01.95,0:19:02.99,Default,,0,0,0,,at the same offset in that
Dialogue: 0,0:19:02.99,0:19:03.47,Default,,0,0,0,,library.
Dialogue: 0,0:19:04.31,0:19:05.49,Default,,0,0,0,,So we've identified these.
Dialogue: 0,0:19:05.74,0:19:06.71,Default,,0,0,0,,Let me show you how they look in
Dialogue: 0,0:19:06.71,0:19:06.98,Default,,0,0,0,,dyld 3.
Dialogue: 0,0:19:11.55,0:19:13.79,Default,,0,0,0,,So we moved those all up front,
Dialogue: 0,0:19:13.93,0:19:15.20,Default,,0,0,0,,at which point we write a
Dialogue: 0,0:19:15.20,0:19:16.03,Default,,0,0,0,,closure to disk.
Dialogue: 0,0:19:16.03,0:19:17.27,Default,,0,0,0,,So as I said earlier, a launch
Dialogue: 0,0:19:17.27,0:19:19.35,Default,,0,0,0,,closure is everything you need
Dialogue: 0,0:19:19.35,0:19:22.53,Default,,0,0,0,,to launch the app.
Dialogue: 0,0:19:22.53,0:19:25.60,Default,,0,0,0,,And then we move it -- we can
Dialogue: 0,0:19:25.60,0:19:26.88,Default,,0,0,0,,use that in process later.
Dialogue: 0,0:19:26.88,0:19:28.96,Default,,0,0,0,,So dyld 3 is three components.
Dialogue: 0,0:19:30.17,0:19:32.08,Default,,0,0,0,,It's an out-of-process mach-o
Dialogue: 0,0:19:32.08,0:19:33.11,Default,,0,0,0,,parser and compiler.
Dialogue: 0,0:19:34.18,0:19:35.81,Default,,0,0,0,,It's an in-process engine that
Dialogue: 0,0:19:35.81,0:19:39.13,Default,,0,0,0,,runs launch closures, and it's a
Dialogue: 0,0:19:39.17,0:19:41.10,Default,,0,0,0,,launch closer caching service.
Dialogue: 0,0:19:42.90,0:19:44.71,Default,,0,0,0,,Most launches use the cache and
Dialogue: 0,0:19:44.71,0:19:46.05,Default,,0,0,0,,never have to invoke the
Dialogue: 0,0:19:46.05,0:19:47.71,Default,,0,0,0,,out-of-process mach-o parser or
Dialogue: 0,0:19:47.71,0:19:48.31,Default,,0,0,0,,compiler.
Dialogue: 0,0:19:50.24,0:19:52.37,Default,,0,0,0,,And launch closures are much
Dialogue: 0,0:19:52.37,0:19:53.44,Default,,0,0,0,,simpler than mach-o.
Dialogue: 0,0:19:54.28,0:19:55.75,Default,,0,0,0,,They are memory map files we
Dialogue: 0,0:19:55.88,0:19:57.03,Default,,0,0,0,,don't have to parse in any
Dialogue: 0,0:19:57.03,0:19:57.86,Default,,0,0,0,,complicated way.
Dialogue: 0,0:19:57.86,0:19:59.13,Default,,0,0,0,,We can validate them simply.
Dialogue: 0,0:19:59.13,0:20:00.53,Default,,0,0,0,,They are built for speed.
Dialogue: 0,0:20:01.10,0:20:04.61,Default,,0,0,0,,And so let's talk about each one
Dialogue: 0,0:20:04.61,0:20:05.31,Default,,0,0,0,,of those parts a little bit
Dialogue: 0,0:20:05.31,0:20:05.50,Default,,0,0,0,,more.
Dialogue: 0,0:20:06.42,0:20:09.24,Default,,0,0,0,,So dyld 3 is an out-of-process
Dialogue: 0,0:20:09.24,0:20:10.00,Default,,0,0,0,,mach-o parser.
Dialogue: 0,0:20:10.86,0:20:11.64,Default,,0,0,0,,So what does that do?
Dialogue: 0,0:20:11.64,0:20:12.94,Default,,0,0,0,,It resolves all the search
Dialogue: 0,0:20:12.94,0:20:15.59,Default,,0,0,0,,paths, all the rpaths, all the
Dialogue: 0,0:20:15.59,0:20:16.80,Default,,0,0,0,,environment variables that can
Dialogue: 0,0:20:16.80,0:20:17.66,Default,,0,0,0,,affect your launch.
Dialogue: 0,0:20:18.34,0:20:19.60,Default,,0,0,0,,Then it parses the mach-o
Dialogue: 0,0:20:19.60,0:20:22.16,Default,,0,0,0,,binaries and it performs all of
Dialogue: 0,0:20:22.16,0:20:23.23,Default,,0,0,0,,those symbol lookups.
Dialogue: 0,0:20:24.94,0:20:26.46,Default,,0,0,0,,Finally, it creates the closure
Dialogue: 0,0:20:26.46,0:20:29.05,Default,,0,0,0,,with the results, and it's that
Dialogue: 0,0:20:29.05,0:20:30.47,Default,,0,0,0,,normal daemon so that we can get
Dialogue: 0,0:20:30.47,0:20:31.63,Default,,0,0,0,,that improved testing
Dialogue: 0,0:20:31.63,0:20:32.27,Default,,0,0,0,,infrastructure.
Dialogue: 0,0:20:34.54,0:20:36.48,Default,,0,0,0,,dyld is a small in-process
Dialogue: 0,0:20:36.48,0:20:38.25,Default,,0,0,0,,engine as well, and this is the
Dialogue: 0,0:20:38.25,0:20:39.25,Default,,0,0,0,,part that will be in your
Dialogue: 0,0:20:39.25,0:20:40.67,Default,,0,0,0,,process and this is what you
Dialogue: 0,0:20:40.67,0:20:41.38,Default,,0,0,0,,will mostly see.
Dialogue: 0,0:20:42.46,0:20:43.84,Default,,0,0,0,,So all it does is it validates
Dialogue: 0,0:20:43.84,0:20:45.34,Default,,0,0,0,,that the launch closure is
Dialogue: 0,0:20:45.34,0:20:48.19,Default,,0,0,0,,correct and then it just maps in
Dialogue: 0,0:20:48.19,0:20:50.70,Default,,0,0,0,,the dylibs and jumps to main.
Dialogue: 0,0:20:50.70,0:20:51.60,Default,,0,0,0,,And one of the things you may
Dialogue: 0,0:20:51.60,0:20:54.42,Default,,0,0,0,,notice is it never needs to pars
Dialogue: 0,0:20:54.42,0:20:55.93,Default,,0,0,0,,a mach-o header or perform a
Dialogue: 0,0:20:55.93,0:20:56.62,Default,,0,0,0,,symbol lookup.
Dialogue: 0,0:20:56.67,0:20:57.86,Default,,0,0,0,,We don't have to do those to
Dialogue: 0,0:20:57.86,0:20:58.85,Default,,0,0,0,,launch your app anymore.
Dialogue: 0,0:20:58.90,0:21:00.06,Default,,0,0,0,,And since that's where we're
Dialogue: 0,0:21:00.06,0:21:02.50,Default,,0,0,0,,spending most of our time, it's
Dialogue: 0,0:21:02.50,0:21:03.80,Default,,0,0,0,,going to result in much faster
Dialogue: 0,0:21:03.80,0:21:04.67,Default,,0,0,0,,app launches for you.
Dialogue: 0,0:21:06.34,0:21:09.42,Default,,0,0,0,,Finally, dyld 3 is a launch
Dialogue: 0,0:21:09.42,0:21:10.97,Default,,0,0,0,,closure caching service.
Dialogue: 0,0:21:11.49,0:21:14.39,Default,,0,0,0,,So what does that mean?
Dialogue: 0,0:21:14.39,0:21:16.41,Default,,0,0,0,,Well, system app closures we're
Dialogue: 0,0:21:16.48,0:21:18.44,Default,,0,0,0,,just building directly into the
Dialogue: 0,0:21:18.44,0:21:19.00,Default,,0,0,0,,shared cache.
Dialogue: 0,0:21:19.00,0:21:20.04,Default,,0,0,0,,We already have this tool that
Dialogue: 0,0:21:20.04,0:21:21.42,Default,,0,0,0,,runs and analyzes every mach-o
Dialogue: 0,0:21:21.42,0:21:21.97,Default,,0,0,0,,in the system.
Dialogue: 0,0:21:23.08,0:21:24.40,Default,,0,0,0,,We can just put them directly
Dialogue: 0,0:21:24.40,0:21:25.75,Default,,0,0,0,,into the shared cache, so it's
Dialogue: 0,0:21:25.75,0:21:27.31,Default,,0,0,0,,mapped in with all the dylibs to
Dialogue: 0,0:21:27.31,0:21:27.72,Default,,0,0,0,,start with.
Dialogue: 0,0:21:27.72,0:21:29.08,Default,,0,0,0,,We don't even need to open
Dialogue: 0,0:21:29.08,0:21:30.04,Default,,0,0,0,,another file.
Dialogue: 0,0:21:31.30,0:21:33.77,Default,,0,0,0,,For third-party apps we're going
Dialogue: 0,0:21:33.77,0:21:35.81,Default,,0,0,0,,to build your closure during app
Dialogue: 0,0:21:36.00,0:21:38.86,Default,,0,0,0,,install or system updates
Dialogue: 0,0:21:39.29,0:21:40.58,Default,,0,0,0,,because at that point the system
Dialogue: 0,0:21:40.58,0:21:41.36,Default,,0,0,0,,library has changed.
Dialogue: 0,0:21:41.82,0:21:44.28,Default,,0,0,0,,So by default these will all be
Dialogue: 0,0:21:44.28,0:21:46.61,Default,,0,0,0,,prebuilt for you on iOS and tvOS
Dialogue: 0,0:21:46.61,0:21:48.78,Default,,0,0,0,,and watchOS before you even run.
Dialogue: 0,0:21:49.89,0:21:51.40,Default,,0,0,0,,On macOS, because you can side
Dialogue: 0,0:21:51.40,0:21:53.30,Default,,0,0,0,,load applications, the
Dialogue: 0,0:21:53.30,0:21:55.66,Default,,0,0,0,,in-process engine can RPC out to
Dialogue: 0,0:21:55.66,0:21:57.19,Default,,0,0,0,,the daemon if necessary on first
Dialogue: 0,0:21:57.19,0:22:00.01,Default,,0,0,0,,launch, and then after that it
Dialogue: 0,0:22:00.24,0:22:02.15,Default,,0,0,0,,will be able to use a cached
Dialogue: 0,0:22:02.15,0:22:03.17,Default,,0,0,0,,closure just like everything
Dialogue: 0,0:22:03.17,0:22:03.57,Default,,0,0,0,,else.
Dialogue: 0,0:22:04.92,0:22:06.48,Default,,0,0,0,,But like I said, that is not
Dialogue: 0,0:22:06.48,0:22:08.86,Default,,0,0,0,,necessary on any of our other
Dialogue: 0,0:22:08.86,0:22:09.52,Default,,0,0,0,,platforms.
Dialogue: 0,0:22:10.67,0:22:11.70,Default,,0,0,0,,So now that I've talked about
Dialogue: 0,0:22:11.70,0:22:13.18,Default,,0,0,0,,this dynamic linker that we'll
Dialogue: 0,0:22:13.18,0:22:14.44,Default,,0,0,0,,be using for system apps this
Dialogue: 0,0:22:14.44,0:22:15.37,Default,,0,0,0,,year and for your apps in the
Dialogue: 0,0:22:15.37,0:22:17.02,Default,,0,0,0,,future, I want to talk to you
Dialogue: 0,0:22:17.02,0:22:18.18,Default,,0,0,0,,about some potential issues you
Dialogue: 0,0:22:18.18,0:22:19.07,Default,,0,0,0,,might see with it so that you
Dialogue: 0,0:22:19.07,0:22:20.60,Default,,0,0,0,,can start updating your apps for
Dialogue: 0,0:22:20.60,0:22:20.97,Default,,0,0,0,,it now.
Dialogue: 0,0:22:24.05,0:22:25.34,Default,,0,0,0,,So first off, it is fully
Dialogue: 0,0:22:25.34,0:22:28.53,Default,,0,0,0,,compatible with dyld 2.x. So
Dialogue: 0,0:22:29.67,0:22:32.60,Default,,0,0,0,,some existing API's will cause
Dialogue: 0,0:22:32.82,0:22:34.01,Default,,0,0,0,,you to run slower or use
Dialogue: 0,0:22:34.01,0:22:35.77,Default,,0,0,0,,fallback modes in dyld 3 though,
Dialogue: 0,0:22:36.08,0:22:37.64,Default,,0,0,0,,so we'd like you to avoid those,
Dialogue: 0,0:22:37.64,0:22:38.38,Default,,0,0,0,,and we'll go into those in a
Dialogue: 0,0:22:38.38,0:22:38.75,Default,,0,0,0,,second.
Dialogue: 0,0:22:39.35,0:22:40.30,Default,,0,0,0,,Also, some existing
Dialogue: 0,0:22:40.30,0:22:42.01,Default,,0,0,0,,optimizations that you are doing
Dialogue: 0,0:22:42.01,0:22:44.13,Default,,0,0,0,,may not be necessary anymore, so
Dialogue: 0,0:22:44.13,0:22:45.95,Default,,0,0,0,,you don't have to rip them out
Dialogue: 0,0:22:46.04,0:22:47.23,Default,,0,0,0,,but, you know, it may not be
Dialogue: 0,0:22:47.23,0:22:48.80,Default,,0,0,0,,worth putting in a lot of
Dialogue: 0,0:22:48.80,0:22:49.03,Default,,0,0,0,,effort.
Dialogue: 0,0:22:49.03,0:22:49.71,Default,,0,0,0,,The other thing I want to talk
Dialogue: 0,0:22:49.78,0:22:51.02,Default,,0,0,0,,about is that we're going to
Dialogue: 0,0:22:51.02,0:22:52.99,Default,,0,0,0,,have stricter linking semantics.
Dialogue: 0,0:22:52.99,0:22:53.97,Default,,0,0,0,,So what do I mean by that?
Dialogue: 0,0:22:53.97,0:22:56.11,Default,,0,0,0,,Well, there's a lot of things
Dialogue: 0,0:22:56.11,0:22:58.84,Default,,0,0,0,,that maybe work most of the
Dialogue: 0,0:22:58.84,0:23:00.99,Default,,0,0,0,,time, but aren't actually
Dialogue: 0,0:23:00.99,0:23:03.20,Default,,0,0,0,,correct even today and so we've
Dialogue: 0,0:23:03.20,0:23:04.57,Default,,0,0,0,,identified a lot of those.
Dialogue: 0,0:23:04.57,0:23:06.27,Default,,0,0,0,,As we've been putting the new
Dialogue: 0,0:23:06.27,0:23:07.66,Default,,0,0,0,,dynamic linker in, that tends to
Dialogue: 0,0:23:07.66,0:23:08.92,Default,,0,0,0,,find all these edge cases.
Dialogue: 0,0:23:08.92,0:23:10.65,Default,,0,0,0,,So what we've been doing is
Dialogue: 0,0:23:10.65,0:23:11.20,Default,,0,0,0,,we've been putting in
Dialogue: 0,0:23:11.20,0:23:12.88,Default,,0,0,0,,workarounds for old binaries,
Dialogue: 0,0:23:13.20,0:23:15.66,Default,,0,0,0,,but we do not intend to carry
Dialogue: 0,0:23:15.66,0:23:16.40,Default,,0,0,0,,those forward.
Dialogue: 0,0:23:16.40,0:23:17.96,Default,,0,0,0,,We will do linked on or after
Dialogue: 0,0:23:17.96,0:23:19.06,Default,,0,0,0,,checks to see what SDK you were
Dialogue: 0,0:23:19.06,0:23:20.65,Default,,0,0,0,,built with and we will disable
Dialogue: 0,0:23:20.65,0:23:21.56,Default,,0,0,0,,those workarounds for new
Dialogue: 0,0:23:21.56,0:23:23.92,Default,,0,0,0,,binaries so that you move to
Dialogue: 0,0:23:23.92,0:23:26.71,Default,,0,0,0,,these improved -- you fix these
Dialogue: 0,0:23:26.71,0:23:27.06,Default,,0,0,0,,issues.
Dialogue: 0,0:23:28.41,0:23:29.41,Default,,0,0,0,,So new binaries will cause
Dialogue: 0,0:23:29.41,0:23:30.05,Default,,0,0,0,,linker issues.
Dialogue: 0,0:23:30.05,0:23:33.51,Default,,0,0,0,,So, first off, I want to talk
Dialogue: 0,0:23:33.51,0:23:35.52,Default,,0,0,0,,about unaligned pointers in your
Dialogue: 0,0:23:35.52,0:23:36.24,Default,,0,0,0,,data segments.
Dialogue: 0,0:23:36.24,0:23:37.42,Default,,0,0,0,,So what do I mean by this?
Dialogue: 0,0:23:37.42,0:23:39.60,Default,,0,0,0,,Well, when you have a global
Dialogue: 0,0:23:39.60,0:23:41.11,Default,,0,0,0,,structure that points to a
Dialogue: 0,0:23:41.11,0:23:42.59,Default,,0,0,0,,function or another global
Dialogue: 0,0:23:42.59,0:23:44.67,Default,,0,0,0,,structure, that's a pointer that
Dialogue: 0,0:23:44.67,0:23:45.83,Default,,0,0,0,,we have to fix up before you
Dialogue: 0,0:23:45.83,0:23:49.23,Default,,0,0,0,,launch, and pointers must be
Dialogue: 0,0:23:49.23,0:23:50.53,Default,,0,0,0,,naturally aligned on our system
Dialogue: 0,0:23:50.56,0:23:52.43,Default,,0,0,0,,for best performance.
Dialogue: 0,0:23:53.17,0:23:56.17,Default,,0,0,0,,And fixing up unaligned pointers
Dialogue: 0,0:23:56.24,0:23:57.41,Default,,0,0,0,,is much more complex.
Dialogue: 0,0:23:57.41,0:23:59.73,Default,,0,0,0,,They can span multiple pages,
Dialogue: 0,0:23:59.73,0:24:01.11,Default,,0,0,0,,which can cause more page faults
Dialogue: 0,0:24:01.11,0:24:02.48,Default,,0,0,0,,and other issues, and they can
Dialogue: 0,0:24:02.48,0:24:05.15,Default,,0,0,0,,have atomicity issues related to
Dialogue: 0,0:24:05.39,0:24:06.50,Default,,0,0,0,,multiprocessors.
Dialogue: 0,0:24:07.66,0:24:09.58,Default,,0,0,0,,The static linker already emits
Dialogue: 0,0:24:09.58,0:24:13.23,Default,,0,0,0,,a warning for this, ld warning,
Dialogue: 0,0:24:13.23,0:24:14.72,Default,,0,0,0,,pointer not aligned at address,
Dialogue: 0,0:24:14.72,0:24:15.88,Default,,0,0,0,,and that's an address, often
Dialogue: 0,0:24:15.88,0:24:17.72,Default,,0,0,0,,your data segments.
Dialogue: 0,0:24:18.42,0:24:19.44,Default,,0,0,0,,And if you're fixing all
Dialogue: 0,0:24:19.44,0:24:20.60,Default,,0,0,0,,warnings, you should --
Dialogue: 0,0:24:20.60,0:24:22.12,Default,,0,0,0,,hopefully you've already taken
Dialogue: 0,0:24:22.12,0:24:23.31,Default,,0,0,0,,care of this.
Dialogue: 0,0:24:23.31,0:24:24.26,Default,,0,0,0,,The seeds that we have out this
Dialogue: 0,0:24:24.26,0:24:25.88,Default,,0,0,0,,week have some issues with Swift
Dialogue: 0,0:24:25.88,0:24:27.46,Default,,0,0,0,,keypaths, but they will be fixed
Dialogue: 0,0:24:27.55,0:24:28.92,Default,,0,0,0,,so you can ignore those, but
Dialogue: 0,0:24:28.92,0:24:30.10,Default,,0,0,0,,other than that, please go and
Dialogue: 0,0:24:30.10,0:24:30.86,Default,,0,0,0,,fix these issues.
Dialogue: 0,0:24:31.57,0:24:32.69,Default,,0,0,0,,So for those of you who are
Dialogue: 0,0:24:32.69,0:24:33.70,Default,,0,0,0,,asking how would you get
Dialogue: 0,0:24:33.70,0:24:34.83,Default,,0,0,0,,something like this, I'm going
Dialogue: 0,0:24:34.83,0:24:35.87,Default,,0,0,0,,to just show you real quick.
Dialogue: 0,0:24:36.35,0:24:38.15,Default,,0,0,0,,If you don't know how, it takes
Dialogue: 0,0:24:38.15,0:24:38.96,Default,,0,0,0,,a lot of work.
Dialogue: 0,0:24:38.96,0:24:40.35,Default,,0,0,0,,You can't do it in Swift.
Dialogue: 0,0:24:40.35,0:24:41.47,Default,,0,0,0,,So again, use more Swift.
Dialogue: 0,0:24:42.31,0:24:44.17,Default,,0,0,0,,This code here will do it, so
Dialogue: 0,0:24:44.17,0:24:45.30,Default,,0,0,0,,let me show you what's going on.
Dialogue: 0,0:24:46.57,0:24:49.55,Default,,0,0,0,,First off, I have attributes
Dialogue: 0,0:24:49.82,0:24:51.13,Default,,0,0,0,,forcing specific alignment.
Dialogue: 0,0:24:51.13,0:24:52.38,Default,,0,0,0,,So by default the compiler's
Dialogue: 0,0:24:52.38,0:24:53.54,Default,,0,0,0,,going to align it correctly for
Dialogue: 0,0:24:53.54,0:24:53.76,Default,,0,0,0,,you.
Dialogue: 0,0:24:54.32,0:24:55.50,Default,,0,0,0,,But sometimes you may need
Dialogue: 0,0:24:55.50,0:24:56.84,Default,,0,0,0,,special alignments and this case
Dialogue: 0,0:24:56.84,0:24:58.38,Default,,0,0,0,,I've said change whatever the
Dialogue: 0,0:24:58.38,0:24:59.99,Default,,0,0,0,,default alignment rules are to
Dialogue: 0,0:24:59.99,0:25:01.13,Default,,0,0,0,,one, and I've done that in two
Dialogue: 0,0:25:01.13,0:25:02.47,Default,,0,0,0,,different ways just to be
Dialogue: 0,0:25:02.50,0:25:03.73,Default,,0,0,0,,really, really bad, so you have
Dialogue: 0,0:25:03.73,0:25:04.88,Default,,0,0,0,,to fix both of these.
Dialogue: 0,0:25:05.78,0:25:08.73,Default,,0,0,0,,Then I constructed a global
Dialogue: 0,0:25:08.73,0:25:09.36,Default,,0,0,0,,variable.
Dialogue: 0,0:25:09.36,0:25:11.26,Default,,0,0,0,,That global variable sets a
Dialogue: 0,0:25:11.26,0:25:12.36,Default,,0,0,0,,pointer in with the structures
Dialogue: 0,0:25:12.36,0:25:13.94,Default,,0,0,0,,and that's going to force the
Dialogue: 0,0:25:13.94,0:25:15.77,Default,,0,0,0,,dynamic linker to fix up that
Dialogue: 0,0:25:15.77,0:25:16.65,Default,,0,0,0,,pointer on launch.
Dialogue: 0,0:25:17.22,0:25:19.30,Default,,0,0,0,,So if you see code like this,
Dialogue: 0,0:25:19.30,0:25:20.58,Default,,0,0,0,,you can just remove the
Dialogue: 0,0:25:20.58,0:25:21.44,Default,,0,0,0,,alignments.
Dialogue: 0,0:25:21.80,0:25:22.83,Default,,0,0,0,,You could rearrange the
Dialogue: 0,0:25:22.83,0:25:24.34,Default,,0,0,0,,structure so that the pointer
Dialogue: 0,0:25:24.34,0:25:25.85,Default,,0,0,0,,goes first, because that's a
Dialogue: 0,0:25:26.05,0:25:26.77,Default,,0,0,0,,better alignment thing.
Dialogue: 0,0:25:27.13,0:25:28.07,Default,,0,0,0,,And there's plenty of guides
Dialogue: 0,0:25:28.07,0:25:29.29,Default,,0,0,0,,online about C structure
Dialogue: 0,0:25:29.29,0:25:30.04,Default,,0,0,0,,alignment if you want to get
Dialogue: 0,0:25:30.04,0:25:31.99,Default,,0,0,0,,into the nitty-gritty, but
Dialogue: 0,0:25:32.47,0:25:33.53,Default,,0,0,0,,hopefully you don't have to deal
Dialogue: 0,0:25:33.53,0:25:34.79,Default,,0,0,0,,with this, and if you write
Dialogue: 0,0:25:34.79,0:25:35.87,Default,,0,0,0,,Swift, you definitely don't have
Dialogue: 0,0:25:35.87,0:25:35.98,Default,,0,0,0,,to.
Dialogue: 0,0:25:38.79,0:25:41.52,Default,,0,0,0,,So next off, eager symbol
Dialogue: 0,0:25:41.52,0:25:42.12,Default,,0,0,0,,resolution.
Dialogue: 0,0:25:42.58,0:25:43.57,Default,,0,0,0,,So what do I mean by this?
Dialogue: 0,0:25:44.20,0:25:46.32,Default,,0,0,0,,So dyld 2 performs what we call
Dialogue: 0,0:25:46.32,0:25:47.49,Default,,0,0,0,,lazy symbol resolution.
Dialogue: 0,0:25:48.03,0:25:50.02,Default,,0,0,0,,So I said up front that dyld has
Dialogue: 0,0:25:50.02,0:25:51.41,Default,,0,0,0,,to load all those symbols and
Dialogue: 0,0:25:51.41,0:25:52.41,Default,,0,0,0,,that's something expensive that
Dialogue: 0,0:25:52.41,0:25:53.32,Default,,0,0,0,,we want to cache.
Dialogue: 0,0:25:53.79,0:25:56.88,Default,,0,0,0,,It's actually too expensive to
Dialogue: 0,0:25:56.88,0:25:59.79,Default,,0,0,0,,run up front on existing
Dialogue: 0,0:25:59.79,0:26:00.39,Default,,0,0,0,,applications.
Dialogue: 0,0:26:00.39,0:26:01.33,Default,,0,0,0,,It would take too long.
Dialogue: 0,0:26:01.78,0:26:03.76,Default,,0,0,0,,So instead, we use a mechanism
Dialogue: 0,0:26:03.76,0:26:05.19,Default,,0,0,0,,we call lazy symbol resolution,
Dialogue: 0,0:26:05.19,0:26:08.58,Default,,0,0,0,,where, by default, the function
Dialogue: 0,0:26:08.58,0:26:10.06,Default,,0,0,0,,pointer in your binary for,
Dialogue: 0,0:26:10.06,0:26:11.28,Default,,0,0,0,,let's say, printf, doesn't point
Dialogue: 0,0:26:11.28,0:26:11.91,Default,,0,0,0,,to printf.
Dialogue: 0,0:26:12.47,0:26:14.57,Default,,0,0,0,,By default it points to a
Dialogue: 0,0:26:14.57,0:26:17.89,Default,,0,0,0,,function in dyld that returns a
Dialogue: 0,0:26:17.98,0:26:19.57,Default,,0,0,0,,function pointer to printf.
Dialogue: 0,0:26:20.17,0:26:22.84,Default,,0,0,0,,And so when we launch, you'll
Dialogue: 0,0:26:22.84,0:26:24.47,Default,,0,0,0,,call printf, it goes into dyld,
Dialogue: 0,0:26:24.47,0:26:26.60,Default,,0,0,0,,we return what we call the
Dialogue: 0,0:26:26.60,0:26:27.66,Default,,0,0,0,,printf and call it on your
Dialogue: 0,0:26:27.66,0:26:28.63,Default,,0,0,0,,behalf the first time and then
Dialogue: 0,0:26:28.63,0:26:30.12,Default,,0,0,0,,on the second time you go
Dialogue: 0,0:26:30.12,0:26:30.97,Default,,0,0,0,,straight to printf.
Dialogue: 0,0:26:31.98,0:26:33.55,Default,,0,0,0,,But since we are caching and
Dialogue: 0,0:26:33.55,0:26:34.85,Default,,0,0,0,,calculating all these symbols up
Dialogue: 0,0:26:34.85,0:26:36.33,Default,,0,0,0,,front now, there's no additional
Dialogue: 0,0:26:36.33,0:26:37.80,Default,,0,0,0,,cost at app launch time to find
Dialogue: 0,0:26:37.80,0:26:39.38,Default,,0,0,0,,them all up front, so we are
Dialogue: 0,0:26:39.38,0:26:41.86,Default,,0,0,0,,going to do that.
Dialogue: 0,0:26:42.05,0:26:44.67,Default,,0,0,0,,Now, having said that, missing
Dialogue: 0,0:26:44.67,0:26:46.13,Default,,0,0,0,,symbols behave differently when
Dialogue: 0,0:26:46.13,0:26:46.75,Default,,0,0,0,,you do this.
Dialogue: 0,0:26:47.36,0:26:49.58,Default,,0,0,0,,On existing lazy systems, if you
Dialogue: 0,0:26:49.58,0:26:51.65,Default,,0,0,0,,are missing a symbol, the first
Dialogue: 0,0:26:51.65,0:26:53.52,Default,,0,0,0,,call -- you'll launch correctly
Dialogue: 0,0:26:53.52,0:26:54.67,Default,,0,0,0,,and the first time you call that
Dialogue: 0,0:26:54.67,0:26:55.73,Default,,0,0,0,,symbol, you'll crash.
Dialogue: 0,0:26:56.41,0:26:57.52,Default,,0,0,0,,With eager symbols you'll crash
Dialogue: 0,0:26:57.67,0:26:57.98,Default,,0,0,0,,up front.
Dialogue: 0,0:27:03.66,0:27:04.95,Default,,0,0,0,,So we do have a compatibility
Dialogue: 0,0:27:04.95,0:27:06.66,Default,,0,0,0,,mode for this, and the way we're
Dialogue: 0,0:27:06.66,0:27:09.21,Default,,0,0,0,,going to do that is that we are
Dialogue: 0,0:27:09.21,0:27:12.59,Default,,0,0,0,,going to just have a symbol
Dialogue: 0,0:27:12.64,0:27:14.29,Default,,0,0,0,,inside dyld 3 that automatically
Dialogue: 0,0:27:14.29,0:27:16.17,Default,,0,0,0,,crashes, and if we can't find
Dialogue: 0,0:27:16.17,0:27:17.62,Default,,0,0,0,,your symbol, we will bind that
Dialogue: 0,0:27:17.62,0:27:18.85,Default,,0,0,0,,symbol, so on first call you
Dialogue: 0,0:27:18.85,0:27:19.57,Default,,0,0,0,,will crash.
Dialogue: 0,0:27:20.20,0:27:21.99,Default,,0,0,0,,But again, that's how it works
Dialogue: 0,0:27:21.99,0:27:22.71,Default,,0,0,0,,on today's SDK.
Dialogue: 0,0:27:22.71,0:27:25.01,Default,,0,0,0,,If future SDK's we are going to
Dialogue: 0,0:27:25.01,0:27:26.55,Default,,0,0,0,,force all symbol resolution to
Dialogue: 0,0:27:26.55,0:27:27.12,Default,,0,0,0,,be up front.
Dialogue: 0,0:27:27.12,0:27:28.12,Default,,0,0,0,,So if you are missing a symbol,
Dialogue: 0,0:27:28.12,0:27:29.67,Default,,0,0,0,,you will crash, and that should
Dialogue: 0,0:27:29.67,0:27:31.18,Default,,0,0,0,,hopefully result in you
Dialogue: 0,0:27:31.18,0:27:32.14,Default,,0,0,0,,discovering crashes during
Dialogue: 0,0:27:32.14,0:27:33.47,Default,,0,0,0,,development instead of your
Dialogue: 0,0:27:33.47,0:27:34.51,Default,,0,0,0,,users discovering them at
Dialogue: 0,0:27:34.51,0:27:35.25,Default,,0,0,0,,runtime.
Dialogue: 0,0:27:36.06,0:27:37.48,Default,,0,0,0,,And you can simulate that
Dialogue: 0,0:27:37.48,0:27:38.46,Default,,0,0,0,,behavior now today.
Dialogue: 0,0:27:38.46,0:27:39.65,Default,,0,0,0,,There's a special linker flag
Dialogue: 0,0:27:40.67,0:27:43.74,Default,,0,0,0,,which is dyld bind at load, so
Dialogue: 0,0:27:43.74,0:27:45.35,Default,,0,0,0,,if you add this to your debug
Dialogue: 0,0:27:45.35,0:27:46.58,Default,,0,0,0,,build, as I said, it's much
Dialogue: 0,0:27:46.58,0:27:47.87,Default,,0,0,0,,slower, so please only put it in
Dialogue: 0,0:27:47.87,0:27:49.67,Default,,0,0,0,,your debug builds, but add this
Dialogue: 0,0:27:49.67,0:27:50.81,Default,,0,0,0,,to your debug builds and you'll
Dialogue: 0,0:27:50.81,0:27:53.40,Default,,0,0,0,,get more reliable behavior today
Dialogue: 0,0:27:53.40,0:27:54.53,Default,,0,0,0,,and it will get you ready for
Dialogue: 0,0:27:54.53,0:27:55.30,Default,,0,0,0,,what we're going to be doing in
Dialogue: 0,0:27:55.30,0:27:56.09,Default,,0,0,0,,dyld 3.
Dialogue: 0,0:27:57.62,0:27:59.02,Default,,0,0,0,,Again, only use that in your
Dialogue: 0,0:27:59.02,0:27:59.61,Default,,0,0,0,,test builds.
Dialogue: 0,0:28:00.70,0:28:03.39,Default,,0,0,0,,Dlopen, dlsym and dladdr.
Dialogue: 0,0:28:04.01,0:28:05.11,Default,,0,0,0,,So last year I got up here and
Dialogue: 0,0:28:05.11,0:28:06.72,Default,,0,0,0,,said please don't use them
Dialogue: 0,0:28:06.72,0:28:07.82,Default,,0,0,0,,unless you have to, but we
Dialogue: 0,0:28:07.82,0:28:09.01,Default,,0,0,0,,understand that you may have to,
Dialogue: 0,0:28:09.01,0:28:10.69,Default,,0,0,0,,and that's the same thing I'm
Dialogue: 0,0:28:10.69,0:28:11.33,Default,,0,0,0,,saying this year.
Dialogue: 0,0:28:11.91,0:28:13.01,Default,,0,0,0,,They have some problematic
Dialogue: 0,0:28:13.01,0:28:15.35,Default,,0,0,0,,semantics, but they are still
Dialogue: 0,0:28:15.35,0:28:16.40,Default,,0,0,0,,necessary in some cases.
Dialogue: 0,0:28:16.98,0:28:18.31,Default,,0,0,0,,Particularly, symbols found with
Dialogue: 0,0:28:18.31,0:28:19.46,Default,,0,0,0,,dlsym, we need to find it at
Dialogue: 0,0:28:19.46,0:28:19.99,Default,,0,0,0,,runtime.
Dialogue: 0,0:28:19.99,0:28:21.04,Default,,0,0,0,,We don't know ahead of time what
Dialogue: 0,0:28:21.04,0:28:21.28,Default,,0,0,0,,they are.
Dialogue: 0,0:28:21.28,0:28:22.95,Default,,0,0,0,,We can't do all that prefetching
Dialogue: 0,0:28:22.95,0:28:24.17,Default,,0,0,0,,and presearching.
Dialogue: 0,0:28:24.58,0:28:26.13,Default,,0,0,0,,So as soon as you use dlopen or
Dialogue: 0,0:28:26.13,0:28:27.42,Default,,0,0,0,,dlsym, we're going and we're
Dialogue: 0,0:28:27.42,0:28:28.60,Default,,0,0,0,,reading in all the pages for
Dialogue: 0,0:28:28.60,0:28:29.86,Default,,0,0,0,,your symbol table that we didn't
Dialogue: 0,0:28:29.86,0:28:31.08,Default,,0,0,0,,have to touch before.
Dialogue: 0,0:28:31.30,0:28:32.92,Default,,0,0,0,,So it's going to be a lot more
Dialogue: 0,0:28:32.92,0:28:33.45,Default,,0,0,0,,expensive.
Dialogue: 0,0:28:33.45,0:28:35.37,Default,,0,0,0,,Additionally, we might have to
Dialogue: 0,0:28:35.37,0:28:39.24,Default,,0,0,0,,RPC out to the daemon, depending
Dialogue: 0,0:28:39.24,0:28:40.56,Default,,0,0,0,,on how complicated it is.
Dialogue: 0,0:28:41.11,0:28:42.19,Default,,0,0,0,,So we're working on some better
Dialogue: 0,0:28:42.19,0:28:43.14,Default,,0,0,0,,alternatives.
Dialogue: 0,0:28:43.93,0:28:45.35,Default,,0,0,0,,We don't have those yet.
Dialogue: 0,0:28:45.51,0:28:46.94,Default,,0,0,0,,But we also need to hear about
Dialogue: 0,0:28:46.94,0:28:48.09,Default,,0,0,0,,your use cases to make sure
Dialogue: 0,0:28:48.09,0:28:48.97,Default,,0,0,0,,we're designing something that
Dialogue: 0,0:28:48.97,0:28:49.93,Default,,0,0,0,,will work for you.
Dialogue: 0,0:28:50.54,0:28:52.64,Default,,0,0,0,,So please, again, they're not
Dialogue: 0,0:28:52.64,0:28:53.89,Default,,0,0,0,,going away, but they will be
Dialogue: 0,0:28:53.89,0:28:55.02,Default,,0,0,0,,slower and we want your
Dialogue: 0,0:28:55.02,0:28:55.59,Default,,0,0,0,,feedback.
Dialogue: 0,0:28:55.75,0:28:58.67,Default,,0,0,0,,I want to take a second to talk
Dialogue: 0,0:28:58.67,0:28:59.96,Default,,0,0,0,,about dlclose specifically.
Dialogue: 0,0:28:59.96,0:29:01.51,Default,,0,0,0,,And so dlclose is a bit of a
Dialogue: 0,0:29:01.51,0:29:02.20,Default,,0,0,0,,misnomer.
Dialogue: 0,0:29:02.66,0:29:03.92,Default,,0,0,0,,It's a Unix API, so that's the
Dialogue: 0,0:29:03.92,0:29:05.22,Default,,0,0,0,,name, but on our system, if we
Dialogue: 0,0:29:05.22,0:29:06.34,Default,,0,0,0,,had been writing it, it probably
Dialogue: 0,0:29:06.34,0:29:08.13,Default,,0,0,0,,would be called dlrelease
Dialogue: 0,0:29:08.74,0:29:10.46,Default,,0,0,0,,because it doesn't actually
Dialogue: 0,0:29:10.55,0:29:11.41,Default,,0,0,0,,close the dylib.
Dialogue: 0,0:29:11.41,0:29:13.04,Default,,0,0,0,,It decrements a refcount and if
Dialogue: 0,0:29:13.04,0:29:15.10,Default,,0,0,0,,the refcount hits zero, it
Dialogue: 0,0:29:15.10,0:29:15.67,Default,,0,0,0,,closes it.
Dialogue: 0,0:29:15.67,0:29:17.21,Default,,0,0,0,,And why is that important?
Dialogue: 0,0:29:18.22,0:29:19.83,Default,,0,0,0,,Well, it's not appropriate for
Dialogue: 0,0:29:19.83,0:29:20.59,Default,,0,0,0,,resource management.
Dialogue: 0,0:29:20.59,0:29:22.64,Default,,0,0,0,,If you have a library that
Dialogue: 0,0:29:22.64,0:29:23.87,Default,,0,0,0,,attaches to a piece of hardware,
Dialogue: 0,0:29:24.52,0:29:25.99,Default,,0,0,0,,you shouldn't shut down the
Dialogue: 0,0:29:25.99,0:29:27.28,Default,,0,0,0,,hardware in response to a
Dialogue: 0,0:29:27.28,0:29:30.13,Default,,0,0,0,,dlclose because some other code
Dialogue: 0,0:29:30.13,0:29:31.26,Default,,0,0,0,,in your app may have opened it
Dialogue: 0,0:29:31.26,0:29:32.61,Default,,0,0,0,,behind your back and so now your
Dialogue: 0,0:29:32.61,0:29:33.58,Default,,0,0,0,,hardware's not shutting down.
Dialogue: 0,0:29:33.58,0:29:34.40,Default,,0,0,0,,You should have explicit
Dialogue: 0,0:29:35.10,0:29:35.91,Default,,0,0,0,,resource management.
Dialogue: 0,0:29:36.58,0:29:38.11,Default,,0,0,0,,There are also a number of
Dialogue: 0,0:29:38.11,0:29:39.50,Default,,0,0,0,,features on our platforms that
Dialogue: 0,0:29:39.50,0:29:41.55,Default,,0,0,0,,prevent dylibs from unloading,
Dialogue: 0,0:29:41.55,0:29:42.62,Default,,0,0,0,,and I'd like to go through a few
Dialogue: 0,0:29:42.62,0:29:44.44,Default,,0,0,0,,of those because maybe you do
Dialogue: 0,0:29:44.44,0:29:44.63,Default,,0,0,0,,them.
Dialogue: 0,0:29:45.60,0:29:47.18,Default,,0,0,0,,You can have Objective-C classes
Dialogue: 0,0:29:47.18,0:29:47.75,Default,,0,0,0,,in your dylib.
Dialogue: 0,0:29:47.75,0:29:48.98,Default,,0,0,0,,That will make it not
Dialogue: 0,0:29:48.98,0:29:49.88,Default,,0,0,0,,unloadable.
Dialogue: 0,0:29:51.02,0:29:52.07,Default,,0,0,0,,You could have Swift classes.
Dialogue: 0,0:29:52.07,0:29:53.30,Default,,0,0,0,,That will also make it not
Dialogue: 0,0:29:53.30,0:29:53.83,Default,,0,0,0,,unloadable.
Dialogue: 0,0:29:53.83,0:29:56.35,Default,,0,0,0,,And you can have C under bar
Dialogue: 0,0:29:56.35,0:29:57.82,Default,,0,0,0,,thread or C++ thread local
Dialogue: 0,0:29:57.82,0:29:59.26,Default,,0,0,0,,variables, all of which make it
Dialogue: 0,0:29:59.26,0:30:00.57,Default,,0,0,0,,impossible to unload a dylib.
Dialogue: 0,0:30:01.53,0:30:03.69,Default,,0,0,0,,So on macOS, where there's a
Dialogue: 0,0:30:03.69,0:30:05.65,Default,,0,0,0,,number of existing Unix apps,
Dialogue: 0,0:30:05.65,0:30:07.88,Default,,0,0,0,,obviously we will keep this
Dialogue: 0,0:30:07.88,0:30:09.99,Default,,0,0,0,,working, but because almost
Dialogue: 0,0:30:09.99,0:30:11.59,Default,,0,0,0,,every dylib on all of our other
Dialogue: 0,0:30:11.59,0:30:12.71,Default,,0,0,0,,platforms does one of these
Dialogue: 0,0:30:12.71,0:30:14.32,Default,,0,0,0,,things, effectively it hasn't
Dialogue: 0,0:30:14.67,0:30:16.26,Default,,0,0,0,,really worked on any of them
Dialogue: 0,0:30:16.26,0:30:16.63,Default,,0,0,0,,ever.
Dialogue: 0,0:30:17.41,0:30:19.01,Default,,0,0,0,,So we are considering making it
Dialogue: 0,0:30:19.01,0:30:20.37,Default,,0,0,0,,just a straight up no-op, that
Dialogue: 0,0:30:20.37,0:30:22.47,Default,,0,0,0,,will not do anything on any of
Dialogue: 0,0:30:22.47,0:30:23.26,Default,,0,0,0,,those platforms.
Dialogue: 0,0:30:23.89,0:30:25.93,Default,,0,0,0,,If there's a reason why that's a
Dialogue: 0,0:30:25.93,0:30:27.66,Default,,0,0,0,,problem, please, we want to hear
Dialogue: 0,0:30:27.66,0:30:28.83,Default,,0,0,0,,about it.
Dialogue: 0,0:30:29.82,0:30:31.27,Default,,0,0,0,,Finally, I want to talk about
Dialogue: 0,0:30:31.27,0:30:33.30,Default,,0,0,0,,the dyld all image infos.
Dialogue: 0,0:30:34.17,0:30:35.71,Default,,0,0,0,,So this is an interface for
Dialogue: 0,0:30:35.77,0:30:36.85,Default,,0,0,0,,introspecting dylibs in a
Dialogue: 0,0:30:36.85,0:30:38.18,Default,,0,0,0,,process, and it comes from the
Dialogue: 0,0:30:38.18,0:30:39.30,Default,,0,0,0,,original dyld 1.
Dialogue: 0,0:30:40.63,0:30:42.81,Default,,0,0,0,,But it's just a struct in
Dialogue: 0,0:30:42.81,0:30:44.36,Default,,0,0,0,,memory, it's not an API, and
Dialogue: 0,0:30:44.87,0:30:47.03,Default,,0,0,0,,that was okay when we had five,
Dialogue: 0,0:30:47.16,0:30:48.05,Default,,0,0,0,,ten dylibs.
Dialogue: 0,0:30:48.45,0:30:50.47,Default,,0,0,0,,But as we've gotten to 300, 400,
Dialogue: 0,0:30:50.47,0:30:51.77,Default,,0,0,0,,500 dylibs, the way it's
Dialogue: 0,0:30:51.77,0:30:53.56,Default,,0,0,0,,designed wastes a lot of memory,
Dialogue: 0,0:30:53.56,0:30:54.64,Default,,0,0,0,,and we want that memory back.
Dialogue: 0,0:30:54.92,0:30:55.99,Default,,0,0,0,,We always want our performance
Dialogue: 0,0:30:55.99,0:30:57.10,Default,,0,0,0,,and we always want our memory.
Dialogue: 0,0:30:58.19,0:30:59.43,Default,,0,0,0,,So we're going to take it away
Dialogue: 0,0:30:59.43,0:31:01.72,Default,,0,0,0,,in future releases, but we will
Dialogue: 0,0:31:01.72,0:31:03.78,Default,,0,0,0,,be providing replacement API's
Dialogue: 0,0:31:03.78,0:31:04.11,Default,,0,0,0,,for it.
Dialogue: 0,0:31:04.93,0:31:07.21,Default,,0,0,0,,And so it's very rarely used,
Dialogue: 0,0:31:07.30,0:31:08.78,Default,,0,0,0,,but if you're using it, again, I
Dialogue: 0,0:31:08.78,0:31:10.44,Default,,0,0,0,,want to know why you're using it
Dialogue: 0,0:31:10.44,0:31:11.27,Default,,0,0,0,,and how you're using it and make
Dialogue: 0,0:31:11.27,0:31:13.03,Default,,0,0,0,,sure we design API's that fit
Dialogue: 0,0:31:13.03,0:31:13.93,Default,,0,0,0,,your use case.
Dialogue: 0,0:31:14.25,0:31:15.08,Default,,0,0,0,,There are a number of bits of it
Dialogue: 0,0:31:15.08,0:31:16.31,Default,,0,0,0,,that are vestigial and don't
Dialogue: 0,0:31:16.49,0:31:17.71,Default,,0,0,0,,quite do what you expect or work
Dialogue: 0,0:31:17.71,0:31:20.23,Default,,0,0,0,,anyway today, so if you aren't
Dialogue: 0,0:31:20.23,0:31:21.16,Default,,0,0,0,,using those, they may just go
Dialogue: 0,0:31:21.16,0:31:22.20,Default,,0,0,0,,away and we need to hear about
Dialogue: 0,0:31:22.20,0:31:22.44,Default,,0,0,0,,that.
Dialogue: 0,0:31:23.57,0:31:24.54,Default,,0,0,0,,So please let us know how you
Dialogue: 0,0:31:24.54,0:31:24.86,Default,,0,0,0,,use it.
Dialogue: 0,0:31:25.86,0:31:26.86,Default,,0,0,0,,So finally, let's talk about
Dialogue: 0,0:31:26.86,0:31:27.78,Default,,0,0,0,,best practices.
Dialogue: 0,0:31:28.48,0:31:31.00,Default,,0,0,0,,First, make sure you launch your
Dialogue: 0,0:31:31.00,0:31:32.80,Default,,0,0,0,,app with bind at load in your LD
Dialogue: 0,0:31:32.80,0:31:34.99,Default,,0,0,0,,FLAGS for debug builds only.
Dialogue: 0,0:31:36.36,0:31:39.03,Default,,0,0,0,,Fix any unaligned pointers in
Dialogue: 0,0:31:39.03,0:31:39.91,Default,,0,0,0,,your data segments.
Dialogue: 0,0:31:40.16,0:31:42.91,Default,,0,0,0,,Again, this warning is there.
Dialogue: 0,0:31:42.91,0:31:43.81,Default,,0,0,0,,You should try to be fixing all
Dialogue: 0,0:31:43.81,0:31:44.54,Default,,0,0,0,,of your warnings.
Dialogue: 0,0:31:44.83,0:31:47.28,Default,,0,0,0,,If you see it with the new Swift
Dialogue: 0,0:31:47.28,0:31:48.63,Default,,0,0,0,,keypath feature, you can ignore
Dialogue: 0,0:31:48.63,0:31:51.15,Default,,0,0,0,,that because we'll fix that.
Dialogue: 0,0:31:51.36,0:31:52.36,Default,,0,0,0,,You can make sure you are not
Dialogue: 0,0:31:52.36,0:31:53.66,Default,,0,0,0,,depending on any terminators
Dialogue: 0,0:31:53.66,0:31:55.98,Default,,0,0,0,,running when you call dlclose.
Dialogue: 0,0:31:56.51,0:32:00.38,Default,,0,0,0,,And we want you to let us know
Dialogue: 0,0:32:00.38,0:32:02.70,Default,,0,0,0,,why you're using dlopen, dlsym,
Dialogue: 0,0:32:02.84,0:32:05.00,Default,,0,0,0,,dladdr, and the all image info
Dialogue: 0,0:32:05.00,0:32:06.26,Default,,0,0,0,,structures to make sure that our
Dialogue: 0,0:32:06.26,0:32:09.30,Default,,0,0,0,,replacements are going to suit
Dialogue: 0,0:32:09.30,0:32:09.71,Default,,0,0,0,,your needs.
Dialogue: 0,0:32:09.99,0:32:10.85,Default,,0,0,0,,In the case of the ones that are
Dialogue: 0,0:32:10.85,0:32:12.02,Default,,0,0,0,,part of POSIX, they will stay
Dialogue: 0,0:32:12.02,0:32:13.31,Default,,0,0,0,,around, they will just be lower
Dialogue: 0,0:32:13.31,0:32:13.84,Default,,0,0,0,,performance.
Dialogue: 0,0:32:13.84,0:32:14.90,Default,,0,0,0,,In the case of all image infos,
Dialogue: 0,0:32:14.90,0:32:16.56,Default,,0,0,0,,it is going to go away to save
Dialogue: 0,0:32:16.56,0:32:17.06,Default,,0,0,0,,that memory.
Dialogue: 0,0:32:18.28,0:32:20.06,Default,,0,0,0,,Please file bug reports using
Dialogue: 0,0:32:20.06,0:32:21.89,Default,,0,0,0,,DYLD USAGE in their titles so
Dialogue: 0,0:32:21.89,0:32:22.88,Default,,0,0,0,,that they get to us so that we
Dialogue: 0,0:32:22.88,0:32:24.16,Default,,0,0,0,,can find out all of your usage
Dialogue: 0,0:32:24.16,0:32:25.46,Default,,0,0,0,,cases that we need to support.
Dialogue: 0,0:32:26.28,0:32:28.08,Default,,0,0,0,,And for more information, you
Dialogue: 0,0:32:28.08,0:32:28.96,Default,,0,0,0,,can go to this URL.
Dialogue: 0,0:32:30.10,0:32:31.45,Default,,0,0,0,,Related sessions.
Dialogue: 0,0:32:31.45,0:32:33.67,Default,,0,0,0,,So last year we did Optimizing
Dialogue: 0,0:32:33.67,0:32:35.64,Default,,0,0,0,,App Startup Time, so you may
Dialogue: 0,0:32:35.64,0:32:38.16,Default,,0,0,0,,want to go and watch that for a
Dialogue: 0,0:32:38.20,0:32:39.48,Default,,0,0,0,,refresher on how traditional
Dialogue: 0,0:32:39.48,0:32:40.85,Default,,0,0,0,,dynamic linking works.
Dialogue: 0,0:32:41.08,0:32:42.87,Default,,0,0,0,,It goes into much more detail
Dialogue: 0,0:32:42.87,0:32:43.89,Default,,0,0,0,,than I did here since I was
Dialogue: 0,0:32:43.89,0:32:44.97,Default,,0,0,0,,trying to discuss all the new
Dialogue: 0,0:32:44.97,0:32:45.64,Default,,0,0,0,,stuff we're doing.
Dialogue: 0,0:32:46.37,0:32:47.57,Default,,0,0,0,,So thank you everybody for
Dialogue: 0,0:32:47.57,0:32:47.87,Default,,0,0,0,,coming.
Dialogue: 0,0:32:47.87,0:32:48.98,Default,,0,0,0,,I hope you've had a great WWDC.
Dialogue: 0,0:32:49.52,0:32:55.71,Default,,0,0,0,,[ Applause ]
