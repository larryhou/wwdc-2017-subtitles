[Script Info]
; Script generated by FFmpeg/Lavc57.89.100
ScriptType: v4.00+
PlayResX: 384
PlayResY: 288

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,16,&Hffffff,&Hffffff,&H0,&H0,0,0,0,0,100,100,0,0,1,1,0,2,10,10,10,0

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:22.28,0:00:23.29,Default,,0,0,0,,My name is John Blackwell.
Dialogue: 0,0:00:23.45,0:00:24.68,Default,,0,0,0,,And I'm an engineer on the Core
Dialogue: 0,0:00:24.68,0:00:25.43,Default,,0,0,0,,Motion framework.
Dialogue: 0,0:00:25.96,0:00:27.34,Default,,0,0,0,,Today, we're going to be talking
Dialogue: 0,0:00:27.42,0:00:28.50,Default,,0,0,0,,about creating immersive
Dialogue: 0,0:00:28.50,0:00:29.78,Default,,0,0,0,,applications with the Core
Dialogue: 0,0:00:29.78,0:00:30.50,Default,,0,0,0,,Motion framework.
Dialogue: 0,0:00:30.84,0:00:31.89,Default,,0,0,0,,And we're also going to discuss
Dialogue: 0,0:00:31.97,0:00:33.64,Default,,0,0,0,,a number of best practices along
Dialogue: 0,0:00:33.64,0:00:33.89,Default,,0,0,0,,the way.
Dialogue: 0,0:00:35.37,0:00:37.38,Default,,0,0,0,,So today we're going to be
Dialogue: 0,0:00:37.38,0:00:38.39,Default,,0,0,0,,covering a number of things.
Dialogue: 0,0:00:38.90,0:00:40.75,Default,,0,0,0,,The first is a brief overview of
Dialogue: 0,0:00:40.75,0:00:42.12,Default,,0,0,0,,what Core Motion provides.
Dialogue: 0,0:00:42.54,0:00:43.82,Default,,0,0,0,,Next, we're going to talk about
Dialogue: 0,0:00:43.82,0:00:45.82,Default,,0,0,0,,authorization, a frequent pain
Dialogue: 0,0:00:45.82,0:00:46.53,Default,,0,0,0,,point for many of our
Dialogue: 0,0:00:46.53,0:00:47.10,Default,,0,0,0,,developers.
Dialogue: 0,0:00:47.68,0:00:48.75,Default,,0,0,0,,Then we're going to look at some
Dialogue: 0,0:00:48.75,0:00:50.07,Default,,0,0,0,,new additions to Historical
Dialogue: 0,0:00:50.07,0:00:50.73,Default,,0,0,0,,Accelerometer.
Dialogue: 0,0:00:51.29,0:00:53.07,Default,,0,0,0,,And then we're going to dig into
Dialogue: 0,0:00:53.07,0:00:55.08,Default,,0,0,0,,DeviceMotion, the sensor fusion
Dialogue: 0,0:00:55.20,0:00:56.92,Default,,0,0,0,,that we provide in Core Motion.
Dialogue: 0,0:00:57.35,0:00:58.53,Default,,0,0,0,,And finally, we're going to look
Dialogue: 0,0:00:58.53,0:01:00.56,Default,,0,0,0,,at Badger with Attitude, a game
Dialogue: 0,0:01:00.56,0:01:01.54,Default,,0,0,0,,where we'll take some of the
Dialogue: 0,0:01:01.54,0:01:03.12,Default,,0,0,0,,concepts that we've talked about
Dialogue: 0,0:01:03.12,0:01:04.80,Default,,0,0,0,,in DeviceMotion and put them
Dialogue: 0,0:01:04.89,0:01:05.56,Default,,0,0,0,,into practice.
Dialogue: 0,0:01:06.69,0:01:08.38,Default,,0,0,0,,And with that, let's take a
Dialogue: 0,0:01:08.38,0:01:09.84,Default,,0,0,0,,closer look at the Core Motion
Dialogue: 0,0:01:09.84,0:01:10.36,Default,,0,0,0,,framework.
Dialogue: 0,0:01:13.66,0:01:15.27,Default,,0,0,0,,The Core Motion framework
Dialogue: 0,0:01:15.48,0:01:16.69,Default,,0,0,0,,provides access to the
Dialogue: 0,0:01:16.69,0:01:18.19,Default,,0,0,0,,accelerometer, the gyroscope,
Dialogue: 0,0:01:18.44,0:01:19.56,Default,,0,0,0,,the magnetometer, and the
Dialogue: 0,0:01:19.56,0:01:20.06,Default,,0,0,0,,altimeter.
Dialogue: 0,0:01:20.37,0:01:21.63,Default,,0,0,0,,And through the framework, you
Dialogue: 0,0:01:21.63,0:01:22.93,Default,,0,0,0,,can access raw forms of the
Dialogue: 0,0:01:22.93,0:01:24.54,Default,,0,0,0,,sensor data as well as processed
Dialogue: 0,0:01:24.54,0:01:26.23,Default,,0,0,0,,forms and use these in your
Dialogue: 0,0:01:26.23,0:01:26.89,Default,,0,0,0,,applications.
Dialogue: 0,0:01:28.21,0:01:29.55,Default,,0,0,0,,Now, there are a number of
Dialogue: 0,0:01:29.55,0:01:31.00,Default,,0,0,0,,interfaces available through
Dialogue: 0,0:01:31.00,0:01:31.63,Default,,0,0,0,,Core Motion.
Dialogue: 0,0:01:32.17,0:01:35.45,Default,,0,0,0,,The first is CMMotionManager,
Dialogue: 0,0:01:35.73,0:01:37.41,Default,,0,0,0,,which provides access to the raw
Dialogue: 0,0:01:37.49,0:01:38.81,Default,,0,0,0,,sensor data as well as the
Dialogue: 0,0:01:38.81,0:01:40.12,Default,,0,0,0,,sensor fusion in the form of
Dialogue: 0,0:01:40.12,0:01:40.92,Default,,0,0,0,,DeviceMotion.
Dialogue: 0,0:01:42.23,0:01:44.16,Default,,0,0,0,,CMAltimeter provides access to
Dialogue: 0,0:01:44.16,0:01:45.61,Default,,0,0,0,,relative altitude updates for
Dialogue: 0,0:01:45.61,0:01:45.98,Default,,0,0,0,,the device.
Dialogue: 0,0:01:47.46,0:01:49.22,Default,,0,0,0,,CMPedometer provides access to
Dialogue: 0,0:01:49.22,0:01:50.84,Default,,0,0,0,,step counts as separate related
Dialogue: 0,0:01:50.84,0:01:52.71,Default,,0,0,0,,information as well as work out
Dialogue: 0,0:01:52.71,0:01:54.00,Default,,0,0,0,,pause and resume events.
Dialogue: 0,0:01:55.40,0:01:57.00,Default,,0,0,0,,MotionActivityManager provides
Dialogue: 0,0:01:57.00,0:01:58.64,Default,,0,0,0,,access to the activity context
Dialogue: 0,0:01:58.64,0:02:00.01,Default,,0,0,0,,for the device, for example,
Dialogue: 0,0:02:00.01,0:02:02.11,Default,,0,0,0,,walking, running, or automotive,
Dialogue: 0,0:02:02.30,0:02:02.71,Default,,0,0,0,,etcetera.
Dialogue: 0,0:02:03.49,0:02:06.74,Default,,0,0,0,,And CMSensorRecorder provides
Dialogue: 0,0:02:06.74,0:02:07.97,Default,,0,0,0,,access to historical
Dialogue: 0,0:02:07.97,0:02:08.83,Default,,0,0,0,,accelerometer data.
Dialogue: 0,0:02:11.62,0:02:13.58,Default,,0,0,0,,So that's a brief overview of
Dialogue: 0,0:02:13.58,0:02:14.62,Default,,0,0,0,,what the Core Motion framework
Dialogue: 0,0:02:14.62,0:02:15.16,Default,,0,0,0,,provides.
Dialogue: 0,0:02:15.70,0:02:17.17,Default,,0,0,0,,Next, let's take a closer look
Dialogue: 0,0:02:17.17,0:02:18.20,Default,,0,0,0,,at authorization.
Dialogue: 0,0:02:19.43,0:02:21.46,Default,,0,0,0,,So of the APIs that I just
Dialogue: 0,0:02:21.46,0:02:23.91,Default,,0,0,0,,mentioned, these following four
Dialogue: 0,0:02:23.91,0:02:25.64,Default,,0,0,0,,are sensitive due to the nature
Dialogue: 0,0:02:25.64,0:02:26.85,Default,,0,0,0,,of the private information that
Dialogue: 0,0:02:26.85,0:02:28.11,Default,,0,0,0,,they expose about the user.
Dialogue: 0,0:02:29.38,0:02:31.94,Default,,0,0,0,,So to handle this, we have a
Dialogue: 0,0:02:31.94,0:02:33.43,Default,,0,0,0,,prompt that appears the first
Dialogue: 0,0:02:33.43,0:02:34.81,Default,,0,0,0,,time you invoke one of the
Dialogue: 0,0:02:34.81,0:02:35.75,Default,,0,0,0,,sensitive APIs.
Dialogue: 0,0:02:37.06,0:02:39.06,Default,,0,0,0,,Keep in mind that the first time
Dialogue: 0,0:02:39.06,0:02:40.97,Default,,0,0,0,,you invoke the sensitive APIs, a
Dialogue: 0,0:02:40.97,0:02:41.95,Default,,0,0,0,,prompt will appear for your
Dialogue: 0,0:02:41.95,0:02:42.34,Default,,0,0,0,,users.
Dialogue: 0,0:02:42.63,0:02:44.06,Default,,0,0,0,,But after that first time, your
Dialogue: 0,0:02:44.06,0:02:45.11,Default,,0,0,0,,users will need to go into
Dialogue: 0,0:02:45.11,0:02:46.01,Default,,0,0,0,,settings to change the
Dialogue: 0,0:02:46.01,0:02:47.22,Default,,0,0,0,,authorization state for your
Dialogue: 0,0:02:47.22,0:02:47.99,Default,,0,0,0,,applications.
Dialogue: 0,0:02:49.31,0:02:50.92,Default,,0,0,0,,Now, let's take a look at what
Dialogue: 0,0:02:50.92,0:02:52.00,Default,,0,0,0,,it looks like the first time you
Dialogue: 0,0:02:52.00,0:02:53.04,Default,,0,0,0,,call one of these APIs.
Dialogue: 0,0:02:53.82,0:02:55.41,Default,,0,0,0,,At this point, your users will
Dialogue: 0,0:02:55.41,0:02:56.35,Default,,0,0,0,,need to decide if they want to
Dialogue: 0,0:02:56.35,0:02:57.80,Default,,0,0,0,,grant access to the motion and
Dialogue: 0,0:02:57.80,0:02:59.58,Default,,0,0,0,,fitness data or deny access.
Dialogue: 0,0:03:00.02,0:03:01.45,Default,,0,0,0,,And, as a developer, you're
Dialogue: 0,0:03:01.45,0:03:02.42,Default,,0,0,0,,going to want to handle the case
Dialogue: 0,0:03:02.56,0:03:05.17,Default,,0,0,0,,where they deny access.
Dialogue: 0,0:03:05.29,0:03:07.45,Default,,0,0,0,,Now, in the past we've asked you
Dialogue: 0,0:03:07.45,0:03:09.32,Default,,0,0,0,,to do something like this where
Dialogue: 0,0:03:09.57,0:03:11.01,Default,,0,0,0,,you call any of our APIs that
Dialogue: 0,0:03:11.31,0:03:13.21,Default,,0,0,0,,are sensitive, in this case
Dialogue: 0,0:03:13.37,0:03:13.83,Default,,0,0,0,,we're calling
Dialogue: 0,0:03:13.83,0:03:15.76,Default,,0,0,0,,QueryPedometerData, and then you
Dialogue: 0,0:03:15.76,0:03:17.35,Default,,0,0,0,,ignore the result that you get
Dialogue: 0,0:03:17.35,0:03:19.34,Default,,0,0,0,,back from the API and only look
Dialogue: 0,0:03:19.34,0:03:20.15,Default,,0,0,0,,at the error code.
Dialogue: 0,0:03:21.03,0:03:22.54,Default,,0,0,0,,And if the error code is not
Dialogue: 0,0:03:22.54,0:03:24.38,Default,,0,0,0,,authorized, at this point you
Dialogue: 0,0:03:24.38,0:03:25.54,Default,,0,0,0,,know your application has been
Dialogue: 0,0:03:25.54,0:03:26.89,Default,,0,0,0,,denied access to that motion and
Dialogue: 0,0:03:26.89,0:03:27.48,Default,,0,0,0,,fitness data.
Dialogue: 0,0:03:28.65,0:03:30.13,Default,,0,0,0,,Now, we realize that this is
Dialogue: 0,0:03:30.13,0:03:30.85,Default,,0,0,0,,less than ideal.
Dialogue: 0,0:03:32.17,0:03:33.20,Default,,0,0,0,,You need to jump through hoops
Dialogue: 0,0:03:33.27,0:03:34.82,Default,,0,0,0,,to get access to your
Dialogue: 0,0:03:34.82,0:03:35.70,Default,,0,0,0,,authorization state.
Dialogue: 0,0:03:36.04,0:03:37.43,Default,,0,0,0,,And once you get it, you can't
Dialogue: 0,0:03:37.43,0:03:39.09,Default,,0,0,0,,tell exactly why your app has
Dialogue: 0,0:03:39.15,0:03:42.08,Default,,0,0,0,,been denied access and that's
Dialogue: 0,0:03:42.08,0:03:43.84,Default,,0,0,0,,why, this year, we're providing
Dialogue: 0,0:03:43.84,0:03:45.33,Default,,0,0,0,,an Authorization Status API.
Dialogue: 0,0:03:46.23,0:03:47.61,Default,,0,0,0,,This API is available in the
Dialogue: 0,0:03:47.69,0:03:48.82,Default,,0,0,0,,same four classes that I
Dialogue: 0,0:03:48.82,0:03:50.09,Default,,0,0,0,,mentioned before, and it's
Dialogue: 0,0:03:50.09,0:03:52.08,Default,,0,0,0,,available on iOS and watchOS.
Dialogue: 0,0:03:52.89,0:03:54.37,Default,,0,0,0,,Let's take a closer look at the
Dialogue: 0,0:03:54.37,0:03:56.23,Default,,0,0,0,,CMAuthorizationStatus value that
Dialogue: 0,0:03:56.23,0:03:57.67,Default,,0,0,0,,you'll get back from this API.
Dialogue: 0,0:03:59.39,0:04:01.60,Default,,0,0,0,,The first state not determined
Dialogue: 0,0:04:01.87,0:04:03.57,Default,,0,0,0,,represents the state before the
Dialogue: 0,0:04:03.57,0:04:04.87,Default,,0,0,0,,user has been asked about
Dialogue: 0,0:04:04.87,0:04:05.86,Default,,0,0,0,,authorization in your
Dialogue: 0,0:04:05.86,0:04:06.47,Default,,0,0,0,,application.
Dialogue: 0,0:04:07.03,0:04:08.81,Default,,0,0,0,,Restricted represents the state
Dialogue: 0,0:04:09.13,0:04:11.39,Default,,0,0,0,,where the user is unable to
Dialogue: 0,0:04:11.39,0:04:12.76,Default,,0,0,0,,change the authorization state
Dialogue: 0,0:04:12.92,0:04:13.83,Default,,0,0,0,,for your application
Dialogue: 0,0:04:13.83,0:04:14.52,Default,,0,0,0,,specifically.
Dialogue: 0,0:04:14.87,0:04:16.62,Default,,0,0,0,,And this can happen when motion
Dialogue: 0,0:04:16.62,0:04:18.07,Default,,0,0,0,,and fitness is disabled in
Dialogue: 0,0:04:18.07,0:04:18.55,Default,,0,0,0,,privacy.
Dialogue: 0,0:04:19.41,0:04:20.93,Default,,0,0,0,,The next state, denied, means
Dialogue: 0,0:04:20.93,0:04:21.60,Default,,0,0,0,,what it sounds like.
Dialogue: 0,0:04:21.78,0:04:22.53,Default,,0,0,0,,You're application has been
Dialogue: 0,0:04:22.53,0:04:24.26,Default,,0,0,0,,specifically denied access by
Dialogue: 0,0:04:24.26,0:04:24.75,Default,,0,0,0,,the users.
Dialogue: 0,0:04:25.16,0:04:26.91,Default,,0,0,0,,And authorized means your app is
Dialogue: 0,0:04:26.91,0:04:28.35,Default,,0,0,0,,ready to access the users motion
Dialogue: 0,0:04:28.35,0:04:29.01,Default,,0,0,0,,and fitness data.
Dialogue: 0,0:04:30.59,0:04:32.75,Default,,0,0,0,,Now, let's come back to the
Dialogue: 0,0:04:32.75,0:04:33.84,Default,,0,0,0,,authorization check that we were
Dialogue: 0,0:04:33.84,0:04:34.61,Default,,0,0,0,,looking at before.
Dialogue: 0,0:04:34.86,0:04:37.18,Default,,0,0,0,,One of the first best practices
Dialogue: 0,0:04:37.18,0:04:38.80,Default,,0,0,0,,that I want to talk about is
Dialogue: 0,0:04:39.13,0:04:40.27,Default,,0,0,0,,making sure that you check for
Dialogue: 0,0:04:40.27,0:04:42.01,Default,,0,0,0,,the availability of a given API
Dialogue: 0,0:04:42.01,0:04:44.01,Default,,0,0,0,,first before you ask for the
Dialogue: 0,0:04:44.01,0:04:44.95,Default,,0,0,0,,authorization status.
Dialogue: 0,0:04:45.66,0:04:46.93,Default,,0,0,0,,In this case, we're asking for
Dialogue: 0,0:04:46.93,0:04:47.90,Default,,0,0,0,,isStepCountingAvailable.
Dialogue: 0,0:04:48.82,0:04:50.14,Default,,0,0,0,,And the next thing that you're
Dialogue: 0,0:04:50.14,0:04:51.48,Default,,0,0,0,,going to want to do is query for
Dialogue: 0,0:04:51.48,0:04:52.50,Default,,0,0,0,,the authorization status.
Dialogue: 0,0:04:53.11,0:04:54.45,Default,,0,0,0,,And at this point, it's up to
Dialogue: 0,0:04:54.45,0:04:55.86,Default,,0,0,0,,you, as a developer, to decide
Dialogue: 0,0:04:56.08,0:04:57.57,Default,,0,0,0,,how you want to handle the
Dialogue: 0,0:04:57.57,0:04:59.20,Default,,0,0,0,,authorization that you get back
Dialogue: 0,0:04:59.40,0:05:00.18,Default,,0,0,0,,from the framework.
Dialogue: 0,0:05:00.60,0:05:01.97,Default,,0,0,0,,You now have a simple mechanism
Dialogue: 0,0:05:01.97,0:05:04.26,Default,,0,0,0,,for doing this on both iOS and
Dialogue: 0,0:05:04.37,0:05:04.88,Default,,0,0,0,,watchOS.
Dialogue: 0,0:05:06.34,0:05:08.90,Default,,0,0,0,,I encourage you to consider how
Dialogue: 0,0:05:08.90,0:05:09.96,Default,,0,0,0,,you can use the authorization
Dialogue: 0,0:05:10.03,0:05:12.55,Default,,0,0,0,,app, authorization status API in
Dialogue: 0,0:05:12.55,0:05:13.76,Default,,0,0,0,,your applications, and you
Dialogue: 0,0:05:13.76,0:05:14.72,Default,,0,0,0,,should definitely use it.
Dialogue: 0,0:05:15.52,0:05:16.84,Default,,0,0,0,,Next, we're going to talk about
Dialogue: 0,0:05:16.84,0:05:18.07,Default,,0,0,0,,Historical Accelerometer.
Dialogue: 0,0:05:19.06,0:05:20.76,Default,,0,0,0,,Historical Accelerometer, also
Dialogue: 0,0:05:20.76,0:05:22.20,Default,,0,0,0,,known as CMSensorRecorder,
Dialogue: 0,0:05:22.54,0:05:24.34,Default,,0,0,0,,provides 50Hz accelerometer
Dialogue: 0,0:05:24.34,0:05:24.64,Default,,0,0,0,,data.
Dialogue: 0,0:05:24.97,0:05:26.10,Default,,0,0,0,,And we can record this for your
Dialogue: 0,0:05:26.10,0:05:27.65,Default,,0,0,0,,applications while your apps are
Dialogue: 0,0:05:27.65,0:05:28.36,Default,,0,0,0,,in the background.
Dialogue: 0,0:05:29.56,0:05:31.43,Default,,0,0,0,,You can request up to 36 hours
Dialogue: 0,0:05:31.43,0:05:32.42,Default,,0,0,0,,of accelerometer data.
Dialogue: 0,0:05:32.48,0:05:34.50,Default,,0,0,0,,And this data will be stored on
Dialogue: 0,0:05:34.50,0:05:35.99,Default,,0,0,0,,your behalf for up to three
Dialogue: 0,0:05:35.99,0:05:36.39,Default,,0,0,0,,days.
Dialogue: 0,0:05:37.79,0:05:39.70,Default,,0,0,0,,Now, Historical Accelerometer is
Dialogue: 0,0:05:39.70,0:05:41.18,Default,,0,0,0,,currently available on Apple
Dialogue: 0,0:05:41.18,0:05:41.48,Default,,0,0,0,,Watch.
Dialogue: 0,0:05:42.03,0:05:43.48,Default,,0,0,0,,And today, I'm excited to
Dialogue: 0,0:05:43.48,0:05:45.13,Default,,0,0,0,,announce that it's now available
Dialogue: 0,0:05:45.13,0:05:46.83,Default,,0,0,0,,on iPone 7 and 7 Plus.
Dialogue: 0,0:05:47.89,0:05:49.41,Default,,0,0,0,,This opens up a whole new set of
Dialogue: 0,0:05:49.41,0:05:51.00,Default,,0,0,0,,use cases for your applications.
Dialogue: 0,0:05:51.22,0:05:52.21,Default,,0,0,0,,And to get you thinking about
Dialogue: 0,0:05:52.21,0:05:53.63,Default,,0,0,0,,how you can use Historical
Dialogue: 0,0:05:53.63,0:05:55.38,Default,,0,0,0,,Accelerometer on iPhone, let
Dialogue: 0,0:05:55.38,0:05:56.32,Default,,0,0,0,,walk through one sample
Dialogue: 0,0:05:56.32,0:05:58.65,Default,,0,0,0,,application now.
Dialogue: 0,0:05:59.06,0:06:00.50,Default,,0,0,0,,So let's say you're a big
Dialogue: 0,0:06:00.50,0:06:01.76,Default,,0,0,0,,automotive enthusiast.
Dialogue: 0,0:06:01.92,0:06:03.00,Default,,0,0,0,,And you want to build an
Dialogue: 0,0:06:03.00,0:06:04.40,Default,,0,0,0,,application to enable you to
Dialogue: 0,0:06:04.40,0:06:05.74,Default,,0,0,0,,track your car's performance
Dialogue: 0,0:06:05.84,0:06:06.93,Default,,0,0,0,,over a long track day.
Dialogue: 0,0:06:07.74,0:06:09.09,Default,,0,0,0,,How would we go about building
Dialogue: 0,0:06:09.09,0:06:09.31,Default,,0,0,0,,this?
Dialogue: 0,0:06:09.75,0:06:10.99,Default,,0,0,0,,Well, the first thing that we
Dialogue: 0,0:06:10.99,0:06:12.26,Default,,0,0,0,,want to figure out is when the
Dialogue: 0,0:06:12.26,0:06:13.16,Default,,0,0,0,,user is driving.
Dialogue: 0,0:06:13.68,0:06:15.24,Default,,0,0,0,,And for that, we can use Motion
Dialogue: 0,0:06:15.24,0:06:15.73,Default,,0,0,0,,Activity.
Dialogue: 0,0:06:16.27,0:06:17.48,Default,,0,0,0,,Motion Activity provides an
Dialogue: 0,0:06:17.48,0:06:18.30,Default,,0,0,0,,automotive state.
Dialogue: 0,0:06:18.62,0:06:20.06,Default,,0,0,0,,And we can use this to determine
Dialogue: 0,0:06:20.06,0:06:21.19,Default,,0,0,0,,the periods in which the user is
Dialogue: 0,0:06:21.19,0:06:21.58,Default,,0,0,0,,driving.
Dialogue: 0,0:06:23.00,0:06:24.32,Default,,0,0,0,,Now, I want to take a brief
Dialogue: 0,0:06:24.32,0:06:25.64,Default,,0,0,0,,minute to talk about the
Dialogue: 0,0:06:25.64,0:06:26.71,Default,,0,0,0,,automotive detection.
Dialogue: 0,0:06:27.34,0:06:29.57,Default,,0,0,0,,In iOS 11, the automotive
Dialogue: 0,0:06:29.57,0:06:31.04,Default,,0,0,0,,detection has received special
Dialogue: 0,0:06:31.04,0:06:32.16,Default,,0,0,0,,attention to ensure
Dialogue: 0,0:06:32.16,0:06:33.63,Default,,0,0,0,,best-in-class performance.
Dialogue: 0,0:06:34.17,0:06:35.96,Default,,0,0,0,,This automotive state in Motion
Dialogue: 0,0:06:35.96,0:06:37.75,Default,,0,0,0,,Activity is the same state
Dialogue: 0,0:06:37.75,0:06:39.02,Default,,0,0,0,,that's being used to power Do
Dialogue: 0,0:06:39.02,0:06:40.57,Default,,0,0,0,,Not Disturb While Driving and is
Dialogue: 0,0:06:40.57,0:06:42.24,Default,,0,0,0,,also available for you to use in
Dialogue: 0,0:06:42.24,0:06:44.18,Default,,0,0,0,,your applications if, say, you
Dialogue: 0,0:06:44.18,0:06:45.52,Default,,0,0,0,,wanted to personalize your
Dialogue: 0,0:06:45.52,0:06:46.86,Default,,0,0,0,,applications UI while the user
Dialogue: 0,0:06:46.86,0:06:47.41,Default,,0,0,0,,is driving.
Dialogue: 0,0:06:48.43,0:06:49.77,Default,,0,0,0,,Now, coming back to our
Dialogue: 0,0:06:49.77,0:06:51.16,Default,,0,0,0,,automotive performance tracking
Dialogue: 0,0:06:51.16,0:06:52.67,Default,,0,0,0,,application, the next thing we
Dialogue: 0,0:06:52.67,0:06:54.53,Default,,0,0,0,,want to do is we want to gather
Dialogue: 0,0:06:54.77,0:06:55.78,Default,,0,0,0,,the accelerometer data.
Dialogue: 0,0:06:56.26,0:06:58.16,Default,,0,0,0,,And for that we can use Sensor
Dialogue: 0,0:06:58.16,0:06:58.55,Default,,0,0,0,,Recorder.
Dialogue: 0,0:06:58.85,0:07:00.57,Default,,0,0,0,,We can gather the accelerometer
Dialogue: 0,0:07:00.57,0:07:02.06,Default,,0,0,0,,data for the periods in which
Dialogue: 0,0:07:02.11,0:07:03.34,Default,,0,0,0,,the user is driving and
Dialogue: 0,0:07:03.34,0:07:05.28,Default,,0,0,0,,translate that into metrics for
Dialogue: 0,0:07:05.28,0:07:07.07,Default,,0,0,0,,the user such as how many Gs
Dialogue: 0,0:07:07.07,0:07:08.38,Default,,0,0,0,,they were pulling through a turn
Dialogue: 0,0:07:08.56,0:07:10.38,Default,,0,0,0,,or maximum lateral Gs or
Dialogue: 0,0:07:10.38,0:07:11.37,Default,,0,0,0,,longitudinal Gs.
Dialogue: 0,0:07:12.01,0:07:14.24,Default,,0,0,0,,Now, there are many different
Dialogue: 0,0:07:14.24,0:07:16.04,Default,,0,0,0,,ways you could consider building
Dialogue: 0,0:07:16.26,0:07:17.96,Default,,0,0,0,,this kind of application, but by
Dialogue: 0,0:07:18.07,0:07:19.82,Default,,0,0,0,,using the Motion APIs you can
Dialogue: 0,0:07:19.82,0:07:20.79,Default,,0,0,0,,provide your users with a
Dialogue: 0,0:07:20.79,0:07:22.80,Default,,0,0,0,,low-power, all-day experience.
Dialogue: 0,0:07:23.52,0:07:26.21,Default,,0,0,0,,Now, there are a number of best
Dialogue: 0,0:07:26.21,0:07:28.04,Default,,0,0,0,,practices to keep in mind with
Dialogue: 0,0:07:28.04,0:07:29.20,Default,,0,0,0,,Historical Accelerometer.
Dialogue: 0,0:07:29.77,0:07:31.22,Default,,0,0,0,,The first is that you want to
Dialogue: 0,0:07:31.22,0:07:32.93,Default,,0,0,0,,choose the minimum duration that
Dialogue: 0,0:07:32.93,0:07:34.10,Default,,0,0,0,,makes sense for your
Dialogue: 0,0:07:34.10,0:07:34.84,Default,,0,0,0,,applications.
Dialogue: 0,0:07:35.54,0:07:36.61,Default,,0,0,0,,So for our automotive
Dialogue: 0,0:07:36.61,0:07:37.29,Default,,0,0,0,,performance tracking
Dialogue: 0,0:07:37.29,0:07:39.36,Default,,0,0,0,,application, we may not need the
Dialogue: 0,0:07:39.36,0:07:42.43,Default,,0,0,0,,full 36 hours of data, something
Dialogue: 0,0:07:42.43,0:07:43.95,Default,,0,0,0,,more like 8 to 12 hours would
Dialogue: 0,0:07:43.95,0:07:44.71,Default,,0,0,0,,make more sense.
Dialogue: 0,0:07:45.90,0:07:47.33,Default,,0,0,0,,And the next best practice to
Dialogue: 0,0:07:47.33,0:07:48.52,Default,,0,0,0,,keep in mind is to consider
Dialogue: 0,0:07:48.52,0:07:50.51,Default,,0,0,0,,decimating or dropping samples
Dialogue: 0,0:07:50.51,0:07:52.74,Default,,0,0,0,,if you don't need the full 50Hz
Dialogue: 0,0:07:52.74,0:07:53.63,Default,,0,0,0,,accelerometer data.
Dialogue: 0,0:07:54.33,0:07:56.18,Default,,0,0,0,,These two suggestions, these two
Dialogue: 0,0:07:56.18,0:07:58.21,Default,,0,0,0,,best practices will reduce the
Dialogue: 0,0:07:58.21,0:07:59.32,Default,,0,0,0,,amount of processing that your
Dialogue: 0,0:07:59.32,0:08:00.91,Default,,0,0,0,,application is doing and, in
Dialogue: 0,0:08:00.91,0:08:02.26,Default,,0,0,0,,turn, save the user's battery
Dialogue: 0,0:08:02.26,0:08:02.67,Default,,0,0,0,,life.
Dialogue: 0,0:08:03.66,0:08:05.84,Default,,0,0,0,,Now, I encourage you to consider
Dialogue: 0,0:08:06.09,0:08:07.74,Default,,0,0,0,,how you can use Historical
Dialogue: 0,0:08:07.74,0:08:09.55,Default,,0,0,0,,Accelerometer on iPhone.
Dialogue: 0,0:08:10.05,0:08:13.64,Default,,0,0,0,,Next, let's talk about
Dialogue: 0,0:08:13.64,0:08:14.57,Default,,0,0,0,,DeviceMotion.
Dialogue: 0,0:08:15.13,0:08:16.69,Default,,0,0,0,,DeviceMotion is the name for the
Dialogue: 0,0:08:16.77,0:08:18.54,Default,,0,0,0,,sensory fusion algorithm that we
Dialogue: 0,0:08:18.54,0:08:19.83,Default,,0,0,0,,provide in the Core Motion
Dialogue: 0,0:08:19.83,0:08:20.31,Default,,0,0,0,,framework.
Dialogue: 0,0:08:21.15,0:08:23.11,Default,,0,0,0,,Now, there are a number of
Dialogue: 0,0:08:23.11,0:08:23.85,Default,,0,0,0,,things that go into
Dialogue: 0,0:08:23.85,0:08:24.69,Default,,0,0,0,,DeviceMotion.
Dialogue: 0,0:08:25.97,0:08:27.40,Default,,0,0,0,,The first sensor that we use in
Dialogue: 0,0:08:27.40,0:08:28.18,Default,,0,0,0,,DeviceMotion is the
Dialogue: 0,0:08:28.18,0:08:28.92,Default,,0,0,0,,accelerometer.
Dialogue: 0,0:08:29.22,0:08:30.69,Default,,0,0,0,,And the accelerometer enables us
Dialogue: 0,0:08:30.69,0:08:31.78,Default,,0,0,0,,to measure the accelerations
Dialogue: 0,0:08:31.78,0:08:33.34,Default,,0,0,0,,imparted by the user as well as
Dialogue: 0,0:08:33.34,0:08:34.54,Default,,0,0,0,,the acceleration imparted by
Dialogue: 0,0:08:34.54,0:08:35.03,Default,,0,0,0,,gravity.
Dialogue: 0,0:08:36.18,0:08:37.47,Default,,0,0,0,,The gyroscope enables us to
Dialogue: 0,0:08:37.47,0:08:38.89,Default,,0,0,0,,precisely measure the rotation
Dialogue: 0,0:08:38.89,0:08:39.72,Default,,0,0,0,,rate of the device.
Dialogue: 0,0:08:40.24,0:08:41.95,Default,,0,0,0,,And the magnetometer allows us
Dialogue: 0,0:08:41.95,0:08:43.57,Default,,0,0,0,,to measure local fields around
Dialogue: 0,0:08:43.57,0:08:44.88,Default,,0,0,0,,the device as well as the
Dialogue: 0,0:08:44.88,0:08:45.91,Default,,0,0,0,,Earth's magnetic field.
Dialogue: 0,0:08:47.23,0:08:48.89,Default,,0,0,0,,Now, when dealing with the raw
Dialogue: 0,0:08:48.89,0:08:49.87,Default,,0,0,0,,sensors, there's a number of
Dialogue: 0,0:08:49.87,0:08:51.10,Default,,0,0,0,,challenges to keep in mind.
Dialogue: 0,0:08:51.96,0:08:53.18,Default,,0,0,0,,With the accelerometer, it can
Dialogue: 0,0:08:53.18,0:08:54.92,Default,,0,0,0,,be difficult to distinguish from
Dialogue: 0,0:08:54.92,0:08:56.00,Default,,0,0,0,,the accelerations imparted by
Dialogue: 0,0:08:56.00,0:08:57.38,Default,,0,0,0,,the user and from those
Dialogue: 0,0:08:57.38,0:08:58.87,Default,,0,0,0,,accelerated -- from those
Dialogue: 0,0:08:58.87,0:09:00.17,Default,,0,0,0,,imparted by the force of
Dialogue: 0,0:09:01.84,0:09:02.28,Default,,0,0,0,,gravity.
Dialogue: 0,0:09:02.38,0:09:03.57,Default,,0,0,0,,With the gyroscope, we can have
Dialogue: 0,0:09:03.57,0:09:04.71,Default,,0,0,0,,bias in the measurements over
Dialogue: 0,0:09:04.71,0:09:05.04,Default,,0,0,0,,time.
Dialogue: 0,0:09:06.00,0:09:07.08,Default,,0,0,0,,And with the magnetometer, it
Dialogue: 0,0:09:07.08,0:09:08.27,Default,,0,0,0,,can be difficult to distinguish
Dialogue: 0,0:09:08.27,0:09:10.01,Default,,0,0,0,,between the local fields and the
Dialogue: 0,0:09:10.01,0:09:10.94,Default,,0,0,0,,Earth's magnet field.
Dialogue: 0,0:09:11.33,0:09:13.35,Default,,0,0,0,,And this is where DeviceMotion
Dialogue: 0,0:09:13.35,0:09:13.88,Default,,0,0,0,,comes in.
Dialogue: 0,0:09:14.57,0:09:16.31,Default,,0,0,0,,DeviceMotion provides 3D
Dialogue: 0,0:09:16.31,0:09:17.72,Default,,0,0,0,,attitude tracking while the
Dialogue: 0,0:09:17.72,0:09:19.24,Default,,0,0,0,,device is undergoing free space
Dialogue: 0,0:09:19.34,0:09:19.85,Default,,0,0,0,,motion.
Dialogue: 0,0:09:20.64,0:09:22.16,Default,,0,0,0,,And it does this by fusing
Dialogue: 0,0:09:22.16,0:09:23.89,Default,,0,0,0,,together all of the sensors to
Dialogue: 0,0:09:23.89,0:09:25.55,Default,,0,0,0,,give the advantages of each
Dialogue: 0,0:09:25.68,0:09:26.48,Default,,0,0,0,,while minimizing the
Dialogue: 0,0:09:26.48,0:09:27.29,Default,,0,0,0,,disadvantages.
Dialogue: 0,0:09:28.25,0:09:30.03,Default,,0,0,0,,And as a developer, what this
Dialogue: 0,0:09:30.03,0:09:31.55,Default,,0,0,0,,really means is that it enables
Dialogue: 0,0:09:31.55,0:09:33.95,Default,,0,0,0,,you to focus on how you want to
Dialogue: 0,0:09:33.95,0:09:35.22,Default,,0,0,0,,use the motion data rather than
Dialogue: 0,0:09:35.22,0:09:36.71,Default,,0,0,0,,the mechanics of trying to get
Dialogue: 0,0:09:36.71,0:09:38.04,Default,,0,0,0,,the best from the sensors.
Dialogue: 0,0:09:39.78,0:09:41.02,Default,,0,0,0,,Now, we've talked about
Dialogue: 0,0:09:41.02,0:09:42.50,Default,,0,0,0,,DeviceMotion in a number of
Dialogue: 0,0:09:42.50,0:09:43.38,Default,,0,0,0,,previous sessions.
Dialogue: 0,0:09:43.63,0:09:44.80,Default,,0,0,0,,I encourage you to check them
Dialogue: 0,0:09:44.80,0:09:45.12,Default,,0,0,0,,out.
Dialogue: 0,0:09:45.44,0:09:46.61,Default,,0,0,0,,We go into details about the
Dialogue: 0,0:09:46.64,0:09:48.12,Default,,0,0,0,,sensors and the DeviceMotion
Dialogue: 0,0:09:48.12,0:09:48.76,Default,,0,0,0,,algorithms.
Dialogue: 0,0:09:49.22,0:09:51.04,Default,,0,0,0,,But today, we're going to think
Dialogue: 0,0:09:51.04,0:09:52.89,Default,,0,0,0,,about how we can use certain
Dialogue: 0,0:09:52.89,0:09:54.43,Default,,0,0,0,,aspects of DeviceMotion to
Dialogue: 0,0:09:54.43,0:09:55.70,Default,,0,0,0,,create immersive applications
Dialogue: 0,0:09:55.70,0:09:56.39,Default,,0,0,0,,for your users.
Dialogue: 0,0:09:56.39,0:10:00.67,Default,,0,0,0,,So as a developer, when you're
Dialogue: 0,0:10:00.67,0:10:01.62,Default,,0,0,0,,first getting started with
Dialogue: 0,0:10:01.62,0:10:03.14,Default,,0,0,0,,DeviceMotion, the first thing
Dialogue: 0,0:10:03.14,0:10:04.26,Default,,0,0,0,,that you need to consider are
Dialogue: 0,0:10:04.26,0:10:04.98,Default,,0,0,0,,the reference frames.
Dialogue: 0,0:10:05.14,0:10:07.08,Default,,0,0,0,,The reference frames determine
Dialogue: 0,0:10:07.40,0:10:08.91,Default,,0,0,0,,which sensors are used in the
Dialogue: 0,0:10:08.91,0:10:11.01,Default,,0,0,0,,fusion and how attitude is
Dialogue: 0,0:10:11.01,0:10:11.89,Default,,0,0,0,,calculated for your
Dialogue: 0,0:10:11.89,0:10:12.66,Default,,0,0,0,,applications.
Dialogue: 0,0:10:13.62,0:10:14.79,Default,,0,0,0,,The first reference frame,
Dialogue: 0,0:10:14.96,0:10:17.05,Default,,0,0,0,,xArbitraryZVertical fuses
Dialogue: 0,0:10:17.05,0:10:18.17,Default,,0,0,0,,together the accelerometer and
Dialogue: 0,0:10:18.17,0:10:19.41,Default,,0,0,0,,the gyroscope but does not use
Dialogue: 0,0:10:19.41,0:10:20.17,Default,,0,0,0,,the magnetometer.
Dialogue: 0,0:10:20.72,0:10:21.89,Default,,0,0,0,,And the last three reference
Dialogue: 0,0:10:21.89,0:10:23.54,Default,,0,0,0,,frames, xArbitraryCorrected,
Dialogue: 0,0:10:23.86,0:10:25.08,Default,,0,0,0,,xMagnaticNorth, and
Dialogue: 0,0:10:25.08,0:10:26.94,Default,,0,0,0,,xTrueNorthZVertical use all
Dialogue: 0,0:10:26.94,0:10:27.63,Default,,0,0,0,,three sensors.
Dialogue: 0,0:10:28.78,0:10:30.22,Default,,0,0,0,,Now, let's talk about the first
Dialogue: 0,0:10:30.22,0:10:31.85,Default,,0,0,0,,reference frame in more detail.
Dialogue: 0,0:10:33.17,0:10:34.79,Default,,0,0,0,,Let's say you've got an awesome
Dialogue: 0,0:10:34.79,0:10:35.88,Default,,0,0,0,,racing game where you're
Dialogue: 0,0:10:35.88,0:10:37.38,Default,,0,0,0,,currently using touch controls
Dialogue: 0,0:10:37.60,0:10:39.18,Default,,0,0,0,,to allow your users to steer in
Dialogue: 0,0:10:39.18,0:10:39.65,Default,,0,0,0,,the game.
Dialogue: 0,0:10:40.31,0:10:41.56,Default,,0,0,0,,This is great, but we could
Dialogue: 0,0:10:41.56,0:10:42.72,Default,,0,0,0,,provide a more immersive
Dialogue: 0,0:10:42.72,0:10:44.53,Default,,0,0,0,,experience using motion.
Dialogue: 0,0:10:44.89,0:10:47.65,Default,,0,0,0,,And what we want to do is we
Dialogue: 0,0:10:47.65,0:10:49.10,Default,,0,0,0,,want to enable our users to
Dialogue: 0,0:10:49.22,0:10:50.54,Default,,0,0,0,,steer using their device.
Dialogue: 0,0:10:51.00,0:10:52.48,Default,,0,0,0,,So when they tilt a car, tilt
Dialogue: 0,0:10:52.48,0:10:53.68,Default,,0,0,0,,their device to the left, the
Dialogue: 0,0:10:53.68,0:10:56.00,Default,,0,0,0,,car will turn left.
Dialogue: 0,0:10:56.21,0:10:57.50,Default,,0,0,0,,Now, as long as a device is
Dialogue: 0,0:10:57.50,0:10:59.47,Default,,0,0,0,,relatively static, we can use
Dialogue: 0,0:10:59.47,0:11:01.23,Default,,0,0,0,,the accelerometer to estimate
Dialogue: 0,0:11:01.31,0:11:02.11,Default,,0,0,0,,the force of gravity.
Dialogue: 0,0:11:02.82,0:11:04.69,Default,,0,0,0,,And once we have gravity, we can
Dialogue: 0,0:11:04.69,0:11:06.06,Default,,0,0,0,,use that to determine the tilt
Dialogue: 0,0:11:06.22,0:11:07.57,Default,,0,0,0,,or the angle offset from
Dialogue: 0,0:11:07.57,0:11:07.97,Default,,0,0,0,,gravity.
Dialogue: 0,0:11:08.62,0:11:11.66,Default,,0,0,0,,One thing to keep in mind,
Dialogue: 0,0:11:11.66,0:11:13.13,Default,,0,0,0,,though, is that if you were
Dialogue: 0,0:11:13.13,0:11:14.78,Default,,0,0,0,,using the accelerometer on its
Dialogue: 0,0:11:14.78,0:11:17.13,Default,,0,0,0,,own, certain gestures can be
Dialogue: 0,0:11:17.13,0:11:17.79,Default,,0,0,0,,ambiguous.
Dialogue: 0,0:11:18.85,0:11:20.48,Default,,0,0,0,,Tilting the device to the right
Dialogue: 0,0:11:20.86,0:11:21.90,Default,,0,0,0,,can look the same to the
Dialogue: 0,0:11:21.90,0:11:23.51,Default,,0,0,0,,accelerometer as sliding the
Dialogue: 0,0:11:23.51,0:11:24.54,Default,,0,0,0,,device to the left.
Dialogue: 0,0:11:25.31,0:11:26.64,Default,,0,0,0,,Now, one way you could consider
Dialogue: 0,0:11:26.64,0:11:28.11,Default,,0,0,0,,dealing with this is by
Dialogue: 0,0:11:28.11,0:11:29.85,Default,,0,0,0,,averaging over the accelerometer
Dialogue: 0,0:11:29.92,0:11:30.24,Default,,0,0,0,,signal.
Dialogue: 0,0:11:31.28,0:11:32.89,Default,,0,0,0,,In doing so, you would reduce
Dialogue: 0,0:11:32.94,0:11:34.45,Default,,0,0,0,,the short-term effects from the
Dialogue: 0,0:11:34.45,0:11:35.92,Default,,0,0,0,,user and leave only the
Dialogue: 0,0:11:35.92,0:11:37.51,Default,,0,0,0,,long-term effects such as the
Dialogue: 0,0:11:37.51,0:11:38.23,Default,,0,0,0,,force of gravity.
Dialogue: 0,0:11:38.91,0:11:40.79,Default,,0,0,0,,However, in doing this, you
Dialogue: 0,0:11:40.79,0:11:41.84,Default,,0,0,0,,would notice your application
Dialogue: 0,0:11:41.84,0:11:43.20,Default,,0,0,0,,would now respond more slowly
Dialogue: 0,0:11:43.34,0:11:45.40,Default,,0,0,0,,and this where DeviceMotion
Dialogue: 0,0:11:45.40,0:11:45.92,Default,,0,0,0,,comes in.
Dialogue: 0,0:11:46.74,0:11:48.52,Default,,0,0,0,,DeviceMotion means that your
Dialogue: 0,0:11:48.52,0:11:49.82,Default,,0,0,0,,application doesn't need to
Dialogue: 0,0:11:49.82,0:11:51.32,Default,,0,0,0,,build up filtering logic to get
Dialogue: 0,0:11:51.32,0:11:53.04,Default,,0,0,0,,great performance from sensors.
Dialogue: 0,0:11:55.28,0:11:57.85,Default,,0,0,0,,With the xArbitraryZVertical
Dialogue: 0,0:11:57.85,0:11:59.71,Default,,0,0,0,,reference frame, this is the
Dialogue: 0,0:11:59.71,0:12:00.79,Default,,0,0,0,,default reference frame that
Dialogue: 0,0:12:00.79,0:12:02.28,Default,,0,0,0,,your application will receive if
Dialogue: 0,0:12:02.28,0:12:03.89,Default,,0,0,0,,you don't explicitly specify one
Dialogue: 0,0:12:04.12,0:12:05.62,Default,,0,0,0,,when you start DeviceMotion
Dialogue: 0,0:12:05.62,0:12:06.11,Default,,0,0,0,,updates.
Dialogue: 0,0:12:06.48,0:12:08.14,Default,,0,0,0,,And this reference frame is
Dialogue: 0,0:12:08.14,0:12:09.65,Default,,0,0,0,,great for use cases where you
Dialogue: 0,0:12:09.65,0:12:10.94,Default,,0,0,0,,want to track the tip and the
Dialogue: 0,0:12:10.94,0:12:13.71,Default,,0,0,0,,tilt of the device.
Dialogue: 0,0:12:13.71,0:12:15.52,Default,,0,0,0,,And for our use case in the
Dialogue: 0,0:12:15.52,0:12:17.31,Default,,0,0,0,,game, the accelerometer and the
Dialogue: 0,0:12:17.31,0:12:18.60,Default,,0,0,0,,gyroscope are going to fuse
Dialogue: 0,0:12:18.60,0:12:19.98,Default,,0,0,0,,together to allow us some more
Dialogue: 0,0:12:19.98,0:12:21.49,Default,,0,0,0,,quickly and precisely track
Dialogue: 0,0:12:21.49,0:12:21.94,Default,,0,0,0,,gravity.
Dialogue: 0,0:12:22.53,0:12:24.26,Default,,0,0,0,,And once we have gravity we can
Dialogue: 0,0:12:24.26,0:12:25.73,Default,,0,0,0,,translate that into tilt for our
Dialogue: 0,0:12:25.73,0:12:26.08,Default,,0,0,0,,game.
Dialogue: 0,0:12:27.33,0:12:28.93,Default,,0,0,0,,Now to walk through exactly how
Dialogue: 0,0:12:28.93,0:12:30.60,Default,,0,0,0,,to do this, my co-worker Ahmad
Dialogue: 0,0:12:30.60,0:12:31.46,Default,,0,0,0,,is going to come to the stage a
Dialogue: 0,0:12:31.46,0:12:33.39,Default,,0,0,0,,bit later and show us.
Dialogue: 0,0:12:33.94,0:12:36.15,Default,,0,0,0,,This reference frame is also
Dialogue: 0,0:12:36.15,0:12:37.82,Default,,0,0,0,,great for use cases where you
Dialogue: 0,0:12:37.82,0:12:39.58,Default,,0,0,0,,want to track gestures from the
Dialogue: 0,0:12:39.58,0:12:39.98,Default,,0,0,0,,user.
Dialogue: 0,0:12:40.55,0:12:41.93,Default,,0,0,0,,I encourage you to check out our
Dialogue: 0,0:12:41.93,0:12:43.65,Default,,0,0,0,,sample application SwingWatch.
Dialogue: 0,0:12:44.36,0:12:46.17,Default,,0,0,0,,SwingWatch is an app that runs
Dialogue: 0,0:12:46.44,0:12:47.91,Default,,0,0,0,,on the watch that uses
Dialogue: 0,0:12:48.07,0:12:49.70,Default,,0,0,0,,DeviceMotion to track when
Dialogue: 0,0:12:49.70,0:12:51.42,Default,,0,0,0,,you've made a forehand or a
Dialogue: 0,0:12:51.42,0:12:53.12,Default,,0,0,0,,backhand gesture during a tennis
Dialogue: 0,0:12:53.16,0:12:53.49,Default,,0,0,0,,game.
Dialogue: 0,0:12:54.24,0:12:55.34,Default,,0,0,0,,Both the sample code and the
Dialogue: 0,0:12:55.34,0:12:56.11,Default,,0,0,0,,session are online.
Dialogue: 0,0:12:56.11,0:12:57.04,Default,,0,0,0,,And I encourage you to check
Dialogue: 0,0:12:57.04,0:12:58.15,Default,,0,0,0,,them out.
Dialogue: 0,0:12:58.96,0:13:00.94,Default,,0,0,0,,So let's say you've got another
Dialogue: 0,0:13:00.94,0:13:01.35,Default,,0,0,0,,game.
Dialogue: 0,0:13:02.10,0:13:03.39,Default,,0,0,0,,Let's say it's a shooter game
Dialogue: 0,0:13:03.59,0:13:05.67,Default,,0,0,0,,where you allow the user to aim
Dialogue: 0,0:13:05.74,0:13:07.07,Default,,0,0,0,,using virtual thumbsticks.
Dialogue: 0,0:13:07.49,0:13:09.50,Default,,0,0,0,,This is great but we could
Dialogue: 0,0:13:09.50,0:13:10.45,Default,,0,0,0,,provide a more immersive
Dialogue: 0,0:13:10.45,0:13:12.16,Default,,0,0,0,,experience using Motion.
Dialogue: 0,0:13:15.91,0:13:17.98,Default,,0,0,0,,And what we want to do is we
Dialogue: 0,0:13:17.98,0:13:19.78,Default,,0,0,0,,want to determine where the user
Dialogue: 0,0:13:19.78,0:13:21.39,Default,,0,0,0,,is pointing their device and
Dialogue: 0,0:13:21.39,0:13:23.57,Default,,0,0,0,,have that translate into aiming
Dialogue: 0,0:13:23.66,0:13:24.22,Default,,0,0,0,,in the game.
Dialogue: 0,0:13:24.66,0:13:25.75,Default,,0,0,0,,And for that we want to use
Dialogue: 0,0:13:25.75,0:13:26.35,Default,,0,0,0,,Attitude.
Dialogue: 0,0:13:27.69,0:13:29.50,Default,,0,0,0,,Attitude provides the rotation
Dialogue: 0,0:13:29.50,0:13:31.31,Default,,0,0,0,,from the reference frame fixed
Dialogue: 0,0:13:31.31,0:13:32.19,Default,,0,0,0,,when you first start
Dialogue: 0,0:13:32.19,0:13:34.09,Default,,0,0,0,,DeviceMotion updates to where
Dialogue: 0,0:13:34.09,0:13:35.41,Default,,0,0,0,,the user is currently holding
Dialogue: 0,0:13:35.41,0:13:38.35,Default,,0,0,0,,the device in 3D space.
Dialogue: 0,0:13:38.56,0:13:39.95,Default,,0,0,0,,Now, one way you could consider
Dialogue: 0,0:13:39.95,0:13:41.97,Default,,0,0,0,,getting Attitude is by taking
Dialogue: 0,0:13:41.97,0:13:43.31,Default,,0,0,0,,the integral of the raw
Dialogue: 0,0:13:43.31,0:13:44.23,Default,,0,0,0,,gyroscope signal.
Dialogue: 0,0:13:44.85,0:13:47.26,Default,,0,0,0,,Your sway will determine the
Dialogue: 0,0:13:47.26,0:13:47.75,Default,,0,0,0,,attitude.
Dialogue: 0,0:13:48.24,0:13:50.11,Default,,0,0,0,,However, this method for
Dialogue: 0,0:13:50.11,0:13:51.51,Default,,0,0,0,,determining the attitude would
Dialogue: 0,0:13:51.51,0:13:53.85,Default,,0,0,0,,drift overtime due to bias in
Dialogue: 0,0:13:53.85,0:13:56.76,Default,,0,0,0,,the gyroscope and that's where
Dialogue: 0,0:13:56.76,0:13:58.62,Default,,0,0,0,,the xArbitraryCorrectedZVertical
Dialogue: 0,0:13:58.62,0:13:59.61,Default,,0,0,0,,reference frame comes in.
Dialogue: 0,0:14:00.20,0:14:01.38,Default,,0,0,0,,This reference frame uses the
Dialogue: 0,0:14:01.38,0:14:03.08,Default,,0,0,0,,magnetometer to improve the
Dialogue: 0,0:14:03.08,0:14:04.69,Default,,0,0,0,,horizontal attitude estimation
Dialogue: 0,0:14:04.96,0:14:05.64,Default,,0,0,0,,that we provide.
Dialogue: 0,0:14:06.76,0:14:08.32,Default,,0,0,0,,And, as a developer, what this
Dialogue: 0,0:14:08.32,0:14:09.82,Default,,0,0,0,,reference frame means to you is
Dialogue: 0,0:14:09.82,0:14:11.55,Default,,0,0,0,,it provides reliable attitude
Dialogue: 0,0:14:11.55,0:14:13.39,Default,,0,0,0,,performance with a fixed center
Dialogue: 0,0:14:13.39,0:14:13.92,Default,,0,0,0,,reference.
Dialogue: 0,0:14:14.29,0:14:16.21,Default,,0,0,0,,So in the game your users can
Dialogue: 0,0:14:16.21,0:14:17.71,Default,,0,0,0,,move the device around and then
Dialogue: 0,0:14:17.75,0:14:19.05,Default,,0,0,0,,come back to a known center
Dialogue: 0,0:14:19.05,0:14:19.67,Default,,0,0,0,,location.
Dialogue: 0,0:14:21.17,0:14:22.55,Default,,0,0,0,,Now, there are many other ways
Dialogue: 0,0:14:22.55,0:14:23.76,Default,,0,0,0,,you can consider using this
Dialogue: 0,0:14:23.76,0:14:24.43,Default,,0,0,0,,reference frame.
Dialogue: 0,0:14:25.05,0:14:26.18,Default,,0,0,0,,Let's say you wanted to build a
Dialogue: 0,0:14:26.18,0:14:28.36,Default,,0,0,0,,360 degree photo and video
Dialogue: 0,0:14:28.36,0:14:29.24,Default,,0,0,0,,player application.
Dialogue: 0,0:14:29.24,0:14:30.91,Default,,0,0,0,,Your users would be able to move
Dialogue: 0,0:14:30.91,0:14:32.36,Default,,0,0,0,,their device around and then
Dialogue: 0,0:14:32.36,0:14:33.97,Default,,0,0,0,,bring it back towards the center
Dialogue: 0,0:14:34.13,0:14:35.34,Default,,0,0,0,,towards the dock overlooking the
Dialogue: 0,0:14:35.34,0:14:35.65,Default,,0,0,0,,lake.
Dialogue: 0,0:14:37.29,0:14:38.30,Default,,0,0,0,,Now, another way you could
Dialogue: 0,0:14:38.30,0:14:39.74,Default,,0,0,0,,consider using this reference
Dialogue: 0,0:14:39.74,0:14:41.37,Default,,0,0,0,,frame is for something like a
Dialogue: 0,0:14:41.37,0:14:42.77,Default,,0,0,0,,virtual reality real estate
Dialogue: 0,0:14:42.77,0:14:44.65,Default,,0,0,0,,application where you want to
Dialogue: 0,0:14:44.65,0:14:46.64,Default,,0,0,0,,allow your users to look around
Dialogue: 0,0:14:46.64,0:14:47.66,Default,,0,0,0,,at different parts of a room
Dialogue: 0,0:14:47.89,0:14:48.87,Default,,0,0,0,,just by moving their device.
Dialogue: 0,0:14:50.49,0:14:51.60,Default,,0,0,0,,Now, let's say you build this
Dialogue: 0,0:14:51.60,0:14:53.05,Default,,0,0,0,,application out and your users
Dialogue: 0,0:14:53.12,0:14:55.07,Default,,0,0,0,,love it, but they want to get a
Dialogue: 0,0:14:55.07,0:14:56.36,Default,,0,0,0,,better sense of in which
Dialogue: 0,0:14:56.36,0:14:58.94,Default,,0,0,0,,direction the windows face or in
Dialogue: 0,0:14:58.94,0:15:00.06,Default,,0,0,0,,which direction they can expect
Dialogue: 0,0:15:00.06,0:15:02.26,Default,,0,0,0,,the sun to rise and for that we
Dialogue: 0,0:15:02.26,0:15:03.68,Default,,0,0,0,,want a world reference.
Dialogue: 0,0:15:05.37,0:15:07.08,Default,,0,0,0,,Now, you could consider using
Dialogue: 0,0:15:07.08,0:15:08.14,Default,,0,0,0,,the magnetometer for this.
Dialogue: 0,0:15:08.14,0:15:09.47,Default,,0,0,0,,This would provide a world
Dialogue: 0,0:15:09.47,0:15:10.56,Default,,0,0,0,,reference and enable your
Dialogue: 0,0:15:10.56,0:15:11.91,Default,,0,0,0,,applications to orient with
Dialogue: 0,0:15:11.91,0:15:12.81,Default,,0,0,0,,respect to the world.
Dialogue: 0,0:15:13.65,0:15:14.97,Default,,0,0,0,,However, using the raw
Dialogue: 0,0:15:14.97,0:15:16.85,Default,,0,0,0,,magnetometer, you would find the
Dialogue: 0,0:15:16.85,0:15:17.95,Default,,0,0,0,,outputs susceptible to
Dialogue: 0,0:15:17.95,0:15:18.63,Default,,0,0,0,,disturbances.
Dialogue: 0,0:15:19.56,0:15:21.41,Default,,0,0,0,,Some of these are inherent to
Dialogue: 0,0:15:21.41,0:15:23.31,Default,,0,0,0,,the device, and some of these
Dialogue: 0,0:15:23.31,0:15:24.35,Default,,0,0,0,,are external to the device.
Dialogue: 0,0:15:25.71,0:15:26.94,Default,,0,0,0,,This is where the final two
Dialogue: 0,0:15:26.94,0:15:28.03,Default,,0,0,0,,reference frames come in.
Dialogue: 0,0:15:28.57,0:15:30.71,Default,,0,0,0,,These reference frames use the
Dialogue: 0,0:15:30.71,0:15:32.59,Default,,0,0,0,,magnetometer to orient the
Dialogue: 0,0:15:32.59,0:15:34.36,Default,,0,0,0,,device with respect to -- with
Dialogue: 0,0:15:34.36,0:15:35.23,Default,,0,0,0,,respect to the world.
Dialogue: 0,0:15:35.43,0:15:37.36,Default,,0,0,0,,And these reference frames
Dialogue: 0,0:15:37.51,0:15:39.28,Default,,0,0,0,,handle magnet device level
Dialogue: 0,0:15:39.28,0:15:41.15,Default,,0,0,0,,effects as well as in
Dialogue: 0,0:15:41.15,0:15:42.40,Default,,0,0,0,,challenging magnetometer
Dialogue: 0,0:15:42.40,0:15:43.07,Default,,0,0,0,,situations.
Dialogue: 0,0:15:43.32,0:15:44.70,Default,,0,0,0,,We can stabilize the output.
Dialogue: 0,0:15:46.18,0:15:48.05,Default,,0,0,0,,Now, choosing between these two
Dialogue: 0,0:15:48.05,0:15:49.66,Default,,0,0,0,,reference frames is going to be
Dialogue: 0,0:15:49.66,0:15:50.58,Default,,0,0,0,,based on the needs of your
Dialogue: 0,0:15:50.58,0:15:51.21,Default,,0,0,0,,application.
Dialogue: 0,0:15:51.65,0:15:52.89,Default,,0,0,0,,If you've already got data
Dialogue: 0,0:15:53.08,0:15:54.28,Default,,0,0,0,,that's referencing true north,
Dialogue: 0,0:15:54.49,0:15:56.01,Default,,0,0,0,,for example map data, it would
Dialogue: 0,0:15:56.01,0:15:57.17,Default,,0,0,0,,make sense to use the
Dialogue: 0,0:15:57.17,0:15:58.79,Default,,0,0,0,,xTrueNorthZVertical reference
Dialogue: 0,0:15:58.79,0:15:59.11,Default,,0,0,0,,frame.
Dialogue: 0,0:16:00.33,0:16:03.36,Default,,0,0,0,,Now, how can we consider using
Dialogue: 0,0:16:03.36,0:16:04.33,Default,,0,0,0,,these reference frames?
Dialogue: 0,0:16:04.92,0:16:07.11,Default,,0,0,0,,Well, one example is things like
Dialogue: 0,0:16:07.11,0:16:08.82,Default,,0,0,0,,star gazing applications where
Dialogue: 0,0:16:08.82,0:16:09.85,Default,,0,0,0,,you want to allow your users to
Dialogue: 0,0:16:09.85,0:16:11.51,Default,,0,0,0,,point their device at a star in
Dialogue: 0,0:16:11.51,0:16:14.06,Default,,0,0,0,,the sky and identify it.
Dialogue: 0,0:16:14.32,0:16:15.19,Default,,0,0,0,,Another way you could consider
Dialogue: 0,0:16:15.19,0:16:16.70,Default,,0,0,0,,using these reference frames are
Dialogue: 0,0:16:16.70,0:16:17.74,Default,,0,0,0,,for things like augmented
Dialogue: 0,0:16:17.74,0:16:19.53,Default,,0,0,0,,reality applications where you
Dialogue: 0,0:16:19.53,0:16:20.84,Default,,0,0,0,,want to fuse the camera data
Dialogue: 0,0:16:21.18,0:16:23.27,Default,,0,0,0,,with a world reference and for
Dialogue: 0,0:16:23.27,0:16:24.49,Default,,0,0,0,,that we encourage you to check
Dialogue: 0,0:16:24.49,0:16:25.11,Default,,0,0,0,,out ARKit.
Dialogue: 0,0:16:25.50,0:16:26.75,Default,,0,0,0,,ARKit's session follows
Dialogue: 0,0:16:26.75,0:16:27.88,Default,,0,0,0,,immediately after this one.
Dialogue: 0,0:16:27.88,0:16:32.20,Default,,0,0,0,,Now, let's come back to our
Dialogue: 0,0:16:32.20,0:16:33.52,Default,,0,0,0,,virtual reality real estate
Dialogue: 0,0:16:33.52,0:16:34.12,Default,,0,0,0,,application.
Dialogue: 0,0:16:35.29,0:16:35.92,Default,,0,0,0,,Let's say you built an
Dialogue: 0,0:16:35.92,0:16:37.28,Default,,0,0,0,,application out and your users
Dialogue: 0,0:16:37.28,0:16:39.31,Default,,0,0,0,,love it, but you want to provide
Dialogue: 0,0:16:39.31,0:16:40.70,Default,,0,0,0,,them with more features.
Dialogue: 0,0:16:41.19,0:16:42.42,Default,,0,0,0,,Let's say you want to put
Dialogue: 0,0:16:42.42,0:16:44.17,Default,,0,0,0,,landmarks on the horizon in the
Dialogue: 0,0:16:44.17,0:16:45.30,Default,,0,0,0,,direction that they actually
Dialogue: 0,0:16:45.30,0:16:45.58,Default,,0,0,0,,are.
Dialogue: 0,0:16:46.51,0:16:48.17,Default,,0,0,0,,How would we go about doing
Dialogue: 0,0:16:48.17,0:16:48.35,Default,,0,0,0,,this?
Dialogue: 0,0:16:49.10,0:16:51.01,Default,,0,0,0,,Well, what we want is Heading.
Dialogue: 0,0:16:52.38,0:16:54.27,Default,,0,0,0,,Heading gives us the direction
Dialogue: 0,0:16:54.27,0:16:55.38,Default,,0,0,0,,the device is pointing with
Dialogue: 0,0:16:55.38,0:16:56.35,Default,,0,0,0,,respect to north.
Dialogue: 0,0:16:56.79,0:16:58.23,Default,,0,0,0,,So when the device is pointing
Dialogue: 0,0:16:58.31,0:17:00.09,Default,,0,0,0,,straight towards north, Heading
Dialogue: 0,0:17:00.09,0:17:01.55,Default,,0,0,0,,would return 0 degrees.
Dialogue: 0,0:17:02.25,0:17:04.20,Default,,0,0,0,,And as the user rotates their
Dialogue: 0,0:17:04.20,0:17:05.92,Default,,0,0,0,,device around, the Heading angle
Dialogue: 0,0:17:06.08,0:17:06.59,Default,,0,0,0,,would update.
Dialogue: 0,0:17:08.11,0:17:09.56,Default,,0,0,0,,Now, one way you could consider
Dialogue: 0,0:17:09.56,0:17:11.09,Default,,0,0,0,,getting Heading is by using
Dialogue: 0,0:17:11.09,0:17:11.85,Default,,0,0,0,,CoreLocation.
Dialogue: 0,0:17:12.32,0:17:14.31,Default,,0,0,0,,CoreLocation provides a start
Dialogue: 0,0:17:14.31,0:17:17.01,Default,,0,0,0,,updating Heading API that you
Dialogue: 0,0:17:17.01,0:17:18.80,Default,,0,0,0,,could then use the heading from
Dialogue: 0,0:17:18.80,0:17:20.45,Default,,0,0,0,,and fuse that in with the data
Dialogue: 0,0:17:20.45,0:17:21.48,Default,,0,0,0,,that you're already getting from
Dialogue: 0,0:17:21.48,0:17:22.24,Default,,0,0,0,,DeviceMotion.
Dialogue: 0,0:17:24.37,0:17:25.26,Default,,0,0,0,,One thing to keep in mind,
Dialogue: 0,0:17:25.26,0:17:26.97,Default,,0,0,0,,though, is that CoreLocation's
Dialogue: 0,0:17:26.97,0:17:28.93,Default,,0,0,0,,Heading can fuse course.
Dialogue: 0,0:17:29.85,0:17:31.22,Default,,0,0,0,,Course is the direction of
Dialogue: 0,0:17:31.22,0:17:32.07,Default,,0,0,0,,travel for the device.
Dialogue: 0,0:17:32.90,0:17:34.65,Default,,0,0,0,,Now, this may make sense for
Dialogue: 0,0:17:34.65,0:17:35.75,Default,,0,0,0,,things like turn-by-turn
Dialogue: 0,0:17:35.75,0:17:37.89,Default,,0,0,0,,navigation applications, but for
Dialogue: 0,0:17:37.89,0:17:39.23,Default,,0,0,0,,things like augmented reality,
Dialogue: 0,0:17:39.44,0:17:40.50,Default,,0,0,0,,this may make less sense.
Dialogue: 0,0:17:40.85,0:17:42.30,Default,,0,0,0,,I encourage you to check out
Dialogue: 0,0:17:42.30,0:17:44.23,Default,,0,0,0,,CoreLocation session on Thursday
Dialogue: 0,0:17:44.43,0:17:45.27,Default,,0,0,0,,for more details.
Dialogue: 0,0:17:46.60,0:17:48.13,Default,,0,0,0,,Now, another way you could
Dialogue: 0,0:17:48.13,0:17:49.81,Default,,0,0,0,,consider getting Heading is by
Dialogue: 0,0:17:49.81,0:17:51.38,Default,,0,0,0,,calculating it from the attitude
Dialogue: 0,0:17:51.38,0:17:53.28,Default,,0,0,0,,estimation that we provide in
Dialogue: 0,0:17:53.28,0:17:54.07,Default,,0,0,0,,DeviceMotion.
Dialogue: 0,0:17:54.59,0:17:56.27,Default,,0,0,0,,However, getting this right in
Dialogue: 0,0:17:56.27,0:17:57.48,Default,,0,0,0,,all circumstances is
Dialogue: 0,0:17:57.48,0:17:58.13,Default,,0,0,0,,non-trivial.
Dialogue: 0,0:17:58.53,0:18:00.80,Default,,0,0,0,,And this is why, this year,
Dialogue: 0,0:18:00.92,0:18:02.14,Default,,0,0,0,,we're now adding Heading as a
Dialogue: 0,0:18:02.14,0:18:03.72,Default,,0,0,0,,first class property in
Dialogue: 0,0:18:03.72,0:18:04.55,Default,,0,0,0,,DeviceMotion.
Dialogue: 0,0:18:05.90,0:18:07.72,Default,,0,0,0,,Heading fuses together the
Dialogue: 0,0:18:07.72,0:18:09.16,Default,,0,0,0,,accelerometer, the gyroscope,
Dialogue: 0,0:18:09.16,0:18:09.90,Default,,0,0,0,,and most importantly the
Dialogue: 0,0:18:09.90,0:18:11.31,Default,,0,0,0,,magnetometer to give us the
Dialogue: 0,0:18:11.31,0:18:12.74,Default,,0,0,0,,direction the device is pointing
Dialogue: 0,0:18:12.74,0:18:13.66,Default,,0,0,0,,with respect to north.
Dialogue: 0,0:18:15.37,0:18:16.75,Default,,0,0,0,,Keep in mind that Heading is
Dialogue: 0,0:18:16.75,0:18:19.03,Default,,0,0,0,,only available on iOS where the
Dialogue: 0,0:18:19.03,0:18:20.21,Default,,0,0,0,,magnet field property is
Dialogue: 0,0:18:20.21,0:18:20.61,Default,,0,0,0,,available.
Dialogue: 0,0:18:22.16,0:18:23.58,Default,,0,0,0,,Now, let's take a closer look at
Dialogue: 0,0:18:23.58,0:18:23.98,Default,,0,0,0,,the API.
Dialogue: 0,0:18:25.39,0:18:27.07,Default,,0,0,0,,Heading is only valid for the
Dialogue: 0,0:18:27.07,0:18:28.99,Default,,0,0,0,,XMagneticNorth and XTrueNorth
Dialogue: 0,0:18:28.99,0:18:29.77,Default,,0,0,0,,reference frames.
Dialogue: 0,0:18:30.13,0:18:31.11,Default,,0,0,0,,For the other two reference
Dialogue: 0,0:18:31.11,0:18:32.15,Default,,0,0,0,,frames, you'll receive a
Dialogue: 0,0:18:32.15,0:18:33.33,Default,,0,0,0,,negative value back from
Dialogue: 0,0:18:33.33,0:18:33.66,Default,,0,0,0,,Heading.
Dialogue: 0,0:18:35.03,0:18:37.63,Default,,0,0,0,,And Heading will give you from 0
Dialogue: 0,0:18:37.69,0:18:40.33,Default,,0,0,0,,to 359 degrees from the x-axis
Dialogue: 0,0:18:40.33,0:18:41.79,Default,,0,0,0,,that you've chosen in your
Dialogue: 0,0:18:41.79,0:18:42.86,Default,,0,0,0,,application, either
Dialogue: 0,0:18:42.86,0:18:44.36,Default,,0,0,0,,MagneticNorth or TrueNorth.
Dialogue: 0,0:18:44.99,0:18:48.19,Default,,0,0,0,,Now that we have Heading, we can
Dialogue: 0,0:18:48.19,0:18:50.10,Default,,0,0,0,,use that to overlay the Golden
Dialogue: 0,0:18:50.10,0:18:51.92,Default,,0,0,0,,Gate Bridge on the horizon in
Dialogue: 0,0:18:51.92,0:18:54.27,Default,,0,0,0,,the direction that it actually
Dialogue: 0,0:18:55.12,0:18:55.22,Default,,0,0,0,,is.
Dialogue: 0,0:18:55.95,0:18:57.50,Default,,0,0,0,,Now, with DeviceMotion, there
Dialogue: 0,0:18:57.50,0:18:58.69,Default,,0,0,0,,are a number of best practices
Dialogue: 0,0:18:58.69,0:18:59.45,Default,,0,0,0,,to keep in mind.
Dialogue: 0,0:19:00.27,0:19:02.23,Default,,0,0,0,,The first is that you want to
Dialogue: 0,0:19:02.23,0:19:03.46,Default,,0,0,0,,make sure that you check for the
Dialogue: 0,0:19:03.46,0:19:04.55,Default,,0,0,0,,availability of a given
Dialogue: 0,0:19:04.55,0:19:06.20,Default,,0,0,0,,reference frame before you start
Dialogue: 0,0:19:06.20,0:19:06.75,Default,,0,0,0,,updates.
Dialogue: 0,0:19:07.57,0:19:09.67,Default,,0,0,0,,And to do that you can use the
Dialogue: 0,0:19:09.67,0:19:10.97,Default,,0,0,0,,available attitude reference
Dialogue: 0,0:19:10.97,0:19:11.59,Default,,0,0,0,,frames API.
Dialogue: 0,0:19:12.22,0:19:13.18,Default,,0,0,0,,This will return you a
Dialogue: 0,0:19:13.34,0:19:14.77,Default,,0,0,0,,CMAttitudeReferenceFrame
Dialogue: 0,0:19:14.77,0:19:16.57,Default,,0,0,0,,bit-mask that you can then and
Dialogue: 0,0:19:16.83,0:19:17.63,Default,,0,0,0,,with the reference frame that
Dialogue: 0,0:19:17.63,0:19:18.75,Default,,0,0,0,,you're interested in to
Dialogue: 0,0:19:18.75,0:19:19.76,Default,,0,0,0,,determine availability.
Dialogue: 0,0:19:21.09,0:19:22.74,Default,,0,0,0,,And the next thing to keep in
Dialogue: 0,0:19:22.74,0:19:23.87,Default,,0,0,0,,mind is that the choice of
Dialogue: 0,0:19:23.87,0:19:25.56,Default,,0,0,0,,reference frame is key for your
Dialogue: 0,0:19:25.56,0:19:26.33,Default,,0,0,0,,applications.
Dialogue: 0,0:19:26.51,0:19:28.42,Default,,0,0,0,,This is going to determine how
Dialogue: 0,0:19:28.42,0:19:29.88,Default,,0,0,0,,attitude is calculated in your
Dialogue: 0,0:19:29.88,0:19:32.25,Default,,0,0,0,,applications as well as which
Dialogue: 0,0:19:32.25,0:19:34.06,Default,,0,0,0,,sensors go into the sensor
Dialogue: 0,0:19:34.06,0:19:34.69,Default,,0,0,0,,fusion.
Dialogue: 0,0:19:36.29,0:19:37.81,Default,,0,0,0,,Now, we've talked about a number
Dialogue: 0,0:19:37.81,0:19:39.69,Default,,0,0,0,,of things in DeviceMotion, but
Dialogue: 0,0:19:39.69,0:19:40.60,Default,,0,0,0,,let's get a little bit more
Dialogue: 0,0:19:40.60,0:19:41.15,Default,,0,0,0,,practical.
Dialogue: 0,0:19:41.81,0:19:45.13,Default,,0,0,0,,Let's take some of the concepts
Dialogue: 0,0:19:45.27,0:19:46.30,Default,,0,0,0,,that we've talked about in
Dialogue: 0,0:19:46.30,0:19:47.82,Default,,0,0,0,,DeviceMotion and put them in the
Dialogue: 0,0:19:47.82,0:19:49.94,Default,,0,0,0,,practice -- into practice using
Dialogue: 0,0:19:50.02,0:19:50.52,Default,,0,0,0,,a game.
Dialogue: 0,0:19:51.47,0:19:53.08,Default,,0,0,0,,Badger with Attitude is a game
Dialogue: 0,0:19:53.26,0:19:54.25,Default,,0,0,0,,where we're going to apply
Dialogue: 0,0:19:54.54,0:19:56.78,Default,,0,0,0,,DeviceMotion to translate into
Dialogue: 0,0:19:56.78,0:19:57.99,Default,,0,0,0,,controls for the game.
Dialogue: 0,0:19:58.20,0:19:59.72,Default,,0,0,0,,And for that I'd like to invite
Dialogue: 0,0:19:59.72,0:20:01.21,Default,,0,0,0,,my co-worker Ahmad to the stage
Dialogue: 0,0:20:01.46,0:20:02.33,Default,,0,0,0,,to walk us through this.
Dialogue: 0,0:20:03.52,0:20:08.50,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:20:14.41,0:20:15.19,Default,,0,0,0,,>> Thank you, John.
Dialogue: 0,0:20:16.68,0:20:17.58,Default,,0,0,0,,Hello and welcome.
Dialogue: 0,0:20:18.35,0:20:19.41,Default,,0,0,0,,Today, I'm going to be taking
Dialogue: 0,0:20:19.41,0:20:21.25,Default,,0,0,0,,some of those concepts that John
Dialogue: 0,0:20:21.25,0:20:22.61,Default,,0,0,0,,just talked about and help you
Dialogue: 0,0:20:22.61,0:20:23.66,Default,,0,0,0,,put them through a practical
Dialogue: 0,0:20:23.66,0:20:24.13,Default,,0,0,0,,example.
Dialogue: 0,0:20:24.88,0:20:25.71,Default,,0,0,0,,My name is Ahmad.
Dialogue: 0,0:20:25.71,0:20:26.91,Default,,0,0,0,,And I'm an engineer on the Core
Dialogue: 0,0:20:26.91,0:20:27.54,Default,,0,0,0,,Motion team.
Dialogue: 0,0:20:29.04,0:20:30.30,Default,,0,0,0,,I'll be using the Badger app
Dialogue: 0,0:20:30.45,0:20:31.67,Default,,0,0,0,,which has been developed by our
Dialogue: 0,0:20:31.67,0:20:32.50,Default,,0,0,0,,colleagues over at [inaudible].
Dialogue: 0,0:20:32.56,0:20:34.63,Default,,0,0,0,,You may have seen this app in
Dialogue: 0,0:20:34.63,0:20:35.46,Default,,0,0,0,,last year's session.
Dialogue: 0,0:20:36.10,0:20:37.48,Default,,0,0,0,,In it, you play a cute a little
Dialogue: 0,0:20:37.48,0:20:38.69,Default,,0,0,0,,badger called Bob.
Dialogue: 0,0:20:39.11,0:20:41.16,Default,,0,0,0,,He sits in a mining cart rolling
Dialogue: 0,0:20:41.16,0:20:42.77,Default,,0,0,0,,down some tracks collecting gems
Dialogue: 0,0:20:42.77,0:20:43.88,Default,,0,0,0,,and power ups along the way.
Dialogue: 0,0:20:44.47,0:20:46.40,Default,,0,0,0,,So we're going to take this
Dialogue: 0,0:20:46.40,0:20:48.16,Default,,0,0,0,,Apple existing swipe controls
Dialogue: 0,0:20:48.62,0:20:50.21,Default,,0,0,0,,and use DeviceMotion to
Dialogue: 0,0:20:50.21,0:20:52.22,Default,,0,0,0,,transform it to motion-based
Dialogue: 0,0:20:52.22,0:20:52.81,Default,,0,0,0,,gestures.
Dialogue: 0,0:20:57.44,0:20:58.55,Default,,0,0,0,,Here's what we've got in store
Dialogue: 0,0:20:58.55,0:20:59.28,Default,,0,0,0,,for you today.
Dialogue: 0,0:20:59.88,0:21:01.05,Default,,0,0,0,,First, we're going to talk about
Dialogue: 0,0:21:01.05,0:21:02.79,Default,,0,0,0,,the existing controls and what
Dialogue: 0,0:21:02.79,0:21:03.93,Default,,0,0,0,,we're trying to accomplish.
Dialogue: 0,0:21:04.82,0:21:06.45,Default,,0,0,0,,Then we'll show you some of the
Dialogue: 0,0:21:06.45,0:21:08.13,Default,,0,0,0,,basics of using DeviceMotion.
Dialogue: 0,0:21:08.91,0:21:10.46,Default,,0,0,0,,And finally the algorithms we
Dialogue: 0,0:21:10.46,0:21:12.05,Default,,0,0,0,,use to detect those gestures.
Dialogue: 0,0:21:12.59,0:21:16.21,Default,,0,0,0,,So the Badger app allows you to
Dialogue: 0,0:21:16.21,0:21:17.75,Default,,0,0,0,,swipe your finger up across the
Dialogue: 0,0:21:17.75,0:21:19.21,Default,,0,0,0,,screen to make the badger jump
Dialogue: 0,0:21:20.19,0:21:21.17,Default,,0,0,0,,and if you swipe your finger
Dialogue: 0,0:21:21.17,0:21:22.96,Default,,0,0,0,,down, the badger ducks and hides
Dialogue: 0,0:21:22.96,0:21:24.19,Default,,0,0,0,,inside the cart to avoid
Dialogue: 0,0:21:24.19,0:21:24.75,Default,,0,0,0,,obstacles.
Dialogue: 0,0:21:25.88,0:21:27.37,Default,,0,0,0,,And swiping left or right will
Dialogue: 0,0:21:27.37,0:21:29.31,Default,,0,0,0,,make the badger swing to reach
Dialogue: 0,0:21:29.31,0:21:30.20,Default,,0,0,0,,out for those gems.
Dialogue: 0,0:21:31.41,0:21:33.18,Default,,0,0,0,,If you've worked on beautiful
Dialogue: 0,0:21:33.18,0:21:34.35,Default,,0,0,0,,graphics like these, it's a
Dialogue: 0,0:21:34.35,0:21:35.36,Default,,0,0,0,,shame to have to hide them
Dialogue: 0,0:21:35.36,0:21:36.52,Default,,0,0,0,,behind your finger while you
Dialogue: 0,0:21:36.52,0:21:37.09,Default,,0,0,0,,play the game.
Dialogue: 0,0:21:38.52,0:21:39.60,Default,,0,0,0,,So let's use the phone as our
Dialogue: 0,0:21:39.60,0:21:42.46,Default,,0,0,0,,controller here and have the
Dialogue: 0,0:21:42.46,0:21:43.81,Default,,0,0,0,,user fully immersed in the
Dialogue: 0,0:21:43.81,0:21:45.16,Default,,0,0,0,,experience that we've built for
Dialogue: 0,0:21:47.14,0:21:47.27,Default,,0,0,0,,them.
Dialogue: 0,0:21:47.46,0:21:48.81,Default,,0,0,0,,So first we'll detect if the
Dialogue: 0,0:21:48.81,0:21:50.66,Default,,0,0,0,,user has rotated the device
Dialogue: 0,0:21:50.69,0:21:52.23,Default,,0,0,0,,towards them to make the badger
Dialogue: 0,0:21:52.23,0:21:52.64,Default,,0,0,0,,jump up.
Dialogue: 0,0:21:54.46,0:21:55.86,Default,,0,0,0,,A slight bump in the device
Dialogue: 0,0:21:55.86,0:21:57.34,Default,,0,0,0,,downwards will make the badger
Dialogue: 0,0:21:57.34,0:21:58.91,Default,,0,0,0,,squat and hide in the cart.
Dialogue: 0,0:21:59.80,0:22:02.35,Default,,0,0,0,,And tilting the device left or
Dialogue: 0,0:22:02.35,0:22:04.23,Default,,0,0,0,,right will make the badger lean
Dialogue: 0,0:22:04.23,0:22:04.79,Default,,0,0,0,,either way.
Dialogue: 0,0:22:05.34,0:22:09.08,Default,,0,0,0,,Now, I want you to focus on
Dialogue: 0,0:22:09.08,0:22:11.29,Default,,0,0,0,,those couple of points and think
Dialogue: 0,0:22:11.29,0:22:12.78,Default,,0,0,0,,about them when you're looking
Dialogue: 0,0:22:12.78,0:22:14.78,Default,,0,0,0,,at the sample code later or
Dialogue: 0,0:22:14.78,0:22:15.99,Default,,0,0,0,,thinking about incorporating
Dialogue: 0,0:22:15.99,0:22:17.37,Default,,0,0,0,,motion into your application.
Dialogue: 0,0:22:17.88,0:22:20.65,Default,,0,0,0,,As John has mentioned earlier,
Dialogue: 0,0:22:20.73,0:22:22.24,Default,,0,0,0,,Core Motion allows you to
Dialogue: 0,0:22:22.32,0:22:23.39,Default,,0,0,0,,interact directly with the
Dialogue: 0,0:22:23.39,0:22:23.90,Default,,0,0,0,,sensors.
Dialogue: 0,0:22:24.78,0:22:26.17,Default,,0,0,0,,Let's take the accelerometer for
Dialogue: 0,0:22:26.17,0:22:26.64,Default,,0,0,0,,example.
Dialogue: 0,0:22:27.93,0:22:29.62,Default,,0,0,0,,That input may look fine as long
Dialogue: 0,0:22:29.62,0:22:31.25,Default,,0,0,0,,as the user is semi-stationary.
Dialogue: 0,0:22:31.51,0:22:32.95,Default,,0,0,0,,But if you start walking around
Dialogue: 0,0:22:32.95,0:22:34.85,Default,,0,0,0,,or get on a bus, then you're
Dialogue: 0,0:22:34.85,0:22:35.78,Default,,0,0,0,,going to have to account for
Dialogue: 0,0:22:35.78,0:22:37.24,Default,,0,0,0,,these additional accelerations.
Dialogue: 0,0:22:38.29,0:22:39.76,Default,,0,0,0,,So with DeviceMotion, we've
Dialogue: 0,0:22:39.76,0:22:41.22,Default,,0,0,0,,taken other sensors like the
Dialogue: 0,0:22:41.22,0:22:43.05,Default,,0,0,0,,gyro and the magnetometer that
Dialogue: 0,0:22:43.05,0:22:44.30,Default,,0,0,0,,complement the accelerometer
Dialogue: 0,0:22:44.30,0:22:44.93,Default,,0,0,0,,really well.
Dialogue: 0,0:22:45.58,0:22:46.90,Default,,0,0,0,,And we've fused those inputs for
Dialogue: 0,0:22:46.90,0:22:47.17,Default,,0,0,0,,you.
Dialogue: 0,0:22:48.07,0:22:49.42,Default,,0,0,0,,So we can minimize those
Dialogue: 0,0:22:49.42,0:22:51.18,Default,,0,0,0,,environmental factors and let
Dialogue: 0,0:22:51.18,0:22:52.87,Default,,0,0,0,,you focus on capturing those
Dialogue: 0,0:22:52.87,0:22:54.86,Default,,0,0,0,,motion controls rather than how
Dialogue: 0,0:22:54.86,0:22:58.29,Default,,0,0,0,,to process the sensor input.
Dialogue: 0,0:22:58.90,0:23:01.28,Default,,0,0,0,,The DeviceMotion APIs allow you
Dialogue: 0,0:23:01.28,0:23:03.34,Default,,0,0,0,,to query for samples in two
Dialogue: 0,0:23:03.34,0:23:06.13,Default,,0,0,0,,different ways: the push and the
Dialogue: 0,0:23:06.13,0:23:06.99,Default,,0,0,0,,pull mechanism.
Dialogue: 0,0:23:07.38,0:23:09.05,Default,,0,0,0,,Let's take a closer look at
Dialogue: 0,0:23:09.05,0:23:10.18,Default,,0,0,0,,those two.
Dialogue: 0,0:23:12.20,0:23:13.89,Default,,0,0,0,,The push mechanism is a great
Dialogue: 0,0:23:13.89,0:23:15.58,Default,,0,0,0,,way for you to detect a discrete
Dialogue: 0,0:23:15.58,0:23:17.34,Default,,0,0,0,,gesture across a small window of
Dialogue: 0,0:23:17.34,0:23:17.66,Default,,0,0,0,,time.
Dialogue: 0,0:23:19.05,0:23:21.22,Default,,0,0,0,,In the SwingWatch app from last
Dialogue: 0,0:23:21.22,0:23:23.72,Default,,0,0,0,,year's session, we used the push
Dialogue: 0,0:23:23.72,0:23:25.38,Default,,0,0,0,,mechanism so that the framework
Dialogue: 0,0:23:25.38,0:23:27.23,Default,,0,0,0,,will push to us updates as they
Dialogue: 0,0:23:27.23,0:23:28.91,Default,,0,0,0,,are available at a fixed
Dialogue: 0,0:23:29.21,0:23:29.67,Default,,0,0,0,,interval.
Dialogue: 0,0:23:31.03,0:23:32.06,Default,,0,0,0,,Then we would capture those
Dialogue: 0,0:23:32.06,0:23:34.26,Default,,0,0,0,,updates and detect if the user
Dialogue: 0,0:23:34.26,0:23:35.75,Default,,0,0,0,,swung their arm to perform a
Dialogue: 0,0:23:35.75,0:23:36.91,Default,,0,0,0,,backhand or a forehand.
Dialogue: 0,0:23:38.94,0:23:40.70,Default,,0,0,0,,This is what the API looks like.
Dialogue: 0,0:23:41.29,0:23:43.08,Default,,0,0,0,,You use the CMMotionManagers
Dialogue: 0,0:23:43.44,0:23:44.75,Default,,0,0,0,,startDeviceMotionUpdates
Dialogue: 0,0:23:44.75,0:23:45.26,Default,,0,0,0,,function.
Dialogue: 0,0:23:45.80,0:23:47.65,Default,,0,0,0,,You provide a reference frame of
Dialogue: 0,0:23:47.65,0:23:48.08,Default,,0,0,0,,interest.
Dialogue: 0,0:23:49.47,0:23:51.61,Default,,0,0,0,,Provide an OperationQueue for
Dialogue: 0,0:23:51.61,0:23:53.21,Default,,0,0,0,,your Motion Handler to run on as
Dialogue: 0,0:23:53.21,0:23:54.56,Default,,0,0,0,,soon as those samples are ready.
Dialogue: 0,0:23:57.16,0:24:00.42,Default,,0,0,0,,However, if you want to know
Dialogue: 0,0:24:00.42,0:24:01.49,Default,,0,0,0,,what the current state of the
Dialogue: 0,0:24:01.49,0:24:04.13,Default,,0,0,0,,device is then you want to use
Dialogue: 0,0:24:04.13,0:24:05.23,Default,,0,0,0,,the pull mechanism here.
Dialogue: 0,0:24:05.84,0:24:07.27,Default,,0,0,0,,As we'll show you later on in
Dialogue: 0,0:24:07.27,0:24:09.09,Default,,0,0,0,,the Badger app for the tilt
Dialogue: 0,0:24:09.16,0:24:11.37,Default,,0,0,0,,gesture, we want to make the
Dialogue: 0,0:24:11.37,0:24:13.37,Default,,0,0,0,,badger lean at the same angle
Dialogue: 0,0:24:13.37,0:24:16.59,Default,,0,0,0,,that the phone is in so we
Dialogue: 0,0:24:16.59,0:24:18.20,Default,,0,0,0,,ensure we provide the responsive
Dialogue: 0,0:24:18.20,0:24:20.41,Default,,0,0,0,,and a smooth experience for our
Dialogue: 0,0:24:20.41,0:24:21.43,Default,,0,0,0,,graphical application.
Dialogue: 0,0:24:23.06,0:24:25.00,Default,,0,0,0,,The API for the pull mechanism
Dialogue: 0,0:24:25.00,0:24:25.83,Default,,0,0,0,,is a bit simpler.
Dialogue: 0,0:24:26.42,0:24:26.84,Default,,0,0,0,,You call
Dialogue: 0,0:24:26.84,0:24:28.90,Default,,0,0,0,,startDeviceMotionUpdates and you
Dialogue: 0,0:24:28.90,0:24:30.04,Default,,0,0,0,,provide the reference frame.
Dialogue: 0,0:24:31.01,0:24:32.16,Default,,0,0,0,,And whenever you're ready, you
Dialogue: 0,0:24:32.16,0:24:33.71,Default,,0,0,0,,can pull for the latest device
Dialogue: 0,0:24:33.71,0:24:34.92,Default,,0,0,0,,motion sample from the
Dialogue: 0,0:24:34.92,0:24:35.37,Default,,0,0,0,,framework.
Dialogue: 0,0:24:35.86,0:24:39.23,Default,,0,0,0,,We'll be releasing the sample
Dialogue: 0,0:24:39.23,0:24:39.82,Default,,0,0,0,,code for you.
Dialogue: 0,0:24:39.82,0:24:41.04,Default,,0,0,0,,So you'll be able to take a look
Dialogue: 0,0:24:41.25,0:24:41.90,Default,,0,0,0,,at it later.
Dialogue: 0,0:24:42.40,0:24:43.43,Default,,0,0,0,,But let's focus on the Core
Dialogue: 0,0:24:43.43,0:24:44.34,Default,,0,0,0,,Motion parts for now.
Dialogue: 0,0:24:44.96,0:24:47.42,Default,,0,0,0,,So to get started we'll import
Dialogue: 0,0:24:47.42,0:24:49.22,Default,,0,0,0,,the CoreMotion framework and
Dialogue: 0,0:24:49.22,0:24:50.62,Default,,0,0,0,,then instantiate an instance of
Dialogue: 0,0:24:50.62,0:24:51.70,Default,,0,0,0,,the CMMotionManager.
Dialogue: 0,0:24:52.94,0:24:54.80,Default,,0,0,0,,Then we'll check if DeviceMotion
Dialogue: 0,0:24:54.80,0:24:56.24,Default,,0,0,0,,updates are available on this
Dialogue: 0,0:24:56.24,0:24:56.76,Default,,0,0,0,,platform.
Dialogue: 0,0:24:57.27,0:25:00.03,Default,,0,0,0,,And if you recall from John's
Dialogue: 0,0:25:00.03,0:25:02.13,Default,,0,0,0,,talk, the tip and tilt gestures
Dialogue: 0,0:25:02.13,0:25:03.81,Default,,0,0,0,,that we're interested in track
Dialogue: 0,0:25:03.81,0:25:05.41,Default,,0,0,0,,where gravity is in the device
Dialogue: 0,0:25:05.41,0:25:05.66,Default,,0,0,0,,frame.
Dialogue: 0,0:25:06.39,0:25:07.68,Default,,0,0,0,,So we'll check -- so we'll be
Dialogue: 0,0:25:07.68,0:25:09.51,Default,,0,0,0,,using the XArbitraryZVertical
Dialogue: 0,0:25:09.51,0:25:10.23,Default,,0,0,0,,reference frame.
Dialogue: 0,0:25:10.77,0:25:11.63,Default,,0,0,0,,And we'll check if it's
Dialogue: 0,0:25:11.63,0:25:12.65,Default,,0,0,0,,available on the platform.
Dialogue: 0,0:25:13.61,0:25:15.62,Default,,0,0,0,,You may have noticed, I did not
Dialogue: 0,0:25:15.91,0:25:17.74,Default,,0,0,0,,check for the authorization here
Dialogue: 0,0:25:17.88,0:25:19.07,Default,,0,0,0,,and that's because I'm using the
Dialogue: 0,0:25:19.07,0:25:21.01,Default,,0,0,0,,MotionManager API which does not
Dialogue: 0,0:25:21.01,0:25:22.80,Default,,0,0,0,,access sensitive data.
Dialogue: 0,0:25:24.77,0:25:27.90,Default,,0,0,0,,For the rest of the talk, we'll
Dialogue: 0,0:25:27.90,0:25:29.71,Default,,0,0,0,,assume the device is in the last
Dialogue: 0,0:25:29.71,0:25:31.19,Default,,0,0,0,,state orientation, but in the
Dialogue: 0,0:25:31.19,0:25:32.45,Default,,0,0,0,,sample code we'll show you how
Dialogue: 0,0:25:32.53,0:25:34.31,Default,,0,0,0,,to detect and handle other
Dialogue: 0,0:25:34.31,0:25:35.41,Default,,0,0,0,,device orientations.
Dialogue: 0,0:25:38.96,0:25:41.13,Default,,0,0,0,,For the first gesture, when
Dialogue: 0,0:25:41.34,0:25:42.98,Default,,0,0,0,,rotating the device towards you
Dialogue: 0,0:25:43.19,0:25:45.30,Default,,0,0,0,,makes the badger jump up, we
Dialogue: 0,0:25:45.30,0:25:47.37,Default,,0,0,0,,want to capture the magnitude of
Dialogue: 0,0:25:47.37,0:25:49.16,Default,,0,0,0,,that rotation rate along the
Dialogue: 0,0:25:49.16,0:25:50.99,Default,,0,0,0,,horizontal axis of the phone.
Dialogue: 0,0:25:51.74,0:25:53.21,Default,,0,0,0,,In this case, it's the y-axis.
Dialogue: 0,0:25:55.82,0:25:57.29,Default,,0,0,0,,So we'll be looking at the
Dialogue: 0,0:25:57.29,0:25:59.84,Default,,0,0,0,,rotation rate property from the
Dialogue: 0,0:25:59.84,0:26:00.91,Default,,0,0,0,,DeviceMotion object.
Dialogue: 0,0:26:01.49,0:26:02.95,Default,,0,0,0,,And we chose that specifically
Dialogue: 0,0:26:02.95,0:26:04.74,Default,,0,0,0,,because we're not interested in
Dialogue: 0,0:26:04.74,0:26:06.38,Default,,0,0,0,,the current angle the device is
Dialogue: 0,0:26:06.38,0:26:08.37,Default,,0,0,0,,making but rather a quick change
Dialogue: 0,0:26:08.37,0:26:09.01,Default,,0,0,0,,in that angle.
Dialogue: 0,0:26:10.29,0:26:12.05,Default,,0,0,0,,So if we use the rotation rate,
Dialogue: 0,0:26:12.10,0:26:14.25,Default,,0,0,0,,we'll be able to detect a quick
Dialogue: 0,0:26:14.32,0:26:16.04,Default,,0,0,0,,pulse and make the badger jump
Dialogue: 0,0:26:16.04,0:26:16.65,Default,,0,0,0,,accordingly.
Dialogue: 0,0:26:17.14,0:26:19.68,Default,,0,0,0,,This is a gesture that we're
Dialogue: 0,0:26:19.68,0:26:21.79,Default,,0,0,0,,detecting across a small period
Dialogue: 0,0:26:21.79,0:26:23.16,Default,,0,0,0,,of time, so we're going to be
Dialogue: 0,0:26:23.16,0:26:26.35,Default,,0,0,0,,using the push mechanism for it.
Dialogue: 0,0:26:26.62,0:26:27.61,Default,,0,0,0,,Let's see how that will look in
Dialogue: 0,0:26:27.61,0:26:27.98,Default,,0,0,0,,the code.
Dialogue: 0,0:26:28.31,0:26:31.11,Default,,0,0,0,,So start off, we'll set the
Dialogue: 0,0:26:31.11,0:26:32.59,Default,,0,0,0,,update interval to 50Hz.
Dialogue: 0,0:26:33.18,0:26:34.18,Default,,0,0,0,,And you want to be careful when
Dialogue: 0,0:26:34.18,0:26:34.74,Default,,0,0,0,,you set that.
Dialogue: 0,0:26:35.47,0:26:36.50,Default,,0,0,0,,You want the samples to be
Dialogue: 0,0:26:36.50,0:26:38.01,Default,,0,0,0,,coming in fast enough so that
Dialogue: 0,0:26:38.01,0:26:40.01,Default,,0,0,0,,you can capture that gesture but
Dialogue: 0,0:26:40.01,0:26:41.13,Default,,0,0,0,,not too fast that you're
Dialogue: 0,0:26:41.13,0:26:42.63,Default,,0,0,0,,increasing your computational
Dialogue: 0,0:26:42.98,0:26:44.21,Default,,0,0,0,,and memory requirements.
Dialogue: 0,0:26:45.66,0:26:46.35,Default,,0,0,0,,Then we'll
Dialogue: 0,0:26:46.35,0:26:49.10,Default,,0,0,0,,startDeviceMotionUpdates using
Dialogue: 0,0:26:49.20,0:26:51.42,Default,,0,0,0,,the push mechanism, provide our
Dialogue: 0,0:26:51.42,0:26:53.17,Default,,0,0,0,,XArbitraryZVertical reference
Dialogue: 0,0:26:53.17,0:26:53.47,Default,,0,0,0,,frame.
Dialogue: 0,0:26:54.66,0:26:56.22,Default,,0,0,0,,A queue, and I'm using a
Dialogue: 0,0:26:56.22,0:26:57.59,Default,,0,0,0,,standard operation queue here
Dialogue: 0,0:26:58.38,0:26:59.80,Default,,0,0,0,,and finally our motionHandler.
Dialogue: 0,0:27:02.64,0:27:04.19,Default,,0,0,0,,This is what our motionHandler
Dialogue: 0,0:27:04.19,0:27:04.69,Default,,0,0,0,,will look like.
Dialogue: 0,0:27:04.95,0:27:06.43,Default,,0,0,0,,It will get called as soon as
Dialogue: 0,0:27:06.43,0:27:07.21,Default,,0,0,0,,samples are ready.
Dialogue: 0,0:27:07.93,0:27:08.97,Default,,0,0,0,,The first thing we'll do is
Dialogue: 0,0:27:08.97,0:27:11.61,Default,,0,0,0,,check for any errors and then
Dialogue: 0,0:27:11.61,0:27:13.08,Default,,0,0,0,,grab that rotation rate from the
Dialogue: 0,0:27:13.08,0:27:15.43,Default,,0,0,0,,DeviceMotion object and look at
Dialogue: 0,0:27:15.70,0:27:17.52,Default,,0,0,0,,the y-component that we were
Dialogue: 0,0:27:17.52,0:27:18.78,Default,,0,0,0,,interested in.
Dialogue: 0,0:27:19.34,0:27:21.02,Default,,0,0,0,,Then we store that in a buffer.
Dialogue: 0,0:27:21.42,0:27:22.79,Default,,0,0,0,,And I'm using a circular buffer
Dialogue: 0,0:27:22.79,0:27:23.01,Default,,0,0,0,,here.
Dialogue: 0,0:27:23.53,0:27:24.80,Default,,0,0,0,,So as soon as the samples are
Dialogue: 0,0:27:24.80,0:27:26.73,Default,,0,0,0,,coming in, we'll accumulate more
Dialogue: 0,0:27:27.14,0:27:29.57,Default,,0,0,0,,of them.
Dialogue: 0,0:27:29.97,0:27:31.23,Default,,0,0,0,,Since we're using the SceneKit
Dialogue: 0,0:27:31.23,0:27:33.27,Default,,0,0,0,,Renderer for this application, I
Dialogue: 0,0:27:33.27,0:27:34.13,Default,,0,0,0,,chose the renderer's
Dialogue: 0,0:27:34.13,0:27:35.34,Default,,0,0,0,,updateAtTime function.
Dialogue: 0,0:27:35.83,0:27:37.26,Default,,0,0,0,,This will get called just before
Dialogue: 0,0:27:37.30,0:27:38.28,Default,,0,0,0,,you render a new scene.
Dialogue: 0,0:27:39.76,0:27:40.98,Default,,0,0,0,,And this is the ideal place for
Dialogue: 0,0:27:40.98,0:27:42.25,Default,,0,0,0,,me to check for the state of
Dialogue: 0,0:27:42.25,0:27:44.30,Default,,0,0,0,,that buffer and then update the
Dialogue: 0,0:27:44.30,0:27:44.58,Default,,0,0,0,,game.
Dialogue: 0,0:27:45.11,0:27:47.99,Default,,0,0,0,,And I'll leave it up to you to
Dialogue: 0,0:27:47.99,0:27:48.75,Default,,0,0,0,,find out where in the
Dialogue: 0,0:27:48.75,0:27:50.14,Default,,0,0,0,,application is the best place to
Dialogue: 0,0:27:50.14,0:27:51.13,Default,,0,0,0,,do that.
Dialogue: 0,0:27:52.77,0:27:54.43,Default,,0,0,0,,And then I simply check if the
Dialogue: 0,0:27:54.43,0:27:55.82,Default,,0,0,0,,mean of that buffer has crossed
Dialogue: 0,0:27:55.82,0:27:57.34,Default,,0,0,0,,a certain threshold and make the
Dialogue: 0,0:27:57.34,0:27:58.31,Default,,0,0,0,,badger jump.
Dialogue: 0,0:27:59.68,0:28:01.29,Default,,0,0,0,,Keep in mind this threshold is
Dialogue: 0,0:28:01.34,0:28:03.22,Default,,0,0,0,,tunable and adjustable to your
Dialogue: 0,0:28:03.22,0:28:04.26,Default,,0,0,0,,app's specific needs.
Dialogue: 0,0:28:08.32,0:28:10.45,Default,,0,0,0,,Next, we'll take a look at the
Dialogue: 0,0:28:10.45,0:28:12.25,Default,,0,0,0,,second control where bumping the
Dialogue: 0,0:28:12.25,0:28:13.82,Default,,0,0,0,,device downwards will make the
Dialogue: 0,0:28:13.82,0:28:14.98,Default,,0,0,0,,badger duck.
Dialogue: 0,0:28:16.39,0:28:18.22,Default,,0,0,0,,For this one, we want to measure
Dialogue: 0,0:28:18.22,0:28:21.00,Default,,0,0,0,,the user acceleration along the
Dialogue: 0,0:28:21.00,0:28:22.14,Default,,0,0,0,,gravity vector.
Dialogue: 0,0:28:25.08,0:28:26.64,Default,,0,0,0,,So we'll be looking at the user
Dialogue: 0,0:28:26.64,0:28:27.92,Default,,0,0,0,,acceleration property.
Dialogue: 0,0:28:28.38,0:28:30.53,Default,,0,0,0,,And here we chose that because
Dialogue: 0,0:28:31.17,0:28:32.70,Default,,0,0,0,,even if the device is slightly
Dialogue: 0,0:28:32.70,0:28:34.47,Default,,0,0,0,,tilted or rotated at an angle,
Dialogue: 0,0:28:34.47,0:28:35.98,Default,,0,0,0,,the user acceleration is still
Dialogue: 0,0:28:35.98,0:28:37.05,Default,,0,0,0,,going to still look the same
Dialogue: 0,0:28:37.74,0:28:39.04,Default,,0,0,0,,regardless of the attitude.
Dialogue: 0,0:28:43.32,0:28:45.55,Default,,0,0,0,,So this is one of the gestures,
Dialogue: 0,0:28:45.55,0:28:46.90,Default,,0,0,0,,again, where you're detecting
Dialogue: 0,0:28:46.90,0:28:48.27,Default,,0,0,0,,over a window of time, so we'll
Dialogue: 0,0:28:48.27,0:28:49.71,Default,,0,0,0,,use the push mechanism as well.
Dialogue: 0,0:28:51.39,0:28:52.55,Default,,0,0,0,,Since we're already set up for
Dialogue: 0,0:28:52.55,0:28:54.58,Default,,0,0,0,,the push mechanism, we'll head
Dialogue: 0,0:28:54.58,0:28:56.25,Default,,0,0,0,,back to our motionHandler where
Dialogue: 0,0:28:56.25,0:28:57.65,Default,,0,0,0,,we were storing those rotation
Dialogue: 0,0:28:57.65,0:28:58.50,Default,,0,0,0,,rates previously.
Dialogue: 0,0:28:59.01,0:29:02.11,Default,,0,0,0,,But this time we'll pull out the
Dialogue: 0,0:29:02.11,0:29:03.81,Default,,0,0,0,,gravity property out of the
Dialogue: 0,0:29:03.81,0:29:06.43,Default,,0,0,0,,device motion object and the
Dialogue: 0,0:29:06.65,0:29:08.15,Default,,0,0,0,,user acceleration as well.
Dialogue: 0,0:29:08.69,0:29:11.92,Default,,0,0,0,,We compute the magnitude of that
Dialogue: 0,0:29:11.92,0:29:13.72,Default,,0,0,0,,user acceleration along the
Dialogue: 0,0:29:13.72,0:29:17.54,Default,,0,0,0,,gravity vector and store that in
Dialogue: 0,0:29:17.54,0:29:17.90,Default,,0,0,0,,a buffer.
Dialogue: 0,0:29:18.63,0:29:19.98,Default,,0,0,0,,And once the threshold of that
Dialogue: 0,0:29:19.98,0:29:21.31,Default,,0,0,0,,-- once the mean of that buffer
Dialogue: 0,0:29:21.31,0:29:23.38,Default,,0,0,0,,crosses a certain threshold then
Dialogue: 0,0:29:23.38,0:29:25.21,Default,,0,0,0,,we'll make the badger duck down
Dialogue: 0,0:29:25.21,0:29:27.37,Default,,0,0,0,,and hide in the cart.
Dialogue: 0,0:29:28.14,0:29:29.83,Default,,0,0,0,,So we've taken a look at two
Dialogue: 0,0:29:29.83,0:29:31.89,Default,,0,0,0,,controls where we were
Dialogue: 0,0:29:31.89,0:29:33.51,Default,,0,0,0,,monitoring motion across a small
Dialogue: 0,0:29:33.51,0:29:34.24,Default,,0,0,0,,window of time.
Dialogue: 0,0:29:34.82,0:29:35.99,Default,,0,0,0,,And we used the push mechanism
Dialogue: 0,0:29:35.99,0:29:36.35,Default,,0,0,0,,for that.
Dialogue: 0,0:29:37.22,0:29:38.72,Default,,0,0,0,,Let's take a look at our final
Dialogue: 0,0:29:38.77,0:29:40.98,Default,,0,0,0,,control where our requirements
Dialogue: 0,0:29:40.98,0:29:41.83,Default,,0,0,0,,are slightly different.
Dialogue: 0,0:29:43.52,0:29:48.05,Default,,0,0,0,,For the tilt control, in the
Dialogue: 0,0:29:48.05,0:29:49.69,Default,,0,0,0,,simple case where the device is
Dialogue: 0,0:29:49.69,0:29:52.98,Default,,0,0,0,,held in a vertical position, you
Dialogue: 0,0:29:52.98,0:29:54.61,Default,,0,0,0,,can breakdown the gravity vector
Dialogue: 0,0:29:54.61,0:29:56.42,Default,,0,0,0,,into its x-component and its
Dialogue: 0,0:29:56.42,0:29:57.27,Default,,0,0,0,,y-component.
Dialogue: 0,0:29:58.46,0:29:59.50,Default,,0,0,0,,And by applying simple
Dialogue: 0,0:29:59.50,0:30:01.28,Default,,0,0,0,,trigonometry, you can arrive at
Dialogue: 0,0:30:01.28,0:30:01.65,Default,,0,0,0,,the tilt.
Dialogue: 0,0:30:03.01,0:30:05.09,Default,,0,0,0,,But since we want this gesture
Dialogue: 0,0:30:05.09,0:30:06.48,Default,,0,0,0,,to be slightly more flexible,
Dialogue: 0,0:30:07.19,0:30:08.64,Default,,0,0,0,,we're going to break gravity
Dialogue: 0,0:30:08.64,0:30:10.31,Default,,0,0,0,,into its y-component and its
Dialogue: 0,0:30:10.31,0:30:12.59,Default,,0,0,0,,component in the x-z plane of
Dialogue: 0,0:30:12.59,0:30:13.22,Default,,0,0,0,,the device.
Dialogue: 0,0:30:14.07,0:30:15.39,Default,,0,0,0,,This will allow us to tilt the
Dialogue: 0,0:30:15.39,0:30:19.83,Default,,0,0,0,,phone even if the device is
Dialogue: 0,0:30:19.83,0:30:21.29,Default,,0,0,0,,slightly rotated at an angle.
Dialogue: 0,0:30:22.58,0:30:23.86,Default,,0,0,0,,What's different about this
Dialogue: 0,0:30:23.86,0:30:25.33,Default,,0,0,0,,control is that we want to know
Dialogue: 0,0:30:25.77,0:30:27.30,Default,,0,0,0,,the current state of the device
Dialogue: 0,0:30:27.36,0:30:28.77,Default,,0,0,0,,and not the discrete motion that
Dialogue: 0,0:30:28.77,0:30:29.16,Default,,0,0,0,,occurred.
Dialogue: 0,0:30:30.54,0:30:33.49,Default,,0,0,0,,This will allow us to make the
Dialogue: 0,0:30:33.49,0:30:35.42,Default,,0,0,0,,badger lean at the same angle
Dialogue: 0,0:30:35.42,0:30:37.17,Default,,0,0,0,,the device is leaning in and
Dialogue: 0,0:30:37.17,0:30:38.62,Default,,0,0,0,,provide a very responsive
Dialogue: 0,0:30:38.62,0:30:39.29,Default,,0,0,0,,experience.
Dialogue: 0,0:30:39.79,0:30:42.42,Default,,0,0,0,,And for those reasons, we'll be
Dialogue: 0,0:30:42.42,0:30:44.55,Default,,0,0,0,,using the pull mechanism for
Dialogue: 0,0:30:45.03,0:30:47.08,Default,,0,0,0,,this control.
Dialogue: 0,0:30:47.15,0:30:48.37,Default,,0,0,0,,Since we're already set up for
Dialogue: 0,0:30:48.37,0:30:50.66,Default,,0,0,0,,the push mechanism, the
Dialogue: 0,0:30:50.66,0:30:52.00,Default,,0,0,0,,framework is ready for us to
Dialogue: 0,0:30:52.00,0:30:54.40,Default,,0,0,0,,pull for samples at any point in
Dialogue: 0,0:30:54.40,0:30:54.72,Default,,0,0,0,,time.
Dialogue: 0,0:30:56.72,0:30:58.61,Default,,0,0,0,,So we'll go back to our renderer
Dialogue: 0,0:30:58.61,0:30:59.23,Default,,0,0,0,,function.
Dialogue: 0,0:30:59.46,0:31:00.63,Default,,0,0,0,,If you recall, this is getting
Dialogue: 0,0:31:00.63,0:31:02.36,Default,,0,0,0,,called just before you render a
Dialogue: 0,0:31:02.36,0:31:02.89,Default,,0,0,0,,new scene.
Dialogue: 0,0:31:03.62,0:31:05.41,Default,,0,0,0,,That makes it a perfect place
Dialogue: 0,0:31:05.41,0:31:06.93,Default,,0,0,0,,for me to pull for the latest
Dialogue: 0,0:31:06.93,0:31:09.08,Default,,0,0,0,,sample, make a calculation, and
Dialogue: 0,0:31:09.08,0:31:12.52,Default,,0,0,0,,then update the graphics.
Dialogue: 0,0:31:12.52,0:31:13.76,Default,,0,0,0,,So we'll ask the motionManager
Dialogue: 0,0:31:13.76,0:31:14.99,Default,,0,0,0,,for the latest DeviceMotion
Dialogue: 0,0:31:14.99,0:31:18.02,Default,,0,0,0,,sample, grab the gravity
Dialogue: 0,0:31:18.02,0:31:21.71,Default,,0,0,0,,property out of that, compute
Dialogue: 0,0:31:21.96,0:31:24.11,Default,,0,0,0,,the vector in the x-z plane, and
Dialogue: 0,0:31:24.11,0:31:27.96,Default,,0,0,0,,arrive at the tilt as the
Dialogue: 0,0:31:27.96,0:31:29.10,Default,,0,0,0,,arc-tan between that
Dialogue: 0,0:31:29.10,0:31:30.31,Default,,0,0,0,,x-z-component and the
Dialogue: 0,0:31:30.31,0:31:31.06,Default,,0,0,0,,y-component.
Dialogue: 0,0:31:31.55,0:31:34.69,Default,,0,0,0,,Don't forget to let the
Dialogue: 0,0:31:34.69,0:31:36.18,Default,,0,0,0,,framework know that you're no
Dialogue: 0,0:31:36.18,0:31:37.08,Default,,0,0,0,,longer interested in
Dialogue: 0,0:31:37.08,0:31:39.11,Default,,0,0,0,,DeviceMotion updates if they
Dialogue: 0,0:31:39.11,0:31:40.19,Default,,0,0,0,,were previously active.
Dialogue: 0,0:31:41.27,0:31:42.56,Default,,0,0,0,,This is a great thing to do when
Dialogue: 0,0:31:42.56,0:31:44.17,Default,,0,0,0,,your game is paused or has ended
Dialogue: 0,0:31:45.13,0:31:46.79,Default,,0,0,0,,to make sure you're not wasting
Dialogue: 0,0:31:46.79,0:31:47.86,Default,,0,0,0,,more battery than you need.
Dialogue: 0,0:31:48.85,0:31:50.25,Default,,0,0,0,,So here you'll see the results.
Dialogue: 0,0:31:50.87,0:31:52.43,Default,,0,0,0,,The user is able to play the
Dialogue: 0,0:31:52.43,0:31:54.77,Default,,0,0,0,,game by tilting the device from
Dialogue: 0,0:31:54.77,0:31:57.33,Default,,0,0,0,,side to side to make the badger
Dialogue: 0,0:31:57.33,0:31:58.25,Default,,0,0,0,,lean either way.
Dialogue: 0,0:31:59.15,0:32:00.73,Default,,0,0,0,,And tipping the device towards
Dialogue: 0,0:32:00.73,0:32:02.15,Default,,0,0,0,,them makes the badger jump up.
Dialogue: 0,0:32:03.39,0:32:06.55,Default,,0,0,0,,And finally duck, a small push
Dialogue: 0,0:32:06.55,0:32:07.74,Default,,0,0,0,,of the device downwards will
Dialogue: 0,0:32:07.74,0:32:09.28,Default,,0,0,0,,make the badger squat and hide
Dialogue: 0,0:32:09.28,0:32:10.03,Default,,0,0,0,,inside the cart.
Dialogue: 0,0:32:10.50,0:32:12.59,Default,,0,0,0,,It's pretty cool.
Dialogue: 0,0:32:12.59,0:32:14.17,Default,,0,0,0,,We've taken an app with swipe
Dialogue: 0,0:32:14.20,0:32:16.42,Default,,0,0,0,,controls and used DeviceMotion
Dialogue: 0,0:32:17.37,0:32:18.05,Default,,0,0,0,,to replace them with
Dialogue: 0,0:32:18.05,0:32:18.86,Default,,0,0,0,,motion-based ones.
Dialogue: 0,0:32:27.39,0:32:29.13,Default,,0,0,0,,I'm excited to see how far you
Dialogue: 0,0:32:29.13,0:32:30.64,Default,,0,0,0,,can push the DeviceMotion APIs.
Dialogue: 0,0:32:35.52,0:32:44.58,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:32:45.08,0:32:46.20,Default,,0,0,0,,So to wrap up some of the key
Dialogue: 0,0:32:46.20,0:32:47.25,Default,,0,0,0,,points that we talked about
Dialogue: 0,0:32:47.31,0:32:50.28,Default,,0,0,0,,today, we encourage you to look
Dialogue: 0,0:32:50.28,0:32:52.36,Default,,0,0,0,,at the authorization API and
Dialogue: 0,0:32:52.36,0:32:53.11,Default,,0,0,0,,check for your apps
Dialogue: 0,0:32:53.11,0:32:55.62,Default,,0,0,0,,authorization if you're using
Dialogue: 0,0:32:55.62,0:32:57.23,Default,,0,0,0,,one of the sensitive APIs.
Dialogue: 0,0:32:59.67,0:33:00.99,Default,,0,0,0,,While you might have your use
Dialogue: 0,0:33:00.99,0:33:02.93,Default,,0,0,0,,case for using the sensor data
Dialogue: 0,0:33:02.93,0:33:05.17,Default,,0,0,0,,directly, we encourage you to
Dialogue: 0,0:33:05.17,0:33:07.63,Default,,0,0,0,,look at the DeviceMotion APIs
Dialogue: 0,0:33:08.02,0:33:09.18,Default,,0,0,0,,because our sensor fusion
Dialogue: 0,0:33:09.18,0:33:10.92,Default,,0,0,0,,algorithms handle the most
Dialogue: 0,0:33:10.92,0:33:11.53,Default,,0,0,0,,common case.
Dialogue: 0,0:33:11.94,0:33:13.03,Default,,0,0,0,,It eliminates those
Dialogue: 0,0:33:13.03,0:33:14.97,Default,,0,0,0,,environmental factors so that
Dialogue: 0,0:33:14.97,0:33:17.13,Default,,0,0,0,,you're able to focus on the
Dialogue: 0,0:33:17.13,0:33:18.50,Default,,0,0,0,,motion controls of your user.
Dialogue: 0,0:33:20.55,0:33:23.35,Default,,0,0,0,,The APIs provide you a smooth
Dialogue: 0,0:33:23.35,0:33:24.94,Default,,0,0,0,,and consistent experience across
Dialogue: 0,0:33:24.94,0:33:26.18,Default,,0,0,0,,all our supported devices.
Dialogue: 0,0:33:26.73,0:33:29.81,Default,,0,0,0,,And we've made enhancements this
Dialogue: 0,0:33:29.81,0:33:31.57,Default,,0,0,0,,release to make sure that when
Dialogue: 0,0:33:31.57,0:33:33.14,Default,,0,0,0,,you query for those updates you
Dialogue: 0,0:33:33.14,0:33:34.19,Default,,0,0,0,,do that in a very power
Dialogue: 0,0:33:34.19,0:33:34.80,Default,,0,0,0,,efficient manner.
Dialogue: 0,0:33:34.80,0:33:40.57,Default,,0,0,0,,Remember the two different ways
Dialogue: 0,0:33:41.08,0:33:42.28,Default,,0,0,0,,to query for updates.
Dialogue: 0,0:33:43.16,0:33:44.69,Default,,0,0,0,,Use the push when you want to
Dialogue: 0,0:33:44.69,0:33:46.48,Default,,0,0,0,,detect a gesture across a small
Dialogue: 0,0:33:46.48,0:33:47.23,Default,,0,0,0,,window of time.
Dialogue: 0,0:33:48.65,0:33:49.79,Default,,0,0,0,,And use the pull when
Dialogue: 0,0:33:49.79,0:33:51.82,Default,,0,0,0,,responsiveness is key, and you
Dialogue: 0,0:33:51.82,0:33:52.76,Default,,0,0,0,,want to know what the current
Dialogue: 0,0:33:52.76,0:33:57.44,Default,,0,0,0,,state of the device is.
Dialogue: 0,0:33:58.12,0:33:59.26,Default,,0,0,0,,Here are a couple of these
Dialogue: 0,0:33:59.26,0:34:00.36,Default,,0,0,0,,sessions that we think you might
Dialogue: 0,0:34:00.36,0:34:01.20,Default,,0,0,0,,be interested in.
Dialogue: 0,0:34:02.26,0:34:03.39,Default,,0,0,0,,Please check them out.
Dialogue: 0,0:34:04.20,0:34:05.12,Default,,0,0,0,,And if you're interested in
Dialogue: 0,0:34:05.12,0:34:06.25,Default,,0,0,0,,learning more about the Badger
Dialogue: 0,0:34:06.25,0:34:07.43,Default,,0,0,0,,app, check out last year's
Dialogue: 0,0:34:07.43,0:34:08.25,Default,,0,0,0,,SceneKit session.
Dialogue: 0,0:34:09.68,0:34:11.09,Default,,0,0,0,,If you follow this link, you'll
Dialogue: 0,0:34:11.09,0:34:13.45,Default,,0,0,0,,be able to get at the sample
Dialogue: 0,0:34:13.45,0:34:14.50,Default,,0,0,0,,code and other Core Motion
Dialogue: 0,0:34:14.50,0:34:15.29,Default,,0,0,0,,documentation.
Dialogue: 0,0:34:15.82,0:34:19.48,Default,,0,0,0,,We thank you all for being here
Dialogue: 0,0:34:19.48,0:34:20.60,Default,,0,0,0,,and have a wonderful evening.
Dialogue: 0,0:34:21.51,0:34:23.51,Default,,0,0,0,,[ Applause ]
