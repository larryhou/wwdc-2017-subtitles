00:00:07.516 --> 00:00:21.516 A:middle
[ Background Sounds ]

00:00:22.516 --> 00:00:26.126 A:middle
[ Clapping ]

00:00:26.626 --> 00:00:27.116 A:middle
&gt;&gt; Good morning.

00:00:31.036 --> 00:00:32.375 A:middle
My name is Bruce Nilo.

00:00:32.375 --> 00:00:33.326 A:middle
I'm one of the engineering

00:00:33.326 --> 00:00:34.676 A:middle
managers for UIKit.

00:00:35.936 --> 00:00:36.906 A:middle
And today we're going to be

00:00:36.906 --> 00:00:38.286 A:middle
discussing a new feature.

00:00:38.566 --> 00:00:39.696 A:middle
You might have heard that we're

00:00:39.696 --> 00:00:41.226 A:middle
introducing iOS 11.

00:00:42.256 --> 00:00:43.886 A:middle
This is going to be the first of

00:00:44.006 --> 00:00:45.806 A:middle
four dedicated sessions where

00:00:45.806 --> 00:00:47.406 A:middle
we're going to explore the

00:00:47.406 --> 00:00:49.516 A:middle
breadth and depth of the new

00:00:49.516 --> 00:00:51.236 A:middle
drag and drop APIs.

00:00:51.786 --> 00:00:53.296 A:middle
We're going to show you just how

00:00:53.296 --> 00:00:56.586 A:middle
easy it is using these APIs to

00:00:56.586 --> 00:00:58.926 A:middle
add drag and drop to your app in

00:00:58.926 --> 00:01:01.926 A:middle
ways that your users are going

00:01:01.926 --> 00:01:02.416 A:middle
to love.

00:01:04.226 --> 00:01:05.876 A:middle
We're going to start by talking

00:01:06.066 --> 00:01:08.666 A:middle
about the goals and concepts

00:01:08.996 --> 00:01:10.176 A:middle
behind drag and drop.

00:01:11.046 --> 00:01:13.366 A:middle
We're going to go deep into some

00:01:13.366 --> 00:01:15.036 A:middle
of the core APIs that you're

00:01:15.036 --> 00:01:18.056 A:middle
going to need to add drag and

00:01:18.056 --> 00:01:19.246 A:middle
drop to your apps.

00:01:19.356 --> 00:01:20.556 A:middle
And then we're going to follow

00:01:20.556 --> 00:01:21.906 A:middle
that up with a demonstration

00:01:21.906 --> 00:01:23.366 A:middle
showing just how easy they are

00:01:23.366 --> 00:01:23.906 A:middle
to use.

00:01:24.566 --> 00:01:25.946 A:middle
Finally, we're going to wrap up

00:01:25.946 --> 00:01:28.026 A:middle
with some suggestions about what

00:01:28.026 --> 00:01:30.006 A:middle
you can do to quickly adopt this

00:01:30.006 --> 00:01:30.976 A:middle
great new feature.

00:01:34.196 --> 00:01:35.806 A:middle
So what is drag and drop?

00:01:37.016 --> 00:01:38.366 A:middle
I think we all know that it's a

00:01:38.366 --> 00:01:40.026 A:middle
way to graphically move data

00:01:40.356 --> 00:01:43.546 A:middle
from one application to another

00:01:43.546 --> 00:01:45.146 A:middle
or even within the same

00:01:45.146 --> 00:01:45.886 A:middle
application.

00:01:49.516 --> 00:01:51.426 A:middle
When we set about designing drag

00:01:51.426 --> 00:01:53.156 A:middle
and drop and bringing it to iOS

00:01:53.156 --> 00:01:54.346 A:middle
we had some goals in mind.

00:01:55.226 --> 00:01:57.426 A:middle
We wanted it to be fast and

00:01:57.426 --> 00:01:58.236 A:middle
responsive.

00:01:59.086 --> 00:02:00.266 A:middle
In particular, we didn't want to

00:02:00.266 --> 00:02:01.876 A:middle
move or copy data that we didn't

00:02:01.876 --> 00:02:02.426 A:middle
need to.

00:02:02.426 --> 00:02:04.146 A:middle
Therefore we leveraged the

00:02:04.146 --> 00:02:05.626 A:middle
capabilities of the new file

00:02:05.626 --> 00:02:08.326 A:middle
system on iOS 11 and we made our

00:02:08.326 --> 00:02:10.425 A:middle
APIs -- we structured our APIs

00:02:10.425 --> 00:02:12.076 A:middle
in a way such that we never move

00:02:12.076 --> 00:02:13.756 A:middle
data unless it's requested.

00:02:13.756 --> 00:02:16.426 A:middle
And moreover, they're designed

00:02:16.426 --> 00:02:17.886 A:middle
to deliver the data to your

00:02:17.886 --> 00:02:19.676 A:middle
applications asynchronously.

00:02:19.676 --> 00:02:21.496 A:middle
So your apps never block the run

00:02:21.496 --> 00:02:23.156 A:middle
loop and prevent your users from

00:02:23.156 --> 00:02:25.016 A:middle
doing what they want to do.

00:02:25.616 --> 00:02:27.136 A:middle
We also wanted drag and drop to

00:02:27.136 --> 00:02:28.856 A:middle
be secure in a way that the

00:02:28.856 --> 00:02:30.116 A:middle
pasteboard isn't.

00:02:30.686 --> 00:02:32.456 A:middle
In particular data is only

00:02:32.456 --> 00:02:34.486 A:middle
visible to the destination app

00:02:34.486 --> 00:02:36.816 A:middle
location that your user

00:02:36.816 --> 00:02:38.756 A:middle
indicates they want to drop over

00:02:39.386 --> 00:02:40.736 A:middle
but that's not all.

00:02:40.976 --> 00:02:41.936 A:middle
We wanted our source

00:02:41.936 --> 00:02:44.136 A:middle
applications to have the ability

00:02:44.136 --> 00:02:46.326 A:middle
to restrict access to their data

00:02:46.656 --> 00:02:50.506 A:middle
to just their app, to other apps

00:02:50.506 --> 00:02:52.046 A:middle
developed by the same team, and

00:02:52.706 --> 00:02:54.886 A:middle
then of course, to all apps on

00:02:54.886 --> 00:02:55.456 A:middle
the system.

00:02:56.086 --> 00:02:58.936 A:middle
And when we GM, we will also be

00:02:58.936 --> 00:03:01.036 A:middle
supporting managed configuration

00:03:01.096 --> 00:03:02.966 A:middle
for our enterprise customers.

00:03:05.196 --> 00:03:08.466 A:middle
So finally, the most important

00:03:08.466 --> 00:03:10.166 A:middle
thing was that it be a great

00:03:10.166 --> 00:03:11.656 A:middle
multi-touch experience.

00:03:12.436 --> 00:03:13.786 A:middle
And to do this, it was clear we

00:03:13.786 --> 00:03:14.906 A:middle
were going to have reimagine

00:03:14.906 --> 00:03:16.736 A:middle
drag and drop in many important

00:03:16.736 --> 00:03:17.286 A:middle
ways.

00:03:18.036 --> 00:03:20.196 A:middle
So let's take a look at some

00:03:20.196 --> 00:03:22.126 A:middle
aspect of that experience we had

00:03:22.126 --> 00:03:22.616 A:middle
in mind.

00:03:23.746 --> 00:03:25.216 A:middle
And before I start this video,

00:03:25.216 --> 00:03:26.636 A:middle
let me give you some context.

00:03:26.706 --> 00:03:28.456 A:middle
I recently took some pictures of

00:03:28.456 --> 00:03:29.796 A:middle
the Empire State Building in New

00:03:29.796 --> 00:03:30.236 A:middle
York.

00:03:30.506 --> 00:03:31.696 A:middle
And in this video, you're going

00:03:31.696 --> 00:03:32.986 A:middle
to see me use a bunch of

00:03:32.986 --> 00:03:35.106 A:middle
different fingers to compose an

00:03:35.106 --> 00:03:36.226 A:middle
email to some friends.

00:03:37.356 --> 00:03:39.186 A:middle
We're going to start off in

00:03:39.186 --> 00:03:40.756 A:middle
Spotlight where we're going to

00:03:40.756 --> 00:03:41.566 A:middle
drag a link.

00:03:41.996 --> 00:03:43.146 A:middle
Swipe up the doc.

00:03:43.916 --> 00:03:45.786 A:middle
Hover over the Safari icon to

00:03:45.786 --> 00:03:47.526 A:middle
launch it and drop that link

00:03:47.526 --> 00:03:49.326 A:middle
onto the plus button to open up

00:03:49.326 --> 00:03:50.516 A:middle
a tab in Safari.

00:03:51.266 --> 00:03:52.776 A:middle
We're then going to select some

00:03:52.776 --> 00:03:55.716 A:middle
text long press and begin to

00:03:55.716 --> 00:03:57.206 A:middle
move and realize that wasn't

00:03:57.206 --> 00:03:59.106 A:middle
really the text I wanted at all.

00:03:59.686 --> 00:04:01.486 A:middle
I can easily cancel the drag.

00:04:01.486 --> 00:04:03.146 A:middle
Select the text that I care

00:04:03.146 --> 00:04:05.286 A:middle
about and again, the gesture is

00:04:05.286 --> 00:04:07.156 A:middle
a long press where the text

00:04:07.156 --> 00:04:08.886 A:middle
lifts up followed by a move.

00:04:09.706 --> 00:04:10.856 A:middle
At which point I can interact

00:04:10.856 --> 00:04:11.856 A:middle
with the rest of the system.

00:04:11.946 --> 00:04:13.936 A:middle
I can open the split so that I

00:04:13.936 --> 00:04:15.456 A:middle
can better see the photos that I

00:04:15.456 --> 00:04:16.176 A:middle
care about.

00:04:16.836 --> 00:04:18.805 A:middle
And now I can select a number of

00:04:18.805 --> 00:04:19.966 A:middle
the Empire State Building

00:04:19.966 --> 00:04:20.486 A:middle
photos.

00:04:20.736 --> 00:04:21.935 A:middle
You'll notice that I'm still

00:04:21.935 --> 00:04:23.556 A:middle
dragging the text with my other

00:04:23.556 --> 00:04:26.286 A:middle
hand and I'm adding photos to my

00:04:26.286 --> 00:04:26.556 A:middle
right.

00:04:26.556 --> 00:04:28.176 A:middle
I'm going to hand that

00:04:28.176 --> 00:04:29.796 A:middle
collection of photos to my left

00:04:29.796 --> 00:04:31.596 A:middle
hand so I can better swipe mail

00:04:32.146 --> 00:04:34.656 A:middle
into the right split.

00:04:34.656 --> 00:04:36.296 A:middle
I'm going to pass it over to my

00:04:36.296 --> 00:04:37.766 A:middle
right hand again so that I can

00:04:37.766 --> 00:04:39.326 A:middle
drop them into the mail compose

00:04:39.326 --> 00:04:39.586 A:middle
sheet.

00:04:40.516 --> 00:04:46.246 A:middle
[ Clapping ]

00:04:46.746 --> 00:04:47.836 A:middle
So that's what we mean by a

00:04:47.836 --> 00:04:49.526 A:middle
great multi-touch experience.

00:04:49.526 --> 00:04:50.616 A:middle
What did we see?

00:04:50.616 --> 00:04:52.446 A:middle
The interface is alive.

00:04:52.866 --> 00:04:54.966 A:middle
It's deeply integrated with all

00:04:54.966 --> 00:04:55.356 A:middle
of iOS.

00:04:55.576 --> 00:04:57.206 A:middle
You can drag out of Spotlight.

00:04:57.466 --> 00:04:58.816 A:middle
You can bring up the doc.

00:04:58.986 --> 00:05:00.416 A:middle
Indeed the system UI is

00:05:00.416 --> 00:05:02.196 A:middle
implemented on top of drag and

00:05:02.196 --> 00:05:02.756 A:middle
drop.

00:05:03.216 --> 00:05:05.106 A:middle
There's great visual feedback.

00:05:05.106 --> 00:05:06.706 A:middle
Fantastic animations.

00:05:06.706 --> 00:05:08.506 A:middle
You can hover over controls to

00:05:08.506 --> 00:05:09.286 A:middle
navigate.

00:05:09.526 --> 00:05:11.466 A:middle
You can add items to an existing

00:05:11.466 --> 00:05:12.336 A:middle
drag session.

00:05:12.616 --> 00:05:14.896 A:middle
You can transfer drags between

00:05:14.896 --> 00:05:16.136 A:middle
your fingers, between your

00:05:16.136 --> 00:05:17.886 A:middle
hands, and you can even start

00:05:17.886 --> 00:05:20.506 A:middle
multiple drag sessions at once.

00:05:21.656 --> 00:05:24.386 A:middle
So before we get into some of

00:05:24.386 --> 00:05:26.836 A:middle
the concepts, let me talk about

00:05:26.836 --> 00:05:28.546 A:middle
drag and drop on the iPhone.

00:05:29.356 --> 00:05:31.046 A:middle
We initially envisioned drag and

00:05:31.046 --> 00:05:32.896 A:middle
drop as an iPad productivity

00:05:32.936 --> 00:05:33.296 A:middle
feature.

00:05:33.906 --> 00:05:36.056 A:middle
However, all the APIs are in

00:05:36.116 --> 00:05:37.796 A:middle
fact available on the phone.

00:05:37.976 --> 00:05:39.786 A:middle
There is one restriction and

00:05:39.786 --> 00:05:41.426 A:middle
that is on the phone we only

00:05:41.426 --> 00:05:45.786 A:middle
allow drags to execute within

00:05:45.786 --> 00:05:46.846 A:middle
the same application.

00:05:48.436 --> 00:05:51.436 A:middle
So let's turn our attention to

00:05:51.436 --> 00:05:52.886 A:middle
some of the key concepts.

00:05:53.116 --> 00:05:54.166 A:middle
These are going to provide a

00:05:54.166 --> 00:05:56.606 A:middle
great basis for understanding

00:05:56.606 --> 00:05:57.586 A:middle
the APIs that follow.

00:06:04.166 --> 00:06:05.626 A:middle
So we're going to talk about the

00:06:05.626 --> 00:06:07.296 A:middle
phases of a drag session.

00:06:07.936 --> 00:06:09.726 A:middle
We break a drag session into

00:06:09.726 --> 00:06:12.016 A:middle
four of them in which both the

00:06:12.016 --> 00:06:13.326 A:middle
source application and the

00:06:13.326 --> 00:06:15.016 A:middle
destination application have a

00:06:15.016 --> 00:06:15.816 A:middle
part to play.

00:06:16.346 --> 00:06:17.876 A:middle
And it all begins with a lift.

00:06:18.316 --> 00:06:19.796 A:middle
In the lift that's when you long

00:06:19.796 --> 00:06:21.486 A:middle
press and the view lifts out of

00:06:21.486 --> 00:06:23.526 A:middle
the screen and then when the

00:06:23.526 --> 00:06:25.686 A:middle
user begins to drag, you enter

00:06:25.686 --> 00:06:26.906 A:middle
the drag phase.

00:06:27.326 --> 00:06:29.186 A:middle
In the drag phase you can update

00:06:29.236 --> 00:06:30.796 A:middle
the previews of what the things

00:06:30.796 --> 00:06:32.256 A:middle
look like as you're dragging.

00:06:32.256 --> 00:06:33.766 A:middle
You can tap to add.

00:06:33.766 --> 00:06:35.186 A:middle
You can hover to navigate.

00:06:36.286 --> 00:06:37.286 A:middle
When the user lifts their

00:06:37.286 --> 00:06:39.146 A:middle
finger, one of two things can

00:06:39.466 --> 00:06:39.816 A:middle
happen.

00:06:39.816 --> 00:06:42.856 A:middle
Either the drag is cancelled or

00:06:42.856 --> 00:06:44.556 A:middle
you actually want those items

00:06:44.556 --> 00:06:46.636 A:middle
dropped where the user lifted

00:06:46.636 --> 00:06:47.226 A:middle
their finger.

00:06:47.336 --> 00:06:49.556 A:middle
We provide great targeting APIs

00:06:49.556 --> 00:06:50.686 A:middle
to make those set down

00:06:50.686 --> 00:06:52.356 A:middle
animations look fantastic.

00:06:53.626 --> 00:06:55.026 A:middle
And finally we enter the data

00:06:55.026 --> 00:06:56.676 A:middle
transfer phase and that's the

00:06:56.676 --> 00:06:57.896 A:middle
phase where the destination

00:06:57.896 --> 00:06:59.646 A:middle
application requests the data

00:06:59.646 --> 00:07:00.526 A:middle
from the source.

00:07:01.066 --> 00:07:05.226 A:middle
So before we go into the

00:07:05.226 --> 00:07:06.936 A:middle
building blocks of the drag

00:07:06.936 --> 00:07:08.906 A:middle
APIs, let me take a moment to

00:07:08.906 --> 00:07:10.566 A:middle
say that it's all built around a

00:07:10.566 --> 00:07:12.276 A:middle
concept called an interaction.

00:07:12.326 --> 00:07:14.306 A:middle
An interaction is a really

00:07:14.306 --> 00:07:15.286 A:middle
simple concept.

00:07:15.576 --> 00:07:17.676 A:middle
It's basically takes an input

00:07:17.676 --> 00:07:19.556 A:middle
and generates an effect of some

00:07:19.606 --> 00:07:19.976 A:middle
sort.

00:07:20.936 --> 00:07:22.726 A:middle
The drag and drop APIs are built

00:07:22.726 --> 00:07:24.396 A:middle
around this for a couple of

00:07:24.396 --> 00:07:25.026 A:middle
reasons.

00:07:25.206 --> 00:07:27.076 A:middle
One is is it lets us to provide

00:07:27.076 --> 00:07:28.856 A:middle
a consistent look and feel for

00:07:28.856 --> 00:07:30.636 A:middle
drag and drop across the system

00:07:31.276 --> 00:07:33.026 A:middle
but most importantly, it makes

00:07:33.026 --> 00:07:35.606 A:middle
it really easy for you to add

00:07:36.406 --> 00:07:37.946 A:middle
drag and drop to your app

00:07:37.946 --> 00:07:39.816 A:middle
without having to rearrange your

00:07:39.816 --> 00:07:41.456 A:middle
code or your view hierarchies.

00:07:41.926 --> 00:07:43.186 A:middle
So let me introduce the drag

00:07:43.186 --> 00:07:43.866 A:middle
interaction.

00:07:44.486 --> 00:07:45.796 A:middle
It's attached to a view.

00:07:45.796 --> 00:07:47.426 A:middle
And as you heard, perhaps, in

00:07:47.426 --> 00:07:49.246 A:middle
the previous talk it's very

00:07:49.246 --> 00:07:51.086 A:middle
similar to a gesture recognizer.

00:07:51.086 --> 00:07:52.626 A:middle
If you've ever used then the

00:07:52.626 --> 00:07:54.136 A:middle
pattern is the same.

00:07:54.526 --> 00:07:55.886 A:middle
You create an object with a

00:07:55.886 --> 00:07:57.686 A:middle
delegate and it is via the

00:07:57.686 --> 00:07:59.766 A:middle
delegate that you interact with

00:07:59.766 --> 00:08:00.296 A:middle
the system.

00:08:00.956 --> 00:08:03.096 A:middle
So for example, the delegate is

00:08:03.096 --> 00:08:05.356 A:middle
asked to return the drag items

00:08:05.466 --> 00:08:07.196 A:middle
just before the lift animation

00:08:07.256 --> 00:08:07.826 A:middle
happens.

00:08:08.326 --> 00:08:11.256 A:middle
This is the one required method

00:08:11.496 --> 00:08:13.396 A:middle
for a drag interaction delegate.

00:08:14.446 --> 00:08:16.536 A:middle
The delegate is free to return

00:08:16.536 --> 00:08:18.446 A:middle
no items whatsoever in which

00:08:18.446 --> 00:08:20.216 A:middle
case the gesture will fail and

00:08:20.216 --> 00:08:21.976 A:middle
the touch will be processed as

00:08:21.976 --> 00:08:22.346 A:middle
normal.

00:08:22.916 --> 00:08:25.366 A:middle
Okay. So what's a drag item?

00:08:25.916 --> 00:08:28.216 A:middle
Well the drag item is really the

00:08:28.216 --> 00:08:29.266 A:middle
whole point of it all.

00:08:29.486 --> 00:08:31.356 A:middle
It's the model object that's

00:08:31.356 --> 00:08:33.316 A:middle
associated with the view that

00:08:33.316 --> 00:08:35.666 A:middle
the interaction is attached to.

00:08:40.556 --> 00:08:43.135 A:middle
Drag item for drag and drop

00:08:43.135 --> 00:08:45.496 A:middle
embodies both what the items

00:08:45.496 --> 00:08:46.786 A:middle
look like as they're moved

00:08:46.786 --> 00:08:48.946 A:middle
around the screen, the preview,

00:08:49.196 --> 00:08:50.686 A:middle
as well as a promise by the

00:08:50.686 --> 00:08:52.866 A:middle
source application to deliver

00:08:52.866 --> 00:08:54.946 A:middle
the data to the destination when

00:08:54.946 --> 00:08:55.886 A:middle
it requests.

00:08:57.516 --> 00:08:59.476 A:middle
We call these promises item

00:08:59.476 --> 00:09:00.466 A:middle
providers and they're

00:09:00.466 --> 00:09:02.766 A:middle
implemented in iOS 11 by some

00:09:02.766 --> 00:09:04.446 A:middle
new additions to NS item

00:09:04.446 --> 00:09:04.986 A:middle
provider.

00:09:05.566 --> 00:09:09.286 A:middle
So how do you enable a drop?

00:09:10.746 --> 00:09:11.446 A:middle
It's easy.

00:09:12.776 --> 00:09:14.176 A:middle
The first way to do it is to

00:09:14.176 --> 00:09:17.146 A:middle
take advantage of a new property

00:09:17.146 --> 00:09:19.086 A:middle
that we added to UIResponder

00:09:19.086 --> 00:09:20.556 A:middle
called paste configuration.

00:09:21.456 --> 00:09:23.056 A:middle
What is a paste configuration?

00:09:23.636 --> 00:09:25.486 A:middle
Basically it's a declarative way

00:09:25.806 --> 00:09:27.736 A:middle
of specifying the types that

00:09:27.736 --> 00:09:29.536 A:middle
your responder can either accept

00:09:29.536 --> 00:09:31.466 A:middle
as a paste or as a drop.

00:09:32.356 --> 00:09:33.496 A:middle
To take advantage of paste

00:09:33.496 --> 00:09:34.706 A:middle
configurations, you need to

00:09:34.706 --> 00:09:35.986 A:middle
implement a new method called

00:09:35.986 --> 00:09:37.396 A:middle
pasteitemProviders.

00:09:37.506 --> 00:09:39.296 A:middle
And if you do, you will be able

00:09:39.296 --> 00:09:41.276 A:middle
to support paste and drag and

00:09:41.276 --> 00:09:43.446 A:middle
drop -- and drop out of the box.

00:09:43.906 --> 00:09:47.596 A:middle
However for more sophisticated

00:09:47.596 --> 00:09:48.936 A:middle
drop interactions, you're going

00:09:48.936 --> 00:09:49.866 A:middle
to want to add a drop

00:09:49.866 --> 00:09:51.116 A:middle
interaction to your view.

00:09:51.786 --> 00:09:53.436 A:middle
And you do so in a very similar

00:09:53.436 --> 00:09:54.546 A:middle
way that you add a drag

00:09:54.546 --> 00:09:55.256 A:middle
interaction.

00:09:56.016 --> 00:09:57.686 A:middle
And when you do, when you are

00:09:57.686 --> 00:09:59.516 A:middle
dragging over a view that has

00:09:59.516 --> 00:10:00.886 A:middle
such as interaction, we're going

00:10:00.886 --> 00:10:02.796 A:middle
to query that delegate to tell

00:10:02.796 --> 00:10:03.916 A:middle
us whether or not it's

00:10:03.916 --> 00:10:05.226 A:middle
interested in the items that are

00:10:05.226 --> 00:10:06.616 A:middle
actually being dragged over it

00:10:06.616 --> 00:10:09.056 A:middle
and it will reply with an

00:10:09.056 --> 00:10:11.606 A:middle
intention or a proposal as we

00:10:11.606 --> 00:10:12.056 A:middle
call it.

00:10:13.406 --> 00:10:15.946 A:middle
Now on touch up, the delegate

00:10:15.946 --> 00:10:17.366 A:middle
might have said not interested

00:10:17.366 --> 00:10:18.916 A:middle
in which case the drag will be

00:10:18.916 --> 00:10:19.606 A:middle
cancelled.

00:10:19.606 --> 00:10:21.236 A:middle
And all those previews are going

00:10:21.236 --> 00:10:22.566 A:middle
to animate back to whence they

00:10:22.566 --> 00:10:24.246 A:middle
came or off the screen to

00:10:24.246 --> 00:10:25.726 A:middle
indicate that it was cancelled.

00:10:26.456 --> 00:10:27.966 A:middle
However the more interesting bit

00:10:27.966 --> 00:10:30.386 A:middle
is when the delegate says yeah,

00:10:30.386 --> 00:10:32.216 A:middle
I'm interested in those items.

00:10:32.466 --> 00:10:33.666 A:middle
In which case, the system is

00:10:33.666 --> 00:10:35.976 A:middle
going to say perform the drop.

00:10:37.016 --> 00:10:38.666 A:middle
And it is within the scope of

00:10:38.666 --> 00:10:40.756 A:middle
this call back and it is only

00:10:40.756 --> 00:10:42.136 A:middle
within the scope of this call

00:10:42.136 --> 00:10:44.156 A:middle
back, that the delegate can

00:10:44.156 --> 00:10:46.936 A:middle
request the items that's

00:10:47.006 --> 00:10:50.776 A:middle
interested in or more precisely

00:10:50.776 --> 00:10:52.296 A:middle
the representations of the

00:10:52.296 --> 00:10:52.826 A:middle
items.

00:10:53.886 --> 00:10:55.406 A:middle
And once -- and when it does so,

00:10:55.406 --> 00:10:56.516 A:middle
at that point, the source

00:10:56.516 --> 00:10:58.046 A:middle
application will fulfill its

00:10:58.046 --> 00:10:59.836 A:middle
promise and the system will

00:10:59.836 --> 00:11:01.626 A:middle
deliver that data back to the

00:11:01.626 --> 00:11:03.696 A:middle
destination app asynchronously.

00:11:06.046 --> 00:11:08.696 A:middle
Okay. There's a lot more to

00:11:08.696 --> 00:11:09.416 A:middle
discuss.

00:11:09.526 --> 00:11:11.026 A:middle
For example, what's the life

00:11:11.026 --> 00:11:13.076 A:middle
cycle of a drag session from the

00:11:13.076 --> 00:11:15.116 A:middle
perspective of the destination

00:11:15.116 --> 00:11:15.956 A:middle
or the source?

00:11:16.846 --> 00:11:17.986 A:middle
How do you make your set down

00:11:17.986 --> 00:11:19.406 A:middle
transitions look great?

00:11:20.396 --> 00:11:21.456 A:middle
What do you do if the data

00:11:21.456 --> 00:11:23.036 A:middle
transfer takes a long time to

00:11:23.036 --> 00:11:23.716 A:middle
complete?

00:11:24.796 --> 00:11:26.066 A:middle
Before we answer some of these

00:11:26.066 --> 00:11:27.226 A:middle
questions, it's going to help to

00:11:27.226 --> 00:11:28.596 A:middle
look at this picture because

00:11:28.596 --> 00:11:29.696 A:middle
it's going to give you a good

00:11:29.696 --> 00:11:31.566 A:middle
bird's eye view of how our API

00:11:31.686 --> 00:11:32.466 A:middle
is structured.

00:11:32.826 --> 00:11:34.046 A:middle
On the left in blue, you're

00:11:34.046 --> 00:11:35.746 A:middle
going to see those objects and

00:11:35.746 --> 00:11:37.436 A:middle
classes that the source

00:11:37.436 --> 00:11:39.546 A:middle
application is going to use to

00:11:39.546 --> 00:11:40.706 A:middle
realize a drag.

00:11:41.166 --> 00:11:42.456 A:middle
And on the right, what the

00:11:42.456 --> 00:11:44.776 A:middle
destination application uses to

00:11:44.776 --> 00:11:47.416 A:middle
realize a drop and in the middle

00:11:47.416 --> 00:11:49.456 A:middle
are those objects and classes

00:11:49.756 --> 00:11:51.196 A:middle
that both the source and the

00:11:51.196 --> 00:11:54.816 A:middle
destination use to fulfill the

00:11:54.816 --> 00:11:56.726 A:middle
contract of drag and drop.

00:11:57.336 --> 00:11:59.406 A:middle
Now to discuss these

00:11:59.406 --> 00:12:01.036 A:middle
foundational classes in more

00:12:01.036 --> 00:12:03.076 A:middle
detail, I'm going to bring Kurt

00:12:03.076 --> 00:12:04.736 A:middle
Revis, my colleague, up on the

00:12:04.736 --> 00:12:05.226 A:middle
stage.

00:12:06.516 --> 00:12:11.806 A:middle
[ Clapping ]

00:12:12.306 --> 00:12:13.006 A:middle
&gt;&gt; Thank you, Bruce.

00:12:13.966 --> 00:12:15.156 A:middle
So Bruce gave you the big

00:12:15.156 --> 00:12:16.646 A:middle
picture of drag and drop.

00:12:16.646 --> 00:12:18.176 A:middle
Now I'm going to tell you more

00:12:18.176 --> 00:12:19.786 A:middle
about using the drag and drop

00:12:19.786 --> 00:12:20.116 A:middle
API.

00:12:21.366 --> 00:12:22.536 A:middle
So I'll talk about three things.

00:12:22.536 --> 00:12:24.266 A:middle
I'll give you a timeline about

00:12:24.266 --> 00:12:25.516 A:middle
what happens during drag and

00:12:25.516 --> 00:12:26.156 A:middle
drop.

00:12:26.546 --> 00:12:27.556 A:middle
I'll introduce you to these

00:12:27.556 --> 00:12:29.526 A:middle
essential API methods that you

00:12:29.526 --> 00:12:30.866 A:middle
need to implement to get drag

00:12:30.866 --> 00:12:32.246 A:middle
and drop working in your app.

00:12:32.546 --> 00:12:33.996 A:middle
And then finally, I'll introduce

00:12:33.996 --> 00:12:34.866 A:middle
you to the full API.

00:12:35.806 --> 00:12:38.086 A:middle
So drag and drop looks pretty

00:12:38.086 --> 00:12:38.716 A:middle
simple, right?

00:12:38.716 --> 00:12:39.976 A:middle
There's an object on the screen.

00:12:40.296 --> 00:12:41.866 A:middle
The user touches it, it lifts

00:12:41.866 --> 00:12:44.996 A:middle
up, then they move around inside

00:12:44.996 --> 00:12:46.246 A:middle
that app maybe over to a

00:12:46.246 --> 00:12:46.626 A:middle
different app.

00:12:47.456 --> 00:12:48.516 A:middle
Finally, they release their

00:12:48.516 --> 00:12:48.986 A:middle
touch.

00:12:49.146 --> 00:12:49.796 A:middle
The touch ends.

00:12:50.306 --> 00:12:51.566 A:middle
The object drops down into its

00:12:51.566 --> 00:12:52.186 A:middle
new position.

00:12:52.886 --> 00:12:53.916 A:middle
Of course, there's a lot more

00:12:53.916 --> 00:12:54.816 A:middle
going on underneath.

00:12:55.176 --> 00:12:56.726 A:middle
So let's talk about what happens

00:12:56.786 --> 00:12:56.936 A:middle
when.

00:12:58.526 --> 00:13:00.156 A:middle
It all starts when a touch comes

00:13:00.156 --> 00:13:02.286 A:middle
down on a view that has a drag

00:13:02.286 --> 00:13:02.946 A:middle
interaction.

00:13:03.916 --> 00:13:05.266 A:middle
UIKit sets up this lift

00:13:05.266 --> 00:13:07.286 A:middle
animation and then as that touch

00:13:07.286 --> 00:13:08.946 A:middle
stays down, we run that lift

00:13:08.946 --> 00:13:10.156 A:middle
animation all the way to its

00:13:10.156 --> 00:13:10.636 A:middle
completion.

00:13:11.796 --> 00:13:13.566 A:middle
Then when the user moves their

00:13:13.566 --> 00:13:15.156 A:middle
finger far enough, we start the

00:13:15.156 --> 00:13:15.966 A:middle
drag in earnest.

00:13:16.606 --> 00:13:17.806 A:middle
The object lifts up over

00:13:17.806 --> 00:13:19.206 A:middle
everything else in the view and

00:13:19.206 --> 00:13:21.166 A:middle
over all apps.

00:13:21.166 --> 00:13:23.046 A:middle
And the user can drag it around

00:13:23.046 --> 00:13:23.576 A:middle
on the screen.

00:13:24.676 --> 00:13:25.826 A:middle
Finally, at some point, the user

00:13:25.826 --> 00:13:26.936 A:middle
is going to release their touch.

00:13:27.196 --> 00:13:28.536 A:middle
And what we do depends on where

00:13:28.536 --> 00:13:29.076 A:middle
that was.

00:13:30.106 --> 00:13:32.136 A:middle
The first possibility is that

00:13:32.136 --> 00:13:33.466 A:middle
the view underneath is not

00:13:33.466 --> 00:13:34.396 A:middle
interested in accepting the

00:13:34.396 --> 00:13:34.696 A:middle
drop.

00:13:35.116 --> 00:13:36.206 A:middle
In that case, we run a short

00:13:36.236 --> 00:13:37.356 A:middle
cancellation animation.

00:13:38.606 --> 00:13:40.106 A:middle
Stepping back, maybe the

00:13:40.106 --> 00:13:42.216 A:middle
location was on a view that

00:13:42.216 --> 00:13:43.276 A:middle
wanted to accept the drop.

00:13:43.906 --> 00:13:44.936 A:middle
In that case, there's more to

00:13:44.936 --> 00:13:45.226 A:middle
do.

00:13:45.936 --> 00:13:48.136 A:middle
We ask the delegate of the drop

00:13:48.136 --> 00:13:49.736 A:middle
interaction to perform the drop,

00:13:49.736 --> 00:13:50.606 A:middle
to request the data.

00:13:51.216 --> 00:13:52.366 A:middle
And then two things happen in

00:13:52.366 --> 00:13:52.846 A:middle
parallel.

00:13:53.806 --> 00:13:55.386 A:middle
We run the drop animations to

00:13:55.456 --> 00:13:56.576 A:middle
animate those things into their

00:13:56.576 --> 00:13:57.376 A:middle
final positions.

00:13:58.466 --> 00:13:59.896 A:middle
And we do the data transfer.

00:13:59.896 --> 00:14:02.756 A:middle
So those two boxes are the same

00:14:02.756 --> 00:14:04.246 A:middle
size but really that data

00:14:04.246 --> 00:14:05.586 A:middle
transfer is asynchronous and

00:14:05.676 --> 00:14:07.066 A:middle
nobody knows how long it's going

00:14:07.066 --> 00:14:08.126 A:middle
to take ahead of time.

00:14:08.956 --> 00:14:09.806 A:middle
It might be very quick.

00:14:10.146 --> 00:14:11.466 A:middle
It might -- excuse me it might

00:14:11.466 --> 00:14:12.036 A:middle
be very quick.

00:14:12.236 --> 00:14:13.856 A:middle
In fact it might be faster than

00:14:13.856 --> 00:14:14.656 A:middle
drop animations.

00:14:15.626 --> 00:14:17.006 A:middle
Or it could take substantially

00:14:17.006 --> 00:14:18.296 A:middle
longer, for instance, if the

00:14:18.296 --> 00:14:21.916 A:middle
data needs to be downloaded.

00:14:21.986 --> 00:14:23.656 A:middle
Now you see this whole timeline.

00:14:23.656 --> 00:14:24.436 A:middle
That's everything that can

00:14:24.436 --> 00:14:24.866 A:middle
happen.

00:14:25.246 --> 00:14:26.656 A:middle
UIKit's responsible for running

00:14:26.656 --> 00:14:29.046 A:middle
this timeline but we need your

00:14:29.096 --> 00:14:30.416 A:middle
help at your three specific

00:14:30.466 --> 00:14:31.026 A:middle
places.

00:14:31.776 --> 00:14:33.036 A:middle
The first one is when the drag

00:14:33.036 --> 00:14:33.616 A:middle
starts.

00:14:33.686 --> 00:14:35.046 A:middle
We need to find the items to be

00:14:35.046 --> 00:14:35.526 A:middle
dragged.

00:14:36.146 --> 00:14:37.446 A:middle
We do that by calling this

00:14:37.446 --> 00:14:39.546 A:middle
required method on the drag

00:14:39.546 --> 00:14:40.536 A:middle
interaction delegate.

00:14:41.556 --> 00:14:42.406 A:middle
Drag interaction

00:14:42.456 --> 00:14:44.016 A:middle
itemsForBeginning session.

00:14:44.266 --> 00:14:45.896 A:middle
You return us an array of drag

00:14:45.896 --> 00:14:46.206 A:middle
items.

00:14:47.116 --> 00:14:48.156 A:middle
I'll give an example here.

00:14:48.606 --> 00:14:49.466 A:middle
We're going to drag just a

00:14:49.466 --> 00:14:50.276 A:middle
single string.

00:14:50.846 --> 00:14:52.056 A:middle
So my object will be the string

00:14:52.106 --> 00:14:52.886 A:middle
hello world.

00:14:53.576 --> 00:14:55.076 A:middle
I put this inside of an

00:14:55.076 --> 00:14:55.946 A:middle
NSitemProvider.

00:14:56.006 --> 00:14:57.926 A:middle
This is the data representation,

00:14:57.966 --> 00:14:59.296 A:middle
data transfer level of things.

00:15:00.156 --> 00:15:01.256 A:middle
Now note that I'm casting this

00:15:01.256 --> 00:15:02.116 A:middle
to an NS string.

00:15:02.116 --> 00:15:03.566 A:middle
This is because NS item provider

00:15:03.566 --> 00:15:04.926 A:middle
only deals with objects.

00:15:05.066 --> 00:15:06.356 A:middle
It doesn't deal with swift

00:15:06.446 --> 00:15:06.956 A:middle
struts.

00:15:08.336 --> 00:15:09.856 A:middle
Next, I make a drag item.

00:15:09.966 --> 00:15:11.236 A:middle
I go up to the drag and drop

00:15:11.236 --> 00:15:11.516 A:middle
level.

00:15:12.236 --> 00:15:13.536 A:middle
So I make a UI drag item with

00:15:13.536 --> 00:15:15.206 A:middle
that item provider and finally I

00:15:15.206 --> 00:15:17.146 A:middle
just return that single item.

00:15:18.236 --> 00:15:19.996 A:middle
The next API essential is on the

00:15:19.996 --> 00:15:20.686 A:middle
drop side.

00:15:21.156 --> 00:15:22.896 A:middle
Now while you're dragging that

00:15:22.896 --> 00:15:24.196 A:middle
object around on the screen,

00:15:24.576 --> 00:15:26.346 A:middle
UIKit wants to know at every

00:15:26.346 --> 00:15:27.806 A:middle
point what would happen if the

00:15:27.806 --> 00:15:29.136 A:middle
user lifted their finger right

00:15:29.176 --> 00:15:29.556 A:middle
here and now.

00:15:30.616 --> 00:15:32.166 A:middle
You tell us that by implementing

00:15:32.166 --> 00:15:33.746 A:middle
this method on the drop

00:15:33.746 --> 00:15:34.666 A:middle
interaction delegate.

00:15:35.236 --> 00:15:36.116 A:middle
Drop interaction

00:15:36.586 --> 00:15:38.776 A:middle
sessionDidUpdate and you return

00:15:38.776 --> 00:15:39.726 A:middle
a drop proposal.

00:15:40.286 --> 00:15:41.466 A:middle
So this is called when we enter

00:15:41.466 --> 00:15:42.726 A:middle
your view and then also when it

00:15:42.726 --> 00:15:43.906 A:middle
moves around inside of your

00:15:43.946 --> 00:15:44.226 A:middle
view.

00:15:44.686 --> 00:15:45.996 A:middle
Every time you can return a new

00:15:45.996 --> 00:15:46.586 A:middle
proposal.

00:15:47.716 --> 00:15:49.386 A:middle
You make a UIDropProposal and

00:15:49.386 --> 00:15:51.496 A:middle
use a drop operation to do that.

00:15:52.826 --> 00:15:54.406 A:middle
Now a drop operation is enum.

00:15:54.406 --> 00:15:55.816 A:middle
There's four possible values.

00:15:55.856 --> 00:15:56.986 A:middle
I'll talk about these in order

00:15:56.986 --> 00:15:58.816 A:middle
from most likely to least

00:15:58.816 --> 00:15:59.156 A:middle
likely.

00:15:59.916 --> 00:16:00.876 A:middle
The first one's cancel.

00:16:01.646 --> 00:16:02.536 A:middle
This is saying that when the

00:16:02.536 --> 00:16:03.846 A:middle
user lifts their finger, I don't

00:16:03.846 --> 00:16:04.756 A:middle
want to accept the drag.

00:16:04.806 --> 00:16:05.846 A:middle
Just cancel the drag.

00:16:07.256 --> 00:16:08.176 A:middle
Second is copy.

00:16:08.566 --> 00:16:09.466 A:middle
This is the opposite.

00:16:09.466 --> 00:16:10.696 A:middle
You're saying I do want that

00:16:10.696 --> 00:16:10.886 A:middle
data.

00:16:11.036 --> 00:16:12.736 A:middle
I will accept that data and copy

00:16:12.736 --> 00:16:14.026 A:middle
it into the view that the user

00:16:14.026 --> 00:16:14.736 A:middle
is dropping on.

00:16:15.426 --> 00:16:17.026 A:middle
Most of the time this is what

00:16:17.026 --> 00:16:17.806 A:middle
you should propose.

00:16:18.396 --> 00:16:20.456 A:middle
In general on iOS drag and drop

00:16:20.456 --> 00:16:21.616 A:middle
copies from one place to

00:16:21.616 --> 00:16:21.886 A:middle
another.

00:16:23.396 --> 00:16:24.296 A:middle
The next one is move.

00:16:24.596 --> 00:16:26.496 A:middle
This is a lot like copy but

00:16:26.496 --> 00:16:27.746 A:middle
you're indicating that you want

00:16:27.746 --> 00:16:29.256 A:middle
the data to be moved from the

00:16:29.256 --> 00:16:30.556 A:middle
source to the destination.

00:16:31.496 --> 00:16:32.746 A:middle
This is a bit more complicated

00:16:32.746 --> 00:16:34.216 A:middle
and you should know that UIKit

00:16:34.426 --> 00:16:36.096 A:middle
can't make it look like a move

00:16:36.196 --> 00:16:36.626 A:middle
for you.

00:16:36.756 --> 00:16:37.746 A:middle
We just give you the data the

00:16:37.746 --> 00:16:39.206 A:middle
exact same way as with a copy.

00:16:39.946 --> 00:16:41.676 A:middle
Your delegates need to cooperate

00:16:42.046 --> 00:16:43.086 A:middle
in order to make it look like a

00:16:43.086 --> 00:16:43.366 A:middle
move.

00:16:44.446 --> 00:16:46.246 A:middle
So this is only allowed within a

00:16:46.246 --> 00:16:47.166 A:middle
single app.

00:16:47.836 --> 00:16:49.406 A:middle
Your drag interaction delegate

00:16:49.406 --> 00:16:50.156 A:middle
must allow it.

00:16:50.576 --> 00:16:51.556 A:middle
There's a delegate method where

00:16:51.556 --> 00:16:52.866 A:middle
we'll ask if it does allow it.

00:16:54.166 --> 00:16:55.696 A:middle
And the drop interaction should

00:16:55.696 --> 00:16:57.246 A:middle
check this property on the drop

00:16:57.246 --> 00:16:59.006 A:middle
session allowsMoveOperation.

00:16:59.336 --> 00:17:00.616 A:middle
If that's true, then you can

00:17:00.716 --> 00:17:02.096 A:middle
propose the move operation.

00:17:02.546 --> 00:17:05.636 A:middle
Next the forbidden operation.

00:17:05.925 --> 00:17:07.236 A:middle
This is just like cancel except

00:17:07.236 --> 00:17:08.415 A:middle
that we show this additional

00:17:08.415 --> 00:17:10.386 A:middle
badge on the drag item.

00:17:11.096 --> 00:17:12.636 A:middle
This is telling the user that

00:17:12.856 --> 00:17:14.185 A:middle
although normally you could drop

00:17:14.185 --> 00:17:14.445 A:middle
here.

00:17:14.445 --> 00:17:15.746 A:middle
In this specific case, you

00:17:15.746 --> 00:17:15.986 A:middle
can't.

00:17:16.935 --> 00:17:18.076 A:middle
For instance, if I was dragging

00:17:18.076 --> 00:17:19.356 A:middle
an image over a folder.

00:17:19.356 --> 00:17:20.506 A:middle
Normally that would be allowed

00:17:20.886 --> 00:17:22.036 A:middle
but if that folder was read

00:17:22.036 --> 00:17:23.656 A:middle
only, then I would use the

00:17:23.656 --> 00:17:25.076 A:middle
forbidden badge to tell the user

00:17:25.076 --> 00:17:26.266 A:middle
that it can't happen right now.

00:17:26.955 --> 00:17:28.175 A:middle
So this is a bit forbidding.

00:17:28.175 --> 00:17:29.556 A:middle
So don't use it all the time.

00:17:29.806 --> 00:17:32.926 A:middle
Use it sparingly.

00:17:32.926 --> 00:17:35.216 A:middle
The next API essential, the

00:17:35.216 --> 00:17:36.706 A:middle
third one, you proposed an

00:17:36.706 --> 00:17:37.536 A:middle
operation earlier.

00:17:37.536 --> 00:17:39.036 A:middle
Now if it's a copy or move you

00:17:39.036 --> 00:17:40.496 A:middle
need to perform that operation.

00:17:41.426 --> 00:17:43.036 A:middle
So on the drop delegate, drop

00:17:43.036 --> 00:17:44.286 A:middle
interaction delegate you

00:17:44.286 --> 00:17:46.416 A:middle
implement drop interaction

00:17:47.046 --> 00:17:47.796 A:middle
perform drop.

00:17:48.366 --> 00:17:49.676 A:middle
And here's your chance to load

00:17:49.676 --> 00:17:50.676 A:middle
data from the session.

00:17:50.796 --> 00:17:52.006 A:middle
In fact, this is the only place

00:17:52.006 --> 00:17:52.486 A:middle
you can do that.

00:17:53.136 --> 00:17:54.946 A:middle
So I'll show two examples of

00:17:54.946 --> 00:17:56.136 A:middle
loading data from the items in

00:17:56.136 --> 00:17:56.526 A:middle
the session.

00:17:57.476 --> 00:17:58.766 A:middle
The first one is a simple one.

00:17:58.766 --> 00:17:59.946 A:middle
We'll use a convenience method

00:17:59.946 --> 00:18:02.076 A:middle
on the session called session

00:18:02.076 --> 00:18:03.196 A:middle
load objects of class.

00:18:03.296 --> 00:18:04.606 A:middle
Here I'm using UIImage.

00:18:05.486 --> 00:18:07.136 A:middle
I called this and I provide a

00:18:07.136 --> 00:18:09.176 A:middle
closure to be called back later

00:18:09.176 --> 00:18:11.026 A:middle
on when those objects are

00:18:11.026 --> 00:18:11.506 A:middle
available.

00:18:12.526 --> 00:18:14.306 A:middle
When they come in, I can iterate

00:18:14.306 --> 00:18:14.996 A:middle
through that list.

00:18:15.166 --> 00:18:17.436 A:middle
I know they will be UIImages, so

00:18:17.436 --> 00:18:19.026 A:middle
it's okay to do this force cast

00:18:19.026 --> 00:18:19.316 A:middle
here.

00:18:19.316 --> 00:18:21.326 A:middle
And then I can update my UI

00:18:21.326 --> 00:18:21.836 A:middle
directly.

00:18:22.146 --> 00:18:23.556 A:middle
So here I'm changing the image

00:18:23.556 --> 00:18:24.606 A:middle
inside of an image view.

00:18:25.546 --> 00:18:26.926 A:middle
So this convenience method calls

00:18:26.926 --> 00:18:28.706 A:middle
me back on the main queue.

00:18:28.706 --> 00:18:30.246 A:middle
I can update my UI right there

00:18:30.246 --> 00:18:30.456 A:middle
and then.

00:18:31.926 --> 00:18:33.206 A:middle
Here's a more complex example.

00:18:33.946 --> 00:18:35.066 A:middle
I'm going to iterate through the

00:18:35.066 --> 00:18:36.806 A:middle
items -- the UI drag items --

00:18:36.806 --> 00:18:37.736 A:middle
inside of my session.

00:18:37.736 --> 00:18:38.826 A:middle
I could do different things for

00:18:38.826 --> 00:18:39.946 A:middle
different ones if I wanted to.

00:18:41.266 --> 00:18:43.606 A:middle
I -- now I'll take for an item.

00:18:43.716 --> 00:18:45.476 A:middle
I will use the NS item provider.

00:18:45.576 --> 00:18:47.406 A:middle
Lower level API for loading

00:18:47.406 --> 00:18:47.886 A:middle
objects.

00:18:48.036 --> 00:18:49.066 A:middle
So I'll load an object of a

00:18:49.066 --> 00:18:50.486 A:middle
class, again UIImage.

00:18:51.126 --> 00:18:52.356 A:middle
You see that my closure gets two

00:18:52.356 --> 00:18:52.926 A:middle
things now.

00:18:53.036 --> 00:18:55.766 A:middle
It's get an object and it also

00:18:55.766 --> 00:18:57.306 A:middle
gets this error object.

00:18:58.106 --> 00:18:59.096 A:middle
The other thing about this is

00:18:59.096 --> 00:19:00.186 A:middle
that it's lower level -- this

00:19:00.186 --> 00:19:01.606 A:middle
calls me back on a background

00:19:01.746 --> 00:19:01.976 A:middle
queue.

00:19:02.256 --> 00:19:03.596 A:middle
So if I had more processing to

00:19:03.596 --> 00:19:04.776 A:middle
do of the data I could do it

00:19:04.776 --> 00:19:06.776 A:middle
right there and then but also

00:19:06.776 --> 00:19:08.216 A:middle
it's my responsibility to

00:19:08.216 --> 00:19:09.686 A:middle
dispatch back to the main queue

00:19:09.686 --> 00:19:11.236 A:middle
when it's time to update my UI.

00:19:12.356 --> 00:19:13.436 A:middle
So of course, dispatch back to

00:19:13.436 --> 00:19:14.196 A:middle
the main queue.

00:19:14.456 --> 00:19:15.176 A:middle
Handle that error.

00:19:15.826 --> 00:19:18.236 A:middle
So that was the three API

00:19:18.236 --> 00:19:18.776 A:middle
essentials.

00:19:19.956 --> 00:19:21.096 A:middle
Getting the objects to drag,

00:19:21.836 --> 00:19:23.236 A:middle
getting a drag proposal and then

00:19:23.236 --> 00:19:27.146 A:middle
actually performing the drag.

00:19:27.336 --> 00:19:29.216 A:middle
Now we'll cycle back all the way

00:19:29.216 --> 00:19:30.046 A:middle
to the beginning of this

00:19:30.046 --> 00:19:31.256 A:middle
timeline again and talk about

00:19:31.256 --> 00:19:32.156 A:middle
all of the other delegate

00:19:32.156 --> 00:19:33.366 A:middle
methods because there's a lot

00:19:33.366 --> 00:19:33.626 A:middle
more.

00:19:34.526 --> 00:19:35.586 A:middle
First I'm going to talk about it

00:19:35.586 --> 00:19:36.526 A:middle
from the point of view of the

00:19:36.526 --> 00:19:38.466 A:middle
drag interaction delegate.

00:19:38.996 --> 00:19:41.386 A:middle
So immediately after you

00:19:41.386 --> 00:19:42.796 A:middle
provided those images, those

00:19:42.796 --> 00:19:45.286 A:middle
items to drag, if you don't

00:19:45.286 --> 00:19:46.856 A:middle
implement anything else we will

00:19:46.856 --> 00:19:48.406 A:middle
just lift up your entire view.

00:19:48.706 --> 00:19:50.606 A:middle
So the drag image, the preview

00:19:50.606 --> 00:19:52.106 A:middle
will be a snapshot of your

00:19:52.106 --> 00:19:52.796 A:middle
entire view.

00:19:53.186 --> 00:19:54.636 A:middle
If that is not what you want,

00:19:55.416 --> 00:19:56.766 A:middle
you can customize that preview.

00:19:57.266 --> 00:19:59.026 A:middle
So implement drag interaction

00:19:59.026 --> 00:20:01.176 A:middle
preview for lifting item and

00:20:01.176 --> 00:20:03.336 A:middle
return a targeted drag preview.

00:20:03.996 --> 00:20:05.066 A:middle
I'll explain what this means

00:20:05.116 --> 00:20:05.816 A:middle
with an example.

00:20:07.116 --> 00:20:08.676 A:middle
Targeted drag preview has really

00:20:08.676 --> 00:20:09.386 A:middle
two parts to it.

00:20:09.666 --> 00:20:11.156 A:middle
There's the drag preview part

00:20:11.156 --> 00:20:12.486 A:middle
and the target part.

00:20:13.126 --> 00:20:14.776 A:middle
The drag preview part is just

00:20:14.776 --> 00:20:16.176 A:middle
saying what does the item look

00:20:16.176 --> 00:20:17.436 A:middle
like while it's being dragged.

00:20:17.516 --> 00:20:18.646 A:middle
And you tell us that by

00:20:18.646 --> 00:20:19.706 A:middle
providing us view.

00:20:20.406 --> 00:20:21.786 A:middle
So in this case, I'm making an

00:20:21.786 --> 00:20:23.176 A:middle
image view containing an image

00:20:23.176 --> 00:20:24.326 A:middle
from my asset catalog.

00:20:24.876 --> 00:20:26.186 A:middle
That automatically gets sized

00:20:26.186 --> 00:20:26.966 A:middle
based on that image.

00:20:27.016 --> 00:20:27.896 A:middle
That's what my thing will look

00:20:27.896 --> 00:20:28.126 A:middle
like.

00:20:29.256 --> 00:20:30.946 A:middle
The second part is the target

00:20:31.016 --> 00:20:31.206 A:middle
part.

00:20:31.536 --> 00:20:32.446 A:middle
Now you'll note that that's a

00:20:32.446 --> 00:20:33.496 A:middle
freestanding view.

00:20:33.496 --> 00:20:34.826 A:middle
It's not in the view hierarchy

00:20:34.826 --> 00:20:35.206 A:middle
anywhere.

00:20:35.726 --> 00:20:37.166 A:middle
So UIKit doesn't know where to

00:20:37.166 --> 00:20:37.556 A:middle
show it.

00:20:37.796 --> 00:20:39.016 A:middle
You need to tell us with a

00:20:39.016 --> 00:20:39.366 A:middle
target.

00:20:40.256 --> 00:20:41.296 A:middle
A target is two things.

00:20:41.896 --> 00:20:43.856 A:middle
It's a containing view and it's

00:20:43.856 --> 00:20:45.256 A:middle
a location within that view.

00:20:46.086 --> 00:20:47.366 A:middle
So here for my containing view,

00:20:47.366 --> 00:20:48.126 A:middle
I'm going to use the

00:20:48.126 --> 00:20:49.136 A:middle
interactions view.

00:20:49.136 --> 00:20:50.196 A:middle
This is where the drag is

00:20:50.196 --> 00:20:50.536 A:middle
starting.

00:20:51.316 --> 00:20:52.786 A:middle
And for the location, I'll use

00:20:52.846 --> 00:20:54.886 A:middle
these sessions location in the

00:20:54.886 --> 00:20:55.186 A:middle
view.

00:20:55.436 --> 00:20:56.636 A:middle
This is where the user's finger

00:20:56.636 --> 00:20:56.926 A:middle
is.

00:20:58.136 --> 00:20:59.116 A:middle
I take those two things.

00:20:59.116 --> 00:21:01.656 A:middle
I put them together into a drag

00:21:01.886 --> 00:21:04.716 A:middle
preview target and then finally

00:21:04.716 --> 00:21:06.196 A:middle
I make a UI targeted drag

00:21:06.226 --> 00:21:08.226 A:middle
preview with that view with a

00:21:08.226 --> 00:21:09.646 A:middle
default set of parameters and

00:21:09.646 --> 00:21:10.366 A:middle
with that target.

00:21:11.116 --> 00:21:11.726 A:middle
That's the lift.

00:21:12.796 --> 00:21:13.596 A:middle
The other thing you can do

00:21:13.596 --> 00:21:15.726 A:middle
during the lift phase is animate

00:21:15.726 --> 00:21:17.466 A:middle
your own UI alongside the lift.

00:21:17.836 --> 00:21:18.746 A:middle
So maybe you've got other UI

00:21:18.746 --> 00:21:20.376 A:middle
inside of your view that needs

00:21:20.376 --> 00:21:21.856 A:middle
to be dimmed out during a drag.

00:21:21.856 --> 00:21:22.486 A:middle
Something like that.

00:21:23.266 --> 00:21:24.426 A:middle
You can implement this method.

00:21:24.476 --> 00:21:26.306 A:middle
Drug interaction will animate

00:21:26.306 --> 00:21:27.386 A:middle
lift with an animator.

00:21:27.926 --> 00:21:29.376 A:middle
And use that animator to add

00:21:29.376 --> 00:21:30.626 A:middle
animations alongside.

00:21:31.066 --> 00:21:31.946 A:middle
Here I'm just changing the

00:21:31.946 --> 00:21:33.116 A:middle
background color of a view.

00:21:34.376 --> 00:21:35.716 A:middle
You can also get the completion

00:21:35.946 --> 00:21:36.976 A:middle
of that lift animation.

00:21:37.656 --> 00:21:38.876 A:middle
Now note that with the lift

00:21:38.876 --> 00:21:40.216 A:middle
there's two ways that it can

00:21:40.256 --> 00:21:40.346 A:middle
end.

00:21:40.656 --> 00:21:41.886 A:middle
The user holds down their finger

00:21:41.886 --> 00:21:43.126 A:middle
long enough through the whole

00:21:43.126 --> 00:21:45.106 A:middle
lift will go all the way to the

00:21:45.236 --> 00:21:45.326 A:middle
end.

00:21:45.496 --> 00:21:46.306 A:middle
The position will be end.

00:21:46.376 --> 00:21:48.956 A:middle
If the user lifts their finger

00:21:48.956 --> 00:21:50.266 A:middle
partway through the lift, we'll

00:21:50.266 --> 00:21:51.646 A:middle
run it in reverse all the way

00:21:51.646 --> 00:21:53.016 A:middle
back to the beginning then we'll

00:21:53.016 --> 00:21:54.406 A:middle
tell you the position is start.

00:21:54.896 --> 00:21:58.666 A:middle
As that session begins after the

00:21:58.666 --> 00:22:00.396 A:middle
user moves their finger, we'll

00:22:00.396 --> 00:22:01.706 A:middle
tell you the session will begin.

00:22:02.676 --> 00:22:04.246 A:middle
We will then ask you some

00:22:04.246 --> 00:22:04.836 A:middle
questions.

00:22:04.836 --> 00:22:06.246 A:middle
For instance, we'll ask you does

00:22:06.286 --> 00:22:07.436 A:middle
this session allow the move

00:22:07.436 --> 00:22:08.066 A:middle
operation?

00:22:09.176 --> 00:22:10.916 A:middle
And then as that session moves

00:22:10.916 --> 00:22:12.646 A:middle
around, we'll tell you every

00:22:12.646 --> 00:22:13.286 A:middle
time it moves.

00:22:13.286 --> 00:22:14.256 A:middle
So you can find out the new

00:22:14.256 --> 00:22:16.956 A:middle
location there.

00:22:17.176 --> 00:22:19.046 A:middle
Also during this drag phase you

00:22:19.046 --> 00:22:21.006 A:middle
can add items to the drag and

00:22:21.006 --> 00:22:21.596 A:middle
drop session.

00:22:22.086 --> 00:22:23.016 A:middle
So I've got one touch that's

00:22:23.016 --> 00:22:23.986 A:middle
moving that drag around.

00:22:24.036 --> 00:22:25.816 A:middle
Another touch can come down and

00:22:25.816 --> 00:22:28.616 A:middle
tap on any view that has a drag

00:22:28.616 --> 00:22:29.196 A:middle
interaction.

00:22:29.806 --> 00:22:31.136 A:middle
It doesn't have to be the

00:22:31.136 --> 00:22:31.706 A:middle
original view.

00:22:31.706 --> 00:22:32.516 A:middle
It could be a completely

00:22:32.516 --> 00:22:33.066 A:middle
different view.

00:22:33.896 --> 00:22:35.606 A:middle
When we detect this tap, we will

00:22:35.746 --> 00:22:37.596 A:middle
ask the delegate for items to

00:22:37.596 --> 00:22:38.516 A:middle
add to the session.

00:22:39.706 --> 00:22:41.646 A:middle
You do that by implementing drag

00:22:41.646 --> 00:22:43.546 A:middle
interaction items for adding to

00:22:43.546 --> 00:22:45.136 A:middle
session with a touch and at a

00:22:45.136 --> 00:22:45.306 A:middle
point.

00:22:45.356 --> 00:22:47.476 A:middle
So you can hit test using that

00:22:47.476 --> 00:22:47.706 A:middle
point.

00:22:48.336 --> 00:22:49.936 A:middle
Find out what items, if any,

00:22:50.116 --> 00:22:51.096 A:middle
that you want to add to the

00:22:51.096 --> 00:22:51.476 A:middle
session.

00:22:52.066 --> 00:22:53.046 A:middle
If you've got some, return them.

00:22:53.096 --> 00:22:54.016 A:middle
If you don't have anything to

00:22:54.016 --> 00:22:55.616 A:middle
add just return an empty array

00:22:56.226 --> 00:22:58.506 A:middle
and then we will pass that touch

00:22:58.566 --> 00:22:59.886 A:middle
along just like we normally

00:22:59.886 --> 00:23:00.326 A:middle
would have.

00:23:01.306 --> 00:23:03.856 A:middle
And of course, you can customize

00:23:03.856 --> 00:23:05.346 A:middle
what the preview of those items

00:23:05.346 --> 00:23:06.406 A:middle
looks like.

00:23:08.416 --> 00:23:09.946 A:middle
Finally when the session ends,

00:23:10.016 --> 00:23:11.196 A:middle
these are releases their finger,

00:23:11.706 --> 00:23:13.176 A:middle
we'll tell you the session will

00:23:13.176 --> 00:23:14.576 A:middle
end with the operation that was

00:23:14.576 --> 00:23:14.976 A:middle
chosen.

00:23:16.576 --> 00:23:18.286 A:middle
And if it's ending in a cancel,

00:23:18.286 --> 00:23:19.176 A:middle
there's a cancellation

00:23:19.176 --> 00:23:20.196 A:middle
animation, which you can

00:23:20.196 --> 00:23:20.716 A:middle
customize.

00:23:21.576 --> 00:23:23.026 A:middle
So implementing drag interaction

00:23:23.166 --> 00:23:25.816 A:middle
preview for canceling item with

00:23:25.816 --> 00:23:26.286 A:middle
a default.

00:23:26.286 --> 00:23:27.456 A:middle
And return a targeted drag

00:23:27.456 --> 00:23:27.826 A:middle
preview.

00:23:28.546 --> 00:23:29.866 A:middle
You can return nil here and the

00:23:29.866 --> 00:23:30.956 A:middle
item will just disappear in

00:23:30.956 --> 00:23:31.336 A:middle
place.

00:23:31.936 --> 00:23:33.496 A:middle
You can use our default one and

00:23:33.496 --> 00:23:34.386 A:middle
change its target.

00:23:34.746 --> 00:23:35.806 A:middle
So if you know where that thing

00:23:35.806 --> 00:23:37.556 A:middle
should fly back to, all you have

00:23:37.596 --> 00:23:38.666 A:middle
to do is give it a new target,

00:23:38.666 --> 00:23:39.796 A:middle
it'll fly right back there.

00:23:40.946 --> 00:23:42.216 A:middle
You can animate alongside the

00:23:42.216 --> 00:23:43.626 A:middle
cancellation animation the same

00:23:43.626 --> 00:23:44.316 A:middle
way as before.

00:23:44.986 --> 00:23:46.306 A:middle
Finally, when we're done, we'll

00:23:46.306 --> 00:23:47.396 A:middle
tell you that the session did

00:23:47.396 --> 00:23:47.636 A:middle
end.

00:23:48.616 --> 00:23:50.776 A:middle
If it was a copy or a move,

00:23:50.896 --> 00:23:51.776 A:middle
there's no cancellation

00:23:51.776 --> 00:23:52.306 A:middle
animation.

00:23:52.346 --> 00:23:53.326 A:middle
So we just tell you the session

00:23:53.326 --> 00:23:55.406 A:middle
did end and we also tell you

00:23:55.406 --> 00:23:57.086 A:middle
when the data transfer is

00:23:57.086 --> 00:23:57.426 A:middle
finished.

00:23:57.426 --> 00:24:01.246 A:middle
So that was the drag interaction

00:24:01.246 --> 00:24:01.496 A:middle
side.

00:24:01.496 --> 00:24:02.636 A:middle
Now let's talk about the drop

00:24:02.636 --> 00:24:03.516 A:middle
interaction side.

00:24:04.046 --> 00:24:04.866 A:middle
This is a little more

00:24:04.866 --> 00:24:05.296 A:middle
interesting.

00:24:05.296 --> 00:24:06.506 A:middle
There's only one drag

00:24:06.506 --> 00:24:07.766 A:middle
interaction that's involved in

00:24:07.766 --> 00:24:09.586 A:middle
starting that drag but it can go

00:24:09.586 --> 00:24:10.766 A:middle
over lots of different views.

00:24:10.916 --> 00:24:12.336 A:middle
And they can all have their own

00:24:12.416 --> 00:24:14.536 A:middle
drop interaction with the same

00:24:14.536 --> 00:24:16.056 A:middle
delegate or multiple delegates

00:24:16.686 --> 00:24:18.066 A:middle
but in the end, only one of them

00:24:18.066 --> 00:24:19.656 A:middle
gets to choose what happens when

00:24:19.656 --> 00:24:24.516 A:middle
the user lifts their finger.

00:24:24.676 --> 00:24:26.526 A:middle
So when that drag and drop

00:24:26.576 --> 00:24:28.126 A:middle
session enters your view, you've

00:24:28.126 --> 00:24:29.136 A:middle
got a drop interaction.

00:24:29.136 --> 00:24:30.146 A:middle
The first thing we'll do is ask

00:24:30.146 --> 00:24:31.646 A:middle
you can you handle that session?

00:24:32.446 --> 00:24:33.336 A:middle
So we implement -- you can

00:24:33.336 --> 00:24:34.606 A:middle
implement this method drop

00:24:34.606 --> 00:24:36.056 A:middle
interaction can handle session.

00:24:36.866 --> 00:24:39.026 A:middle
And you can't check what data is

00:24:39.026 --> 00:24:39.956 A:middle
actually being dragged.

00:24:39.956 --> 00:24:41.026 A:middle
We don't give you access to that

00:24:41.026 --> 00:24:43.006 A:middle
yet but you can find the types

00:24:43.006 --> 00:24:44.066 A:middle
of data that are being dragged.

00:24:44.466 --> 00:24:45.286 A:middle
So let's say you're only

00:24:45.286 --> 00:24:46.266 A:middle
interested in images.

00:24:46.686 --> 00:24:48.806 A:middle
You can check session, can load

00:24:48.806 --> 00:24:50.486 A:middle
objects of class UIImage.

00:24:51.686 --> 00:24:52.696 A:middle
Or you can do something more

00:24:52.696 --> 00:24:53.936 A:middle
specific if you're interested in

00:24:53.936 --> 00:24:55.246 A:middle
specific uniform type

00:24:55.246 --> 00:24:57.306 A:middle
identifiers, you can check if

00:24:57.506 --> 00:24:58.816 A:middle
any items in that session

00:24:59.056 --> 00:25:01.416 A:middle
conform to that specific uniform

00:25:01.416 --> 00:25:02.196 A:middle
type identifier.

00:25:02.506 --> 00:25:03.816 A:middle
So here I'm using image PNG.

00:25:03.866 --> 00:25:05.466 A:middle
If I was only interested in PNG

00:25:05.466 --> 00:25:06.016 A:middle
images.

00:25:08.576 --> 00:25:09.976 A:middle
Next after you've said that you

00:25:09.976 --> 00:25:11.866 A:middle
can handle the drag session,

00:25:12.736 --> 00:25:14.086 A:middle
we'll tell you when that session

00:25:14.136 --> 00:25:15.026 A:middle
enters your view.

00:25:15.026 --> 00:25:16.176 A:middle
We'll tell you when it moves

00:25:16.176 --> 00:25:17.346 A:middle
around inside of your view.

00:25:17.346 --> 00:25:18.516 A:middle
Of course, you return a proposal

00:25:18.516 --> 00:25:20.696 A:middle
there and we'll tell you when it

00:25:20.696 --> 00:25:20.946 A:middle
exits.

00:25:20.946 --> 00:25:22.406 A:middle
And these can, of course, happen

00:25:22.406 --> 00:25:23.196 A:middle
multiple times.

00:25:23.196 --> 00:25:24.166 A:middle
Enter. Exit.

00:25:25.086 --> 00:25:26.856 A:middle
Enter. Exit.

00:25:27.036 --> 00:25:28.036 A:middle
Also while this session is

00:25:28.036 --> 00:25:29.136 A:middle
happening, spring loading might

00:25:29.136 --> 00:25:29.476 A:middle
happen.

00:25:30.116 --> 00:25:31.496 A:middle
So we have built-in support in

00:25:31.496 --> 00:25:33.436 A:middle
UIKit for spring loading several

00:25:33.436 --> 00:25:34.926 A:middle
different classes such as

00:25:34.926 --> 00:25:35.406 A:middle
UIButton.

00:25:35.566 --> 00:25:36.956 A:middle
All you have to do is say spring

00:25:36.956 --> 00:25:37.816 A:middle
loaded equals true.

00:25:38.266 --> 00:25:39.226 A:middle
When that drag and drop session

00:25:39.226 --> 00:25:41.526 A:middle
hovers over that button, the

00:25:41.596 --> 00:25:42.526 A:middle
button's action will

00:25:42.526 --> 00:25:43.936 A:middle
automatically run.

00:25:45.036 --> 00:25:46.236 A:middle
Or you can set up your own

00:25:46.236 --> 00:25:47.736 A:middle
spring-loaded interaction with

00:25:47.736 --> 00:25:49.166 A:middle
its own handler to be called

00:25:49.166 --> 00:25:50.656 A:middle
when it's time to activate and

00:25:50.826 --> 00:25:53.666 A:middle
add that to any view you like.

00:25:54.676 --> 00:25:56.756 A:middle
Finally when the session ends on

00:25:56.756 --> 00:25:57.866 A:middle
the drop interaction delegate,

00:25:58.386 --> 00:25:59.476 A:middle
we'll tell you the session did

00:25:59.476 --> 00:25:59.726 A:middle
end.

00:25:59.726 --> 00:26:02.146 A:middle
So every interaction, every drop

00:26:02.146 --> 00:26:03.626 A:middle
interaction that has ever seen

00:26:03.626 --> 00:26:04.986 A:middle
this session will be told that

00:26:04.986 --> 00:26:05.816 A:middle
it's ending.

00:26:06.176 --> 00:26:07.156 A:middle
If you were keeping track of it,

00:26:07.156 --> 00:26:08.626 A:middle
now you can stop keeping track

00:26:09.376 --> 00:26:10.746 A:middle
of it.

00:26:11.016 --> 00:26:12.876 A:middle
If there's a drop to perform, of

00:26:12.876 --> 00:26:13.846 A:middle
course there's more to do.

00:26:13.846 --> 00:26:14.926 A:middle
We talked about the perform

00:26:14.926 --> 00:26:15.386 A:middle
phase.

00:26:15.596 --> 00:26:16.206 A:middle
Now let's talk about the

00:26:16.206 --> 00:26:17.446 A:middle
animations and the data

00:26:17.446 --> 00:26:17.836 A:middle
transfer.

00:26:18.376 --> 00:26:20.996 A:middle
The animations are exactly the

00:26:20.996 --> 00:26:22.616 A:middle
same for drop animations as they

00:26:22.616 --> 00:26:23.526 A:middle
were for cancellation

00:26:23.566 --> 00:26:24.016 A:middle
animations.

00:26:24.176 --> 00:26:25.316 A:middle
Just the API names are

00:26:25.316 --> 00:26:25.706 A:middle
different.

00:26:25.856 --> 00:26:26.726 A:middle
So now it's on the drop

00:26:26.726 --> 00:26:28.546 A:middle
interaction delegate preview for

00:26:28.546 --> 00:26:29.836 A:middle
dropping item but you can do

00:26:29.836 --> 00:26:30.886 A:middle
exactly the same things.

00:26:31.726 --> 00:26:32.896 A:middle
You can animate alongside the

00:26:32.896 --> 00:26:33.526 A:middle
same way.

00:26:34.156 --> 00:26:35.436 A:middle
And finally when all those drop

00:26:35.436 --> 00:26:36.686 A:middle
animations of all the items are

00:26:36.686 --> 00:26:38.006 A:middle
done we'll tell you conclude

00:26:38.006 --> 00:26:38.356 A:middle
drop.

00:26:38.846 --> 00:26:41.816 A:middle
For the data transfer, of course

00:26:41.886 --> 00:26:43.056 A:middle
this closure gets called when

00:26:43.056 --> 00:26:43.946 A:middle
that data's available.

00:26:44.466 --> 00:26:45.366 A:middle
But something I didn't mention

00:26:45.416 --> 00:26:47.586 A:middle
earlier when you start the load

00:26:48.176 --> 00:26:49.466 A:middle
of the data you could get a

00:26:49.516 --> 00:26:50.416 A:middle
progress object.

00:26:50.416 --> 00:26:52.836 A:middle
And this progress object can

00:26:52.836 --> 00:26:54.056 A:middle
tell you how much of the data

00:26:54.056 --> 00:26:54.856 A:middle
transfer is done.

00:26:55.276 --> 00:26:56.856 A:middle
Is it finished yet and you can

00:26:56.856 --> 00:26:58.766 A:middle
even cancel the data transfer

00:26:59.366 --> 00:27:00.146 A:middle
from there?

00:27:00.346 --> 00:27:02.016 A:middle
Also you can get those progress

00:27:02.016 --> 00:27:04.276 A:middle
objects per item or there's a

00:27:04.276 --> 00:27:05.516 A:middle
progress object on the entire

00:27:05.516 --> 00:27:07.126 A:middle
session that wraps of all of the

00:27:07.126 --> 00:27:08.656 A:middle
progress of all the item

00:27:08.656 --> 00:27:08.876 A:middle
loading.

00:27:09.436 --> 00:27:11.066 A:middle
And there you have it.

00:27:11.296 --> 00:27:12.656 A:middle
That's the full timeline of drag

00:27:12.656 --> 00:27:13.006 A:middle
and drop.

00:27:13.086 --> 00:27:13.946 A:middle
That's everything that can

00:27:13.946 --> 00:27:14.306 A:middle
happen.

00:27:15.206 --> 00:27:16.196 A:middle
You know about these three

00:27:16.196 --> 00:27:17.766 A:middle
essential API functions that you

00:27:17.766 --> 00:27:19.116 A:middle
should implement to get drag and

00:27:19.116 --> 00:27:19.726 A:middle
drop working.

00:27:19.726 --> 00:27:21.286 A:middle
And I hope you got the real

00:27:21.286 --> 00:27:22.106 A:middle
message here, which is

00:27:22.506 --> 00:27:24.026 A:middle
customizing drag and drop is

00:27:24.026 --> 00:27:25.466 A:middle
done through these interaction

00:27:25.466 --> 00:27:25.886 A:middle
delegates.

00:27:25.956 --> 00:27:28.156 A:middle
That's how UIKit and your app

00:27:28.156 --> 00:27:28.976 A:middle
work together to make a

00:27:28.976 --> 00:27:30.236 A:middle
fantastic drag and drop

00:27:30.236 --> 00:27:30.766 A:middle
experience.

00:27:32.316 --> 00:27:33.546 A:middle
I'll hand you over to Emanuel

00:27:33.546 --> 00:27:34.836 A:middle
who will show you how to add

00:27:34.836 --> 00:27:35.656 A:middle
drag and drop to an app.

00:27:36.516 --> 00:27:43.236 A:middle
[ Clapping ]

00:27:43.736 --> 00:27:44.816 A:middle
&gt;&gt; Using drag and drop

00:27:44.816 --> 00:27:46.596 A:middle
interactions, we created these

00:27:46.596 --> 00:27:47.716 A:middle
[inaudible] morphic pin board

00:27:47.756 --> 00:27:48.496 A:middle
for images.

00:27:48.966 --> 00:27:51.646 A:middle
So we can start a drag from

00:27:51.646 --> 00:27:52.836 A:middle
photos, for example.

00:27:53.306 --> 00:27:54.536 A:middle
We can bring it over the pin

00:27:54.536 --> 00:27:56.766 A:middle
board and when we drop it, we'll

00:27:56.766 --> 00:27:58.356 A:middle
copy the image and show it in

00:27:58.356 --> 00:27:58.876 A:middle
the pin board.

00:27:59.286 --> 00:28:03.636 A:middle
Notice the drop animation scales

00:28:03.636 --> 00:28:05.066 A:middle
down the image and when we

00:28:05.066 --> 00:28:06.116 A:middle
receive the data in the pin

00:28:06.116 --> 00:28:07.626 A:middle
board, we'll show the full

00:28:07.686 --> 00:28:08.166 A:middle
image.

00:28:08.696 --> 00:28:12.336 A:middle
We can also drag it on the pin

00:28:12.336 --> 00:28:13.596 A:middle
board and see that we're going

00:28:13.706 --> 00:28:15.236 A:middle
to dim the original image.

00:28:15.626 --> 00:28:17.356 A:middle
And we can also drag that back

00:28:17.356 --> 00:28:22.256 A:middle
into photos to add it hopefully,

00:28:22.356 --> 00:28:22.496 A:middle
yeah.

00:28:23.786 --> 00:28:26.786 A:middle
That's -- this used to work.

00:28:27.256 --> 00:28:29.816 A:middle
[Laughter] We can also drag it

00:28:30.506 --> 00:28:32.716 A:middle
in the same pin board and then

00:28:32.806 --> 00:28:34.826 A:middle
when we drop it, we will just

00:28:34.826 --> 00:28:35.466 A:middle
rearrange it.

00:28:35.576 --> 00:28:37.146 A:middle
And see? Look again at the

00:28:37.146 --> 00:28:37.786 A:middle
animation.

00:28:38.066 --> 00:28:39.856 A:middle
We dimmed the original image and

00:28:39.856 --> 00:28:41.696 A:middle
when we drop it, we hide the

00:28:41.696 --> 00:28:43.376 A:middle
original image and then we show

00:28:43.376 --> 00:28:44.296 A:middle
it in the new spot.

00:28:44.676 --> 00:28:46.476 A:middle
So let's switch back to the code

00:28:46.476 --> 00:28:47.896 A:middle
and see how this is implemented.

00:28:49.656 --> 00:28:51.996 A:middle
So we start in our main view

00:28:51.996 --> 00:28:54.356 A:middle
controller by adding a drop

00:28:54.356 --> 00:28:56.576 A:middle
interaction and a drag

00:28:56.576 --> 00:28:58.276 A:middle
interaction to our view.

00:28:58.836 --> 00:28:59.926 A:middle
And then we're going to set the

00:28:59.926 --> 00:29:02.076 A:middle
view controller as the delegate

00:29:02.076 --> 00:29:03.066 A:middle
of those interactions.

00:29:04.346 --> 00:29:06.086 A:middle
Then we're going to implement a

00:29:06.086 --> 00:29:09.316 A:middle
few drop interaction delegate

00:29:09.316 --> 00:29:09.826 A:middle
methods.

00:29:10.136 --> 00:29:11.626 A:middle
The first one is drop

00:29:11.626 --> 00:29:13.446 A:middle
interaction can handle session

00:29:13.756 --> 00:29:15.986 A:middle
and this will return true if the

00:29:15.986 --> 00:29:17.366 A:middle
session can load images.

00:29:17.556 --> 00:29:18.376 A:middle
It's very simple.

00:29:19.136 --> 00:29:20.976 A:middle
The second one is drop

00:29:20.976 --> 00:29:23.016 A:middle
interaction session did update.

00:29:23.356 --> 00:29:24.966 A:middle
And here we return a proposal

00:29:24.996 --> 00:29:27.296 A:middle
where we specify what kind of

00:29:27.296 --> 00:29:28.646 A:middle
operation we want to perform.

00:29:29.066 --> 00:29:31.186 A:middle
So we have two cases.

00:29:31.626 --> 00:29:35.016 A:middle
The first one is if the drag

00:29:35.176 --> 00:29:36.816 A:middle
started in another application,

00:29:37.086 --> 00:29:38.466 A:middle
we want to perform a copy

00:29:38.466 --> 00:29:39.056 A:middle
operation.

00:29:39.276 --> 00:29:41.656 A:middle
And we can check that by looking

00:29:41.656 --> 00:29:43.336 A:middle
at the session local drag

00:29:43.336 --> 00:29:44.186 A:middle
session property.

00:29:44.556 --> 00:29:47.426 A:middle
So if it's new it means that the

00:29:47.426 --> 00:29:49.106 A:middle
operation -- that the drag was

00:29:49.106 --> 00:29:50.536 A:middle
started in another application

00:29:50.536 --> 00:29:51.636 A:middle
and we're going to do a copy.

00:29:52.056 --> 00:29:53.156 A:middle
Otherwise, we are just

00:29:53.156 --> 00:29:54.656 A:middle
rearranging the item and we're

00:29:54.656 --> 00:29:55.946 A:middle
going to do a move operation.

00:29:58.676 --> 00:30:00.276 A:middle
Third, we're going to implement

00:30:00.656 --> 00:30:02.906 A:middle
drop interaction perform drop

00:30:02.906 --> 00:30:03.406 A:middle
session.

00:30:04.096 --> 00:30:06.076 A:middle
Again we only want to copy the

00:30:06.076 --> 00:30:08.146 A:middle
data if the drag's starting in

00:30:08.146 --> 00:30:09.066 A:middle
another application.

00:30:09.066 --> 00:30:11.096 A:middle
So again we do this check if the

00:30:11.096 --> 00:30:12.406 A:middle
local drag session is new.

00:30:13.386 --> 00:30:14.706 A:middle
And then we're going to perform

00:30:14.706 --> 00:30:17.046 A:middle
the drop, first by getting the

00:30:17.446 --> 00:30:19.676 A:middle
drop point of where the user

00:30:19.676 --> 00:30:21.826 A:middle
lifted the finger by calling

00:30:21.826 --> 00:30:24.116 A:middle
session location in view and

00:30:24.116 --> 00:30:26.226 A:middle
then we are going to go over

00:30:26.326 --> 00:30:27.996 A:middle
each drag item in the session

00:30:28.366 --> 00:30:31.546 A:middle
and call a helper function that

00:30:31.546 --> 00:30:33.276 A:middle
will load the image from the

00:30:33.276 --> 00:30:34.976 A:middle
item provider, put it in a new

00:30:34.976 --> 00:30:37.546 A:middle
image view, and then display it

00:30:37.546 --> 00:30:38.856 A:middle
in the pin board using that

00:30:38.856 --> 00:30:40.606 A:middle
center point that we got.

00:30:44.176 --> 00:30:47.706 A:middle
We also want to perform a drop

00:30:47.916 --> 00:30:49.986 A:middle
animation when we release the

00:30:49.986 --> 00:30:50.466 A:middle
finger.

00:30:50.876 --> 00:30:53.916 A:middle
So again we have two cases.

00:30:54.266 --> 00:30:56.186 A:middle
In drop interaction preview for

00:30:56.186 --> 00:30:58.356 A:middle
dropping item, we want to return

00:30:58.996 --> 00:31:02.136 A:middle
a preview that scales down when

00:31:02.136 --> 00:31:03.416 A:middle
the drag comes from another

00:31:03.416 --> 00:31:04.246 A:middle
application.

00:31:04.616 --> 00:31:06.896 A:middle
And otherwise, if we're moving

00:31:06.896 --> 00:31:09.256 A:middle
the image from the pin board we

00:31:09.256 --> 00:31:10.666 A:middle
are not going to apply any

00:31:10.666 --> 00:31:11.156 A:middle
effects.

00:31:11.156 --> 00:31:12.146 A:middle
We're just going to drop it in

00:31:12.146 --> 00:31:12.556 A:middle
place.

00:31:16.046 --> 00:31:19.416 A:middle
So we can check if the item is

00:31:19.416 --> 00:31:22.546 A:middle
coming from a local drag or from

00:31:22.546 --> 00:31:25.046 A:middle
an external drag by checking

00:31:25.046 --> 00:31:27.016 A:middle
this property on drag item,

00:31:27.206 --> 00:31:28.426 A:middle
which is called local object.

00:31:29.416 --> 00:31:32.036 A:middle
And if the item is coming from

00:31:32.036 --> 00:31:33.936 A:middle
another application, then we

00:31:33.936 --> 00:31:36.476 A:middle
return nil and this will have

00:31:37.106 --> 00:31:39.206 A:middle
the effect that we saw before.

00:31:39.456 --> 00:31:41.346 A:middle
Just we'll scale down the

00:31:41.346 --> 00:31:44.556 A:middle
preview and then it will stay in

00:31:44.556 --> 00:31:44.916 A:middle
place.

00:31:45.266 --> 00:31:47.826 A:middle
The default preview instead will

00:31:47.826 --> 00:31:49.056 A:middle
scale down and move to the

00:31:49.056 --> 00:31:50.366 A:middle
center of the pin board but

00:31:50.366 --> 00:31:51.426 A:middle
that's not what we want.

00:31:51.976 --> 00:31:54.606 A:middle
In the case we're moving an

00:31:54.606 --> 00:31:57.006 A:middle
image from the pin board.

00:31:57.066 --> 00:31:58.696 A:middle
So we're just rearranging it,

00:31:59.396 --> 00:32:01.556 A:middle
we're going to animate it in

00:32:01.616 --> 00:32:02.026 A:middle
place.

00:32:02.756 --> 00:32:04.826 A:middle
So to get that, we need to

00:32:04.826 --> 00:32:06.546 A:middle
retarget the default preview.

00:32:06.926 --> 00:32:09.476 A:middle
And as Kurt explained, we need a

00:32:09.476 --> 00:32:10.956 A:middle
container, which is the pin

00:32:10.956 --> 00:32:13.446 A:middle
board itself, and the center in

00:32:13.446 --> 00:32:16.936 A:middle
that view which is the center of

00:32:17.006 --> 00:32:17.556 A:middle
the preview.

00:32:18.436 --> 00:32:19.466 A:middle
And then we're just going to

00:32:19.466 --> 00:32:22.236 A:middle
retarget the default preview and

00:32:22.316 --> 00:32:23.646 A:middle
return that.

00:32:25.736 --> 00:32:27.196 A:middle
Next we're going to implement

00:32:27.306 --> 00:32:28.946 A:middle
drop interaction will animate

00:32:28.946 --> 00:32:30.126 A:middle
drop with animator.

00:32:31.036 --> 00:32:34.426 A:middle
Here we want to animate a local

00:32:34.426 --> 00:32:37.166 A:middle
move because as you've seen

00:32:37.166 --> 00:32:39.586 A:middle
before, we had dimmed out the

00:32:39.586 --> 00:32:41.116 A:middle
original image view and when we

00:32:41.116 --> 00:32:42.826 A:middle
drop it into a new place we're

00:32:42.826 --> 00:32:44.486 A:middle
going to hide the previous --

00:32:44.856 --> 00:32:45.946 A:middle
the image in the previous

00:32:45.946 --> 00:32:47.466 A:middle
location and then show it again

00:32:47.766 --> 00:32:49.896 A:middle
at the end of the animation into

00:32:49.896 --> 00:32:50.556 A:middle
the new spot.

00:32:50.976 --> 00:32:52.296 A:middle
So we're going to add an

00:32:52.296 --> 00:32:54.526 A:middle
alongside animation and we're

00:32:54.526 --> 00:32:57.186 A:middle
going to fade the drag item to

00:32:57.516 --> 00:32:59.196 A:middle
alpha equals 0.

00:33:00.316 --> 00:33:02.056 A:middle
And then at the end of the

00:33:02.056 --> 00:33:04.066 A:middle
animation, so by adding a

00:33:04.066 --> 00:33:07.356 A:middle
completion block, we're going to

00:33:07.356 --> 00:33:09.296 A:middle
set the new center of that image

00:33:09.296 --> 00:33:10.946 A:middle
view and then we're going to

00:33:10.946 --> 00:33:12.366 A:middle
show it back by setting its

00:33:12.366 --> 00:33:13.076 A:middle
alpha to 1.

00:33:13.406 --> 00:33:15.456 A:middle
And here you can see that we

00:33:15.456 --> 00:33:17.146 A:middle
are, again, checking a local

00:33:17.146 --> 00:33:17.576 A:middle
object.

00:33:17.816 --> 00:33:19.086 A:middle
In this case, I'm passing an

00:33:19.086 --> 00:33:22.026 A:middle
index so that I know where in my

00:33:22.086 --> 00:33:24.196 A:middle
model object the image is.

00:33:24.666 --> 00:33:26.246 A:middle
And we're going to see in a

00:33:26.246 --> 00:33:27.846 A:middle
moment in the drag interaction

00:33:27.916 --> 00:33:30.346 A:middle
how to set that up.

00:33:30.646 --> 00:33:32.686 A:middle
So I'm going into drag

00:33:32.686 --> 00:33:34.656 A:middle
interaction delegate.

00:33:35.566 --> 00:33:37.036 A:middle
I have to implement, first of

00:33:37.036 --> 00:33:39.506 A:middle
all, what kind of data I want to

00:33:39.506 --> 00:33:41.256 A:middle
pass in the drag.

00:33:41.906 --> 00:33:44.636 A:middle
And I install the interaction on

00:33:44.636 --> 00:33:45.546 A:middle
the whole pin board.

00:33:45.956 --> 00:33:48.766 A:middle
So what I want to do is give the

00:33:48.766 --> 00:33:51.216 A:middle
image that is under my finger.

00:33:52.606 --> 00:33:54.616 A:middle
So to do that, I first need to

00:33:54.616 --> 00:33:57.106 A:middle
get the touch of the drag by

00:33:57.106 --> 00:33:58.666 A:middle
calling again session location

00:33:58.666 --> 00:33:59.066 A:middle
in view.

00:33:59.856 --> 00:34:01.596 A:middle
And then if there is an image

00:34:01.676 --> 00:34:03.456 A:middle
under my finger, I want to get

00:34:03.556 --> 00:34:07.126 A:middle
the image, the data for that

00:34:07.126 --> 00:34:07.566 A:middle
image.

00:34:08.255 --> 00:34:09.856 A:middle
Wrap it into an item provider.

00:34:10.446 --> 00:34:12.106 A:middle
Wrap the item provider in a drag

00:34:12.106 --> 00:34:14.926 A:middle
item and then attach that

00:34:14.926 --> 00:34:16.306 A:middle
additional information that will

00:34:16.306 --> 00:34:18.446 A:middle
allow me in the drop side to

00:34:18.446 --> 00:34:20.606 A:middle
recognize that local drag item.

00:34:25.436 --> 00:34:26.646 A:middle
Next we need to provide a

00:34:26.696 --> 00:34:28.556 A:middle
preview for that item.

00:34:28.976 --> 00:34:31.485 A:middle
So we said before if we don't

00:34:31.485 --> 00:34:33.806 A:middle
provide a preview the drag

00:34:33.806 --> 00:34:35.795 A:middle
interaction by default will take

00:34:35.795 --> 00:34:37.326 A:middle
a snapshot of the whole view.

00:34:37.856 --> 00:34:39.696 A:middle
And we clearly don't want to do

00:34:39.696 --> 00:34:39.976 A:middle
that.

00:34:39.976 --> 00:34:41.585 A:middle
We just want to provide a

00:34:41.585 --> 00:34:43.226 A:middle
preview for the single image

00:34:43.226 --> 00:34:43.976 A:middle
that we're dragging.

00:34:48.096 --> 00:34:50.286 A:middle
So we do that by getting the

00:34:50.286 --> 00:34:53.275 A:middle
index of the drag item, we get

00:34:53.376 --> 00:34:55.696 A:middle
its associated image view and

00:34:55.696 --> 00:34:57.536 A:middle
then we pass that as a targeted

00:34:57.596 --> 00:34:57.966 A:middle
preview.

00:35:01.156 --> 00:35:04.156 A:middle
Finally, we want to dim out the

00:35:04.156 --> 00:35:05.706 A:middle
original image view once we

00:35:05.706 --> 00:35:07.046 A:middle
start a drag.

00:35:07.476 --> 00:35:09.726 A:middle
So we're going to add a

00:35:09.946 --> 00:35:12.446 A:middle
completion block to these drag

00:35:12.446 --> 00:35:15.976 A:middle
interaction animator pass in a

00:35:16.056 --> 00:35:19.146 A:middle
will animate lift delegate and

00:35:19.206 --> 00:35:20.836 A:middle
so we're going to add the

00:35:20.836 --> 00:35:23.086 A:middle
completion block and the lift

00:35:23.126 --> 00:35:23.486 A:middle
indent.

00:35:23.546 --> 00:35:26.116 A:middle
So if the position is end then

00:35:26.226 --> 00:35:28.316 A:middle
we're going to fade the original

00:35:28.346 --> 00:35:30.886 A:middle
item to alpha .5.

00:35:31.416 --> 00:35:34.146 A:middle
And that's really it.

00:35:34.506 --> 00:35:38.026 A:middle
So you seen how simple it is to

00:35:38.386 --> 00:35:40.486 A:middle
add drag and drop interactions.

00:35:41.046 --> 00:35:42.886 A:middle
These example also contains --

00:35:43.306 --> 00:35:46.426 A:middle
also shows how to implement a

00:35:46.426 --> 00:35:48.166 A:middle
paste configuration that you can

00:35:48.166 --> 00:35:49.806 A:middle
use together with a drop

00:35:49.806 --> 00:35:52.096 A:middle
interaction and the sample code

00:35:52.096 --> 00:35:53.536 A:middle
will be available online.

00:35:53.536 --> 00:35:54.926 A:middle
So make sure to check it out.

00:35:55.626 --> 00:35:55.956 A:middle
Back to Bruce.

00:35:56.516 --> 00:35:58.586 A:middle
[ Clapping ]

00:35:59.086 --> 00:36:03.546 A:middle
&gt;&gt; Thanks, Eman.

00:36:03.936 --> 00:36:05.626 A:middle
Okay. So by now you guys are

00:36:05.626 --> 00:36:07.186 A:middle
just going to run back to your

00:36:07.186 --> 00:36:07.606 A:middle
laptops.

00:36:07.606 --> 00:36:08.826 A:middle
I see you already have them and

00:36:08.826 --> 00:36:10.266 A:middle
add drag and drop to your apps.

00:36:10.756 --> 00:36:12.546 A:middle
And so I'm just going to share a

00:36:12.546 --> 00:36:14.726 A:middle
couple of words of advice about

00:36:14.726 --> 00:36:16.556 A:middle
how to expedite that process.

00:36:16.716 --> 00:36:19.416 A:middle
First of all, don't do that

00:36:19.416 --> 00:36:19.996 A:middle
right away.

00:36:20.276 --> 00:36:21.666 A:middle
Explore the system.

00:36:21.666 --> 00:36:23.056 A:middle
See what we've done.

00:36:23.056 --> 00:36:24.386 A:middle
See the types of set down

00:36:24.386 --> 00:36:25.896 A:middle
animations that we have

00:36:25.896 --> 00:36:27.646 A:middle
implemented and the types of

00:36:27.646 --> 00:36:29.526 A:middle
data that we actually transfer.

00:36:29.526 --> 00:36:30.916 A:middle
I think you'll be surprised.

00:36:31.496 --> 00:36:32.446 A:middle
And then go simple.

00:36:32.446 --> 00:36:33.936 A:middle
Try to add a drop target.

00:36:33.976 --> 00:36:34.926 A:middle
Maybe using a paste

00:36:34.926 --> 00:36:36.366 A:middle
configuration and just kind of

00:36:36.366 --> 00:36:37.956 A:middle
get a feel for how it works.

00:36:39.166 --> 00:36:40.816 A:middle
Experiment with a drag source.

00:36:41.356 --> 00:36:43.996 A:middle
And even try to spring load a

00:36:43.996 --> 00:36:44.826 A:middle
control or two.

00:36:44.826 --> 00:36:46.926 A:middle
And then you're going to look at

00:36:46.926 --> 00:36:49.796 A:middle
it and say it just doesn't look

00:36:49.796 --> 00:36:50.106 A:middle
right.

00:36:50.216 --> 00:36:51.276 A:middle
What are we missing?

00:36:51.786 --> 00:36:52.566 A:middle
And that's when you're going to

00:36:52.566 --> 00:36:54.176 A:middle
have to dive a little bit deeper

00:36:54.176 --> 00:36:55.426 A:middle
into these drag and drop APIs

00:36:55.426 --> 00:36:57.156 A:middle
because there's a lot of them.

00:36:57.516 --> 00:36:58.976 A:middle
And we've made this easy for

00:36:58.976 --> 00:36:59.196 A:middle
you.

00:36:59.816 --> 00:37:01.156 A:middle
And so I'm going to refer back

00:37:01.156 --> 00:37:02.386 A:middle
to this picture again and I'm

00:37:02.386 --> 00:37:03.786 A:middle
just going to start out there is

00:37:03.786 --> 00:37:06.036 A:middle
a talk on mastering the drag and

00:37:06.036 --> 00:37:08.096 A:middle
drop APIs which is going to even

00:37:08.096 --> 00:37:10.306 A:middle
deeper into them than what Kurt

00:37:10.936 --> 00:37:12.106 A:middle
gave you an overview of.

00:37:12.856 --> 00:37:14.586 A:middle
There's going to be a session on

00:37:14.806 --> 00:37:16.096 A:middle
what we've done with NS item

00:37:16.096 --> 00:37:16.646 A:middle
provider.

00:37:17.206 --> 00:37:18.146 A:middle
And you're going to find it

00:37:18.146 --> 00:37:18.836 A:middle
fascinating.

00:37:18.836 --> 00:37:21.086 A:middle
We can drag and drop files, for

00:37:21.086 --> 00:37:22.516 A:middle
example, that you can open in

00:37:22.516 --> 00:37:23.066 A:middle
place.

00:37:23.246 --> 00:37:25.366 A:middle
And you can actually provision

00:37:25.366 --> 00:37:27.616 A:middle
the data from your source using

00:37:27.616 --> 00:37:28.686 A:middle
a file provider.

00:37:28.686 --> 00:37:29.856 A:middle
And we're going to go into that

00:37:29.856 --> 00:37:31.216 A:middle
in detail in that talk.

00:37:33.086 --> 00:37:33.886 A:middle
There's a bit more.

00:37:33.886 --> 00:37:38.266 A:middle
For example, text view has a

00:37:38.266 --> 00:37:38.806 A:middle
delegate.

00:37:39.256 --> 00:37:40.446 A:middle
A higher level delegate for

00:37:40.446 --> 00:37:41.576 A:middle
supporting drag and drop.

00:37:41.576 --> 00:37:42.496 A:middle
So if you have custom

00:37:42.496 --> 00:37:44.286 A:middle
attachments or want some kind of

00:37:44.286 --> 00:37:46.786 A:middle
custom text processing you

00:37:46.786 --> 00:37:49.096 A:middle
should explore the APIs on those

00:37:49.096 --> 00:37:49.766 A:middle
delegates.

00:37:50.686 --> 00:37:52.026 A:middle
And I know many of you have

00:37:52.066 --> 00:37:53.676 A:middle
table views and collection views

00:37:53.676 --> 00:37:55.406 A:middle
in your apps, and if you want

00:37:55.406 --> 00:37:56.856 A:middle
them to support drag and drop

00:37:56.856 --> 00:37:58.746 A:middle
we've created some great higher

00:37:58.746 --> 00:37:59.426 A:middle
level APIs.

00:37:59.426 --> 00:38:00.946 A:middle
And there's an entire talk

00:38:00.946 --> 00:38:03.536 A:middle
dedicated to that topic which

00:38:03.536 --> 00:38:04.746 A:middle
you should really go see.

00:38:06.116 --> 00:38:07.706 A:middle
As usual there's a lot more

00:38:07.706 --> 00:38:09.656 A:middle
information about this talk in

00:38:09.656 --> 00:38:11.256 A:middle
particular along with the sample

00:38:11.256 --> 00:38:12.066 A:middle
app at this link.

00:38:13.016 --> 00:38:14.336 A:middle
Here are some of the related

00:38:14.336 --> 00:38:15.016 A:middle
sessions.

00:38:15.246 --> 00:38:17.186 A:middle
I added one about the file

00:38:17.186 --> 00:38:18.786 A:middle
provider enhancements as well as

00:38:18.786 --> 00:38:20.676 A:middle
how you can -- one on Spotlight

00:38:20.956 --> 00:38:21.966 A:middle
which we'll talk about how you

00:38:21.966 --> 00:38:23.816 A:middle
can actually drag and drop items

00:38:23.816 --> 00:38:25.706 A:middle
that your -- that Spotlight

00:38:25.706 --> 00:38:26.846 A:middle
finds for your app.

00:38:26.846 --> 00:38:28.196 A:middle
If you have any questions,

00:38:28.526 --> 00:38:30.926 A:middle
please drop by and I hope you

00:38:30.926 --> 00:38:32.976 A:middle
guys have a great WWDC.

00:38:33.516 --> 00:38:36.500 A:middle
[ Clapping ]

