[Script Info]
; Script generated by FFmpeg/Lavc57.89.100
ScriptType: v4.00+
PlayResX: 384
PlayResY: 288

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,16,&Hffffff,&Hffffff,&H0,&H0,0,0,0,0,100,100,0,0,1,1,0,2,10,10,10,0

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:25.05,0:00:27.66,Default,,0,0,0,,>> Good afternoon and welcome to
Dialogue: 0,0:00:27.66,0:00:28.83,Default,,0,0,0,,what's new in testing.
Dialogue: 0,0:00:29.66,0:00:31.20,Default,,0,0,0,,My name is Wil and I work on
Dialogue: 0,0:00:31.24,0:00:33.07,Default,,0,0,0,,Xcode and on XCTest.
Dialogue: 0,0:00:34.17,0:00:36.46,Default,,0,0,0,,So, what is new in testing?
Dialogue: 0,0:00:37.21,0:00:38.38,Default,,0,0,0,,The answer is a lot.
Dialogue: 0,0:00:38.96,0:00:40.32,Default,,0,0,0,,In fact, so much that we don't
Dialogue: 0,0:00:40.32,0:00:41.18,Default,,0,0,0,,have time to do all of the
Dialogue: 0,0:00:41.18,0:00:44.08,Default,,0,0,0,,justice here today, so let's get
Dialogue: 0,0:00:44.08,0:00:44.47,Default,,0,0,0,,started.
Dialogue: 0,0:00:45.66,0:00:47.66,Default,,0,0,0,,First off, we have a bunch of
Dialogue: 0,0:00:47.66,0:00:50.07,Default,,0,0,0,,enhancements in both Xcode 8.3
Dialogue: 0,0:00:50.40,0:00:51.45,Default,,0,0,0,,and Xcode 9.
Dialogue: 0,0:00:51.65,0:00:53.57,Default,,0,0,0,,I'm going to just call these out
Dialogue: 0,0:00:53.57,0:00:54.65,Default,,0,0,0,,and then I'm going to let you
Dialogue: 0,0:00:54.65,0:00:56.04,Default,,0,0,0,,read up on them in the reference
Dialogue: 0,0:00:56.04,0:00:58.20,Default,,0,0,0,,documentation for XCTest which
Dialogue: 0,0:00:58.20,0:00:59.46,Default,,0,0,0,,has just gotten a major
Dialogue: 0,0:00:59.46,0:00:59.92,Default,,0,0,0,,overhaul.
Dialogue: 0,0:01:01.02,0:01:03.02,Default,,0,0,0,,Then we'll take a look at new
Dialogue: 0,0:01:03.10,0:01:05.01,Default,,0,0,0,,APIs for asynchronous testing
Dialogue: 0,0:01:05.63,0:01:08.13,Default,,0,0,0,,followed by multi-app testing
Dialogue: 0,0:01:09.30,0:01:10.63,Default,,0,0,0,,and some great performance
Dialogue: 0,0:01:10.63,0:01:12.02,Default,,0,0,0,,improvements in UI testing.
Dialogue: 0,0:01:12.81,0:01:15.06,Default,,0,0,0,,Finally, we'll wrap things up
Dialogue: 0,0:01:15.06,0:01:16.33,Default,,0,0,0,,with a group of technologies
Dialogue: 0,0:01:16.33,0:01:18.42,Default,,0,0,0,,called activities, attachments,
Dialogue: 0,0:01:18.71,0:01:19.59,Default,,0,0,0,,and screenshots.
Dialogue: 0,0:01:21.08,0:01:22.43,Default,,0,0,0,,Let's look at those
Dialogue: 0,0:01:22.43,0:01:23.23,Default,,0,0,0,,enhancements.
Dialogue: 0,0:01:24.52,0:01:27.83,Default,,0,0,0,,So, in Xcode 8.3, we added UI
Dialogue: 0,0:01:27.83,0:01:30.07,Default,,0,0,0,,testing for Siri intents with
Dialogue: 0,0:01:30.07,0:01:32.57,Default,,0,0,0,,the new XCUISiriService.
Dialogue: 0,0:01:33.37,0:01:35.58,Default,,0,0,0,,We also introduced UI testing
Dialogue: 0,0:01:35.58,0:01:38.22,Default,,0,0,0,,support for the Touch Bar on
Dialogue: 0,0:01:38.22,0:01:38.95,Default,,0,0,0,,macOS.
Dialogue: 0,0:01:39.58,0:01:44.53,Default,,0,0,0,,In XCTest for Xcode 9 we have
Dialogue: 0,0:01:44.56,0:01:46.15,Default,,0,0,0,,refined the framework Swift
Dialogue: 0,0:01:46.15,0:01:47.95,Default,,0,0,0,,interface as part of the Swift 4
Dialogue: 0,0:01:48.11,0:01:50.36,Default,,0,0,0,,effort and we've also added a
Dialogue: 0,0:01:50.36,0:01:52.77,Default,,0,0,0,,new block-based teardown API
Dialogue: 0,0:01:53.07,0:01:55.27,Default,,0,0,0,,that lets you structure context
Dialogue: 0,0:01:55.27,0:01:57.53,Default,,0,0,0,,specific teardown in your test
Dialogue: 0,0:01:57.53,0:01:59.53,Default,,0,0,0,,methods without additional state
Dialogue: 0,0:01:59.87,0:02:01.18,Default,,0,0,0,,or properties in your test
Dialogue: 0,0:02:01.18,0:02:01.73,Default,,0,0,0,,classes.
Dialogue: 0,0:02:03.14,0:02:05.41,Default,,0,0,0,,In UI testing we've introduced a
Dialogue: 0,0:02:05.41,0:02:07.43,Default,,0,0,0,,new element type for the macOS
Dialogue: 0,0:02:07.46,0:02:08.46,Default,,0,0,0,,menu bar items.
Dialogue: 0,0:02:09.53,0:02:11.27,Default,,0,0,0,,In addition, there's new API on
Dialogue: 0,0:02:11.39,0:02:13.68,Default,,0,0,0,,XCUI element that waits on the
Dialogue: 0,0:02:13.68,0:02:15.71,Default,,0,0,0,,existence of an element reducing
Dialogue: 0,0:02:15.71,0:02:17.34,Default,,0,0,0,,the need for sleep or other
Dialogue: 0,0:02:17.34,0:02:19.58,Default,,0,0,0,,artificial delays in your tests.
Dialogue: 0,0:02:20.52,0:02:24.55,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:02:25.05,0:02:27.30,Default,,0,0,0,,Xcodebuild now launches tests
Dialogue: 0,0:02:27.30,0:02:29.43,Default,,0,0,0,,directly via core simulator so
Dialogue: 0,0:02:29.43,0:02:30.28,Default,,0,0,0,,you'll no longer see the
Dialogue: 0,0:02:30.28,0:02:31.73,Default,,0,0,0,,simulator app launch when
Dialogue: 0,0:02:31.73,0:02:33.10,Default,,0,0,0,,running tests from the command
Dialogue: 0,0:02:33.10,0:02:33.30,Default,,0,0,0,,line.
Dialogue: 0,0:02:33.54,0:02:35.65,Default,,0,0,0,,We're also very excited to
Dialogue: 0,0:02:35.65,0:02:37.59,Default,,0,0,0,,announce Xcodebuild now supports
Dialogue: 0,0:02:37.85,0:02:39.57,Default,,0,0,0,,parallel device testing.
Dialogue: 0,0:02:40.52,0:02:44.55,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:02:45.05,0:02:46.43,Default,,0,0,0,,This means if you pass multiple
Dialogue: 0,0:02:46.43,0:02:48.13,Default,,0,0,0,,destination specifiers to
Dialogue: 0,0:02:48.13,0:02:50.24,Default,,0,0,0,,Xcodebuild it will build once
Dialogue: 0,0:02:50.69,0:02:52.27,Default,,0,0,0,,for all specifiers sharing the
Dialogue: 0,0:02:52.27,0:02:54.47,Default,,0,0,0,,same platform and then run the
Dialogue: 0,0:02:54.47,0:02:55.88,Default,,0,0,0,,test for those destinations
Dialogue: 0,0:02:55.88,0:02:56.83,Default,,0,0,0,,simultaneously.
Dialogue: 0,0:02:57.29,0:02:58.68,Default,,0,0,0,,This should give a huge speedup
Dialogue: 0,0:02:59.04,0:03:00.59,Default,,0,0,0,,to many continuous integration
Dialogue: 0,0:03:00.59,0:03:01.32,Default,,0,0,0,,scenarios.
Dialogue: 0,0:03:02.48,0:03:05.11,Default,,0,0,0,,On the localization side, in
Dialogue: 0,0:03:05.11,0:03:06.92,Default,,0,0,0,,Xcode 9 you can set the language
Dialogue: 0,0:03:06.92,0:03:08.44,Default,,0,0,0,,and region for your test to run
Dialogue: 0,0:03:08.44,0:03:08.69,Default,,0,0,0,,in.
Dialogue: 0,0:03:09.37,0:03:11.26,Default,,0,0,0,,This scheme option allows you to
Dialogue: 0,0:03:11.26,0:03:12.84,Default,,0,0,0,,easily test many different
Dialogue: 0,0:03:12.84,0:03:14.94,Default,,0,0,0,,localizations for your projects.
Dialogue: 0,0:03:16.18,0:03:18.35,Default,,0,0,0,,I also want to take a moment to
Dialogue: 0,0:03:18.47,0:03:19.69,Default,,0,0,0,,call your attention to some
Dialogue: 0,0:03:19.95,0:03:21.59,Default,,0,0,0,,improvements in Xcode Server.
Dialogue: 0,0:03:22.54,0:03:25.39,Default,,0,0,0,,So first of all, as of Xcode 9
Dialogue: 0,0:03:25.39,0:03:27.33,Default,,0,0,0,,you no longer need macOS server,
Dialogue: 0,0:03:28.27,0:03:30.35,Default,,0,0,0,,you can turn on Xcode Server for
Dialogue: 0,0:03:30.35,0:03:31.76,Default,,0,0,0,,your team with just the flick of
Dialogue: 0,0:03:31.76,0:03:33.60,Default,,0,0,0,,a switch by going to the new
Dialogue: 0,0:03:33.60,0:03:35.30,Default,,0,0,0,,preferences pane directly in
Dialogue: 0,0:03:35.33,0:03:35.77,Default,,0,0,0,,Xcode.
Dialogue: 0,0:03:37.38,0:03:39.18,Default,,0,0,0,,Xcode Server also has an
Dialogue: 0,0:03:39.18,0:03:40.76,Default,,0,0,0,,improved provisioning workflow
Dialogue: 0,0:03:41.36,0:03:43.11,Default,,0,0,0,,and adopts the Xcodebuild
Dialogue: 0,0:03:43.11,0:03:44.76,Default,,0,0,0,,improvements for CoreSimulator
Dialogue: 0,0:03:45.19,0:03:46.12,Default,,0,0,0,,and parallel testing.
Dialogue: 0,0:03:46.83,0:03:47.97,Default,,0,0,0,,And those per scheme
Dialogue: 0,0:03:47.97,0:03:49.12,Default,,0,0,0,,localization support
Dialogue: 0,0:03:49.36,0:03:50.95,Default,,0,0,0,,automatically extends to all of
Dialogue: 0,0:03:50.95,0:03:51.54,Default,,0,0,0,,your bots.
Dialogue: 0,0:03:52.09,0:03:55.55,Default,,0,0,0,,So that is our whirlwind tour of
Dialogue: 0,0:03:55.55,0:03:56.52,Default,,0,0,0,,the most exciting new
Dialogue: 0,0:03:56.52,0:03:57.25,Default,,0,0,0,,enhancements.
Dialogue: 0,0:03:57.58,0:03:59.66,Default,,0,0,0,,Now let's slow down a bit and
Dialogue: 0,0:03:59.66,0:04:01.07,Default,,0,0,0,,take a closer look at
Dialogue: 0,0:04:01.19,0:04:02.20,Default,,0,0,0,,asynchronous testing.
Dialogue: 0,0:04:03.57,0:04:05.84,Default,,0,0,0,,Async testing allows you to
Dialogue: 0,0:04:05.84,0:04:07.21,Default,,0,0,0,,validate code which doesn't
Dialogue: 0,0:04:07.21,0:04:09.21,Default,,0,0,0,,finish immediately, but instead
Dialogue: 0,0:04:09.55,0:04:11.35,Default,,0,0,0,,calls back later with closures,
Dialogue: 0,0:04:11.57,0:04:13.14,Default,,0,0,0,,delegate methods or other
Dialogue: 0,0:04:13.14,0:04:14.27,Default,,0,0,0,,delayed completions.
Dialogue: 0,0:04:15.13,0:04:17.02,Default,,0,0,0,,This includes tasks like opening
Dialogue: 0,0:04:17.02,0:04:18.82,Default,,0,0,0,,documents, work done on
Dialogue: 0,0:04:18.82,0:04:19.93,Default,,0,0,0,,background threads,
Dialogue: 0,0:04:20.37,0:04:21.44,Default,,0,0,0,,communicating with other
Dialogue: 0,0:04:21.44,0:04:23.88,Default,,0,0,0,,processes, network activity,
Dialogue: 0,0:04:24.03,0:04:26.25,Default,,0,0,0,,animations, and a range of UI
Dialogue: 0,0:04:26.25,0:04:27.32,Default,,0,0,0,,testing scenarios.
Dialogue: 0,0:04:27.90,0:04:31.06,Default,,0,0,0,,We introduced APIs for async
Dialogue: 0,0:04:31.06,0:04:33.60,Default,,0,0,0,,testing in Xcode 6 several years
Dialogue: 0,0:04:33.60,0:04:34.04,Default,,0,0,0,,ago now.
Dialogue: 0,0:04:34.83,0:04:36.99,Default,,0,0,0,,These methods on XCTestCase let
Dialogue: 0,0:04:36.99,0:04:38.64,Default,,0,0,0,,you define conditions or
Dialogue: 0,0:04:38.68,0:04:40.73,Default,,0,0,0,,expectations as we call them and
Dialogue: 0,0:04:40.73,0:04:41.92,Default,,0,0,0,,then have your test wait for
Dialogue: 0,0:04:41.92,0:04:43.19,Default,,0,0,0,,them to complete or be
Dialogue: 0,0:04:43.19,0:04:43.73,Default,,0,0,0,,fulfilled.
Dialogue: 0,0:04:45.36,0:04:47.76,Default,,0,0,0,,So, here's a simple example.
Dialogue: 0,0:04:48.24,0:04:50.23,Default,,0,0,0,,This fragment of test code opens
Dialogue: 0,0:04:50.23,0:04:51.61,Default,,0,0,0,,a document, waits for it to
Dialogue: 0,0:04:51.61,0:04:53.34,Default,,0,0,0,,finish, and asserts that it was
Dialogue: 0,0:04:53.34,0:04:53.87,Default,,0,0,0,,successful.
Dialogue: 0,0:04:54.59,0:04:55.97,Default,,0,0,0,,The expectation object is
Dialogue: 0,0:04:55.97,0:04:57.60,Default,,0,0,0,,created before the document is
Dialogue: 0,0:04:57.60,0:04:57.97,Default,,0,0,0,,opened.
Dialogue: 0,0:04:58.57,0:05:00.44,Default,,0,0,0,,The test waits for it below the
Dialogue: 0,0:05:00.44,0:05:02.41,Default,,0,0,0,,call to open and fulfills it
Dialogue: 0,0:05:02.50,0:05:04.55,Default,,0,0,0,,inside the closure which allows
Dialogue: 0,0:05:04.55,0:05:06.19,Default,,0,0,0,,the test to then continue on and
Dialogue: 0,0:05:06.19,0:05:08.11,Default,,0,0,0,,execute the test code after the
Dialogue: 0,0:05:08.11,0:05:08.69,Default,,0,0,0,,call to wait.
Dialogue: 0,0:05:09.40,0:05:10.74,Default,,0,0,0,,But this is the original API
Dialogue: 0,0:05:10.74,0:05:12.42,Default,,0,0,0,,that we had in Xcode 6.
Dialogue: 0,0:05:13.44,0:05:14.69,Default,,0,0,0,,It works well enough, but it has
Dialogue: 0,0:05:14.69,0:05:15.58,Default,,0,0,0,,some limitations.
Dialogue: 0,0:05:16.29,0:05:18.11,Default,,0,0,0,,First, timeout string waiting
Dialogue: 0,0:05:18.11,0:05:19.22,Default,,0,0,0,,are always treated as test
Dialogue: 0,0:05:19.22,0:05:19.80,Default,,0,0,0,,failures.
Dialogue: 0,0:05:20.35,0:05:22.49,Default,,0,0,0,,Second, waiting requires the
Dialogue: 0,0:05:22.49,0:05:24.43,Default,,0,0,0,,test object itself which makes
Dialogue: 0,0:05:24.43,0:05:26.10,Default,,0,0,0,,it hard to factor out into any
Dialogue: 0,0:05:26.10,0:05:27.88,Default,,0,0,0,,kind of test library or support
Dialogue: 0,0:05:27.92,0:05:28.16,Default,,0,0,0,,code.
Dialogue: 0,0:05:29.19,0:05:31.08,Default,,0,0,0,,It's also not possible to have
Dialogue: 0,0:05:31.08,0:05:32.61,Default,,0,0,0,,what we call nested waiting.
Dialogue: 0,0:05:33.08,0:05:34.26,Default,,0,0,0,,Nested waiting involves
Dialogue: 0,0:05:34.26,0:05:35.26,Default,,0,0,0,,additional groups of
Dialogue: 0,0:05:35.26,0:05:37.53,Default,,0,0,0,,expectations that get waited on
Dialogue: 0,0:05:37.92,0:05:39.97,Default,,0,0,0,,inside an outer weight context.
Dialogue: 0,0:05:40.78,0:05:42.87,Default,,0,0,0,,To solve these problems, we've
Dialogue: 0,0:05:42.87,0:05:44.17,Default,,0,0,0,,introduced a new class
Dialogue: 0,0:05:44.45,0:05:45.43,Default,,0,0,0,,XCTWaiter.
Dialogue: 0,0:05:46.24,0:05:48.13,Default,,0,0,0,,This class extracts the logic of
Dialogue: 0,0:05:48.13,0:05:49.08,Default,,0,0,0,,waiting that used to be
Dialogue: 0,0:05:49.08,0:05:51.30,Default,,0,0,0,,contained in XCTestCase and
Dialogue: 0,0:05:51.30,0:05:53.16,Default,,0,0,0,,allows you to explicitly declare
Dialogue: 0,0:05:53.16,0:05:54.56,Default,,0,0,0,,the expectations you're waiting
Dialogue: 0,0:05:54.56,0:05:54.72,Default,,0,0,0,,on.
Dialogue: 0,0:05:55.59,0:05:57.54,Default,,0,0,0,,Timeouts and other events are
Dialogue: 0,0:05:57.61,0:05:59.06,Default,,0,0,0,,handled through a delegate API
Dialogue: 0,0:05:59.06,0:06:01.07,Default,,0,0,0,,and are also returned from the
Dialogue: 0,0:06:01.07,0:06:03.47,Default,,0,0,0,,wait API as a result value.
Dialogue: 0,0:06:04.46,0:06:06.32,Default,,0,0,0,,This provides considerably more
Dialogue: 0,0:06:06.32,0:06:07.60,Default,,0,0,0,,flexibility in how you can
Dialogue: 0,0:06:07.60,0:06:09.10,Default,,0,0,0,,structure your asynchronous
Dialogue: 0,0:06:09.10,0:06:09.66,Default,,0,0,0,,tests.
Dialogue: 0,0:06:10.21,0:06:12.73,Default,,0,0,0,,If we return to the previous
Dialogue: 0,0:06:12.73,0:06:14.53,Default,,0,0,0,,example, let's take a look at
Dialogue: 0,0:06:14.53,0:06:16.01,Default,,0,0,0,,what the options are now for
Dialogue: 0,0:06:16.01,0:06:16.41,Default,,0,0,0,,waiting.
Dialogue: 0,0:06:17.77,0:06:20.42,Default,,0,0,0,,In the original code, note that
Dialogue: 0,0:06:20.42,0:06:22.08,Default,,0,0,0,,no expectations are mentioned.
Dialogue: 0,0:06:22.45,0:06:23.15,Default,,0,0,0,,This is because the
Dialogue: 0,0:06:23.15,0:06:25.39,Default,,0,0,0,,implementation is implicit, it
Dialogue: 0,0:06:25.39,0:06:27.71,Default,,0,0,0,,waits on all active expectations
Dialogue: 0,0:06:27.74,0:06:29.34,Default,,0,0,0,,the test object has created.
Dialogue: 0,0:06:30.03,0:06:32.85,Default,,0,0,0,,With just a small change now the
Dialogue: 0,0:06:32.85,0:06:34.92,Default,,0,0,0,,test is waiting explicitly on
Dialogue: 0,0:06:34.92,0:06:36.40,Default,,0,0,0,,the document expectation.
Dialogue: 0,0:06:37.43,0:06:38.98,Default,,0,0,0,,Now another equivalent way of
Dialogue: 0,0:06:38.98,0:06:41.36,Default,,0,0,0,,constructing this is to create
Dialogue: 0,0:06:41.36,0:06:43.50,Default,,0,0,0,,an instance of XCTWaiter with a
Dialogue: 0,0:06:43.50,0:06:45.07,Default,,0,0,0,,test case as delegate.
Dialogue: 0,0:06:46.38,0:06:49.64,Default,,0,0,0,,And yet another option is to
Dialogue: 0,0:06:49.70,0:06:51.49,Default,,0,0,0,,wait using a class method on
Dialogue: 0,0:06:51.49,0:06:53.18,Default,,0,0,0,,XCTWaiter and then handle the
Dialogue: 0,0:06:53.18,0:06:53.92,Default,,0,0,0,,result value.
Dialogue: 0,0:06:54.92,0:06:56.73,Default,,0,0,0,,This flexibility makes it really
Dialogue: 0,0:06:56.73,0:06:58.83,Default,,0,0,0,,easy to use XCTWaiter in helper
Dialogue: 0,0:06:58.83,0:07:01.52,Default,,0,0,0,,method, nested contexts or in
Dialogue: 0,0:07:01.52,0:07:02.78,Default,,0,0,0,,test library code that's
Dialogue: 0,0:07:02.78,0:07:04.37,Default,,0,0,0,,completely decoupled from your
Dialogue: 0,0:07:04.37,0:07:05.22,Default,,0,0,0,,test cases.
Dialogue: 0,0:07:06.68,0:07:09.05,Default,,0,0,0,,Now in addition, to creating
Dialogue: 0,0:07:09.05,0:07:11.00,Default,,0,0,0,,XCTWaiter we've also expanded
Dialogue: 0,0:07:11.00,0:07:13.08,Default,,0,0,0,,the API for XCTTestExpectation.
Dialogue: 0,0:07:13.59,0:07:15.88,Default,,0,0,0,,The initializer is now public
Dialogue: 0,0:07:15.88,0:07:17.89,Default,,0,0,0,,API which also decouples the
Dialogue: 0,0:07:17.89,0:07:19.66,Default,,0,0,0,,creation of expectations from
Dialogue: 0,0:07:19.71,0:07:20.68,Default,,0,0,0,,XCTestCase.
Dialogue: 0,0:07:21.49,0:07:22.70,Default,,0,0,0,,We've also introduced an
Dialogue: 0,0:07:22.70,0:07:24.46,Default,,0,0,0,,expected fulfillment count
Dialogue: 0,0:07:24.55,0:07:25.85,Default,,0,0,0,,property, this is where
Dialogue: 0,0:07:25.85,0:07:27.30,Default,,0,0,0,,expectations representing
Dialogue: 0,0:07:27.30,0:07:29.21,Default,,0,0,0,,conditions which occur multiple
Dialogue: 0,0:07:29.21,0:07:29.72,Default,,0,0,0,,times.
Dialogue: 0,0:07:30.71,0:07:31.98,Default,,0,0,0,,Now for conditions which should
Dialogue: 0,0:07:31.98,0:07:33.96,Default,,0,0,0,,not occur at all there's an
Dialogue: 0,0:07:33.96,0:07:36.81,Default,,0,0,0,,inverted API for expectations
Dialogue: 0,0:07:37.12,0:07:38.35,Default,,0,0,0,,which will cause the waiter to
Dialogue: 0,0:07:38.35,0:07:39.83,Default,,0,0,0,,raise a failure only if the
Dialogue: 0,0:07:39.83,0:07:41.73,Default,,0,0,0,,expectation is fulfilled before
Dialogue: 0,0:07:41.73,0:07:43.03,Default,,0,0,0,,the timeout collapses.
Dialogue: 0,0:07:43.88,0:07:46.60,Default,,0,0,0,,Finally, XCTWaiter allows you to
Dialogue: 0,0:07:46.60,0:07:48.21,Default,,0,0,0,,enforce the order in which
Dialogue: 0,0:07:48.21,0:07:50.36,Default,,0,0,0,,expectations are fulfilled using
Dialogue: 0,0:07:50.36,0:07:52.71,Default,,0,0,0,,an optional flag with the wait
Dialogue: 0,0:07:53.51,0:07:53.71,Default,,0,0,0,,APIs.
Dialogue: 0,0:07:54.24,0:07:56.60,Default,,0,0,0,,So, those are the updates to
Dialogue: 0,0:07:56.60,0:07:59.18,Default,,0,0,0,,asynchronous testing, XCTWaiter,
Dialogue: 0,0:07:59.64,0:08:01.46,Default,,0,0,0,,our new API for managing
Dialogue: 0,0:08:01.46,0:08:03.57,Default,,0,0,0,,expectations and a bunch of
Dialogue: 0,0:08:03.57,0:08:04.86,Default,,0,0,0,,improvements to XCTest
Dialogue: 0,0:08:04.86,0:08:05.55,Default,,0,0,0,,expectation.
Dialogue: 0,0:08:06.38,0:08:08.04,Default,,0,0,0,,Both of these classes are fully
Dialogue: 0,0:08:08.04,0:08:10.49,Default,,0,0,0,,decoupled from XCTestCase giving
Dialogue: 0,0:08:10.49,0:08:12.00,Default,,0,0,0,,you a much easier and more
Dialogue: 0,0:08:12.09,0:08:13.77,Default,,0,0,0,,powerful system to use.
Dialogue: 0,0:08:14.33,0:08:17.60,Default,,0,0,0,,Now I'd like to talk about UI
Dialogue: 0,0:08:17.60,0:08:19.88,Default,,0,0,0,,testing and in particular, UI
Dialogue: 0,0:08:19.88,0:08:21.01,Default,,0,0,0,,testing with multiple
Dialogue: 0,0:08:21.01,0:08:21.88,Default,,0,0,0,,applications.
Dialogue: 0,0:08:23.22,0:08:25.06,Default,,0,0,0,,The starting point of almost
Dialogue: 0,0:08:25.14,0:08:26.92,Default,,0,0,0,,every UI test is an
Dialogue: 0,0:08:27.02,0:08:28.98,Default,,0,0,0,,XCUIApplication instance.
Dialogue: 0,0:08:29.48,0:08:32.04,Default,,0,0,0,,This class lets you launch and
Dialogue: 0,0:08:32.16,0:08:33.07,Default,,0,0,0,,terminate the app you're
Dialogue: 0,0:08:33.07,0:08:34.74,Default,,0,0,0,,testing, as well as create
Dialogue: 0,0:08:34.74,0:08:36.73,Default,,0,0,0,,queries for finding the user
Dialogue: 0,0:08:36.73,0:08:38.31,Default,,0,0,0,,interface elements which you
Dialogue: 0,0:08:38.31,0:08:39.65,Default,,0,0,0,,then automate by sending
Dialogue: 0,0:08:39.65,0:08:40.62,Default,,0,0,0,,synthetic events.
Dialogue: 0,0:08:42.18,0:08:43.99,Default,,0,0,0,,UI testing has a target
Dialogue: 0,0:08:43.99,0:08:46.07,Default,,0,0,0,,application concept which is the
Dialogue: 0,0:08:46.07,0:08:47.38,Default,,0,0,0,,application your tests are
Dialogue: 0,0:08:47.38,0:08:48.53,Default,,0,0,0,,primarily testing.
Dialogue: 0,0:08:48.53,0:08:50.36,Default,,0,0,0,,In your project settings for
Dialogue: 0,0:08:50.36,0:08:52.36,Default,,0,0,0,,your tests you designate an app
Dialogue: 0,0:08:52.41,0:08:54.43,Default,,0,0,0,,in the same project as being the
Dialogue: 0,0:08:54.47,0:08:55.67,Default,,0,0,0,,target application.
Dialogue: 0,0:08:56.51,0:08:57.79,Default,,0,0,0,,This enables you to call the
Dialogue: 0,0:08:57.79,0:08:59.34,Default,,0,0,0,,default initializer for
Dialogue: 0,0:08:59.34,0:09:01.78,Default,,0,0,0,,XCUIApplication and the instance
Dialogue: 0,0:09:01.78,0:09:02.62,Default,,0,0,0,,will be created with the
Dialogue: 0,0:09:02.62,0:09:04.41,Default,,0,0,0,,information for installing,
Dialogue: 0,0:09:04.57,0:09:06.34,Default,,0,0,0,,launching and interacting with
Dialogue: 0,0:09:06.39,0:09:07.38,Default,,0,0,0,,that application.
Dialogue: 0,0:09:08.87,0:09:09.92,Default,,0,0,0,,This mechanism is very
Dialogue: 0,0:09:09.92,0:09:11.20,Default,,0,0,0,,convenient, but it doesn't give
Dialogue: 0,0:09:11.20,0:09:12.37,Default,,0,0,0,,you a way to test other
Dialogue: 0,0:09:12.37,0:09:13.21,Default,,0,0,0,,applications.
Dialogue: 0,0:09:13.97,0:09:15.31,Default,,0,0,0,,Some examples of what we would
Dialogue: 0,0:09:15.31,0:09:17.48,Default,,0,0,0,,call multi-app scenarios include
Dialogue: 0,0:09:17.48,0:09:19.47,Default,,0,0,0,,app groups where you have more
Dialogue: 0,0:09:19.47,0:09:20.52,Default,,0,0,0,,than one application in your
Dialogue: 0,0:09:20.52,0:09:21.91,Default,,0,0,0,,project and they somehow
Dialogue: 0,0:09:21.91,0:09:23.41,Default,,0,0,0,,interact together and pass data
Dialogue: 0,0:09:23.41,0:09:24.23,Default,,0,0,0,,back and forth.
Dialogue: 0,0:09:25.20,0:09:26.37,Default,,0,0,0,,Another example would be
Dialogue: 0,0:09:26.37,0:09:28.17,Default,,0,0,0,,settings if you need to automate
Dialogue: 0,0:09:28.25,0:09:30.12,Default,,0,0,0,,the settings for your app and
Dialogue: 0,0:09:30.12,0:09:31.64,Default,,0,0,0,,change preferences for different
Dialogue: 0,0:09:31.64,0:09:32.52,Default,,0,0,0,,test scenarios.
Dialogue: 0,0:09:33.25,0:09:34.86,Default,,0,0,0,,And yet another example, our app
Dialogue: 0,0:09:34.86,0:09:35.70,Default,,0,0,0,,extensions.
Dialogue: 0,0:09:36.65,0:09:39.04,Default,,0,0,0,,All of these require more than a
Dialogue: 0,0:09:39.04,0:09:40.72,Default,,0,0,0,,single target application.
Dialogue: 0,0:09:42.02,0:09:43.77,Default,,0,0,0,,To solve this, we've added some
Dialogue: 0,0:09:43.77,0:09:46.17,Default,,0,0,0,,new APIs to XCUIApplication.
Dialogue: 0,0:09:47.08,0:09:48.84,Default,,0,0,0,,First, there are initializers
Dialogue: 0,0:09:49.21,0:09:50.69,Default,,0,0,0,,that allow you to specify an app
Dialogue: 0,0:09:50.87,0:09:52.77,Default,,0,0,0,,by its bundle ID or
Dialogue: 0,0:09:52.77,0:09:54.92,Default,,0,0,0,,alternatively on macOS you can
Dialogue: 0,0:09:54.92,0:09:58.06,Default,,0,0,0,,also use a file URL to designate
Dialogue: 0,0:09:58.06,0:09:59.77,Default,,0,0,0,,the location of the app on disk.
Dialogue: 0,0:10:00.63,0:10:02.69,Default,,0,0,0,,Second, we've added an activate
Dialogue: 0,0:10:02.69,0:10:04.16,Default,,0,0,0,,method that will bring the app
Dialogue: 0,0:10:04.19,0:10:05.26,Default,,0,0,0,,from the background to the
Dialogue: 0,0:10:05.26,0:10:06.70,Default,,0,0,0,,foreground if it's already
Dialogue: 0,0:10:06.70,0:10:08.30,Default,,0,0,0,,running and launch a new
Dialogue: 0,0:10:08.30,0:10:09.53,Default,,0,0,0,,instance if it's not.
Dialogue: 0,0:10:10.34,0:10:12.23,Default,,0,0,0,,But launch API would terminate
Dialogue: 0,0:10:12.23,0:10:14.56,Default,,0,0,0,,any previous running instance
Dialogue: 0,0:10:14.56,0:10:16.31,Default,,0,0,0,,first, so you always have a
Dialogue: 0,0:10:16.39,0:10:17.59,Default,,0,0,0,,cleaner slate when you start
Dialogue: 0,0:10:17.59,0:10:18.17,Default,,0,0,0,,your test.
Dialogue: 0,0:10:18.62,0:10:20.03,Default,,0,0,0,,Activate is useful for those
Dialogue: 0,0:10:20.03,0:10:21.58,Default,,0,0,0,,scenarios when you're not
Dialogue: 0,0:10:21.58,0:10:22.79,Default,,0,0,0,,interested in wiping out
Dialogue: 0,0:10:22.79,0:10:24.28,Default,,0,0,0,,previous state, but you actually
Dialogue: 0,0:10:24.28,0:10:26.06,Default,,0,0,0,,want to resume from some earlier
Dialogue: 0,0:10:26.06,0:10:26.99,Default,,0,0,0,,point in the test.
Dialogue: 0,0:10:28.09,0:10:29.71,Default,,0,0,0,,Finally, there's a new state
Dialogue: 0,0:10:29.71,0:10:31.00,Default,,0,0,0,,property that you can use to
Dialogue: 0,0:10:31.00,0:10:32.42,Default,,0,0,0,,monitor changes in the
Dialogue: 0,0:10:32.42,0:10:33.67,Default,,0,0,0,,applications you're testing.
Dialogue: 0,0:10:34.59,0:10:36.69,Default,,0,0,0,,So, here's some example of using
Dialogue: 0,0:10:36.69,0:10:37.47,Default,,0,0,0,,these APIs.
Dialogue: 0,0:10:38.17,0:10:39.42,Default,,0,0,0,,This code creates two
Dialogue: 0,0:10:39.42,0:10:41.74,Default,,0,0,0,,XCUIApplication instances with
Dialogue: 0,0:10:41.78,0:10:42.55,Default,,0,0,0,,bundle IDs.
Dialogue: 0,0:10:42.90,0:10:44.92,Default,,0,0,0,,This is a pair of apps perhaps
Dialogue: 0,0:10:44.92,0:10:45.80,Default,,0,0,0,,in an app group.
Dialogue: 0,0:10:46.58,0:10:48.86,Default,,0,0,0,,After launching and interacting
Dialogue: 0,0:10:49.02,0:10:51.13,Default,,0,0,0,,the readerApp the test then
Dialogue: 0,0:10:51.13,0:10:53.19,Default,,0,0,0,,launches the writerApp and
Dialogue: 0,0:10:53.19,0:10:54.12,Default,,0,0,0,,finally, after some more
Dialogue: 0,0:10:54.12,0:10:55.89,Default,,0,0,0,,interaction it uses the activate
Dialogue: 0,0:10:55.89,0:10:58.29,Default,,0,0,0,,API to bring the readerApp back
Dialogue: 0,0:10:58.29,0:11:00.60,Default,,0,0,0,,to the foreground without
Dialogue: 0,0:11:00.60,0:11:01.60,Default,,0,0,0,,terminating it first.
Dialogue: 0,0:11:02.18,0:11:04.64,Default,,0,0,0,,So now let's see that in action,
Dialogue: 0,0:11:04.87,0:11:06.74,Default,,0,0,0,,here's Warren Ma with a demo of
Dialogue: 0,0:11:06.74,0:11:07.98,Default,,0,0,0,,multi-app UI testing.
Dialogue: 0,0:11:08.52,0:11:15.56,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:11:16.06,0:11:16.76,Default,,0,0,0,,>> Thanks Wil.
Dialogue: 0,0:11:17.00,0:11:19.02,Default,,0,0,0,,So as Wil just described, now in
Dialogue: 0,0:11:19.02,0:11:21.13,Default,,0,0,0,,Xcode 9 you can write UI tests
Dialogue: 0,0:11:21.13,0:11:21.95,Default,,0,0,0,,that involve multiple
Dialogue: 0,0:11:21.95,0:11:23.54,Default,,0,0,0,,applications and I'm excited to
Dialogue: 0,0:11:23.54,0:11:24.78,Default,,0,0,0,,show you guys how you might
Dialogue: 0,0:11:24.78,0:11:26.21,Default,,0,0,0,,incorporate the new APIs into
Dialogue: 0,0:11:26.21,0:11:27.03,Default,,0,0,0,,your own test suites.
Dialogue: 0,0:11:27.87,0:11:32.68,Default,,0,0,0,,So, let me go ahead and start by
Dialogue: 0,0:11:32.68,0:11:33.82,Default,,0,0,0,,showing you these two related
Dialogue: 0,0:11:33.82,0:11:34.67,Default,,0,0,0,,apps that I have here.
Dialogue: 0,0:11:35.44,0:11:36.21,Default,,0,0,0,,I'm running them on a
Dialogue: 0,0:11:36.21,0:11:37.58,Default,,0,0,0,,development device and I'm using
Dialogue: 0,0:11:37.58,0:11:38.89,Default,,0,0,0,,QuickTime to show you what's on
Dialogue: 0,0:11:38.89,0:11:39.31,Default,,0,0,0,,the screen.
Dialogue: 0,0:11:40.14,0:11:41.82,Default,,0,0,0,,The first one is a message
Dialogue: 0,0:11:41.82,0:11:43.64,Default,,0,0,0,,posting app, the writerApp.
Dialogue: 0,0:11:44.95,0:11:47.09,Default,,0,0,0,,Here we have a username, we have
Dialogue: 0,0:11:47.09,0:11:48.56,Default,,0,0,0,,a text view that we can tap
Dialogue: 0,0:11:48.56,0:11:51.83,Default,,0,0,0,,into, we can type out a test
Dialogue: 0,0:11:51.83,0:11:55.00,Default,,0,0,0,,message, tap return on the
Dialogue: 0,0:11:55.00,0:11:56.85,Default,,0,0,0,,keyboard and post it to the
Dialogue: 0,0:11:56.85,0:11:58.20,Default,,0,0,0,,server by tapping on the Send
Dialogue: 0,0:11:58.20,0:11:58.55,Default,,0,0,0,,button.
Dialogue: 0,0:11:59.74,0:12:00.78,Default,,0,0,0,,Great, so it's been posted.
Dialogue: 0,0:12:01.44,0:12:02.18,Default,,0,0,0,,Now how do we view these
Dialogue: 0,0:12:02.18,0:12:02.65,Default,,0,0,0,,messages?
Dialogue: 0,0:12:03.47,0:12:05.00,Default,,0,0,0,,Well that's the purpose of our
Dialogue: 0,0:12:05.00,0:12:06.34,Default,,0,0,0,,second app the readerApp.
Dialogue: 0,0:12:08.32,0:12:10.09,Default,,0,0,0,,Here is a list of all messages
Dialogue: 0,0:12:10.09,0:12:10.99,Default,,0,0,0,,that have been posted to the
Dialogue: 0,0:12:10.99,0:12:12.88,Default,,0,0,0,,server and at the very top is
Dialogue: 0,0:12:12.88,0:12:14.74,Default,,0,0,0,,the most recent message posted
Dialogue: 0,0:12:14.74,0:12:16.43,Default,,0,0,0,,the one I just sent and we can
Dialogue: 0,0:12:16.43,0:12:17.93,Default,,0,0,0,,tap into that to view it in
Dialogue: 0,0:12:17.93,0:12:18.36,Default,,0,0,0,,detail.
Dialogue: 0,0:12:18.36,0:12:20.41,Default,,0,0,0,,And then we can return to that
Dialogue: 0,0:12:20.41,0:12:21.63,Default,,0,0,0,,list of messages using the
Dialogue: 0,0:12:21.71,0:12:23.43,Default,,0,0,0,,button at the top left All
Dialogue: 0,0:12:23.43,0:12:23.84,Default,,0,0,0,,Messages.
Dialogue: 0,0:12:24.78,0:12:26.74,Default,,0,0,0,,So, let's say you want to test
Dialogue: 0,0:12:26.74,0:12:28.54,Default,,0,0,0,,this process of typing out a
Dialogue: 0,0:12:28.54,0:12:29.75,Default,,0,0,0,,test message in the writerApp,
Dialogue: 0,0:12:30.15,0:12:31.78,Default,,0,0,0,,posing it to the server and then
Dialogue: 0,0:12:31.78,0:12:33.10,Default,,0,0,0,,verifying that it appears at the
Dialogue: 0,0:12:33.10,0:12:34.55,Default,,0,0,0,,top of the list of messages from
Dialogue: 0,0:12:34.55,0:12:35.52,Default,,0,0,0,,the second application.
Dialogue: 0,0:12:36.08,0:12:37.80,Default,,0,0,0,,Well before Xcode 9 you would
Dialogue: 0,0:12:37.80,0:12:39.21,Default,,0,0,0,,have to write separate UI tests
Dialogue: 0,0:12:39.31,0:12:41.03,Default,,0,0,0,,for each application and even
Dialogue: 0,0:12:41.03,0:12:42.45,Default,,0,0,0,,then, you wouldn't really have a
Dialogue: 0,0:12:42.45,0:12:44.00,Default,,0,0,0,,way of verifying the behavior
Dialogue: 0,0:12:44.00,0:12:44.76,Default,,0,0,0,,between both.
Dialogue: 0,0:12:45.41,0:12:47.19,Default,,0,0,0,,But now with multi-app testing
Dialogue: 0,0:12:47.42,0:12:49.56,Default,,0,0,0,,in Xcode 9, multi-UI testing in
Dialogue: 0,0:12:49.56,0:12:51.53,Default,,0,0,0,,Xcode 9 we can easily test
Dialogue: 0,0:12:51.53,0:12:53.10,Default,,0,0,0,,real-world scenarios between
Dialogue: 0,0:12:53.10,0:12:54.09,Default,,0,0,0,,multiple applications.
Dialogue: 0,0:12:54.50,0:12:56.36,Default,,0,0,0,,To show you how that looks let's
Dialogue: 0,0:12:56.36,0:12:58.26,Default,,0,0,0,,write a quick UI test to
Dialogue: 0,0:12:58.46,0:12:59.63,Default,,0,0,0,,automate the workflow I just
Dialogue: 0,0:12:59.63,0:13:00.18,Default,,0,0,0,,demonstrated.
Dialogue: 0,0:13:01.27,0:13:05.05,Default,,0,0,0,,All right, the first step in our
Dialogue: 0,0:13:05.05,0:13:08.95,Default,,0,0,0,,test is to launch our Reader
Dialogue: 0,0:13:08.95,0:13:09.54,Default,,0,0,0,,application.
Dialogue: 0,0:13:10.51,0:13:12.37,Default,,0,0,0,,In order to do that we're going
Dialogue: 0,0:13:12.37,0:13:13.64,Default,,0,0,0,,to initialize it using its
Dialogue: 0,0:13:13.68,0:13:14.50,Default,,0,0,0,,bundle ID.
Dialogue: 0,0:13:15.52,0:13:16.79,Default,,0,0,0,,Afterwards we can go ahead and
Dialogue: 0,0:13:16.79,0:13:20.12,Default,,0,0,0,,launch it from a clean state.
Dialogue: 0,0:13:20.31,0:13:21.35,Default,,0,0,0,,Once our readerApp has been
Dialogue: 0,0:13:21.35,0:13:23.07,Default,,0,0,0,,launched we're just going to go
Dialogue: 0,0:13:23.07,0:13:24.24,Default,,0,0,0,,ahead and verify the first
Dialogue: 0,0:13:24.24,0:13:25.23,Default,,0,0,0,,message in that list of
Dialogue: 0,0:13:25.23,0:13:25.73,Default,,0,0,0,,messages.
Dialogue: 0,0:13:26.46,0:13:28.47,Default,,0,0,0,,To do that we'll tap into the
Dialogue: 0,0:13:28.80,0:13:31.27,Default,,0,0,0,,first message in the list, we'll
Dialogue: 0,0:13:31.27,0:13:32.66,Default,,0,0,0,,verify that its contents are
Dialogue: 0,0:13:32.66,0:13:35.00,Default,,0,0,0,,what we expect and finally,
Dialogue: 0,0:13:35.00,0:13:36.19,Default,,0,0,0,,we'll return to the list of
Dialogue: 0,0:13:36.19,0:13:37.47,Default,,0,0,0,,messages using that button at
Dialogue: 0,0:13:37.47,0:13:38.13,Default,,0,0,0,,the top left.
Dialogue: 0,0:13:39.60,0:13:40.65,Default,,0,0,0,,Once we verified the first
Dialogue: 0,0:13:40.65,0:13:42.04,Default,,0,0,0,,message in the list we want to
Dialogue: 0,0:13:42.04,0:13:43.20,Default,,0,0,0,,type out our test message and
Dialogue: 0,0:13:43.20,0:13:44.33,Default,,0,0,0,,post it to the server into the
Dialogue: 0,0:13:44.33,0:13:44.77,Default,,0,0,0,,writerApp.
Dialogue: 0,0:13:45.62,0:13:48.57,Default,,0,0,0,,To do that the first step once
Dialogue: 0,0:13:48.57,0:13:50.62,Default,,0,0,0,,again is to initialize the
Dialogue: 0,0:13:50.62,0:13:52.46,Default,,0,0,0,,writerApp using its bundle ID,
Dialogue: 0,0:13:52.46,0:13:54.07,Default,,0,0,0,,in this case it's
Dialogue: 0,0:13:54.07,0:13:55.60,Default,,0,0,0,,com.mycompany.Writer.
Dialogue: 0,0:13:56.51,0:13:58.12,Default,,0,0,0,,Afterwards, it's as easy as just
Dialogue: 0,0:13:58.12,0:13:58.82,Default,,0,0,0,,calling Activate.
Dialogue: 0,0:13:59.40,0:14:01.19,Default,,0,0,0,,Now Activate also waits for the
Dialogue: 0,0:14:01.19,0:14:02.50,Default,,0,0,0,,application state to become
Dialogue: 0,0:14:02.50,0:14:03.56,Default,,0,0,0,,running foreground before
Dialogue: 0,0:14:03.56,0:14:05.14,Default,,0,0,0,,returning, so we don't need to
Dialogue: 0,0:14:05.14,0:14:07.28,Default,,0,0,0,,do any sort of manual waiting on
Dialogue: 0,0:14:07.28,0:14:08.19,Default,,0,0,0,,the application state.
Dialogue: 0,0:14:08.78,0:14:10.24,Default,,0,0,0,,Once Activate has returned we
Dialogue: 0,0:14:10.24,0:14:11.45,Default,,0,0,0,,know that the test is good to
Dialogue: 0,0:14:11.45,0:14:11.86,Default,,0,0,0,,continue.
Dialogue: 0,0:14:12.30,0:14:15.01,Default,,0,0,0,,Once the writerApp is running
Dialogue: 0,0:14:15.01,0:14:16.71,Default,,0,0,0,,foreground we can go ahead and
Dialogue: 0,0:14:16.71,0:14:18.21,Default,,0,0,0,,compose our test message and
Dialogue: 0,0:14:18.21,0:14:19.02,Default,,0,0,0,,post it to the server.
Dialogue: 0,0:14:19.75,0:14:21.62,Default,,0,0,0,,To do that we'll tap into the
Dialogue: 0,0:14:21.62,0:14:23.74,Default,,0,0,0,,text field, we'll type out our
Dialogue: 0,0:14:23.74,0:14:26.12,Default,,0,0,0,,test message, we'll tap on the
Dialogue: 0,0:14:26.12,0:14:27.54,Default,,0,0,0,,return button on the keyboard,
Dialogue: 0,0:14:28.36,0:14:29.61,Default,,0,0,0,,and then we'll tap on the send
Dialogue: 0,0:14:29.61,0:14:30.94,Default,,0,0,0,,button to post it to the server.
Dialogue: 0,0:14:32.83,0:14:33.96,Default,,0,0,0,,Now we want to make sure that it
Dialogue: 0,0:14:33.96,0:14:35.24,Default,,0,0,0,,appears on the top of the list
Dialogue: 0,0:14:35.45,0:14:36.42,Default,,0,0,0,,of the messages in the
Dialogue: 0,0:14:36.42,0:14:36.84,Default,,0,0,0,,readerApp.
Dialogue: 0,0:14:38.01,0:14:39.18,Default,,0,0,0,,Earlier we used Activate to
Dialogue: 0,0:14:39.18,0:14:40.05,Default,,0,0,0,,switch between the two
Dialogue: 0,0:14:40.05,0:14:41.59,Default,,0,0,0,,applications, but in this case,
Dialogue: 0,0:14:41.85,0:14:43.09,Default,,0,0,0,,let's make use of that back to
Dialogue: 0,0:14:43.09,0:14:44.47,Default,,0,0,0,,app button that's built into iOS
Dialogue: 0,0:14:44.95,0:14:45.95,Default,,0,0,0,,which appears at the top left
Dialogue: 0,0:14:45.95,0:14:46.64,Default,,0,0,0,,corner of the screen.
Dialogue: 0,0:14:47.25,0:14:50.28,Default,,0,0,0,,So, to do that we're going to
Dialogue: 0,0:14:50.28,0:14:52.73,Default,,0,0,0,,tap on the back to app button.
Dialogue: 0,0:14:52.97,0:14:54.36,Default,,0,0,0,,However, in this case because
Dialogue: 0,0:14:54.36,0:14:55.83,Default,,0,0,0,,we're not using Activate we do
Dialogue: 0,0:14:55.83,0:14:58.04,Default,,0,0,0,,need to manually wait on the
Dialogue: 0,0:14:58.11,0:14:59.72,Default,,0,0,0,,application state to become
Dialogue: 0,0:14:59.72,0:15:00.76,Default,,0,0,0,,running foreground before
Dialogue: 0,0:15:00.76,0:15:01.94,Default,,0,0,0,,continuing with the test.
Dialogue: 0,0:15:02.73,0:15:04.02,Default,,0,0,0,,So, to do that let's make use of
Dialogue: 0,0:15:04.02,0:15:05.15,Default,,0,0,0,,the new predicate based
Dialogue: 0,0:15:05.15,0:15:06.15,Default,,0,0,0,,expectation API.
Dialogue: 0,0:15:08.60,0:15:10.87,Default,,0,0,0,,So, we want to make sure that
Dialogue: 0,0:15:10.87,0:15:13.72,Default,,0,0,0,,the Reader app state has become
Dialogue: 0,0:15:13.72,0:15:14.77,Default,,0,0,0,,running foreground before
Dialogue: 0,0:15:14.77,0:15:15.29,Default,,0,0,0,,returning.
Dialogue: 0,0:15:16.64,0:15:18.07,Default,,0,0,0,,After we've defined our
Dialogue: 0,0:15:18.07,0:15:20.19,Default,,0,0,0,,expectation we'll go ahead and
Dialogue: 0,0:15:20.19,0:15:21.42,Default,,0,0,0,,wait for that expectation to
Dialogue: 0,0:15:21.42,0:15:23.25,Default,,0,0,0,,become true with a timeout of 10
Dialogue: 0,0:15:23.25,0:15:24.35,Default,,0,0,0,,seconds which should be more
Dialogue: 0,0:15:24.35,0:15:24.99,Default,,0,0,0,,than sufficient.
Dialogue: 0,0:15:25.46,0:15:28.08,Default,,0,0,0,,Once the Reader app has become
Dialogue: 0,0:15:28.08,0:15:30.06,Default,,0,0,0,,running foreground we can go
Dialogue: 0,0:15:30.06,0:15:31.54,Default,,0,0,0,,ahead and continue with the
Dialogue: 0,0:15:31.54,0:15:33.39,Default,,0,0,0,,final step of our test which is
Dialogue: 0,0:15:33.39,0:15:34.67,Default,,0,0,0,,to verify that the message
Dialogue: 0,0:15:34.67,0:15:36.23,Default,,0,0,0,,appears at the top of the list.
Dialogue: 0,0:15:36.69,0:15:37.89,Default,,0,0,0,,Similar to what we did before,
Dialogue: 0,0:15:38.40,0:15:39.24,Default,,0,0,0,,we'll tape into the first
Dialogue: 0,0:15:39.24,0:15:41.25,Default,,0,0,0,,message in the list, we'll
Dialogue: 0,0:15:41.25,0:15:42.60,Default,,0,0,0,,verify that its contents are the
Dialogue: 0,0:15:42.60,0:15:45.06,Default,,0,0,0,,message that we just posted, and
Dialogue: 0,0:15:45.15,0:15:46.31,Default,,0,0,0,,then we'll return to the list of
Dialogue: 0,0:15:46.31,0:15:46.77,Default,,0,0,0,,messages.
Dialogue: 0,0:15:47.79,0:15:48.97,Default,,0,0,0,,So, let's go ahead and run the
Dialogue: 0,0:15:48.97,0:15:50.34,Default,,0,0,0,,test to see it in action.
Dialogue: 0,0:15:50.89,0:15:52.43,Default,,0,0,0,,To do that I'll click on the
Dialogue: 0,0:15:52.43,0:15:53.76,Default,,0,0,0,,test diamond in the left-hand
Dialogue: 0,0:15:53.76,0:15:53.98,Default,,0,0,0,,gutter.
Dialogue: 0,0:15:59.05,0:16:00.72,Default,,0,0,0,,So, when you run UI tests in
Dialogue: 0,0:16:00.72,0:16:02.19,Default,,0,0,0,,general it has to install what
Dialogue: 0,0:16:02.19,0:16:03.37,Default,,0,0,0,,is called the UI test runner and
Dialogue: 0,0:16:03.72,0:16:04.99,Default,,0,0,0,,that is the test process in
Dialogue: 0,0:16:04.99,0:16:07.05,Default,,0,0,0,,which UI tests run in addition
Dialogue: 0,0:16:07.05,0:16:07.65,Default,,0,0,0,,to installing the app.
Dialogue: 0,0:16:07.87,0:16:09.39,Default,,0,0,0,,So, it just takes a bit of time
Dialogue: 0,0:16:09.39,0:16:10.17,Default,,0,0,0,,for that to launch.
Dialogue: 0,0:16:10.64,0:16:13.26,Default,,0,0,0,,Once it's launched the test can
Dialogue: 0,0:16:13.26,0:16:14.47,Default,,0,0,0,,go ahead and continue to run.
Dialogue: 0,0:16:16.84,0:16:18.31,Default,,0,0,0,,So once again, the first step of
Dialogue: 0,0:16:18.31,0:16:19.66,Default,,0,0,0,,our test was to launch the
Dialogue: 0,0:16:19.66,0:16:21.81,Default,,0,0,0,,Reader app and verify the first
Dialogue: 0,0:16:21.81,0:16:23.47,Default,,0,0,0,,message in the list of messages.
Dialogue: 0,0:16:25.30,0:16:27.52,Default,,0,0,0,,Then we use Activate to open the
Dialogue: 0,0:16:27.52,0:16:29.20,Default,,0,0,0,,Writer app, type out our test
Dialogue: 0,0:16:29.20,0:16:30.94,Default,,0,0,0,,message and post it to the
Dialogue: 0,0:16:30.94,0:16:31.35,Default,,0,0,0,,server.
Dialogue: 0,0:16:32.16,0:16:33.11,Default,,0,0,0,,And we use the back to app
Dialogue: 0,0:16:33.11,0:16:34.21,Default,,0,0,0,,button to switch back to the
Dialogue: 0,0:16:34.21,0:16:35.30,Default,,0,0,0,,Reader app and verify that the
Dialogue: 0,0:16:35.30,0:16:36.43,Default,,0,0,0,,message appeared at the top the
Dialogue: 0,0:16:36.43,0:16:36.85,Default,,0,0,0,,list.
Dialogue: 0,0:16:37.46,0:16:39.34,Default,,0,0,0,,So [inaudible] how easy it is to
Dialogue: 0,0:16:39.34,0:16:40.71,Default,,0,0,0,,make use of the awesome new
Dialogue: 0,0:16:40.95,0:16:43.01,Default,,0,0,0,,multi-UI testing APIs available
Dialogue: 0,0:16:43.01,0:16:44.74,Default,,0,0,0,,in Xcode 9 to test multiple
Dialogue: 0,0:16:44.74,0:16:45.36,Default,,0,0,0,,applications.
Dialogue: 0,0:16:45.63,0:16:46.50,Default,,0,0,0,,And with that I'd like to hand
Dialogue: 0,0:16:46.50,0:16:46.94,Default,,0,0,0,,it back to Wil.
Dialogue: 0,0:16:47.52,0:16:51.55,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:16:52.05,0:16:53.55,Default,,0,0,0,,>> Thanks Warren, that's really
Dialogue: 0,0:16:53.55,0:16:54.14,Default,,0,0,0,,great stuff.
Dialogue: 0,0:16:54.75,0:16:56.70,Default,,0,0,0,,With just a few additions the
Dialogue: 0,0:16:56.70,0:16:57.80,Default,,0,0,0,,realm of UI testing
Dialogue: 0,0:16:57.80,0:16:59.19,Default,,0,0,0,,possibilities has gotten much
Dialogue: 0,0:16:59.32,0:16:59.81,Default,,0,0,0,,broader.
Dialogue: 0,0:17:00.61,0:17:01.86,Default,,0,0,0,,The new initializers let you
Dialogue: 0,0:17:01.86,0:17:03.63,Default,,0,0,0,,test any application and the
Dialogue: 0,0:17:03.63,0:17:04.96,Default,,0,0,0,,Activate API means you can
Dialogue: 0,0:17:04.96,0:17:06.09,Default,,0,0,0,,switch between multiple
Dialogue: 0,0:17:06.09,0:17:08.24,Default,,0,0,0,,applications without restarting
Dialogue: 0,0:17:08.24,0:17:10.60,Default,,0,0,0,,them, multi-app UI testing.
Dialogue: 0,0:17:11.62,0:17:14.13,Default,,0,0,0,,So, let's switch gears and talk
Dialogue: 0,0:17:14.13,0:17:16.23,Default,,0,0,0,,about performance in UI testing.
Dialogue: 0,0:17:17.66,0:17:20.10,Default,,0,0,0,,At the heart of UI testing are
Dialogue: 0,0:17:20.10,0:17:21.76,Default,,0,0,0,,the user interface elements that
Dialogue: 0,0:17:21.76,0:17:23.20,Default,,0,0,0,,your test will want to interact
Dialogue: 0,0:17:24.04,0:17:24.30,Default,,0,0,0,,with.
Dialogue: 0,0:17:24.30,0:17:26.24,Default,,0,0,0,,These are the buttons, labels,
Dialogue: 0,0:17:26.24,0:17:27.35,Default,,0,0,0,,table views, etcetera.
Dialogue: 0,0:17:27.94,0:17:30.03,Default,,0,0,0,,The UI tests create queries to
Dialogue: 0,0:17:30.03,0:17:32.21,Default,,0,0,0,,describe how elements are found.
Dialogue: 0,0:17:32.82,0:17:35.47,Default,,0,0,0,,For example, here a button
Dialogue: 0,0:17:35.47,0:17:37.13,Default,,0,0,0,,element has the query
Dialogue: 0,0:17:38.08,0:17:40.70,Default,,0,0,0,,app.navigationBars.buttons with
Dialogue: 0,0:17:40.70,0:17:41.90,Default,,0,0,0,,the subscript of done.
Dialogue: 0,0:17:42.65,0:17:43.89,Default,,0,0,0,,That means that the element has
Dialogue: 0,0:17:43.94,0:17:46.51,Default,,0,0,0,,the type of a button, the label
Dialogue: 0,0:17:46.51,0:17:48.56,Default,,0,0,0,,or title of done and can be
Dialogue: 0,0:17:48.56,0:17:50.41,Default,,0,0,0,,found in a navigation bar.
Dialogue: 0,0:17:51.21,0:17:53.12,Default,,0,0,0,,So how do these queries work?
Dialogue: 0,0:17:54.49,0:17:56.48,Default,,0,0,0,,Queries use accessibility data,
Dialogue: 0,0:17:56.95,0:17:59.00,Default,,0,0,0,,the same semantic information
Dialogue: 0,0:17:59.12,0:18:00.88,Default,,0,0,0,,used by VoiceOver technologies
Dialogue: 0,0:18:01.38,0:18:02.45,Default,,0,0,0,,as a kind of searchable
Dialogue: 0,0:18:02.45,0:18:03.92,Default,,0,0,0,,structure for the application.
Dialogue: 0,0:18:05.14,0:18:07.13,Default,,0,0,0,,To evaluate a query the test
Dialogue: 0,0:18:07.17,0:18:09.62,Default,,0,0,0,,process requests what we call a
Dialogue: 0,0:18:09.62,0:18:11.56,Default,,0,0,0,,snapshot of the current data.
Dialogue: 0,0:18:12.19,0:18:14.09,Default,,0,0,0,,This request is sent from the
Dialogue: 0,0:18:14.09,0:18:15.82,Default,,0,0,0,,test process to the application
Dialogue: 0,0:18:15.82,0:18:17.47,Default,,0,0,0,,so these are separate processes,
Dialogue: 0,0:18:17.47,0:18:18.71,Default,,0,0,0,,we're using interprocess
Dialogue: 0,0:18:18.71,0:18:19.54,Default,,0,0,0,,communication here.
Dialogue: 0,0:18:20.68,0:18:21.81,Default,,0,0,0,,The request is sent from the
Dialogue: 0,0:18:21.81,0:18:23.36,Default,,0,0,0,,test process to the application,
Dialogue: 0,0:18:23.36,0:18:25.04,Default,,0,0,0,,now the application captures the
Dialogue: 0,0:18:25.04,0:18:28.18,Default,,0,0,0,,snapshot data, serializes it and
Dialogue: 0,0:18:28.18,0:18:30.33,Default,,0,0,0,,transmits it back to the test
Dialogue: 0,0:18:30.38,0:18:30.99,Default,,0,0,0,,process.
Dialogue: 0,0:18:31.60,0:18:32.86,Default,,0,0,0,,Once the test process has
Dialogue: 0,0:18:32.86,0:18:34.61,Default,,0,0,0,,unpacked the data it can
Dialogue: 0,0:18:34.61,0:18:36.55,Default,,0,0,0,,evaluate the query by searching
Dialogue: 0,0:18:36.55,0:18:37.58,Default,,0,0,0,,through the snapshot.
Dialogue: 0,0:18:38.36,0:18:40.39,Default,,0,0,0,,Snapshotting works and because
Dialogue: 0,0:18:40.61,0:18:42.53,Default,,0,0,0,,of how it works it takes a
Dialogue: 0,0:18:42.53,0:18:45.03,Default,,0,0,0,,single atomic representation of
Dialogue: 0,0:18:45.03,0:18:46.96,Default,,0,0,0,,the state of the UI at that
Dialogue: 0,0:18:46.96,0:18:48.91,Default,,0,0,0,,moment, but it introduces some
Dialogue: 0,0:18:48.91,0:18:50.31,Default,,0,0,0,,performance challenges.
Dialogue: 0,0:18:50.87,0:18:52.62,Default,,0,0,0,,If we consider two axes of
Dialogue: 0,0:18:52.62,0:18:54.66,Default,,0,0,0,,performance, time on one hand
Dialogue: 0,0:18:54.66,0:18:55.81,Default,,0,0,0,,and memory on the other,
Dialogue: 0,0:18:56.56,0:18:58.50,Default,,0,0,0,,snapshots have potential
Dialogue: 0,0:18:58.50,0:18:59.90,Default,,0,0,0,,problems with both.
Dialogue: 0,0:19:00.84,0:19:02.55,Default,,0,0,0,,Snapshots that take too long for
Dialogue: 0,0:19:02.55,0:19:04.63,Default,,0,0,0,,apps that have many UI elements,
Dialogue: 0,0:19:04.63,0:19:06.09,Default,,0,0,0,,for example tables with
Dialogue: 0,0:19:06.09,0:19:07.87,Default,,0,0,0,,thousands of rows, large
Dialogue: 0,0:19:07.87,0:19:09.44,Default,,0,0,0,,collection views these will
Dialogue: 0,0:19:09.44,0:19:11.44,Default,,0,0,0,,cause timeouts that in turn
Dialogue: 0,0:19:11.44,0:19:12.59,Default,,0,0,0,,trigger test failures.
Dialogue: 0,0:19:13.40,0:19:15.43,Default,,0,0,0,,If the snapshot data is too
Dialogue: 0,0:19:15.43,0:19:16.99,Default,,0,0,0,,large memory pressure on the
Dialogue: 0,0:19:16.99,0:19:19.39,Default,,0,0,0,,system may also result in
Dialogue: 0,0:19:19.39,0:19:20.84,Default,,0,0,0,,processes being terminated.
Dialogue: 0,0:19:21.66,0:19:23.06,Default,,0,0,0,,So, these challenges led us to
Dialogue: 0,0:19:23.06,0:19:25.08,Default,,0,0,0,,the question of how can we
Dialogue: 0,0:19:25.08,0:19:26.98,Default,,0,0,0,,improve snapshot performance.
Dialogue: 0,0:19:27.47,0:19:28.90,Default,,0,0,0,,And we came up with several
Dialogue: 0,0:19:28.90,0:19:29.43,Default,,0,0,0,,approaches.
Dialogue: 0,0:19:30.64,0:19:32.42,Default,,0,0,0,,First of all, we wanted to cut
Dialogue: 0,0:19:32.42,0:19:33.54,Default,,0,0,0,,down on the overhead of
Dialogue: 0,0:19:33.61,0:19:35.12,Default,,0,0,0,,transporting all this data
Dialogue: 0,0:19:35.12,0:19:36.34,Default,,0,0,0,,between processes.
Dialogue: 0,0:19:37.01,0:19:38.41,Default,,0,0,0,,To do that we implemented what
Dialogue: 0,0:19:38.41,0:19:40.16,Default,,0,0,0,,we are calling remote queries.
Dialogue: 0,0:19:40.84,0:19:42.66,Default,,0,0,0,,With remote queries, instead of
Dialogue: 0,0:19:42.66,0:19:44.60,Default,,0,0,0,,the test process requesting the
Dialogue: 0,0:19:44.60,0:19:47.08,Default,,0,0,0,,snapshot it actually transmits
Dialogue: 0,0:19:47.11,0:19:48.29,Default,,0,0,0,,the query itself, which is a
Dialogue: 0,0:19:48.29,0:19:49.59,Default,,0,0,0,,very small amount of data.
Dialogue: 0,0:19:50.47,0:19:51.62,Default,,0,0,0,,The app will still create a
Dialogue: 0,0:19:51.62,0:19:53.31,Default,,0,0,0,,snapshot, but instead of
Dialogue: 0,0:19:53.31,0:19:55.23,Default,,0,0,0,,transporting it anywhere it
Dialogue: 0,0:19:55.26,0:19:57.00,Default,,0,0,0,,simply evaluates the query right
Dialogue: 0,0:19:57.00,0:19:58.08,Default,,0,0,0,,there in process.
Dialogue: 0,0:19:58.58,0:20:00.15,Default,,0,0,0,,And at the end, it sends back
Dialogue: 0,0:20:00.15,0:20:02.38,Default,,0,0,0,,just the results, again a tiny
Dialogue: 0,0:20:02.38,0:20:04.97,Default,,0,0,0,,amount of data, to test process.
Dialogue: 0,0:20:06.11,0:20:09.52,Default,,0,0,0,,So how does all this perform?
Dialogue: 0,0:20:09.52,0:20:11.88,Default,,0,0,0,,Well remote query performance
Dialogue: 0,0:20:11.88,0:20:13.74,Default,,0,0,0,,turned out to speed things up by
Dialogue: 0,0:20:13.74,0:20:16.12,Default,,0,0,0,,as much as 20% and reduce memory
Dialogue: 0,0:20:16.12,0:20:18.43,Default,,0,0,0,,spiking by about 30%.
Dialogue: 0,0:20:18.94,0:20:20.42,Default,,0,0,0,,Now this was a good start, but
Dialogue: 0,0:20:20.53,0:20:22.15,Default,,0,0,0,,it was nowhere near what we had
Dialogue: 0,0:20:22.15,0:20:23.11,Default,,0,0,0,,in mind to achieve.
Dialogue: 0,0:20:23.11,0:20:25.29,Default,,0,0,0,,So that brought us to our second
Dialogue: 0,0:20:25.63,0:20:27.12,Default,,0,0,0,,optimization which is query
Dialogue: 0,0:20:27.12,0:20:27.85,Default,,0,0,0,,analysis.
Dialogue: 0,0:20:28.29,0:20:30.31,Default,,0,0,0,,Our goal here was to reduce the
Dialogue: 0,0:20:30.31,0:20:32.23,Default,,0,0,0,,size of the snapshot itself, to
Dialogue: 0,0:20:32.23,0:20:34.26,Default,,0,0,0,,simply collect less data.
Dialogue: 0,0:20:35.26,0:20:37.41,Default,,0,0,0,,Snapshot uses a fixed set of
Dialogue: 0,0:20:37.41,0:20:39.37,Default,,0,0,0,,accessibility attributes, but we
Dialogue: 0,0:20:39.37,0:20:41.05,Default,,0,0,0,,determined by analyzing your
Dialogue: 0,0:20:41.05,0:20:43.75,Default,,0,0,0,,queries we could identify a
Dialogue: 0,0:20:43.75,0:20:45.45,Default,,0,0,0,,minimal set of attributes,
Dialogue: 0,0:20:45.74,0:20:47.29,Default,,0,0,0,,roughly half the full set for
Dialogue: 0,0:20:47.29,0:20:49.45,Default,,0,0,0,,many common queries, greatly
Dialogue: 0,0:20:49.45,0:20:50.80,Default,,0,0,0,,reducing the amount of data
Dialogue: 0,0:20:50.80,0:20:51.37,Default,,0,0,0,,collected.
Dialogue: 0,0:20:52.13,0:20:53.75,Default,,0,0,0,,Other properties that you might
Dialogue: 0,0:20:53.75,0:20:56.11,Default,,0,0,0,,need for assertions afterwards
Dialogue: 0,0:20:56.15,0:20:57.81,Default,,0,0,0,,could still be fetched on demand
Dialogue: 0,0:20:57.81,0:21:00.27,Default,,0,0,0,,for specific elements, but the
Dialogue: 0,0:21:00.27,0:21:02.69,Default,,0,0,0,,snapshot itself will now be much
Dialogue: 0,0:21:02.69,0:21:03.39,Default,,0,0,0,,slimmer.
Dialogue: 0,0:21:04.69,0:21:06.07,Default,,0,0,0,,So, query analysis turned out to
Dialogue: 0,0:21:06.07,0:21:07.62,Default,,0,0,0,,be an even better performance
Dialogue: 0,0:21:07.68,0:21:10.85,Default,,0,0,0,,optimization, roughly 50% faster
Dialogue: 0,0:21:11.13,0:21:12.84,Default,,0,0,0,,in the common cases and having a
Dialogue: 0,0:21:12.84,0:21:15.90,Default,,0,0,0,,memory high watermark around 35%
Dialogue: 0,0:21:15.99,0:21:16.35,Default,,0,0,0,,lower.
Dialogue: 0,0:21:17.14,0:21:19.00,Default,,0,0,0,,So things are looking pretty
Dialogue: 0,0:21:19.00,0:21:21.02,Default,,0,0,0,,good, but we wanted to step back
Dialogue: 0,0:21:21.02,0:21:22.94,Default,,0,0,0,,and see if by really getting
Dialogue: 0,0:21:22.94,0:21:24.88,Default,,0,0,0,,outside the box we could
Dialogue: 0,0:21:25.02,0:21:26.73,Default,,0,0,0,,reimagine the system in a way
Dialogue: 0,0:21:26.73,0:21:28.23,Default,,0,0,0,,that would transform things.
Dialogue: 0,0:21:28.54,0:21:30.87,Default,,0,0,0,,That brought us to the idea of
Dialogue: 0,0:21:30.87,0:21:33.34,Default,,0,0,0,,eliminating snapshots entirely.
Dialogue: 0,0:21:33.78,0:21:35.20,Default,,0,0,0,,So how could we do that,
Dialogue: 0,0:21:35.25,0:21:37.37,Default,,0,0,0,,snapshots gave us this guarantee
Dialogue: 0,0:21:37.71,0:21:39.92,Default,,0,0,0,,of an atomic representation of
Dialogue: 0,0:21:39.92,0:21:40.65,Default,,0,0,0,,the state of the UI?
Dialogue: 0,0:21:41.22,0:21:42.96,Default,,0,0,0,,Well it turns out because of the
Dialogue: 0,0:21:42.96,0:21:45.04,Default,,0,0,0,,remote query infrastructure we
Dialogue: 0,0:21:45.04,0:21:46.97,Default,,0,0,0,,now have that just because we
Dialogue: 0,0:21:46.97,0:21:48.80,Default,,0,0,0,,were already running our query
Dialogue: 0,0:21:48.80,0:21:49.79,Default,,0,0,0,,in the process of the
Dialogue: 0,0:21:49.79,0:21:50.46,Default,,0,0,0,,application.
Dialogue: 0,0:21:51.15,0:21:53.64,Default,,0,0,0,,So, where traditional queries
Dialogue: 0,0:21:53.64,0:21:55.69,Default,,0,0,0,,work by examining the snapshot
Dialogue: 0,0:21:55.69,0:21:58.56,Default,,0,0,0,,data exhaustively we have
Dialogue: 0,0:21:58.72,0:22:01.01,Default,,0,0,0,,introduced an API called first
Dialogue: 0,0:22:01.01,0:22:03.53,Default,,0,0,0,,match that tells the query stop
Dialogue: 0,0:22:03.53,0:22:05.54,Default,,0,0,0,,as soon as you find the first
Dialogue: 0,0:22:05.54,0:22:07.53,Default,,0,0,0,,thing that matches because many
Dialogue: 0,0:22:07.53,0:22:09.19,Default,,0,0,0,,times it's excessive to search
Dialogue: 0,0:22:09.28,0:22:10.89,Default,,0,0,0,,all through the data to find
Dialogue: 0,0:22:10.89,0:22:12.88,Default,,0,0,0,,every possible match because you
Dialogue: 0,0:22:12.88,0:22:14.66,Default,,0,0,0,,can specify elements with
Dialogue: 0,0:22:14.76,0:22:17.24,Default,,0,0,0,,precision that really makes them
Dialogue: 0,0:22:17.24,0:22:17.69,Default,,0,0,0,,unique.
Dialogue: 0,0:22:18.66,0:22:21.80,Default,,0,0,0,,So, first match causes the query
Dialogue: 0,0:22:21.80,0:22:23.84,Default,,0,0,0,,to return early and you can add
Dialogue: 0,0:22:23.84,0:22:25.20,Default,,0,0,0,,it to any query that you already
Dialogue: 0,0:22:26.52,0:22:26.61,Default,,0,0,0,,have.
Dialogue: 0,0:22:27.19,0:22:28.34,Default,,0,0,0,,Here's an example where first
Dialogue: 0,0:22:28.34,0:22:29.79,Default,,0,0,0,,match has been added to a query
Dialogue: 0,0:22:29.79,0:22:30.65,Default,,0,0,0,,we looked at earlier.
Dialogue: 0,0:22:31.46,0:22:33.59,Default,,0,0,0,,And if you imagine that the app
Dialogue: 0,0:22:33.64,0:22:35.54,Default,,0,0,0,,we were testing was one with a
Dialogue: 0,0:22:35.54,0:22:37.57,Default,,0,0,0,,navigation bar and a table view
Dialogue: 0,0:22:37.94,0:22:39.61,Default,,0,0,0,,and the table had thousands of
Dialogue: 0,0:22:39.61,0:22:41.85,Default,,0,0,0,,rows in it, traditional
Dialogue: 0,0:22:41.85,0:22:43.50,Default,,0,0,0,,evaluation would've examined
Dialogue: 0,0:22:43.56,0:22:45.17,Default,,0,0,0,,every single row in the table
Dialogue: 0,0:22:45.17,0:22:46.05,Default,,0,0,0,,even though we're looking for a
Dialogue: 0,0:22:46.05,0:22:47.70,Default,,0,0,0,,button in the navigation bar.
Dialogue: 0,0:22:48.17,0:22:50.32,Default,,0,0,0,,But first match allows us to
Dialogue: 0,0:22:50.32,0:22:51.85,Default,,0,0,0,,stop as soon as we find that
Dialogue: 0,0:22:51.85,0:22:53.57,Default,,0,0,0,,button and we never look at a
Dialogue: 0,0:22:53.57,0:22:56.58,Default,,0,0,0,,single row in that table.
Dialogue: 0,0:22:56.75,0:22:59.16,Default,,0,0,0,,So how does first match perform?
Dialogue: 0,0:22:59.92,0:23:01.06,Default,,0,0,0,,Well it's safe to say first
Dialogue: 0,0:23:01.06,0:23:02.32,Default,,0,0,0,,match is a game changer.
Dialogue: 0,0:23:02.80,0:23:04.31,Default,,0,0,0,,For many queries, it's as much
Dialogue: 0,0:23:04.31,0:23:06.31,Default,,0,0,0,,as an order of magnitude faster
Dialogue: 0,0:23:06.78,0:23:08.69,Default,,0,0,0,,and eliminates memory spiking
Dialogue: 0,0:23:08.83,0:23:09.61,Default,,0,0,0,,entirely.
Dialogue: 0,0:23:10.52,0:23:16.55,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:23:17.05,0:23:18.70,Default,,0,0,0,,Now the performance improvements
Dialogue: 0,0:23:18.70,0:23:20.40,Default,,0,0,0,,in first match are fantastic,
Dialogue: 0,0:23:20.40,0:23:22.23,Default,,0,0,0,,but it is important to notice
Dialogue: 0,0:23:22.23,0:23:23.47,Default,,0,0,0,,the difference between
Dialogue: 0,0:23:23.47,0:23:25.52,Default,,0,0,0,,traditional queries and not
Dialogue: 0,0:23:25.52,0:23:27.77,Default,,0,0,0,,simply litter first match
Dialogue: 0,0:23:27.77,0:23:29.21,Default,,0,0,0,,throughout your code without
Dialogue: 0,0:23:29.21,0:23:30.17,Default,,0,0,0,,some consideration.
Dialogue: 0,0:23:30.91,0:23:32.49,Default,,0,0,0,,Traditional query evaluation
Dialogue: 0,0:23:32.49,0:23:34.59,Default,,0,0,0,,finds all matches, this helps
Dialogue: 0,0:23:34.64,0:23:37.11,Default,,0,0,0,,detect ambiguous queries because
Dialogue: 0,0:23:37.11,0:23:38.53,Default,,0,0,0,,will raise a failure if you
Dialogue: 0,0:23:38.53,0:23:39.72,Default,,0,0,0,,attempt to interact with an
Dialogue: 0,0:23:39.72,0:23:41.38,Default,,0,0,0,,element that has multiple
Dialogue: 0,0:23:41.38,0:23:41.95,Default,,0,0,0,,matches.
Dialogue: 0,0:23:42.84,0:23:44.29,Default,,0,0,0,,First match is removing that
Dialogue: 0,0:23:44.32,0:23:45.76,Default,,0,0,0,,protection, your test will get
Dialogue: 0,0:23:45.76,0:23:46.59,Default,,0,0,0,,the first match.
Dialogue: 0,0:23:47.15,0:23:48.42,Default,,0,0,0,,And if something in your app's
Dialogue: 0,0:23:48.42,0:23:50.92,Default,,0,0,0,,UI has changed so that query is
Dialogue: 0,0:23:50.92,0:23:53.58,Default,,0,0,0,,actually not particularly
Dialogue: 0,0:23:53.73,0:23:55.65,Default,,0,0,0,,precise and results would be a
Dialogue: 0,0:23:55.65,0:23:58.51,Default,,0,0,0,,non-unique result first match
Dialogue: 0,0:23:58.68,0:23:59.87,Default,,0,0,0,,won't protect you and the
Dialogue: 0,0:23:59.87,0:24:01.55,Default,,0,0,0,,results could be surprising.
Dialogue: 0,0:24:02.10,0:24:03.94,Default,,0,0,0,,So, let's take a look at some
Dialogue: 0,0:24:04.05,0:24:05.53,Default,,0,0,0,,example queries and consider
Dialogue: 0,0:24:05.53,0:24:07.09,Default,,0,0,0,,whether they're good candidates
Dialogue: 0,0:24:07.09,0:24:07.95,Default,,0,0,0,,for first match.
Dialogue: 0,0:24:08.73,0:24:13.49,Default,,0,0,0,,So app.buttons.firstMatch is not
Dialogue: 0,0:24:13.49,0:24:15.63,Default,,0,0,0,,a good idea, this is like going
Dialogue: 0,0:24:15.63,0:24:16.85,Default,,0,0,0,,into the grocery store and just
Dialogue: 0,0:24:16.85,0:24:18.30,Default,,0,0,0,,saying I want food.
Dialogue: 0,0:24:18.98,0:24:20.73,Default,,0,0,0,,You might get a frozen chicken
Dialogue: 0,0:24:20.73,0:24:21.82,Default,,0,0,0,,or a piece of bubblegum or
Dialogue: 0,0:24:21.82,0:24:23.32,Default,,0,0,0,,banana there's no telling right.
Dialogue: 0,0:24:23.82,0:24:26.14,Default,,0,0,0,,So, this kind of query is simply
Dialogue: 0,0:24:26.14,0:24:27.89,Default,,0,0,0,,not precise enough for first
Dialogue: 0,0:24:27.89,0:24:28.31,Default,,0,0,0,,match.
Dialogue: 0,0:24:29.31,0:24:30.76,Default,,0,0,0,,Now this is a little better
Dialogue: 0,0:24:30.76,0:24:32.54,Default,,0,0,0,,because we've added an
Dialogue: 0,0:24:32.54,0:24:34.24,Default,,0,0,0,,identifying string to it as
Dialogue: 0,0:24:34.24,0:24:34.54,Default,,0,0,0,,well.
Dialogue: 0,0:24:34.54,0:24:36.46,Default,,0,0,0,,So many apps this might be
Dialogue: 0,0:24:36.46,0:24:37.54,Default,,0,0,0,,sufficient right there.
Dialogue: 0,0:24:38.03,0:24:40.94,Default,,0,0,0,,But taking it a step further and
Dialogue: 0,0:24:41.15,0:24:43.16,Default,,0,0,0,,adding more precision, more
Dialogue: 0,0:24:43.16,0:24:44.53,Default,,0,0,0,,level of detail to the query
Dialogue: 0,0:24:44.76,0:24:46.16,Default,,0,0,0,,makes it a better candidate for
Dialogue: 0,0:24:46.16,0:24:48.12,Default,,0,0,0,,first match and more likely to
Dialogue: 0,0:24:48.12,0:24:50.15,Default,,0,0,0,,just be robust everywhere while
Dialogue: 0,0:24:50.15,0:24:51.58,Default,,0,0,0,,still giving you the performance
Dialogue: 0,0:24:51.58,0:24:53.18,Default,,0,0,0,,improvements that come with
Dialogue: 0,0:24:53.18,0:24:53.87,Default,,0,0,0,,first match.
Dialogue: 0,0:24:55.97,0:24:58.27,Default,,0,0,0,,So while talking about all these
Dialogue: 0,0:24:58.27,0:25:00.34,Default,,0,0,0,,optimizations we need to tell
Dialogue: 0,0:25:00.34,0:25:01.67,Default,,0,0,0,,you a little bit about
Dialogue: 0,0:25:01.91,0:25:03.88,Default,,0,0,0,,block-based NSPredicates and
Dialogue: 0,0:25:03.88,0:25:05.12,Default,,0,0,0,,using them in your queries.
Dialogue: 0,0:25:07.14,0:25:09.31,Default,,0,0,0,,Unfortunately, they are at odds
Dialogue: 0,0:25:09.31,0:25:11.96,Default,,0,0,0,,with these optimizations, they
Dialogue: 0,0:25:11.96,0:25:13.48,Default,,0,0,0,,effectively inhibit them.
Dialogue: 0,0:25:13.53,0:25:15.14,Default,,0,0,0,,That is because first of all,
Dialogue: 0,0:25:15.14,0:25:16.87,Default,,0,0,0,,blocks can't be serialized, you
Dialogue: 0,0:25:17.10,0:25:18.36,Default,,0,0,0,,can't pass them around between
Dialogue: 0,0:25:18.36,0:25:21.14,Default,,0,0,0,,processes so that means no
Dialogue: 0,0:25:21.14,0:25:23.26,Default,,0,0,0,,remote query and no first match.
Dialogue: 0,0:25:23.97,0:25:25.20,Default,,0,0,0,,The other problem is that we
Dialogue: 0,0:25:25.20,0:25:26.86,Default,,0,0,0,,can't introspect, we can't look
Dialogue: 0,0:25:26.86,0:25:29.39,Default,,0,0,0,,into a block at runtime and no
Dialogue: 0,0:25:29.52,0:25:30.90,Default,,0,0,0,,which attributes your query
Dialogue: 0,0:25:30.90,0:25:31.90,Default,,0,0,0,,actually needs.
Dialogue: 0,0:25:32.33,0:25:33.58,Default,,0,0,0,,So that means the reduced
Dialogue: 0,0:25:33.58,0:25:34.86,Default,,0,0,0,,snapshot performance
Dialogue: 0,0:25:34.86,0:25:36.40,Default,,0,0,0,,improvements are also off the
Dialogue: 0,0:25:36.40,0:25:38.12,Default,,0,0,0,,table when you're using
Dialogue: 0,0:25:38.12,0:25:39.66,Default,,0,0,0,,block-based NSPredicates.
Dialogue: 0,0:25:40.35,0:25:42.26,Default,,0,0,0,,Fortunately, the use of
Dialogue: 0,0:25:42.26,0:25:44.10,Default,,0,0,0,,block-based NSPredicates in UI
Dialogue: 0,0:25:44.10,0:25:45.80,Default,,0,0,0,,testing queries is relatively
Dialogue: 0,0:25:45.80,0:25:48.07,Default,,0,0,0,,rare and can almost always be
Dialogue: 0,0:25:48.07,0:25:50.37,Default,,0,0,0,,replaced with a format string or
Dialogue: 0,0:25:50.37,0:25:52.11,Default,,0,0,0,,an NSExpression based predicate
Dialogue: 0,0:25:52.11,0:25:52.62,Default,,0,0,0,,instead.
Dialogue: 0,0:25:53.50,0:25:55.37,Default,,0,0,0,,Now if you find yourself with a
Dialogue: 0,0:25:55.37,0:25:57.57,Default,,0,0,0,,case that does require a
Dialogue: 0,0:25:57.57,0:25:58.95,Default,,0,0,0,,block-based predicate, I mean
Dialogue: 0,0:25:58.95,0:25:59.94,Default,,0,0,0,,they're still supported, they
Dialogue: 0,0:25:59.94,0:26:02.22,Default,,0,0,0,,still work or even something
Dialogue: 0,0:26:02.22,0:26:03.80,Default,,0,0,0,,where it's much more convenient
Dialogue: 0,0:26:03.80,0:26:05.23,Default,,0,0,0,,to use one.
Dialogue: 0,0:26:05.39,0:26:06.92,Default,,0,0,0,,We'd like to know about it, we'd
Dialogue: 0,0:26:06.92,0:26:08.50,Default,,0,0,0,,like you to file a bug so that
Dialogue: 0,0:26:08.50,0:26:11.20,Default,,0,0,0,,we can give you an API that does
Dialogue: 0,0:26:11.25,0:26:13.47,Default,,0,0,0,,the same thing, but in a way
Dialogue: 0,0:26:13.47,0:26:15.09,Default,,0,0,0,,that works well with the query
Dialogue: 0,0:26:15.09,0:26:15.83,Default,,0,0,0,,optimization.
Dialogue: 0,0:26:15.83,0:26:17.22,Default,,0,0,0,,So, we'd like to hear from you
Dialogue: 0,0:26:17.71,0:26:19.60,Default,,0,0,0,,if you feel you have cases where
Dialogue: 0,0:26:19.60,0:26:20.83,Default,,0,0,0,,you need a block-based
Dialogue: 0,0:26:20.83,0:26:21.20,Default,,0,0,0,,predicate.
Dialogue: 0,0:26:21.71,0:26:24.93,Default,,0,0,0,,That wraps up our discussion of
Dialogue: 0,0:26:24.93,0:26:26.09,Default,,0,0,0,,UI testing performance
Dialogue: 0,0:26:26.09,0:26:26.76,Default,,0,0,0,,improvements.
Dialogue: 0,0:26:27.34,0:26:29.24,Default,,0,0,0,,Queries should be all around
Dialogue: 0,0:26:29.24,0:26:30.77,Default,,0,0,0,,faster in Xcode 9.
Dialogue: 0,0:26:31.27,0:26:32.55,Default,,0,0,0,,Some of the improvements, the
Dialogue: 0,0:26:32.55,0:26:35.13,Default,,0,0,0,,remote query and first match do
Dialogue: 0,0:26:35.13,0:26:37.00,Default,,0,0,0,,also require the newest OS as
Dialogue: 0,0:26:37.00,0:26:39.33,Default,,0,0,0,,the newest macOS, iOS and tvOS.
Dialogue: 0,0:26:40.01,0:26:42.69,Default,,0,0,0,,But the query analysis benefits
Dialogue: 0,0:26:42.69,0:26:45.13,Default,,0,0,0,,should work even on older OS's.
Dialogue: 0,0:26:45.55,0:26:47.08,Default,,0,0,0,,So, UI testing performance we've
Dialogue: 0,0:26:47.08,0:26:49.04,Default,,0,0,0,,done a lot of work here and we
Dialogue: 0,0:26:49.04,0:26:50.42,Default,,0,0,0,,look forward to seeing your
Dialogue: 0,0:26:50.42,0:26:51.39,Default,,0,0,0,,tests running faster.
Dialogue: 0,0:26:51.90,0:26:54.15,Default,,0,0,0,,So finally, I'd like to share
Dialogue: 0,0:26:54.15,0:26:55.65,Default,,0,0,0,,with you a new group of
Dialogue: 0,0:26:55.65,0:26:57.82,Default,,0,0,0,,technologists called activities,
Dialogue: 0,0:26:57.82,0:26:59.64,Default,,0,0,0,,attachments and screenshots.
Dialogue: 0,0:27:00.60,0:27:01.98,Default,,0,0,0,,So, let's start with activities
Dialogue: 0,0:27:01.98,0:27:03.72,Default,,0,0,0,,which are a new way to create
Dialogue: 0,0:27:03.72,0:27:05.67,Default,,0,0,0,,additional structure and longer
Dialogue: 0,0:27:05.67,0:27:07.67,Default,,0,0,0,,running UI and integration
Dialogue: 0,0:27:07.67,0:27:08.25,Default,,0,0,0,,tests.
Dialogue: 0,0:27:09.17,0:27:11.22,Default,,0,0,0,,There's a single API that lets
Dialogue: 0,0:27:11.22,0:27:12.71,Default,,0,0,0,,you group together sections of
Dialogue: 0,0:27:12.74,0:27:14.01,Default,,0,0,0,,code by wrapping them in
Dialogue: 0,0:27:14.01,0:27:16.16,Default,,0,0,0,,closures passed to a new class
Dialogue: 0,0:27:16.46,0:27:17.65,Default,,0,0,0,,XCTContext.
Dialogue: 0,0:27:18.19,0:27:20.70,Default,,0,0,0,,Now here's part of the test
Dialogue: 0,0:27:20.70,0:27:22.64,Default,,0,0,0,,report from Warren's demo
Dialogue: 0,0:27:22.64,0:27:23.64,Default,,0,0,0,,earlier, which we didn't get a
Dialogue: 0,0:27:23.64,0:27:25.20,Default,,0,0,0,,chance to look at, but here it
Dialogue: 0,0:27:25.20,0:27:25.65,Default,,0,0,0,,is now.
Dialogue: 0,0:27:25.78,0:27:27.00,Default,,0,0,0,,And that test wasn't
Dialogue: 0,0:27:27.00,0:27:28.97,Default,,0,0,0,,particularly long or complex,
Dialogue: 0,0:27:28.97,0:27:30.42,Default,,0,0,0,,but you can see there's quite a
Dialogue: 0,0:27:30.42,0:27:31.18,Default,,0,0,0,,lot going on here.
Dialogue: 0,0:27:31.77,0:27:33.40,Default,,0,0,0,,So, consider these four actions.
Dialogue: 0,0:27:34.16,0:27:35.38,Default,,0,0,0,,Let's look at the code that
Dialogue: 0,0:27:35.38,0:27:35.92,Default,,0,0,0,,caused them.
Dialogue: 0,0:27:37.15,0:27:38.67,Default,,0,0,0,,We have a query to find the
Dialogue: 0,0:27:38.67,0:27:40.41,Default,,0,0,0,,view, we tap on it, type some
Dialogue: 0,0:27:40.41,0:27:42.20,Default,,0,0,0,,text and interact with a few
Dialogue: 0,0:27:42.20,0:27:42.64,Default,,0,0,0,,buttons.
Dialogue: 0,0:27:43.32,0:27:44.97,Default,,0,0,0,,This code makes a good logical
Dialogue: 0,0:27:44.97,0:27:46.18,Default,,0,0,0,,grouping, it's the code that
Dialogue: 0,0:27:46.18,0:27:48.28,Default,,0,0,0,,composes the any good coffee
Dialogue: 0,0:27:48.28,0:27:49.62,Default,,0,0,0,,places message.
Dialogue: 0,0:27:50.08,0:27:52.29,Default,,0,0,0,,So, creating an XCTActivity for
Dialogue: 0,0:27:52.29,0:27:54.17,Default,,0,0,0,,this code is very simple.
Dialogue: 0,0:27:54.56,0:27:56.49,Default,,0,0,0,,We simply wrap it in this run
Dialogue: 0,0:27:56.49,0:27:58.46,Default,,0,0,0,,activity call, we give it a nice
Dialogue: 0,0:27:58.46,0:27:59.78,Default,,0,0,0,,label because that's what we'll
Dialogue: 0,0:27:59.78,0:28:01.24,Default,,0,0,0,,show in the test report.
Dialogue: 0,0:28:01.82,0:28:02.85,Default,,0,0,0,,Now let's look at how that
Dialogue: 0,0:28:02.85,0:28:03.96,Default,,0,0,0,,changes the test report.
Dialogue: 0,0:28:04.78,0:28:06.44,Default,,0,0,0,,We have the original four
Dialogue: 0,0:28:06.44,0:28:08.58,Default,,0,0,0,,activities now enclosed in this
Dialogue: 0,0:28:08.58,0:28:10.76,Default,,0,0,0,,new activity compose coffee
Dialogue: 0,0:28:10.76,0:28:12.60,Default,,0,0,0,,message and you can expand it
Dialogue: 0,0:28:12.60,0:28:14.41,Default,,0,0,0,,still and see the original, more
Dialogue: 0,0:28:14.41,0:28:16.24,Default,,0,0,0,,granular details underneath.
Dialogue: 0,0:28:16.78,0:28:18.57,Default,,0,0,0,,But for the high level first
Dialogue: 0,0:28:18.57,0:28:19.59,Default,,0,0,0,,pass when you're looking at your
Dialogue: 0,0:28:19.59,0:28:21.37,Default,,0,0,0,,test report things will now be
Dialogue: 0,0:28:21.37,0:28:22.95,Default,,0,0,0,,more concise and semantically
Dialogue: 0,0:28:22.95,0:28:23.62,Default,,0,0,0,,meaningful.
Dialogue: 0,0:28:24.56,0:28:26.06,Default,,0,0,0,,Using this API throughout your
Dialogue: 0,0:28:26.06,0:28:27.47,Default,,0,0,0,,longer running tests and in
Dialogue: 0,0:28:27.47,0:28:29.27,Default,,0,0,0,,helper methods will just make
Dialogue: 0,0:28:29.32,0:28:31.09,Default,,0,0,0,,the test reports much easier to
Dialogue: 0,0:28:31.09,0:28:31.59,Default,,0,0,0,,explore.
Dialogue: 0,0:28:32.47,0:28:35.21,Default,,0,0,0,,Now along with activities we've
Dialogue: 0,0:28:35.21,0:28:36.69,Default,,0,0,0,,introduced something called
Dialogue: 0,0:28:36.87,0:28:37.65,Default,,0,0,0,,attachments.
Dialogue: 0,0:28:38.09,0:28:39.80,Default,,0,0,0,,For a long time now we've wanted
Dialogue: 0,0:28:39.80,0:28:41.60,Default,,0,0,0,,the ability to attach richer
Dialogue: 0,0:28:41.60,0:28:43.10,Default,,0,0,0,,data to test reports.
Dialogue: 0,0:28:43.69,0:28:45.53,Default,,0,0,0,,The primary motivation is to
Dialogue: 0,0:28:45.53,0:28:46.88,Default,,0,0,0,,make it easier to triage
Dialogue: 0,0:28:46.88,0:28:49.05,Default,,0,0,0,,failures with additional logs or
Dialogue: 0,0:28:49.05,0:28:50.51,Default,,0,0,0,,other data that give insight
Dialogue: 0,0:28:50.63,0:28:51.97,Default,,0,0,0,,into the conditions at the time
Dialogue: 0,0:28:51.97,0:28:52.44,Default,,0,0,0,,of failure.
Dialogue: 0,0:28:53.50,0:28:54.86,Default,,0,0,0,,In addition, this could be used
Dialogue: 0,0:28:54.86,0:28:55.88,Default,,0,0,0,,to support various
Dialogue: 0,0:28:55.94,0:28:57.56,Default,,0,0,0,,postprocessing workflows.
Dialogue: 0,0:28:57.60,0:28:59.16,Default,,0,0,0,,For example, sitting down with
Dialogue: 0,0:28:59.16,0:29:00.35,Default,,0,0,0,,your designers and looking at
Dialogue: 0,0:29:00.35,0:29:01.41,Default,,0,0,0,,screenshots together.
Dialogue: 0,0:29:02.85,0:29:04.58,Default,,0,0,0,,Now attachment support any kind
Dialogue: 0,0:29:04.58,0:29:07.10,Default,,0,0,0,,of binary data with convenience
Dialogue: 0,0:29:07.10,0:29:09.23,Default,,0,0,0,,APIs for strings, property
Dialogue: 0,0:29:09.23,0:29:12.00,Default,,0,0,0,,lists, codable objects, files
Dialogue: 0,0:29:12.59,0:29:13.54,Default,,0,0,0,,and images.
Dialogue: 0,0:29:14.11,0:29:15.86,Default,,0,0,0,,Any of these types can easily be
Dialogue: 0,0:29:16.10,0:29:17.81,Default,,0,0,0,,attached to your test so when
Dialogue: 0,0:29:17.81,0:29:18.87,Default,,0,0,0,,you look at the test report
Dialogue: 0,0:29:18.87,0:29:19.97,Default,,0,0,0,,there that data is.
Dialogue: 0,0:29:20.50,0:29:22.21,Default,,0,0,0,,And that brings us to the third
Dialogue: 0,0:29:22.21,0:29:23.52,Default,,0,0,0,,edition in our group of
Dialogue: 0,0:29:23.56,0:29:24.77,Default,,0,0,0,,technologies which are
Dialogue: 0,0:29:24.77,0:29:25.63,Default,,0,0,0,,screenshots.
Dialogue: 0,0:29:26.51,0:29:27.92,Default,,0,0,0,,Many of you have been asking us
Dialogue: 0,0:29:27.92,0:29:29.72,Default,,0,0,0,,over the years for an API to
Dialogue: 0,0:29:29.72,0:29:31.68,Default,,0,0,0,,explicitly capture screenshots
Dialogue: 0,0:29:31.82,0:29:32.63,Default,,0,0,0,,on demand.
Dialogue: 0,0:29:32.84,0:29:34.41,Default,,0,0,0,,Well we're happy to say that
Dialogue: 0,0:29:34.41,0:29:35.90,Default,,0,0,0,,here it is, we hope you enjoy
Dialogue: 0,0:29:35.90,0:29:35.97,Default,,0,0,0,,it.
Dialogue: 0,0:29:36.52,0:29:41.88,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:29:42.38,0:29:44.42,Default,,0,0,0,,This new XCUI screenshot
Dialogue: 0,0:29:44.42,0:29:45.60,Default,,0,0,0,,providing protocol is
Dialogue: 0,0:29:45.60,0:29:48.20,Default,,0,0,0,,implemented by both XCUIElement
Dialogue: 0,0:29:48.58,0:29:50.98,Default,,0,0,0,,and a new class XCUIScreen.
Dialogue: 0,0:29:51.46,0:29:52.97,Default,,0,0,0,,So, when you use an element and
Dialogue: 0,0:29:52.97,0:29:54.37,Default,,0,0,0,,you capture a screenshot it'll
Dialogue: 0,0:29:54.37,0:29:56.25,Default,,0,0,0,,be clipped to just the frame of
Dialogue: 0,0:29:56.25,0:29:56.95,Default,,0,0,0,,that element.
Dialogue: 0,0:29:56.95,0:29:58.14,Default,,0,0,0,,So, a button, you'll just see
Dialogue: 0,0:29:58.14,0:29:59.89,Default,,0,0,0,,the button, a window you'll see
Dialogue: 0,0:29:59.89,0:30:00.98,Default,,0,0,0,,the full window and so forth.
Dialogue: 0,0:30:01.08,0:30:03.18,Default,,0,0,0,,And if you use the screen API
Dialogue: 0,0:30:03.64,0:30:04.69,Default,,0,0,0,,you'll get the full screen
Dialogue: 0,0:30:04.92,0:30:06.39,Default,,0,0,0,,regardless of what application
Dialogue: 0,0:30:06.39,0:30:08.22,Default,,0,0,0,,or applications are present on
Dialogue: 0,0:30:09.52,0:30:09.60,Default,,0,0,0,,it.
Dialogue: 0,0:30:09.97,0:30:11.50,Default,,0,0,0,,Now with attachments and
Dialogue: 0,0:30:11.50,0:30:13.40,Default,,0,0,0,,screenshots, some of you may be
Dialogue: 0,0:30:13.40,0:30:16.10,Default,,0,0,0,,wondering how quickly will this
Dialogue: 0,0:30:16.10,0:30:17.48,Default,,0,0,0,,fill up my hard drive.
Dialogue: 0,0:30:19.00,0:30:20.88,Default,,0,0,0,,Well the default policies for
Dialogue: 0,0:30:20.88,0:30:22.19,Default,,0,0,0,,attachments and also for
Dialogue: 0,0:30:22.19,0:30:23.69,Default,,0,0,0,,screenshots that are captured
Dialogue: 0,0:30:23.69,0:30:25.41,Default,,0,0,0,,automatically during UI testing
Dialogue: 0,0:30:25.85,0:30:27.92,Default,,0,0,0,,is that if your test passes we
Dialogue: 0,0:30:27.92,0:30:28.93,Default,,0,0,0,,delete these for you.
Dialogue: 0,0:30:29.55,0:30:30.92,Default,,0,0,0,,The assumption is in the common
Dialogue: 0,0:30:30.92,0:30:33.29,Default,,0,0,0,,case you don't need them, but if
Dialogue: 0,0:30:33.29,0:30:34.81,Default,,0,0,0,,your test fails they're present
Dialogue: 0,0:30:34.81,0:30:35.20,Default,,0,0,0,,for you.
Dialogue: 0,0:30:35.97,0:30:38.06,Default,,0,0,0,,Now you can override this policy
Dialogue: 0,0:30:38.41,0:30:39.20,Default,,0,0,0,,in your scheme.
Dialogue: 0,0:30:39.20,0:30:40.76,Default,,0,0,0,,In the same part of the UI where
Dialogue: 0,0:30:40.76,0:30:42.95,Default,,0,0,0,,that localization control exists
Dialogue: 0,0:30:43.03,0:30:44.82,Default,,0,0,0,,you can tell us whether you want
Dialogue: 0,0:30:44.82,0:30:46.98,Default,,0,0,0,,screenshots captured at all
Dialogue: 0,0:30:47.28,0:30:48.94,Default,,0,0,0,,automatically and whether to
Dialogue: 0,0:30:48.94,0:30:50.86,Default,,0,0,0,,delete these and attachments
Dialogue: 0,0:30:50.86,0:30:52.38,Default,,0,0,0,,when tests succeed or not.
Dialogue: 0,0:30:53.16,0:30:55.00,Default,,0,0,0,,There is also API on the
Dialogue: 0,0:30:55.00,0:30:57.07,Default,,0,0,0,,attachment class that lets you
Dialogue: 0,0:30:57.07,0:30:59.58,Default,,0,0,0,,on a per instance basis say keep
Dialogue: 0,0:30:59.58,0:31:01.07,Default,,0,0,0,,this, don't keep that, and that
Dialogue: 0,0:31:01.07,0:31:01.60,Default,,0,0,0,,sort of thing.
Dialogue: 0,0:31:02.19,0:31:04.12,Default,,0,0,0,,So, you'll see that in the next
Dialogue: 0,0:31:04.12,0:31:06.58,Default,,0,0,0,,demo with attachments and
Dialogue: 0,0:31:06.58,0:31:08.16,Default,,0,0,0,,activities and screenshots in
Dialogue: 0,0:31:08.16,0:31:08.59,Default,,0,0,0,,action.
Dialogue: 0,0:31:08.92,0:31:10.80,Default,,0,0,0,,Please welcome Honza Dvorsky to
Dialogue: 0,0:31:10.80,0:31:10.98,Default,,0,0,0,,the stage.
Dialogue: 0,0:31:11.52,0:31:17.57,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:31:18.07,0:31:18.65,Default,,0,0,0,,>> Thank you Wil.
Dialogue: 0,0:31:19.32,0:31:21.62,Default,,0,0,0,,Good afternoon, my name is Honza
Dialogue: 0,0:31:21.72,0:31:23.55,Default,,0,0,0,,and today I'd like to show you
Dialogue: 0,0:31:26.64,0:31:29.84,Default,,0,0,0,,how we can organize your tests
Dialogue: 0,0:31:29.84,0:31:33.04,Default,,0,0,0,,using activities, then how to
Dialogue: 0,0:31:33.04,0:31:35.02,Default,,0,0,0,,screenshot your UI with the new
Dialogue: 0,0:31:35.02,0:31:37.70,Default,,0,0,0,,screenshot API, and finally how
Dialogue: 0,0:31:37.70,0:31:39.54,Default,,0,0,0,,to attach arbitrary data with
Dialogue: 0,0:31:39.54,0:31:40.29,Default,,0,0,0,,your tests.
Dialogue: 0,0:31:41.00,0:31:42.66,Default,,0,0,0,,So, we'll start by looking at
Dialogue: 0,0:31:43.16,0:31:44.61,Default,,0,0,0,,the test report of Warren's
Dialogue: 0,0:31:44.61,0:31:44.93,Default,,0,0,0,,test.
Dialogue: 0,0:31:45.99,0:31:46.82,Default,,0,0,0,,We can do that by
Dialogue: 0,0:31:46.82,0:31:48.12,Default,,0,0,0,,Control-clicking on the test
Dialogue: 0,0:31:48.12,0:31:49.80,Default,,0,0,0,,diamond and selecting
Dialogue: 0,0:31:49.90,0:31:50.70,Default,,0,0,0,,[inaudible] the report.
Dialogue: 0,0:31:53.64,0:31:55.51,Default,,0,0,0,,When we disclose the test, we
Dialogue: 0,0:31:55.51,0:31:56.95,Default,,0,0,0,,reveal the test to transcript.
Dialogue: 0,0:31:57.49,0:31:59.40,Default,,0,0,0,,The test transcript contains all
Dialogue: 0,0:31:59.40,0:32:01.76,Default,,0,0,0,,the details about our test, but
Dialogue: 0,0:32:01.76,0:32:03.17,Default,,0,0,0,,when it gets longer it can be
Dialogue: 0,0:32:03.17,0:32:04.17,Default,,0,0,0,,difficult to navigate.
Dialogue: 0,0:32:07.08,0:32:08.83,Default,,0,0,0,,In addition, what we see here
Dialogue: 0,0:32:08.83,0:32:10.73,Default,,0,0,0,,are these leveled steps like
Dialogue: 0,0:32:10.73,0:32:12.60,Default,,0,0,0,,these tabs and swipes, but it
Dialogue: 0,0:32:12.60,0:32:14.27,Default,,0,0,0,,would help us to organize our
Dialogue: 0,0:32:14.27,0:32:15.78,Default,,0,0,0,,test around these higher-level
Dialogue: 0,0:32:15.78,0:32:18.59,Default,,0,0,0,,tasks like launch the app or
Dialogue: 0,0:32:18.59,0:32:19.88,Default,,0,0,0,,compose in send a new message.
Dialogue: 0,0:32:20.96,0:32:23.36,Default,,0,0,0,,So, we'll use activities to do
Dialogue: 0,0:32:23.36,0:32:25.44,Default,,0,0,0,,just that.
Dialogue: 0,0:32:27.10,0:32:28.24,Default,,0,0,0,,We'll jump back to the source
Dialogue: 0,0:32:28.61,0:32:30.37,Default,,0,0,0,,and look for good candidates to
Dialogue: 0,0:32:30.37,0:32:31.38,Default,,0,0,0,,wrap in our first activity.
Dialogue: 0,0:32:32.01,0:32:33.37,Default,,0,0,0,,For example, this piece of code,
Dialogue: 0,0:32:33.61,0:32:34.98,Default,,0,0,0,,compose and send a new message
Dialogue: 0,0:32:35.33,0:32:36.02,Default,,0,0,0,,takes care of that.
Dialogue: 0,0:32:36.41,0:32:39.92,Default,,0,0,0,,So, we wrap it in an activity by
Dialogue: 0,0:32:39.92,0:32:42.32,Default,,0,0,0,,calling XCTContext.runActivity.
Dialogue: 0,0:32:43.01,0:32:44.36,Default,,0,0,0,,It takes two parameters, the
Dialogue: 0,0:32:44.36,0:32:45.41,Default,,0,0,0,,first is the name of the
Dialogue: 0,0:32:45.41,0:32:47.54,Default,,0,0,0,,activity, compose and send a new
Dialogue: 0,0:32:47.54,0:32:49.36,Default,,0,0,0,,message in our case, and the
Dialogue: 0,0:32:49.36,0:32:51.25,Default,,0,0,0,,second is the block, the block
Dialogue: 0,0:32:51.25,0:32:52.47,Default,,0,0,0,,represents the scope of the
Dialogue: 0,0:32:52.47,0:32:52.91,Default,,0,0,0,,activity.
Dialogue: 0,0:32:53.79,0:32:56.01,Default,,0,0,0,,But we'll close it down here and
Dialogue: 0,0:32:57.22,0:32:59.04,Default,,0,0,0,,that's it, that's all you need
Dialogue: 0,0:32:59.04,0:33:00.74,Default,,0,0,0,,to do to wrap a piece of code in
Dialogue: 0,0:33:00.74,0:33:01.23,Default,,0,0,0,,an activity.
Dialogue: 0,0:33:02.78,0:33:04.28,Default,,0,0,0,,Now I'll sprinkle more
Dialogue: 0,0:33:04.28,0:33:09.07,Default,,0,0,0,,activities around this test.
Dialogue: 0,0:33:09.07,0:33:10.83,Default,,0,0,0,,And we'll rerun the test to see
Dialogue: 0,0:33:10.83,0:33:12.13,Default,,0,0,0,,how the test report changed.
Dialogue: 0,0:33:12.74,0:33:16.74,Default,,0,0,0,,You can see that I wrapped the
Dialogue: 0,0:33:16.74,0:33:18.99,Default,,0,0,0,,launching of the Reader app, the
Dialogue: 0,0:33:18.99,0:33:20.01,Default,,0,0,0,,verification of the first
Dialogue: 0,0:33:20.01,0:33:22.45,Default,,0,0,0,,message, the activation of the
Dialogue: 0,0:33:22.45,0:33:24.31,Default,,0,0,0,,Writer app, the composing and
Dialogue: 0,0:33:24.31,0:33:25.89,Default,,0,0,0,,sending a new message and so on.
Dialogue: 0,0:33:26.89,0:33:29.07,Default,,0,0,0,,Now this is the same exact test
Dialogue: 0,0:33:29.17,0:33:31.45,Default,,0,0,0,,that Warren wrote here, but this
Dialogue: 0,0:33:31.49,0:33:33.25,Default,,0,0,0,,time the activities and the
Dialogue: 0,0:33:33.25,0:33:35.21,Default,,0,0,0,,names we give them are getting
Dialogue: 0,0:33:35.21,0:33:37.77,Default,,0,0,0,,included in the output as
Dialogue: 0,0:33:37.77,0:33:38.92,Default,,0,0,0,,first-class citizens.
Dialogue: 0,0:33:39.59,0:33:43.94,Default,,0,0,0,,So, we send our message, verify
Dialogue: 0,0:33:43.94,0:33:45.87,Default,,0,0,0,,that it's the right one, and
Dialogue: 0,0:33:47.94,0:33:48.82,Default,,0,0,0,,we're done.
Dialogue: 0,0:33:49.02,0:33:50.52,Default,,0,0,0,,So, let's go back to the test
Dialogue: 0,0:33:50.52,0:33:50.98,Default,,0,0,0,,report now.
Dialogue: 0,0:33:55.18,0:33:56.88,Default,,0,0,0,,When we reveal the transcript
Dialogue: 0,0:33:56.88,0:33:58.57,Default,,0,0,0,,now we can see it's much shorter
Dialogue: 0,0:33:59.09,0:34:00.21,Default,,0,0,0,,and in addition, it better
Dialogue: 0,0:34:00.21,0:34:02.11,Default,,0,0,0,,describes what our test does.
Dialogue: 0,0:34:02.47,0:34:04.03,Default,,0,0,0,,It launches the Reader app,
Dialogue: 0,0:34:04.54,0:34:06.01,Default,,0,0,0,,verifies the first message,
Dialogue: 0,0:34:06.39,0:34:07.66,Default,,0,0,0,,activates the Writer app,
Dialogue: 0,0:34:07.81,0:34:09.31,Default,,0,0,0,,composes and sends a new message
Dialogue: 0,0:34:09.31,0:34:09.77,Default,,0,0,0,,and so on.
Dialogue: 0,0:34:10.49,0:34:11.66,Default,,0,0,0,,But if you still need to know
Dialogue: 0,0:34:11.66,0:34:13.17,Default,,0,0,0,,all the details about that
Dialogue: 0,0:34:13.17,0:34:15.16,Default,,0,0,0,,activity all the sub activities
Dialogue: 0,0:34:15.23,0:34:16.76,Default,,0,0,0,,are hidden one level deeper.
Dialogue: 0,0:34:17.73,0:34:19.56,Default,,0,0,0,,So, activities are a great way
Dialogue: 0,0:34:19.56,0:34:23.23,Default,,0,0,0,,to organize your tests.
Dialogue: 0,0:34:23.28,0:34:25.17,Default,,0,0,0,,Now let's switch gears a little
Dialogue: 0,0:34:25.54,0:34:25.68,Default,,0,0,0,,bit.
Dialogue: 0,0:34:25.68,0:34:27.93,Default,,0,0,0,,Our designers that helped us
Dialogue: 0,0:34:27.93,0:34:30.68,Default,,0,0,0,,with our app wanted to make sure
Dialogue: 0,0:34:30.68,0:34:32.26,Default,,0,0,0,,that our message cells here
Dialogue: 0,0:34:32.75,0:34:33.87,Default,,0,0,0,,follow their beautiful
Dialogue: 0,0:34:33.87,0:34:35.22,Default,,0,0,0,,specification exactly.
Dialogue: 0,0:34:35.96,0:34:37.57,Default,,0,0,0,,So, what we'll do is write a UI
Dialogue: 0,0:34:37.57,0:34:39.80,Default,,0,0,0,,test which captures the visual
Dialogue: 0,0:34:39.80,0:34:42.32,Default,,0,0,0,,state of the app and then we'll
Dialogue: 0,0:34:42.32,0:34:44.08,Default,,0,0,0,,run this test every night on our
Dialogue: 0,0:34:44.08,0:34:44.46,Default,,0,0,0,,bots.
Dialogue: 0,0:34:44.91,0:34:46.35,Default,,0,0,0,,This way, our designers can come
Dialogue: 0,0:34:46.35,0:34:47.93,Default,,0,0,0,,in and see what the app looks
Dialogue: 0,0:34:47.96,0:34:49.04,Default,,0,0,0,,like anytime they want.
Dialogue: 0,0:34:49.70,0:34:53.43,Default,,0,0,0,,So, this is a new class visual
Dialogue: 0,0:34:53.43,0:34:54.32,Default,,0,0,0,,validation tests.
Dialogue: 0,0:34:54.32,0:34:56.81,Default,,0,0,0,,I already have the code to
Dialogue: 0,0:34:56.88,0:34:58.19,Default,,0,0,0,,launch the app in the state I
Dialogue: 0,0:34:58.19,0:35:00.20,Default,,0,0,0,,want it in and I also have this
Dialogue: 0,0:35:00.20,0:35:01.38,Default,,0,0,0,,empty activity gather
Dialogue: 0,0:35:01.38,0:35:03.16,Default,,0,0,0,,screenshots and this is where
Dialogue: 0,0:35:03.16,0:35:04.55,Default,,0,0,0,,we'll place our screenshots now.
Dialogue: 0,0:35:05.39,0:35:06.75,Default,,0,0,0,,We'll capture two screenshots,
Dialogue: 0,0:35:06.75,0:35:08.44,Default,,0,0,0,,the first of the full-screen of
Dialogue: 0,0:35:08.44,0:35:11.06,Default,,0,0,0,,the app and one of just the
Dialogue: 0,0:35:11.06,0:35:11.99,Default,,0,0,0,,first message cell.
Dialogue: 0,0:35:12.52,0:35:16.08,Default,,0,0,0,,So, to capture the full screen
Dialogue: 0,0:35:16.37,0:35:18.57,Default,,0,0,0,,we use the new XCUIScreen API to
Dialogue: 0,0:35:18.57,0:35:20.42,Default,,0,0,0,,get a handle to the main screen.
Dialogue: 0,0:35:21.55,0:35:23.46,Default,,0,0,0,,Now as Wil mentioned, XCUIScreen
Dialogue: 0,0:35:23.46,0:35:25.34,Default,,0,0,0,,conforms to XCUI screenshot
Dialogue: 0,0:35:25.34,0:35:27.22,Default,,0,0,0,,providing so we can just simply
Dialogue: 0,0:35:27.22,0:35:29.01,Default,,0,0,0,,ask it for a screenshot of
Dialogue: 0,0:35:29.01,0:35:29.40,Default,,0,0,0,,itself.
Dialogue: 0,0:35:29.43,0:35:32.68,Default,,0,0,0,,Now we have the screenshot in
Dialogue: 0,0:35:32.68,0:35:34.11,Default,,0,0,0,,memory and we somehow want to
Dialogue: 0,0:35:34.19,0:35:36.48,Default,,0,0,0,,persist it with our test and
Dialogue: 0,0:35:36.48,0:35:37.73,Default,,0,0,0,,this is where attachments come
Dialogue: 0,0:35:37.73,0:35:37.93,Default,,0,0,0,,in.
Dialogue: 0,0:35:38.26,0:35:41.77,Default,,0,0,0,,Attachments can hold any data
Dialogue: 0,0:35:42.09,0:35:43.67,Default,,0,0,0,,and XCTAttachment provides
Dialogue: 0,0:35:43.67,0:35:45.10,Default,,0,0,0,,convenience initializers for
Dialogue: 0,0:35:45.10,0:35:46.85,Default,,0,0,0,,types like strings, files,
Dialogue: 0,0:35:46.85,0:35:48.06,Default,,0,0,0,,images and screenshots.
Dialogue: 0,0:35:48.45,0:35:50.99,Default,,0,0,0,,So, we'll create a new
Dialogue: 0,0:35:50.99,0:35:52.16,Default,,0,0,0,,attachment to hold our
Dialogue: 0,0:35:52.16,0:35:52.79,Default,,0,0,0,,screenshots.
Dialogue: 0,0:35:54.28,0:35:56.94,Default,,0,0,0,,Now as Wil mentioned, the
Dialogue: 0,0:35:56.94,0:35:58.69,Default,,0,0,0,,attachments get deleted whenever
Dialogue: 0,0:35:58.69,0:36:00.15,Default,,0,0,0,,the test passes, it's a default
Dialogue: 0,0:36:00.15,0:36:00.60,Default,,0,0,0,,behavior.
Dialogue: 0,0:36:01.61,0:36:02.95,Default,,0,0,0,,But in our case here we want to
Dialogue: 0,0:36:02.95,0:36:04.27,Default,,0,0,0,,persist these attachments
Dialogue: 0,0:36:04.32,0:36:05.88,Default,,0,0,0,,regardless of the test result.
Dialogue: 0,0:36:06.42,0:36:07.93,Default,,0,0,0,,We can do a separate attachment
Dialogue: 0,0:36:08.40,0:36:10.94,Default,,0,0,0,,by customizing its lifetime to
Dialogue: 0,0:36:10.94,0:36:11.91,Default,,0,0,0,,keep always.
Dialogue: 0,0:36:13.18,0:36:14.50,Default,,0,0,0,,And finally, we add this
Dialogue: 0,0:36:14.50,0:36:16.53,Default,,0,0,0,,attachment to an activity, we'll
Dialogue: 0,0:36:16.53,0:36:18.39,Default,,0,0,0,,add it to this activity that
Dialogue: 0,0:36:18.39,0:36:19.37,Default,,0,0,0,,represents our gather
Dialogue: 0,0:36:19.37,0:36:19.98,Default,,0,0,0,,screenshots.
Dialogue: 0,0:36:24.29,0:36:25.68,Default,,0,0,0,,Now we captured the full screen,
Dialogue: 0,0:36:25.68,0:36:27.28,Default,,0,0,0,,we also wanted to capture just
Dialogue: 0,0:36:27.28,0:36:28.42,Default,,0,0,0,,the first message cell.
Dialogue: 0,0:36:28.51,0:36:31.59,Default,,0,0,0,,So, we first used the existing
Dialogue: 0,0:36:31.94,0:36:33.70,Default,,0,0,0,,UI testing API to get an
Dialogue: 0,0:36:33.70,0:36:35.27,Default,,0,0,0,,XCUIElement for the cell.
Dialogue: 0,0:36:36.17,0:36:38.04,Default,,0,0,0,,An XCUIElement also conforms to
Dialogue: 0,0:36:38.04,0:36:40.16,Default,,0,0,0,,XCUI screenshot providing so we
Dialogue: 0,0:36:40.16,0:36:41.58,Default,,0,0,0,,can just follow the same steps
Dialogue: 0,0:36:41.58,0:36:41.81,Default,,0,0,0,,here.
Dialogue: 0,0:36:42.31,0:36:44.34,Default,,0,0,0,,We ask the cell for a screenshot
Dialogue: 0,0:36:44.34,0:36:46.06,Default,,0,0,0,,of itself, we create an
Dialogue: 0,0:36:46.06,0:36:47.56,Default,,0,0,0,,attachment for it, customize its
Dialogue: 0,0:36:47.56,0:36:49.43,Default,,0,0,0,,lifetime and add the attachment
Dialogue: 0,0:36:49.43,0:36:50.04,Default,,0,0,0,,to the activity.
Dialogue: 0,0:36:51.42,0:36:52.99,Default,,0,0,0,,So, let's run the test now and
Dialogue: 0,0:36:52.99,0:36:53.58,Default,,0,0,0,,see what we get.
Dialogue: 0,0:36:59.05,0:37:01.14,Default,,0,0,0,,This is a simple test that just
Dialogue: 0,0:37:01.14,0:37:03.96,Default,,0,0,0,,launches our app and captures
Dialogue: 0,0:37:03.96,0:37:06.52,Default,,0,0,0,,the two screenshots, adds those
Dialogue: 0,0:37:06.52,0:37:08.18,Default,,0,0,0,,two screenshots as attachments
Dialogue: 0,0:37:08.18,0:37:08.98,Default,,0,0,0,,and finishes.
Dialogue: 0,0:37:14.19,0:37:14.54,Default,,0,0,0,,That's it.
Dialogue: 0,0:37:14.86,0:37:16.64,Default,,0,0,0,,So, we go to the test report.
Dialogue: 0,0:37:17.18,0:37:23.08,Default,,0,0,0,,Now when we reveal the test we
Dialogue: 0,0:37:23.08,0:37:25.10,Default,,0,0,0,,see our gather screenshots
Dialogue: 0,0:37:25.10,0:37:28.25,Default,,0,0,0,,activity and it contains our two
Dialogue: 0,0:37:28.25,0:37:29.09,Default,,0,0,0,,attachments and [inaudible]
Dialogue: 0,0:37:29.09,0:37:29.82,Default,,0,0,0,,activity.
Dialogue: 0,0:37:30.23,0:37:32.09,Default,,0,0,0,,So, this is the attachment that
Dialogue: 0,0:37:32.09,0:37:34.42,Default,,0,0,0,,represents the first main screen
Dialogue: 0,0:37:34.42,0:37:36.50,Default,,0,0,0,,screenshot and this represents
Dialogue: 0,0:37:36.50,0:37:37.62,Default,,0,0,0,,the screenshot of just the
Dialogue: 0,0:37:37.62,0:37:38.20,Default,,0,0,0,,message cell.
Dialogue: 0,0:37:38.99,0:37:41.15,Default,,0,0,0,,We could use this QuickLook icon
Dialogue: 0,0:37:41.15,0:37:43.23,Default,,0,0,0,,here to get a preview window for
Dialogue: 0,0:37:43.23,0:37:45.30,Default,,0,0,0,,it, but in fact I want to use
Dialogue: 0,0:37:45.30,0:37:47.49,Default,,0,0,0,,this the Assistant Editor to do
Dialogue: 0,0:37:47.49,0:37:47.77,Default,,0,0,0,,that.
Dialogue: 0,0:37:52.05,0:37:53.48,Default,,0,0,0,,So, we just select the right
Dialogue: 0,0:37:53.74,0:37:56.29,Default,,0,0,0,,screenshot and this is our
Dialogue: 0,0:37:56.39,0:37:59.43,Default,,0,0,0,,full-screen screenshot and this
Dialogue: 0,0:37:59.43,0:38:00.63,Default,,0,0,0,,is the screenshot of just the
Dialogue: 0,0:38:00.63,0:38:01.52,Default,,0,0,0,,first message cell.
Dialogue: 0,0:38:02.45,0:38:04.23,Default,,0,0,0,,So, now you can see how super
Dialogue: 0,0:38:04.23,0:38:06.15,Default,,0,0,0,,easy it is to capture, oh
Dialogue: 0,0:38:06.15,0:38:06.40,Default,,0,0,0,,thanks.
Dialogue: 0,0:38:07.52,0:38:12.55,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:38:13.05,0:38:14.22,Default,,0,0,0,,Now you can see how easy it is
Dialogue: 0,0:38:14.22,0:38:15.95,Default,,0,0,0,,to really capture any screen or
Dialogue: 0,0:38:15.95,0:38:17.04,Default,,0,0,0,,element you have in your app
Dialogue: 0,0:38:17.53,0:38:19.24,Default,,0,0,0,,with the new screenshot API and
Dialogue: 0,0:38:19.62,0:38:21.28,Default,,0,0,0,,attach it to the test with the
Dialogue: 0,0:38:21.28,0:38:22.38,Default,,0,0,0,,new attachments API.
Dialogue: 0,0:38:22.38,0:38:25.81,Default,,0,0,0,,I really hope you give it a try.
Dialogue: 0,0:38:25.98,0:38:27.52,Default,,0,0,0,,Okay and with that I would like
Dialogue: 0,0:38:27.52,0:38:28.83,Default,,0,0,0,,to invite Wil back to wrap
Dialogue: 0,0:38:28.83,0:38:29.54,Default,,0,0,0,,things up for us.
Dialogue: 0,0:38:29.81,0:38:29.98,Default,,0,0,0,,Wil.
Dialogue: 0,0:38:30.52,0:38:36.69,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:38:37.19,0:38:38.87,Default,,0,0,0,,>> Thanks Honza, that is pretty
Dialogue: 0,0:38:38.87,0:38:40.40,Default,,0,0,0,,awesome stuff, you can see just
Dialogue: 0,0:38:40.40,0:38:41.96,Default,,0,0,0,,how easy activities make it to
Dialogue: 0,0:38:41.96,0:38:43.96,Default,,0,0,0,,improve the test structure and
Dialogue: 0,0:38:43.96,0:38:45.18,Default,,0,0,0,,capturing rich data with
Dialogue: 0,0:38:45.18,0:38:46.96,Default,,0,0,0,,attachments will make fixing
Dialogue: 0,0:38:46.96,0:38:48.35,Default,,0,0,0,,your test failures simpler than
Dialogue: 0,0:38:48.35,0:38:50.60,Default,,0,0,0,,ever and screenshots, I mean who
Dialogue: 0,0:38:50.60,0:38:51.61,Default,,0,0,0,,doesn't love screenshots.
Dialogue: 0,0:38:52.22,0:38:53.44,Default,,0,0,0,,Activities, attachments and
Dialogue: 0,0:38:53.44,0:38:54.93,Default,,0,0,0,,screenshots it's a great new set
Dialogue: 0,0:38:54.93,0:38:56.61,Default,,0,0,0,,of technologies for use in your
Dialogue: 0,0:38:56.61,0:38:57.13,Default,,0,0,0,,tests.
Dialogue: 0,0:38:57.63,0:39:00.35,Default,,0,0,0,,So, we started off with what's
Dialogue: 0,0:39:00.35,0:39:01.64,Default,,0,0,0,,new in testing and as you can
Dialogue: 0,0:39:01.64,0:39:02.40,Default,,0,0,0,,see, quite a lot.
Dialogue: 0,0:39:03.16,0:39:05.00,Default,,0,0,0,,We have many new APIs for you to
Dialogue: 0,0:39:05.00,0:39:06.48,Default,,0,0,0,,use and we didn't even touch on
Dialogue: 0,0:39:06.48,0:39:07.42,Default,,0,0,0,,all of them here today.
Dialogue: 0,0:39:08.24,0:39:11.66,Default,,0,0,0,,So, we have lots of new APIs and
Dialogue: 0,0:39:12.09,0:39:14.38,Default,,0,0,0,,we have the new workflow and
Dialogue: 0,0:39:14.38,0:39:15.90,Default,,0,0,0,,continuous integration features
Dialogue: 0,0:39:15.99,0:39:18.22,Default,,0,0,0,,in Xcode, Xcodebuild and Xcode
Dialogue: 0,0:39:18.22,0:39:20.35,Default,,0,0,0,,Server and we have those great
Dialogue: 0,0:39:20.35,0:39:21.99,Default,,0,0,0,,performance improvements in UI
Dialogue: 0,0:39:21.99,0:39:22.41,Default,,0,0,0,,testing.
Dialogue: 0,0:39:22.49,0:39:25.68,Default,,0,0,0,,So, thanks for coming today.
Dialogue: 0,0:39:26.07,0:39:27.88,Default,,0,0,0,,The session, page session of
Dialogue: 0,0:39:27.91,0:39:30.35,Default,,0,0,0,,that link above has all the
Dialogue: 0,0:39:30.35,0:39:31.75,Default,,0,0,0,,related resources and
Dialogue: 0,0:39:31.75,0:39:33.08,Default,,0,0,0,,documentation, everything you're
Dialogue: 0,0:39:33.08,0:39:33.63,Default,,0,0,0,,looking for.
Dialogue: 0,0:39:34.38,0:39:36.04,Default,,0,0,0,,And of course, we have lots of
Dialogue: 0,0:39:36.04,0:39:38.08,Default,,0,0,0,,sessions in the past and one
Dialogue: 0,0:39:38.08,0:39:39.16,Default,,0,0,0,,tomorrow that I encourage you to
Dialogue: 0,0:39:39.16,0:39:39.69,Default,,0,0,0,,check out.
Dialogue: 0,0:39:40.29,0:39:42.20,Default,,0,0,0,,Also, the previous years'
Dialogue: 0,0:39:42.20,0:39:43.65,Default,,0,0,0,,sessions have some really great
Dialogue: 0,0:39:43.65,0:39:45.21,Default,,0,0,0,,information about other parts of
Dialogue: 0,0:39:45.21,0:39:47.43,Default,,0,0,0,,testing in Xcode that we didn't
Dialogue: 0,0:39:47.43,0:39:48.66,Default,,0,0,0,,really take a close look at
Dialogue: 0,0:39:48.75,0:39:49.02,Default,,0,0,0,,today.
Dialogue: 0,0:39:49.52,0:39:49.85,Default,,0,0,0,,Thanks.
