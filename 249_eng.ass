[Script Info]
; Script generated by FFmpeg/Lavc57.89.100
ScriptType: v4.00+
PlayResX: 384
PlayResY: 288

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,16,&Hffffff,&Hffffff,&H0,&H0,0,0,0,0,100,100,0,0,1,1,0,2,10,10,10,0

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:19.58,0:00:21.04,Default,,0,0,0,,Montgomery and in this session
Dialogue: 0,0:00:21.04,0:00:22.49,Default,,0,0,0,,we'll discuss how your app can
Dialogue: 0,0:00:22.49,0:00:24.81,Default,,0,0,0,,use new APIs and iOS 11 to
Dialogue: 0,0:00:24.81,0:00:27.13,Default,,0,0,0,,filter out unwanted SMS and MMS
Dialogue: 0,0:00:27.13,0:00:29.06,Default,,0,0,0,,messages and help users avoid an
Dialogue: 0,0:00:29.06,0:00:30.03,Default,,0,0,0,,increasing nuisance.
Dialogue: 0,0:00:31.78,0:00:33.32,Default,,0,0,0,,Before we dive in, let's take a
Dialogue: 0,0:00:33.32,0:00:34.50,Default,,0,0,0,,look at what happens when we
Dialogue: 0,0:00:34.50,0:00:36.48,Default,,0,0,0,,receive an unwanted SMS message
Dialogue: 0,0:00:36.48,0:00:37.91,Default,,0,0,0,,in iOS 10.3.
Dialogue: 0,0:00:41.05,0:00:42.07,Default,,0,0,0,,Here we see what is pretty
Dialogue: 0,0:00:42.07,0:00:44.07,Default,,0,0,0,,obviously an unwanted, spam SMS.
Dialogue: 0,0:00:45.30,0:00:46.67,Default,,0,0,0,,Messages like this are annoying
Dialogue: 0,0:00:46.67,0:00:48.35,Default,,0,0,0,,for users since they play a tone
Dialogue: 0,0:00:48.35,0:00:49.86,Default,,0,0,0,,or vibrate just like a normal
Dialogue: 0,0:00:49.86,0:00:50.54,Default,,0,0,0,,message and distract from
Dialogue: 0,0:00:50.54,0:00:50.98,Default,,0,0,0,,whatever you're doing.
Dialogue: 0,0:00:55.58,0:00:57.12,Default,,0,0,0,,And if I launch messages it's
Dialogue: 0,0:00:57.12,0:00:58.66,Default,,0,0,0,,right there at the top, mixed in
Dialogue: 0,0:00:58.66,0:00:59.95,Default,,0,0,0,,with my real messages and
Dialogue: 0,0:00:59.95,0:01:00.94,Default,,0,0,0,,cluttering up the list.
Dialogue: 0,0:01:01.97,0:01:03.62,Default,,0,0,0,,Unfortunately some iPhone users
Dialogue: 0,0:01:03.62,0:01:05.03,Default,,0,0,0,,get a lot of these messages and
Dialogue: 0,0:01:05.03,0:01:06.09,Default,,0,0,0,,they would love to have a way to
Dialogue: 0,0:01:06.09,0:01:06.73,Default,,0,0,0,,filter them out.
Dialogue: 0,0:01:07.79,0:01:09.93,Default,,0,0,0,,With iOS 11 we are introducing
Dialogue: 0,0:01:09.93,0:01:11.36,Default,,0,0,0,,APIs to allow your app to
Dialogue: 0,0:01:11.36,0:01:13.20,Default,,0,0,0,,analyze the sender and content
Dialogue: 0,0:01:13.20,0:01:15.34,Default,,0,0,0,,of any SMS or MMS message from
Dialogue: 0,0:01:15.34,0:01:17.05,Default,,0,0,0,,an unknown sender and attempt to
Dialogue: 0,0:01:17.05,0:01:18.16,Default,,0,0,0,,filter out those which are
Dialogue: 0,0:01:18.16,0:01:18.78,Default,,0,0,0,,unsolicited.
Dialogue: 0,0:01:18.87,0:01:19.94,Default,,0,0,0,,Let me show you how it works.
Dialogue: 0,0:01:23.05,0:01:24.76,Default,,0,0,0,,Here on my iPhone running iOS 11
Dialogue: 0,0:01:25.36,0:01:26.55,Default,,0,0,0,,I'll launch the New Messages
Dialogue: 0,0:01:26.55,0:01:26.76,Default,,0,0,0,,app.
Dialogue: 0,0:01:27.81,0:01:29.04,Default,,0,0,0,,And since I've already installed
Dialogue: 0,0:01:29.04,0:01:30.56,Default,,0,0,0,,a Message Filter app extension
Dialogue: 0,0:01:30.75,0:01:32.74,Default,,0,0,0,,and enabled it in settings I now
Dialogue: 0,0:01:32.74,0:01:34.70,Default,,0,0,0,,see a second tab called SMS
Dialogue: 0,0:01:34.70,0:01:34.98,Default,,0,0,0,,Junk.
Dialogue: 0,0:01:35.38,0:01:36.97,Default,,0,0,0,,And if I get a message which the
Dialogue: 0,0:01:36.97,0:01:38.73,Default,,0,0,0,,app believes is junk it'll only
Dialogue: 0,0:01:38.73,0:01:39.72,Default,,0,0,0,,appear under that tab.
Dialogue: 0,0:01:41.48,0:01:42.73,Default,,0,0,0,,Ah, there's a new message now.
Dialogue: 0,0:01:43.02,0:01:43.81,Default,,0,0,0,,Let's see what it is.
Dialogue: 0,0:01:46.15,0:01:47.32,Default,,0,0,0,,This is the same message as
Dialogue: 0,0:01:47.32,0:01:49.16,Default,,0,0,0,,before, but now it no longer
Dialogue: 0,0:01:49.16,0:01:50.47,Default,,0,0,0,,appears in the regular list with
Dialogue: 0,0:01:50.47,0:01:52.06,Default,,0,0,0,,my known contacts and doesn't
Dialogue: 0,0:01:52.06,0:01:53.41,Default,,0,0,0,,distract me with a sound or
Dialogue: 0,0:01:53.41,0:01:54.06,Default,,0,0,0,,notification.
Dialogue: 0,0:01:56.05,0:01:57.99,Default,,0,0,0,,And if I tap to read it I can
Dialogue: 0,0:01:57.99,0:01:59.27,Default,,0,0,0,,see from the label at the bottom
Dialogue: 0,0:01:59.50,0:02:00.58,Default,,0,0,0,,that it was marked as junk by an
Dialogue: 0,0:02:00.58,0:02:00.97,Default,,0,0,0,,app called Filter It.
Dialogue: 0,0:02:05.23,0:02:06.52,Default,,0,0,0,,Now there are a few reasons why
Dialogue: 0,0:02:06.52,0:02:07.54,Default,,0,0,0,,we decided to add this
Dialogue: 0,0:02:07.54,0:02:08.17,Default,,0,0,0,,functionality.
Dialogue: 0,0:02:09.73,0:02:11.25,Default,,0,0,0,,Unwanted messages, which include
Dialogue: 0,0:02:11.25,0:02:13.31,Default,,0,0,0,,any unsolicited or spam messages
Dialogue: 0,0:02:13.31,0:02:15.04,Default,,0,0,0,,a user receives, have been an
Dialogue: 0,0:02:15.04,0:02:16.54,Default,,0,0,0,,increasing nuisance for users in
Dialogue: 0,0:02:16.54,0:02:17.23,Default,,0,0,0,,the recent years.
Dialogue: 0,0:02:18.40,0:02:19.86,Default,,0,0,0,,But beyond the annoyance, what's
Dialogue: 0,0:02:19.86,0:02:21.29,Default,,0,0,0,,more concerning is that often
Dialogue: 0,0:02:21.29,0:02:22.51,Default,,0,0,0,,these messages are phishing
Dialogue: 0,0:02:22.51,0:02:24.19,Default,,0,0,0,,attempts and include links which
Dialogue: 0,0:02:24.19,0:02:25.08,Default,,0,0,0,,may harm users.
Dialogue: 0,0:02:25.76,0:02:27.02,Default,,0,0,0,,So of course we want to prevent
Dialogue: 0,0:02:27.02,0:02:28.04,Default,,0,0,0,,these messages from being
Dialogue: 0,0:02:28.04,0:02:29.32,Default,,0,0,0,,delivered whenever possible.
Dialogue: 0,0:02:30.11,0:02:31.51,Default,,0,0,0,,Now there's an important
Dialogue: 0,0:02:31.51,0:02:32.87,Default,,0,0,0,,difference worth noting between
Dialogue: 0,0:02:32.98,0:02:34.63,Default,,0,0,0,,iMessage and SMS and MMS
Dialogue: 0,0:02:34.63,0:02:35.17,Default,,0,0,0,,messages.
Dialogue: 0,0:02:36.10,0:02:38.02,Default,,0,0,0,,For iMessage we offer the report
Dialogue: 0,0:02:38.02,0:02:39.98,Default,,0,0,0,,as Junk Service on-device since
Dialogue: 0,0:02:39.98,0:02:41.59,Default,,0,0,0,,those messages are encrypted end
Dialogue: 0,0:02:41.59,0:02:43.16,Default,,0,0,0,,to end and delivered over the
Dialogue: 0,0:02:43.16,0:02:43.90,Default,,0,0,0,,iMessage network.
Dialogue: 0,0:02:43.90,0:02:45.79,Default,,0,0,0,,But we don't have the ability to
Dialogue: 0,0:02:45.79,0:02:47.70,Default,,0,0,0,,do this for SMS or MMSs since
Dialogue: 0,0:02:48.00,0:02:49.48,Default,,0,0,0,,they are delivered directly from
Dialogue: 0,0:02:49.48,0:02:50.94,Default,,0,0,0,,a wireless carrier to a user's
Dialogue: 0,0:02:50.94,0:02:51.45,Default,,0,0,0,,device.
Dialogue: 0,0:02:52.08,0:02:53.12,Default,,0,0,0,,So the filtering of these
Dialogue: 0,0:02:53.12,0:02:54.59,Default,,0,0,0,,messages must happen locally
Dialogue: 0,0:02:54.59,0:02:55.69,Default,,0,0,0,,rather than on a centralized
Dialogue: 0,0:02:55.69,0:02:57.20,Default,,0,0,0,,server, and that's where these
Dialogue: 0,0:02:57.20,0:02:58.10,Default,,0,0,0,,new APIs come in.
Dialogue: 0,0:02:59.49,0:03:00.91,Default,,0,0,0,,Finally, we've heard that many
Dialogue: 0,0:03:00.91,0:03:02.44,Default,,0,0,0,,of you have developed expertise
Dialogue: 0,0:03:02.44,0:03:03.95,Default,,0,0,0,,in analyzing messages and
Dialogue: 0,0:03:03.95,0:03:04.90,Default,,0,0,0,,detecting which ones are
Dialogue: 0,0:03:04.90,0:03:06.57,Default,,0,0,0,,unwanted and we're excited to
Dialogue: 0,0:03:06.57,0:03:07.82,Default,,0,0,0,,invite apps to help with this
Dialogue: 0,0:03:07.82,0:03:07.98,Default,,0,0,0,,task.
Dialogue: 0,0:03:11.05,0:03:11.93,Default,,0,0,0,,So for the remainder of this
Dialogue: 0,0:03:11.93,0:03:13.52,Default,,0,0,0,,session I'll cover a few areas
Dialogue: 0,0:03:13.52,0:03:13.94,Default,,0,0,0,,in detail.
Dialogue: 0,0:03:15.38,0:03:16.64,Default,,0,0,0,,First I'll walk through the
Dialogue: 0,0:03:16.64,0:03:18.18,Default,,0,0,0,,details of what we call Message
Dialogue: 0,0:03:18.18,0:03:19.48,Default,,0,0,0,,Filter Extensions and show how
Dialogue: 0,0:03:19.48,0:03:19.82,Default,,0,0,0,,they work.
Dialogue: 0,0:03:21.81,0:03:23.09,Default,,0,0,0,,Next I'll talk about some
Dialogue: 0,0:03:23.09,0:03:24.36,Default,,0,0,0,,important considerations around
Dialogue: 0,0:03:24.36,0:03:26.11,Default,,0,0,0,,privacy since these extensions
Dialogue: 0,0:03:26.11,0:03:27.42,Default,,0,0,0,,come with some special rules.
Dialogue: 0,0:03:28.81,0:03:30.00,Default,,0,0,0,,Then I'll talk about how an
Dialogue: 0,0:03:30.00,0:03:31.05,Default,,0,0,0,,extension can check with a
Dialogue: 0,0:03:31.05,0:03:32.54,Default,,0,0,0,,network-backed service, which
Dialogue: 0,0:03:32.54,0:03:35.36,Default,,0,0,0,,some apps might find useful and
Dialogue: 0,0:03:35.36,0:03:36.49,Default,,0,0,0,,I'll show a couple of demos
Dialogue: 0,0:03:36.49,0:03:38.08,Default,,0,0,0,,along the way through creating
Dialogue: 0,0:03:38.08,0:03:39.01,Default,,0,0,0,,one of these extensions in
Dialogue: 0,0:03:39.01,0:03:39.16,Default,,0,0,0,,Xcode.
Dialogue: 0,0:03:39.16,0:03:39.98,Default,,0,0,0,,So let's get started.
Dialogue: 0,0:03:43.56,0:03:44.61,Default,,0,0,0,,The way this works is using
Dialogue: 0,0:03:44.61,0:03:46.20,Default,,0,0,0,,something we call Message Filter
Dialogue: 0,0:03:46.20,0:03:46.81,Default,,0,0,0,,Extensions.
Dialogue: 0,0:03:47.20,0:03:48.15,Default,,0,0,0,,So let's talk about those
Dialogue: 0,0:03:48.15,0:03:48.60,Default,,0,0,0,,in-depth.
Dialogue: 0,0:03:50.27,0:03:51.76,Default,,0,0,0,,As the name implies, this is a
Dialogue: 0,0:03:51.76,0:03:53.28,Default,,0,0,0,,new app extension type, which
Dialogue: 0,0:03:53.28,0:03:54.10,Default,,0,0,0,,your app can include.
Dialogue: 0,0:03:54.10,0:03:57.21,Default,,0,0,0,,The APIs for it are in a new
Dialogue: 0,0:03:57.21,0:03:58.98,Default,,0,0,0,,framework in iOS-11 called
Dialogue: 0,0:03:58.98,0:03:59.82,Default,,0,0,0,,Identity Look Up.
Dialogue: 0,0:04:00.92,0:04:02.44,Default,,0,0,0,,Now once a user has installed an
Dialogue: 0,0:04:02.44,0:04:03.14,Default,,0,0,0,,app with one of these
Dialogue: 0,0:04:03.14,0:04:05.09,Default,,0,0,0,,extensions, to begin using it
Dialogue: 0,0:04:05.13,0:04:06.21,Default,,0,0,0,,they must first enable the
Dialogue: 0,0:04:06.21,0:04:07.78,Default,,0,0,0,,extension in Messages Settings.
Dialogue: 0,0:04:09.23,0:04:10.43,Default,,0,0,0,,Only one extension can be
Dialogue: 0,0:04:10.43,0:04:12.23,Default,,0,0,0,,enabled at a time, or if the
Dialogue: 0,0:04:12.23,0:04:13.34,Default,,0,0,0,,user wants to disable the
Dialogue: 0,0:04:13.34,0:04:14.74,Default,,0,0,0,,feature they can choose None.
Dialogue: 0,0:04:15.64,0:04:17.40,Default,,0,0,0,,And once it's enabled that
Dialogue: 0,0:04:17.40,0:04:19.08,Default,,0,0,0,,extension is invoked every time
Dialogue: 0,0:04:19.08,0:04:20.74,Default,,0,0,0,,an SMS or MMS message is
Dialogue: 0,0:04:20.74,0:04:22.16,Default,,0,0,0,,received from an unknown sender.
Dialogue: 0,0:04:23.20,0:04:24.44,Default,,0,0,0,,And there is some other criteria
Dialogue: 0,0:04:24.44,0:04:25.84,Default,,0,0,0,,used when deciding when to send
Dialogue: 0,0:04:25.84,0:04:26.94,Default,,0,0,0,,a message to the extension,
Dialogue: 0,0:04:27.12,0:04:28.03,Default,,0,0,0,,which I'll discuss in a few
Dialogue: 0,0:04:28.03,0:04:28.40,Default,,0,0,0,,minutes.
Dialogue: 0,0:04:28.62,0:04:29.69,Default,,0,0,0,,Let's walk through a diagram
Dialogue: 0,0:04:29.69,0:04:30.74,Default,,0,0,0,,showing the overall flow.
Dialogue: 0,0:04:31.98,0:04:33.12,Default,,0,0,0,,When a message is received by
Dialogue: 0,0:04:33.12,0:04:34.62,Default,,0,0,0,,the phone it starts in the
Dialogue: 0,0:04:34.62,0:04:37.39,Default,,0,0,0,,Messages app and if it is an SMS
Dialogue: 0,0:04:37.39,0:04:39.30,Default,,0,0,0,,or MMS and it's from a sender
Dialogue: 0,0:04:39.30,0:04:40.44,Default,,0,0,0,,which isn't in the recipient's
Dialogue: 0,0:04:40.44,0:04:42.55,Default,,0,0,0,,contacts, then the extension,
Dialogue: 0,0:04:42.55,0:04:43.63,Default,,0,0,0,,which the user selected in
Dialogue: 0,0:04:43.63,0:04:45.08,Default,,0,0,0,,Settings will be launched and
Dialogue: 0,0:04:45.08,0:04:46.22,Default,,0,0,0,,will be passed the messages
Dialogue: 0,0:04:46.22,0:04:48.15,Default,,0,0,0,,sender and body via an object
Dialogue: 0,0:04:48.15,0:04:50.30,Default,,0,0,0,,called IL Message Filter Query
Dialogue: 0,0:04:50.30,0:04:51.83,Default,,0,0,0,,Request, which is part of the
Dialogue: 0,0:04:51.83,0:04:53.00,Default,,0,0,0,,identity look-up framework.
Dialogue: 0,0:04:54.55,0:04:55.89,Default,,0,0,0,,When the extension receives this
Dialogue: 0,0:04:56.05,0:04:57.51,Default,,0,0,0,,it begins examining the message,
Dialogue: 0,0:04:57.73,0:04:58.88,Default,,0,0,0,,looking at the sender or the
Dialogue: 0,0:04:58.88,0:05:00.35,Default,,0,0,0,,body of the message, or both,
Dialogue: 0,0:05:00.87,0:05:02.04,Default,,0,0,0,,and it might check against a
Dialogue: 0,0:05:02.04,0:05:03.99,Default,,0,0,0,,known list of bad phone numbers
Dialogue: 0,0:05:04.44,0:05:05.45,Default,,0,0,0,,or it could look for a
Dialogue: 0,0:05:05.45,0:05:06.83,Default,,0,0,0,,suspicious looking web link in
Dialogue: 0,0:05:06.83,0:05:08.09,Default,,0,0,0,,the body, whatever is
Dialogue: 0,0:05:08.09,0:05:08.54,Default,,0,0,0,,appropriate.
Dialogue: 0,0:05:09.26,0:05:10.67,Default,,0,0,0,,Ultimately the extension has to
Dialogue: 0,0:05:10.67,0:05:12.74,Default,,0,0,0,,form a response using an object
Dialogue: 0,0:05:12.74,0:05:14.79,Default,,0,0,0,,called IL Message Filter Query
Dialogue: 0,0:05:14.79,0:05:16.79,Default,,0,0,0,,Response, describing whether to
Dialogue: 0,0:05:16.79,0:05:19.03,Default,,0,0,0,,allow or filter the message, and
Dialogue: 0,0:05:19.03,0:05:19.97,Default,,0,0,0,,it sends this back to the
Dialogue: 0,0:05:19.97,0:05:20.59,Default,,0,0,0,,Messages app.
Dialogue: 0,0:05:21.69,0:05:23.17,Default,,0,0,0,,And once it receives a response,
Dialogue: 0,0:05:23.48,0:05:24.66,Default,,0,0,0,,Messages will either alert the
Dialogue: 0,0:05:24.66,0:05:26.35,Default,,0,0,0,,user normally or suppress the
Dialogue: 0,0:05:26.35,0:05:27.59,Default,,0,0,0,,notification and move the
Dialogue: 0,0:05:27.59,0:05:28.97,Default,,0,0,0,,message thread to the Junk tab.
Dialogue: 0,0:05:33.23,0:05:34.35,Default,,0,0,0,,So that's a basic overview of
Dialogue: 0,0:05:34.35,0:05:36.23,Default,,0,0,0,,how it works and before we go on
Dialogue: 0,0:05:36.26,0:05:37.35,Default,,0,0,0,,I'd like to touch on a very
Dialogue: 0,0:05:37.35,0:05:38.95,Default,,0,0,0,,important topic, and that's user
Dialogue: 0,0:05:38.95,0:05:39.39,Default,,0,0,0,,privacy.
Dialogue: 0,0:05:40.89,0:05:41.96,Default,,0,0,0,,We thought a lot about how to
Dialogue: 0,0:05:41.96,0:05:43.24,Default,,0,0,0,,maintain the strong level of
Dialogue: 0,0:05:43.30,0:05:45.03,Default,,0,0,0,,privacy Apple customers expect,
Dialogue: 0,0:05:45.55,0:05:46.95,Default,,0,0,0,,but also allow them to enable
Dialogue: 0,0:05:46.95,0:05:48.14,Default,,0,0,0,,this if they want to confront
Dialogue: 0,0:05:48.14,0:05:49.45,Default,,0,0,0,,this persistent problem of
Dialogue: 0,0:05:49.45,0:05:50.47,Default,,0,0,0,,unwanted messages.
Dialogue: 0,0:05:51.04,0:05:52.48,Default,,0,0,0,,So there are a few special rules
Dialogue: 0,0:05:52.48,0:05:53.91,Default,,0,0,0,,that extensions must comply with
Dialogue: 0,0:05:54.00,0:05:54.88,Default,,0,0,0,,when using this API.
Dialogue: 0,0:05:57.05,0:05:58.45,Default,,0,0,0,,The first rule is that a message
Dialogue: 0,0:05:58.45,0:05:59.71,Default,,0,0,0,,recipient's phone number is
Dialogue: 0,0:05:59.71,0:06:02.17,Default,,0,0,0,,never sent to an extension, only
Dialogue: 0,0:06:02.17,0:06:03.41,Default,,0,0,0,,the sender's phone number or
Dialogue: 0,0:06:03.41,0:06:05.00,Default,,0,0,0,,email address is included, since
Dialogue: 0,0:06:05.00,0:06:05.71,Default,,0,0,0,,that's all that should be
Dialogue: 0,0:06:05.71,0:06:07.01,Default,,0,0,0,,required to make a decision
Dialogue: 0,0:06:07.01,0:06:07.99,Default,,0,0,0,,about whether to filter a
Dialogue: 0,0:06:07.99,0:06:08.47,Default,,0,0,0,,message.
Dialogue: 0,0:06:09.51,0:06:10.74,Default,,0,0,0,,Another key rule is that a
Dialogue: 0,0:06:10.74,0:06:12.18,Default,,0,0,0,,message filter extension can
Dialogue: 0,0:06:12.18,0:06:13.54,Default,,0,0,0,,never export the contents of
Dialogue: 0,0:06:13.54,0:06:14.87,Default,,0,0,0,,messages outside its container,
Dialogue: 0,0:06:14.87,0:06:16.84,Default,,0,0,0,,and these extensions have some
Dialogue: 0,0:06:16.84,0:06:18.17,Default,,0,0,0,,additional restrictions because
Dialogue: 0,0:06:18.17,0:06:18.55,Default,,0,0,0,,of this.
Dialogue: 0,0:06:19.67,0:06:20.71,Default,,0,0,0,,They cannot write to files
Dialogue: 0,0:06:20.71,0:06:21.93,Default,,0,0,0,,shared with their containing app
Dialogue: 0,0:06:22.71,0:06:23.98,Default,,0,0,0,,and they cannot perform network
Dialogue: 0,0:06:23.98,0:06:24.61,Default,,0,0,0,,operations.
Dialogue: 0,0:06:25.58,0:06:26.71,Default,,0,0,0,,The reason for this is that,
Dialogue: 0,0:06:26.71,0:06:27.96,Default,,0,0,0,,although some messages may be
Dialogue: 0,0:06:27.96,0:06:29.93,Default,,0,0,0,,unwanted junk, others may be
Dialogue: 0,0:06:29.93,0:06:31.05,Default,,0,0,0,,legitimate and be sent from
Dialogue: 0,0:06:31.05,0:06:32.32,Default,,0,0,0,,someone who's just not on the
Dialogue: 0,0:06:32.32,0:06:33.64,Default,,0,0,0,,recipient's contacts yet.
Dialogue: 0,0:06:34.16,0:06:35.48,Default,,0,0,0,,So then it's imperative that all
Dialogue: 0,0:06:35.48,0:06:36.93,Default,,0,0,0,,the messages be kept private and
Dialogue: 0,0:06:36.93,0:06:38.76,Default,,0,0,0,,never exported in any way that
Dialogue: 0,0:06:38.76,0:06:40.32,Default,,0,0,0,,reveals more about the recipient
Dialogue: 0,0:06:40.36,0:06:41.27,Default,,0,0,0,,than what is contained in the
Dialogue: 0,0:06:41.27,0:06:42.04,Default,,0,0,0,,message itself.
Dialogue: 0,0:06:43.98,0:06:44.96,Default,,0,0,0,,Although they can't perform
Dialogue: 0,0:06:44.96,0:06:46.70,Default,,0,0,0,,networking themselves, it is
Dialogue: 0,0:06:46.70,0:06:48.10,Default,,0,0,0,,possible for these extensions to
Dialogue: 0,0:06:48.10,0:06:49.67,Default,,0,0,0,,defer a request to their server
Dialogue: 0,0:06:49.67,0:06:51.25,Default,,0,0,0,,indirectly, and when an
Dialogue: 0,0:06:51.25,0:06:53.67,Default,,0,0,0,,extension requests to defer iOS
Dialogue: 0,0:06:53.67,0:06:54.94,Default,,0,0,0,,will make a web request on the
Dialogue: 0,0:06:54.94,0:06:56.55,Default,,0,0,0,,extension's behalf in a secure
Dialogue: 0,0:06:56.55,0:06:56.84,Default,,0,0,0,,way.
Dialogue: 0,0:06:57.50,0:06:58.48,Default,,0,0,0,,We'll see an example of that
Dialogue: 0,0:06:58.48,0:06:58.78,Default,,0,0,0,,later.
Dialogue: 0,0:06:59.73,0:07:01.15,Default,,0,0,0,,The main thing to keep in mind
Dialogue: 0,0:07:01.33,0:07:02.58,Default,,0,0,0,,is that your extension should
Dialogue: 0,0:07:02.58,0:07:04.40,Default,,0,0,0,,never export messages outside of
Dialogue: 0,0:07:04.40,0:07:05.74,Default,,0,0,0,,its container to maintain user
Dialogue: 0,0:07:05.74,0:07:05.98,Default,,0,0,0,,privacy.
Dialogue: 0,0:07:10.05,0:07:11.05,Default,,0,0,0,,Now there is some specific
Dialogue: 0,0:07:11.05,0:07:12.51,Default,,0,0,0,,criteria that the Messages app
Dialogue: 0,0:07:12.51,0:07:14.14,Default,,0,0,0,,uses to decide whether or not to
Dialogue: 0,0:07:14.14,0:07:15.53,Default,,0,0,0,,send a given message to an
Dialogue: 0,0:07:15.53,0:07:16.07,Default,,0,0,0,,extension.
Dialogue: 0,0:07:17.09,0:07:18.78,Default,,0,0,0,,First, this feature is only used
Dialogue: 0,0:07:18.78,0:07:21.03,Default,,0,0,0,,with SMS and MMS messages and
Dialogue: 0,0:07:21.03,0:07:22.06,Default,,0,0,0,,never with iMessage.
Dialogue: 0,0:07:22.86,0:07:24.53,Default,,0,0,0,,As I mentioned earlier, unwanted
Dialogue: 0,0:07:24.63,0:07:26.00,Default,,0,0,0,,iMessages are handled using a
Dialogue: 0,0:07:26.00,0:07:27.39,Default,,0,0,0,,different mechanism, so this
Dialogue: 0,0:07:27.39,0:07:28.92,Default,,0,0,0,,only applies to SMS and MMS.
Dialogue: 0,0:07:31.05,0:07:32.21,Default,,0,0,0,,As I've mentioned a few times,
Dialogue: 0,0:07:32.40,0:07:34.18,Default,,0,0,0,,only unknown senders, or those
Dialogue: 0,0:07:34.18,0:07:35.25,Default,,0,0,0,,which are not in the recipient's
Dialogue: 0,0:07:35.25,0:07:36.89,Default,,0,0,0,,contacts are actually sent to
Dialogue: 0,0:07:36.89,0:07:38.22,Default,,0,0,0,,the extension for analysis.
Dialogue: 0,0:07:39.16,0:07:41.50,Default,,0,0,0,,If a sender is in Contacts we
Dialogue: 0,0:07:41.50,0:07:42.79,Default,,0,0,0,,assume that that recipient knows
Dialogue: 0,0:07:42.79,0:07:44.87,Default,,0,0,0,,the sender and wants to receive
Dialogue: 0,0:07:44.87,0:07:45.68,Default,,0,0,0,,messages from them.
Dialogue: 0,0:07:46.30,0:07:47.36,Default,,0,0,0,,That also means that if a
Dialogue: 0,0:07:47.36,0:07:48.96,Default,,0,0,0,,message is ever miscategorized
Dialogue: 0,0:07:48.96,0:07:50.71,Default,,0,0,0,,as junk then the user can add
Dialogue: 0,0:07:50.71,0:07:52.15,Default,,0,0,0,,that sender to their contacts to
Dialogue: 0,0:07:52.15,0:07:53.41,Default,,0,0,0,,ensure they aren't filtered out
Dialogue: 0,0:07:53.41,0:07:53.93,Default,,0,0,0,,in the future.
Dialogue: 0,0:07:55.45,0:07:57.14,Default,,0,0,0,,Also, if a user is exchanging
Dialogue: 0,0:07:57.14,0:07:58.44,Default,,0,0,0,,messages with someone who is not
Dialogue: 0,0:07:58.44,0:08:00.35,Default,,0,0,0,,in their Contacts and they reply
Dialogue: 0,0:08:00.35,0:08:01.91,Default,,0,0,0,,to that thread multiple times,
Dialogue: 0,0:08:02.45,0:08:03.79,Default,,0,0,0,,then we will stop sending any
Dialogue: 0,0:08:03.79,0:08:05.05,Default,,0,0,0,,subsequent messages in that
Dialogue: 0,0:08:05.05,0:08:06.16,Default,,0,0,0,,thread to the extension.
Dialogue: 0,0:08:07.01,0:08:09.04,Default,,0,0,0,,Or, if the user replies multiple
Dialogue: 0,0:08:09.04,0:08:10.20,Default,,0,0,0,,times to a thread, which is
Dialogue: 0,0:08:10.20,0:08:12.09,Default,,0,0,0,,already marked as junk, that
Dialogue: 0,0:08:12.09,0:08:13.20,Default,,0,0,0,,thread will be restored to the
Dialogue: 0,0:08:13.20,0:08:14.03,Default,,0,0,0,,non-junk tab.
Dialogue: 0,0:08:15.14,0:08:16.50,Default,,0,0,0,,Responding multiple times is
Dialogue: 0,0:08:16.50,0:08:17.89,Default,,0,0,0,,interpreted as a signal from the
Dialogue: 0,0:08:17.89,0:08:19.28,Default,,0,0,0,,recipient that they really do
Dialogue: 0,0:08:19.28,0:08:20.39,Default,,0,0,0,,want to be communicating with
Dialogue: 0,0:08:20.39,0:08:20.81,Default,,0,0,0,,the sender.
Dialogue: 0,0:08:22.26,0:08:23.72,Default,,0,0,0,,So all of this criteria doesn't
Dialogue: 0,0:08:23.72,0:08:25.75,Default,,0,0,0,,directly affect the API, but it
Dialogue: 0,0:08:25.75,0:08:27.34,Default,,0,0,0,,is something you, as a developer
Dialogue: 0,0:08:27.34,0:08:28.39,Default,,0,0,0,,of one of these extensions,
Dialogue: 0,0:08:28.39,0:08:29.88,Default,,0,0,0,,should be aware of when testing
Dialogue: 0,0:08:29.88,0:08:30.92,Default,,0,0,0,,or troubleshooting your app.
Dialogue: 0,0:08:35.05,0:08:36.18,Default,,0,0,0,,So now I'd like to show a demo
Dialogue: 0,0:08:36.18,0:08:37.73,Default,,0,0,0,,in Xcode of how you can create a
Dialogue: 0,0:08:37.73,0:08:38.93,Default,,0,0,0,,message filter extension.
Dialogue: 0,0:08:40.74,0:08:42.01,Default,,0,0,0,,Here we have an app I've made
Dialogue: 0,0:08:42.04,0:08:43.77,Default,,0,0,0,,called Filter It and I'd like to
Dialogue: 0,0:08:43.77,0:08:45.21,Default,,0,0,0,,add a message filter extension.
Dialogue: 0,0:08:47.13,0:08:48.50,Default,,0,0,0,,The first thing I need to do is
Dialogue: 0,0:08:48.50,0:08:48.98,Default,,0,0,0,,add a new target.
Dialogue: 0,0:08:53.05,0:08:53.78,Default,,0,0,0,,And I'll choose the new message
Dialogue: 0,0:08:53.78,0:08:56.53,Default,,0,0,0,,filter template for iOS and I'll
Dialogue: 0,0:08:56.53,0:08:56.98,Default,,0,0,0,,give it a name.
Dialogue: 0,0:09:03.05,0:09:04.34,Default,,0,0,0,,I've got a new file added to my
Dialogue: 0,0:09:04.38,0:09:05.58,Default,,0,0,0,,project now called
Dialogue: 0,0:09:05.88,0:09:07.28,Default,,0,0,0,,messagefiltereextension.swift.
Dialogue: 0,0:09:07.28,0:09:08.98,Default,,0,0,0,,Now let's take a look at that.
Dialogue: 0,0:09:20.11,0:09:21.18,Default,,0,0,0,,The first thing we see is a
Dialogue: 0,0:09:21.18,0:09:22.83,Default,,0,0,0,,method called Handle Query
Dialogue: 0,0:09:22.83,0:09:24.92,Default,,0,0,0,,Request with Context and this is
Dialogue: 0,0:09:24.92,0:09:26.38,Default,,0,0,0,,called on our extension so that
Dialogue: 0,0:09:26.38,0:09:27.52,Default,,0,0,0,,it can examine the incoming
Dialogue: 0,0:09:27.52,0:09:29.13,Default,,0,0,0,,message and return a response
Dialogue: 0,0:09:29.20,0:09:30.36,Default,,0,0,0,,using the completion handler.
Dialogue: 0,0:09:33.29,0:09:34.42,Default,,0,0,0,,Now the template is structured
Dialogue: 0,0:09:34.42,0:09:36.06,Default,,0,0,0,,to first attempt an offline
Dialogue: 0,0:09:36.06,0:09:37.93,Default,,0,0,0,,check using this method, called
Dialogue: 0,0:09:38.21,0:09:40.11,Default,,0,0,0,,Offline Action for Query Request
Dialogue: 0,0:09:41.94,0:09:43.33,Default,,0,0,0,,and it returns an action which
Dialogue: 0,0:09:43.33,0:09:45.36,Default,,0,0,0,,is either allow, filter, or
Dialogue: 0,0:09:45.36,0:09:45.69,Default,,0,0,0,,none.
Dialogue: 0,0:09:48.37,0:09:49.76,Default,,0,0,0,,So for this demo what we need to
Dialogue: 0,0:09:49.76,0:09:51.37,Default,,0,0,0,,do is customize this offline
Dialogue: 0,0:09:51.37,0:09:52.37,Default,,0,0,0,,action helper method.
Dialogue: 0,0:09:52.97,0:09:53.74,Default,,0,0,0,,Let's look at what it does
Dialogue: 0,0:09:53.74,0:09:53.97,Default,,0,0,0,,currently.
Dialogue: 0,0:09:58.05,0:09:59.24,Default,,0,0,0,,Right now it always returns
Dialogue: 0,0:09:59.24,0:10:01.20,Default,,0,0,0,,none, but I'll replace that with
Dialogue: 0,0:10:01.20,0:10:02.74,Default,,0,0,0,,some simple logic to always
Dialogue: 0,0:10:02.74,0:10:04.18,Default,,0,0,0,,filter if the message contains
Dialogue: 0,0:10:04.22,0:10:04.98,Default,,0,0,0,,the word junk.
Dialogue: 0,0:10:09.66,0:10:10.90,Default,,0,0,0,,In a real extension this could
Dialogue: 0,0:10:10.90,0:10:12.33,Default,,0,0,0,,do something more sophisticated,
Dialogue: 0,0:10:12.51,0:10:14.72,Default,,0,0,0,,but this works for now and
Dialogue: 0,0:10:14.72,0:10:15.75,Default,,0,0,0,,that's all it takes to create a
Dialogue: 0,0:10:15.75,0:10:17.48,Default,,0,0,0,,simple, offline only, message
Dialogue: 0,0:10:17.48,0:10:17.98,Default,,0,0,0,,filter extension.
Dialogue: 0,0:10:22.20,0:10:23.37,Default,,0,0,0,,Now although some apps may be
Dialogue: 0,0:10:23.37,0:10:24.83,Default,,0,0,0,,able to do most or all of their
Dialogue: 0,0:10:24.83,0:10:27.05,Default,,0,0,0,,checking offline, other apps may
Dialogue: 0,0:10:27.05,0:10:28.26,Default,,0,0,0,,find it useful to check with a
Dialogue: 0,0:10:28.26,0:10:29.69,Default,,0,0,0,,network server whether to filter
Dialogue: 0,0:10:29.69,0:10:30.47,Default,,0,0,0,,messages or not.
Dialogue: 0,0:10:30.87,0:10:32.12,Default,,0,0,0,,So next I'd like to talk about
Dialogue: 0,0:10:32.12,0:10:32.92,Default,,0,0,0,,network deferral.
Dialogue: 0,0:10:34.63,0:10:36.29,Default,,0,0,0,,The best way to show how network
Dialogue: 0,0:10:36.29,0:10:37.71,Default,,0,0,0,,deferral works is with another
Dialogue: 0,0:10:37.71,0:10:38.20,Default,,0,0,0,,diagram.
Dialogue: 0,0:10:39.62,0:10:41.24,Default,,0,0,0,,As before, when a message is
Dialogue: 0,0:10:41.24,0:10:42.54,Default,,0,0,0,,received it starts in the
Dialogue: 0,0:10:42.54,0:10:44.08,Default,,0,0,0,,Messages app and is sent to the
Dialogue: 0,0:10:44.08,0:10:46.74,Default,,0,0,0,,chosen extension, but this time
Dialogue: 0,0:10:46.86,0:10:48.23,Default,,0,0,0,,the extension chooses to defer
Dialogue: 0,0:10:48.23,0:10:49.37,Default,,0,0,0,,this request to its network
Dialogue: 0,0:10:49.37,0:10:51.36,Default,,0,0,0,,server, whose URL is specified
Dialogue: 0,0:10:51.36,0:10:52.61,Default,,0,0,0,,in its info.plist.
Dialogue: 0,0:10:53.41,0:10:54.98,Default,,0,0,0,,So it tells Messages to defer
Dialogue: 0,0:10:55.38,0:10:57.14,Default,,0,0,0,,and Messages then makes a JSON
Dialogue: 0,0:10:57.14,0:10:58.90,Default,,0,0,0,,request to that server URL.
Dialogue: 0,0:11:00.17,0:11:01.44,Default,,0,0,0,,The server then examines the
Dialogue: 0,0:11:01.44,0:11:02.87,Default,,0,0,0,,Messages contents inside the
Dialogue: 0,0:11:02.87,0:11:04.88,Default,,0,0,0,,JSON request and can respond in
Dialogue: 0,0:11:04.88,0:11:06.89,Default,,0,0,0,,any format it wants and that
Dialogue: 0,0:11:06.89,0:11:08.45,Default,,0,0,0,,response is handed right back to
Dialogue: 0,0:11:08.45,0:11:09.07,Default,,0,0,0,,the extension.
Dialogue: 0,0:11:10.03,0:11:11.48,Default,,0,0,0,,And from here, the extension
Dialogue: 0,0:11:11.48,0:11:12.48,Default,,0,0,0,,reads the response from the
Dialogue: 0,0:11:12.48,0:11:14.84,Default,,0,0,0,,server and finally returns an IL
Dialogue: 0,0:11:14.84,0:11:16.57,Default,,0,0,0,,message filter query response
Dialogue: 0,0:11:16.57,0:11:16.98,Default,,0,0,0,,back to Messages.
Dialogue: 0,0:11:22.33,0:11:23.47,Default,,0,0,0,,There are a few restrictions to
Dialogue: 0,0:11:23.47,0:11:24.85,Default,,0,0,0,,be aware of when using network
Dialogue: 0,0:11:24.85,0:11:25.27,Default,,0,0,0,,deferral.
Dialogue: 0,0:11:26.37,0:11:27.98,Default,,0,0,0,,First, the deferred network
Dialogue: 0,0:11:27.98,0:11:29.88,Default,,0,0,0,,requests contain no personally
Dialogue: 0,0:11:29.88,0:11:31.56,Default,,0,0,0,,identifiable information about
Dialogue: 0,0:11:31.56,0:11:32.93,Default,,0,0,0,,the recipient of the message.
Dialogue: 0,0:11:35.30,0:11:36.93,Default,,0,0,0,,The network URL is hardcoded
Dialogue: 0,0:11:36.93,0:11:38.43,Default,,0,0,0,,statically into the extension's
Dialogue: 0,0:11:38.46,0:11:40.84,Default,,0,0,0,,info.plist file under a key
Dialogue: 0,0:11:40.84,0:11:42.62,Default,,0,0,0,,called IL Message Filter
Dialogue: 0,0:11:42.62,0:11:44.17,Default,,0,0,0,,Extension Network URL.
Dialogue: 0,0:11:44.77,0:11:46.05,Default,,0,0,0,,So it cannot vary between
Dialogue: 0,0:11:46.05,0:11:47.71,Default,,0,0,0,,requests or for individual
Dialogue: 0,0:11:47.71,0:11:47.98,Default,,0,0,0,,users.
Dialogue: 0,0:11:53.07,0:11:55.18,Default,,0,0,0,,All URLs must be secure https
Dialogue: 0,0:11:55.18,0:11:56.73,Default,,0,0,0,,and the server must be
Dialogue: 0,0:11:56.73,0:11:58.11,Default,,0,0,0,,configured such that it doesn't
Dialogue: 0,0:11:58.11,0:11:59.67,Default,,0,0,0,,require any app transport
Dialogue: 0,0:11:59.67,0:12:01.79,Default,,0,0,0,,security, or ATS, overrides
Dialogue: 0,0:12:02.12,0:12:02.90,Default,,0,0,0,,since there's no way to
Dialogue: 0,0:12:02.90,0:12:04.59,Default,,0,0,0,,configure them.
Dialogue: 0,0:12:05.69,0:12:07.43,Default,,0,0,0,,Also, this feature requires that
Dialogue: 0,0:12:07.43,0:12:09.28,Default,,0,0,0,,both your app and server use the
Dialogue: 0,0:12:09.28,0:12:11.79,Default,,0,0,0,,associated domains, or Apple App
Dialogue: 0,0:12:11.79,0:12:13.87,Default,,0,0,0,,Site Association Feature, which
Dialogue: 0,0:12:13.87,0:12:14.99,Default,,0,0,0,,is something you may be familiar
Dialogue: 0,0:12:14.99,0:12:16.80,Default,,0,0,0,,with if you've adopted other iOS
Dialogue: 0,0:12:16.80,0:12:18.19,Default,,0,0,0,,features like App Links or
Dialogue: 0,0:12:18.19,0:12:19.33,Default,,0,0,0,,Shared Web Credentials.
Dialogue: 0,0:12:20.91,0:12:22.23,Default,,0,0,0,,And for more information, see
Dialogue: 0,0:12:22.23,0:12:23.91,Default,,0,0,0,,the session; Seamless Linking to
Dialogue: 0,0:12:23.91,0:12:26.50,Default,,0,0,0,,Your App from WWDC2015.
Dialogue: 0,0:12:26.99,0:12:29.52,Default,,0,0,0,,And the last restriction to be
Dialogue: 0,0:12:29.52,0:12:31.11,Default,,0,0,0,,aware of is that any cookies
Dialogue: 0,0:12:31.11,0:12:32.35,Default,,0,0,0,,that the webserver attempt to
Dialogue: 0,0:12:32.35,0:12:33.67,Default,,0,0,0,,set will be ignored to maintain
Dialogue: 0,0:12:33.67,0:12:33.98,Default,,0,0,0,,privacy.
Dialogue: 0,0:12:38.22,0:12:39.57,Default,,0,0,0,,The request made to the network
Dialogue: 0,0:12:39.57,0:12:41.53,Default,,0,0,0,,server is formatted using JSON
Dialogue: 0,0:12:41.90,0:12:43.17,Default,,0,0,0,,and includes the same things
Dialogue: 0,0:12:43.17,0:12:44.61,Default,,0,0,0,,which are in the IL Message
Dialogue: 0,0:12:44.61,0:12:46.18,Default,,0,0,0,,Filter Query Request Object
Dialogue: 0,0:12:46.46,0:12:48.23,Default,,0,0,0,,including the message sender,
Dialogue: 0,0:12:48.50,0:12:49.85,Default,,0,0,0,,which is a phone number or email
Dialogue: 0,0:12:49.85,0:12:51.86,Default,,0,0,0,,address, and the message body.
Dialogue: 0,0:12:53.20,0:12:54.86,Default,,0,0,0,,The request also includes the
Dialogue: 0,0:12:54.86,0:12:56.30,Default,,0,0,0,,version of your app, which is
Dialogue: 0,0:12:56.30,0:12:57.96,Default,,0,0,0,,the CF Bundle Version Key from
Dialogue: 0,0:12:57.96,0:12:59.41,Default,,0,0,0,,the app's info.plist.
Dialogue: 0,0:13:00.36,0:13:01.97,Default,,0,0,0,,This may be useful in cases you
Dialogue: 0,0:13:01.97,0:13:02.93,Default,,0,0,0,,have -- in case you have
Dialogue: 0,0:13:02.93,0:13:04.41,Default,,0,0,0,,released several versions of
Dialogue: 0,0:13:04.41,0:13:05.19,Default,,0,0,0,,your app with different
Dialogue: 0,0:13:05.19,0:13:06.75,Default,,0,0,0,,capabilities and need to format
Dialogue: 0,0:13:06.75,0:13:08.18,Default,,0,0,0,,the response to insure that
Dialogue: 0,0:13:08.18,0:13:09.44,Default,,0,0,0,,particular version of the app
Dialogue: 0,0:13:09.44,0:13:11.07,Default,,0,0,0,,can understand it.
Dialogue: 0,0:13:11.71,0:13:12.90,Default,,0,0,0,,And we include the version of
Dialogue: 0,0:13:12.90,0:13:14.71,Default,,0,0,0,,the JSON request format itself,
Dialogue: 0,0:13:14.81,0:13:15.73,Default,,0,0,0,,which is currently one.
Dialogue: 0,0:13:17.39,0:13:18.83,Default,,0,0,0,,Now, unlike the request format,
Dialogue: 0,0:13:19.29,0:13:20.92,Default,,0,0,0,,the response format is entirely
Dialogue: 0,0:13:20.92,0:13:22.58,Default,,0,0,0,,up to your app to define and
Dialogue: 0,0:13:22.58,0:13:23.88,Default,,0,0,0,,doesn't necessarily have to be
Dialogue: 0,0:13:23.88,0:13:24.33,Default,,0,0,0,,JSON.
Dialogue: 0,0:13:25.16,0:13:26.77,Default,,0,0,0,,The response body is passed back
Dialogue: 0,0:13:26.77,0:13:28.20,Default,,0,0,0,,to your extension to parse, so
Dialogue: 0,0:13:28.20,0:13:29.41,Default,,0,0,0,,there are not requirements about
Dialogue: 0,0:13:29.41,0:13:29.86,Default,,0,0,0,,its format.
Dialogue: 0,0:13:33.05,0:13:34.09,Default,,0,0,0,,And here's a quick look at the
Dialogue: 0,0:13:34.09,0:13:35.73,Default,,0,0,0,,JSON request format, and you can
Dialogue: 0,0:13:35.73,0:13:36.70,Default,,0,0,0,,see it includes all of the info
Dialogue: 0,0:13:36.70,0:13:36.98,Default,,0,0,0,,I mentioned.
Dialogue: 0,0:13:44.07,0:13:45.25,Default,,0,0,0,,Now, let's go back to my Filter
Dialogue: 0,0:13:45.25,0:13:46.78,Default,,0,0,0,,It app and add network deferral
Dialogue: 0,0:13:46.78,0:13:47.96,Default,,0,0,0,,capability to the extension.
Dialogue: 0,0:13:52.32,0:13:53.54,Default,,0,0,0,,If we take another look at the
Dialogue: 0,0:13:53.54,0:13:55.17,Default,,0,0,0,,Handle Query Request method from
Dialogue: 0,0:13:55.17,0:13:57.27,Default,,0,0,0,,earlier we can now see that,
Dialogue: 0,0:13:57.31,0:13:58.53,Default,,0,0,0,,after the offline check is
Dialogue: 0,0:13:58.53,0:14:00.34,Default,,0,0,0,,performed, if the action it
Dialogue: 0,0:14:00.34,0:14:02.38,Default,,0,0,0,,returned was none and it falls
Dialogue: 0,0:14:02.38,0:14:03.66,Default,,0,0,0,,into this case of the switch
Dialogue: 0,0:14:03.66,0:14:05.38,Default,,0,0,0,,statement, we assume that this
Dialogue: 0,0:14:05.38,0:14:06.75,Default,,0,0,0,,query request could not be
Dialogue: 0,0:14:06.75,0:14:08.45,Default,,0,0,0,,handled using only an offline
Dialogue: 0,0:14:08.45,0:14:10.00,Default,,0,0,0,,check and actually needs to
Dialogue: 0,0:14:10.00,0:14:11.44,Default,,0,0,0,,consult our network server to
Dialogue: 0,0:14:11.44,0:14:11.98,Default,,0,0,0,,get an answer.
Dialogue: 0,0:14:19.05,0:14:20.51,Default,,0,0,0,,To do this our code calls the
Dialogue: 0,0:14:20.51,0:14:22.73,Default,,0,0,0,,defer query requests to network
Dialogue: 0,0:14:22.73,0:14:24.71,Default,,0,0,0,,method on our extension context
Dialogue: 0,0:14:25.51,0:14:26.77,Default,,0,0,0,,and this causes a network
Dialogue: 0,0:14:26.77,0:14:27.91,Default,,0,0,0,,request to be made on our
Dialogue: 0,0:14:27.91,0:14:29.61,Default,,0,0,0,,extension's behalf, which will
Dialogue: 0,0:14:29.61,0:14:31.10,Default,,0,0,0,,call this completion block
Dialogue: 0,0:14:31.10,0:14:32.01,Default,,0,0,0,,asynchronously when it
Dialogue: 0,0:14:32.01,0:14:32.52,Default,,0,0,0,,completes.
Dialogue: 0,0:14:33.74,0:14:35.46,Default,,0,0,0,,Inside the completion block, if
Dialogue: 0,0:14:35.46,0:14:36.47,Default,,0,0,0,,there was a response from the
Dialogue: 0,0:14:36.47,0:14:37.78,Default,,0,0,0,,network and there wasn't an
Dialogue: 0,0:14:37.78,0:14:39.69,Default,,0,0,0,,error, we use another helper
Dialogue: 0,0:14:39.69,0:14:41.69,Default,,0,0,0,,method called Action for Network
Dialogue: 0,0:14:41.69,0:14:43.57,Default,,0,0,0,,Response to translate it into an
Dialogue: 0,0:14:43.57,0:14:43.97,Default,,0,0,0,,action.
Dialogue: 0,0:14:44.57,0:14:45.51,Default,,0,0,0,,Let's jump to that method and
Dialogue: 0,0:14:45.51,0:14:45.98,Default,,0,0,0,,see what it does.
Dialogue: 0,0:14:51.05,0:14:52.24,Default,,0,0,0,,Just like with the offline check
Dialogue: 0,0:14:52.24,0:14:53.82,Default,,0,0,0,,helper method this method
Dialogue: 0,0:14:53.82,0:14:55.73,Default,,0,0,0,,defaults to returning none, but
Dialogue: 0,0:14:55.73,0:14:57.14,Default,,0,0,0,,let's customize that to parse
Dialogue: 0,0:14:57.14,0:14:58.37,Default,,0,0,0,,the response from our server.
Dialogue: 0,0:14:59.77,0:15:01.12,Default,,0,0,0,,I'll assume the server returns
Dialogue: 0,0:15:01.12,0:15:02.59,Default,,0,0,0,,JSON, although it doesn't have
Dialogue: 0,0:15:02.65,0:15:04.33,Default,,0,0,0,,to, and I'll use the new
Dialogue: 0,0:15:04.33,0:15:06.07,Default,,0,0,0,,Foundation Decoding APIs in
Dialogue: 0,0:15:06.07,0:15:07.98,Default,,0,0,0,,Swift 4 to decode the response.
Dialogue: 0,0:15:09.43,0:15:10.53,Default,,0,0,0,,I'll paste some code I've
Dialogue: 0,0:15:10.59,0:15:12.25,Default,,0,0,0,,already written to do this, but
Dialogue: 0,0:15:12.25,0:15:12.98,Default,,0,0,0,,let's briefly walk through it.
Dialogue: 0,0:15:19.55,0:15:21.41,Default,,0,0,0,,I first define a struct, which
Dialogue: 0,0:15:21.41,0:15:22.97,Default,,0,0,0,,describes the JSON format that
Dialogue: 0,0:15:22.97,0:15:26.45,Default,,0,0,0,,my server returns, then I create
Dialogue: 0,0:15:26.45,0:15:29.56,Default,,0,0,0,,a JSON decoder instance and I
Dialogue: 0,0:15:29.56,0:15:31.24,Default,,0,0,0,,use it to decode the data from
Dialogue: 0,0:15:31.24,0:15:32.86,Default,,0,0,0,,the network as an instance of
Dialogue: 0,0:15:32.86,0:15:33.35,Default,,0,0,0,,the struct.
Dialogue: 0,0:15:34.95,0:15:37.01,Default,,0,0,0,,Finally I return the action,
Dialogue: 0,0:15:37.01,0:15:38.46,Default,,0,0,0,,which was decoded, and store it
Dialogue: 0,0:15:38.46,0:15:38.98,Default,,0,0,0,,in the struct.
Dialogue: 0,0:15:43.05,0:15:44.08,Default,,0,0,0,,And if there were any errors I
Dialogue: 0,0:15:44.08,0:15:44.88,Default,,0,0,0,,handle them below.
Dialogue: 0,0:15:48.05,0:15:49.74,Default,,0,0,0,,And return the default response
Dialogue: 0,0:15:49.74,0:15:49.97,Default,,0,0,0,,of none.
Dialogue: 0,0:15:54.10,0:15:55.53,Default,,0,0,0,,And just like that we've added
Dialogue: 0,0:15:55.53,0:15:57.07,Default,,0,0,0,,network deferral support to our
Dialogue: 0,0:15:57.07,0:15:58.62,Default,,0,0,0,,message filter app extension.
Dialogue: 0,0:15:59.20,0:16:00.99,Default,,0,0,0,,So it now supports both offline
Dialogue: 0,0:16:01.19,0:16:02.73,Default,,0,0,0,,and network checking of incoming
Dialogue: 0,0:16:02.73,0:16:02.97,Default,,0,0,0,,messages.
Dialogue: 0,0:16:07.27,0:16:08.96,Default,,0,0,0,,So that's how your app can help
Dialogue: 0,0:16:08.96,0:16:10.63,Default,,0,0,0,,filter unwanted messages using
Dialogue: 0,0:16:10.63,0:16:11.66,Default,,0,0,0,,the new message filter
Dialogue: 0,0:16:11.66,0:16:13.30,Default,,0,0,0,,extensions and identity look up
Dialogue: 0,0:16:13.30,0:16:14.59,Default,,0,0,0,,framework in iOS 11.
Dialogue: 0,0:16:15.82,0:16:17.17,Default,,0,0,0,,We've tried to strike a balance
Dialogue: 0,0:16:17.17,0:16:19.14,Default,,0,0,0,,between user privacy and solving
Dialogue: 0,0:16:19.14,0:16:20.64,Default,,0,0,0,,a very pressing need our users
Dialogue: 0,0:16:20.64,0:16:20.92,Default,,0,0,0,,have.
Dialogue: 0,0:16:21.39,0:16:22.93,Default,,0,0,0,,And the result is a powerful new
Dialogue: 0,0:16:22.93,0:16:25.20,Default,,0,0,0,,API your app can use, but it is
Dialogue: 0,0:16:25.20,0:16:26.62,Default,,0,0,0,,subject to some special rules
Dialogue: 0,0:16:26.62,0:16:27.47,Default,,0,0,0,,you need to be aware of.
Dialogue: 0,0:16:28.67,0:16:30.60,Default,,0,0,0,,So please, download the new STK,
Dialogue: 0,0:16:31.08,0:16:32.37,Default,,0,0,0,,check out the new identity look
Dialogue: 0,0:16:32.37,0:16:33.91,Default,,0,0,0,,up framework, and try making a
Dialogue: 0,0:16:33.91,0:16:35.46,Default,,0,0,0,,message filter extension filter
Dialogue: 0,0:16:37.45,0:16:37.57,Default,,0,0,0,,today.
Dialogue: 0,0:16:38.58,0:16:40.09,Default,,0,0,0,,For more information see this
Dialogue: 0,0:16:40.09,0:16:41.44,Default,,0,0,0,,link for the Sessions page on
Dialogue: 0,0:16:41.44,0:16:43.07,Default,,0,0,0,,the official WWDC site.
Dialogue: 0,0:16:45.91,0:16:46.91,Default,,0,0,0,,We do have a few related
Dialogue: 0,0:16:46.91,0:16:47.81,Default,,0,0,0,,sessions and this year's
Dialogue: 0,0:16:47.81,0:16:48.85,Default,,0,0,0,,conference to mention.
Dialogue: 0,0:16:49.20,0:16:50.85,Default,,0,0,0,,For more information about
Dialogue: 0,0:16:50.85,0:16:51.98,Default,,0,0,0,,privacy practices on our
Dialogue: 0,0:16:51.98,0:16:54.17,Default,,0,0,0,,platforms see the Privacy and
Dialogue: 0,0:16:54.17,0:16:55.71,Default,,0,0,0,,Your Apps session happening in
Dialogue: 0,0:16:55.71,0:16:57.03,Default,,0,0,0,,the Executive Ballroom on
Dialogue: 0,0:16:57.03,0:16:58.31,Default,,0,0,0,,Tuesday at 11:20.
Dialogue: 0,0:16:59.71,0:17:01.03,Default,,0,0,0,,And for more info about the new
Dialogue: 0,0:17:01.03,0:17:02.69,Default,,0,0,0,,foundation and coding APIs I
Dialogue: 0,0:17:02.69,0:17:04.75,Default,,0,0,0,,showed in my demo, see the new
Dialogue: 0,0:17:04.89,0:17:06.11,Default,,0,0,0,,-- see the What's New in
Dialogue: 0,0:17:06.11,0:17:08.01,Default,,0,0,0,,Foundation session in Hall Two
Dialogue: 0,0:17:08.01,0:17:09.09,Default,,0,0,0,,on Wednesday at 11.
Dialogue: 0,0:17:10.44,0:17:13.49,Default,,0,0,0,,Also, WWDC2015 had an excellent
Dialogue: 0,0:17:13.49,0:17:15.37,Default,,0,0,0,,session called Seamless Linking
Dialogue: 0,0:17:15.37,0:17:16.82,Default,,0,0,0,,to Your App, which walked
Dialogue: 0,0:17:16.82,0:17:18.19,Default,,0,0,0,,through the associated domains
Dialogue: 0,0:17:18.19,0:17:19.42,Default,,0,0,0,,feature which message filter
Dialogue: 0,0:17:19.42,0:17:20.85,Default,,0,0,0,,extensions require when using
Dialogue: 0,0:17:20.85,0:17:21.59,Default,,0,0,0,,network deferral.
Dialogue: 0,0:17:22.20,0:17:23.40,Default,,0,0,0,,So check out that session in the
Dialogue: 0,0:17:23.40,0:17:24.91,Default,,0,0,0,,archive for details about how to
Dialogue: 0,0:17:24.91,0:17:26.43,Default,,0,0,0,,implement it in your app and on
Dialogue: 0,0:17:26.43,0:17:26.88,Default,,0,0,0,,the server.
Dialogue: 0,0:17:27.29,0:17:27.98,Default,,0,0,0,,Thanks so much for watching.
