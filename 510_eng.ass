[Script Info]
; Script generated by FFmpeg/Lavc57.89.100
ScriptType: v4.00+
PlayResX: 384
PlayResY: 288

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,16,&Hffffff,&Hffffff,&H0,&H0,0,0,0,0,100,100,0,0,1,1,0,2,10,10,10,0

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:25.11,0:00:27.39,Default,,0,0,0,,Now -- thank you very much and
Dialogue: 0,0:00:27.55,0:00:27.99,Default,,0,0,0,,welcome.
Dialogue: 0,0:00:28.07,0:00:29.45,Default,,0,0,0,,And my name is David Hayward,
Dialogue: 0,0:00:29.45,0:00:30.74,Default,,0,0,0,,and I'm really excited to talk
Dialogue: 0,0:00:30.74,0:00:32.05,Default,,0,0,0,,to you today about all the great
Dialogue: 0,0:00:32.05,0:00:33.83,Default,,0,0,0,,new features and functionality
Dialogue: 0,0:00:33.83,0:00:35.56,Default,,0,0,0,,we've added to Core Image on
Dialogue: 0,0:00:35.76,0:00:37.79,Default,,0,0,0,,iOS, macOS, and tvOS.
Dialogue: 0,0:00:39.93,0:00:41.94,Default,,0,0,0,,We have a great agenda today.
Dialogue: 0,0:00:42.04,0:00:43.50,Default,,0,0,0,,I'll be giving a brief overview
Dialogue: 0,0:00:43.50,0:00:45.55,Default,,0,0,0,,of Core Image and a summary of
Dialogue: 0,0:00:45.55,0:00:46.91,Default,,0,0,0,,the highlights of what we've
Dialogue: 0,0:00:46.91,0:00:47.59,Default,,0,0,0,,added this year.
Dialogue: 0,0:00:48.38,0:00:49.50,Default,,0,0,0,,Then after that we'll spend the
Dialogue: 0,0:00:49.50,0:00:51.27,Default,,0,0,0,,rest of the hour going into deep
Dialogue: 0,0:00:51.27,0:00:53.29,Default,,0,0,0,,details on all our new APIs and
Dialogue: 0,0:00:53.50,0:00:54.10,Default,,0,0,0,,new features.
Dialogue: 0,0:00:54.99,0:00:56.20,Default,,0,0,0,,So, with that in mind, let's
Dialogue: 0,0:00:56.47,0:00:57.09,Default,,0,0,0,,start going in.
Dialogue: 0,0:00:58.99,0:01:00.34,Default,,0,0,0,,So a brief overview of Core
Dialogue: 0,0:01:00.34,0:01:00.67,Default,,0,0,0,,Image.
Dialogue: 0,0:01:01.55,0:01:02.89,Default,,0,0,0,,In a nutshell, Core Image
Dialogue: 0,0:01:02.89,0:01:03.97,Default,,0,0,0,,provides a simple
Dialogue: 0,0:01:03.97,0:01:05.93,Default,,0,0,0,,high-performance API to apply
Dialogue: 0,0:01:06.01,0:01:06.99,Default,,0,0,0,,filters to images.
Dialogue: 0,0:01:07.44,0:01:09.03,Default,,0,0,0,,These images can be used to
Dialogue: 0,0:01:09.53,0:01:10.91,Default,,0,0,0,,adjust the color, adjust the
Dialogue: 0,0:01:10.91,0:01:12.92,Default,,0,0,0,,geometry, or perform complex
Dialogue: 0,0:01:13.00,0:01:14.52,Default,,0,0,0,,reductions or convolutions.
Dialogue: 0,0:01:16.12,0:01:18.41,Default,,0,0,0,,There are several tricks that
Dialogue: 0,0:01:18.55,0:01:19.92,Default,,0,0,0,,Core Image uses to get the best
Dialogue: 0,0:01:19.96,0:01:21.88,Default,,0,0,0,,performance out of this because
Dialogue: 0,0:01:21.88,0:01:24.70,Default,,0,0,0,,these filters can be combined in
Dialogue: 0,0:01:24.70,0:01:25.97,Default,,0,0,0,,either simple chains like this
Dialogue: 0,0:01:25.97,0:01:27.70,Default,,0,0,0,,example here or in complex
Dialogue: 0,0:01:27.70,0:01:28.18,Default,,0,0,0,,graphs.
Dialogue: 0,0:01:28.72,0:01:32.48,Default,,0,0,0,,One of the tricks Core Image
Dialogue: 0,0:01:32.56,0:01:34.11,Default,,0,0,0,,does to get great performance is
Dialogue: 0,0:01:34.11,0:01:36.19,Default,,0,0,0,,to support automatic tiling, and
Dialogue: 0,0:01:36.42,0:01:38.65,Default,,0,0,0,,this allows us to -- if an image
Dialogue: 0,0:01:38.65,0:01:40.36,Default,,0,0,0,,is too big or there's too much
Dialogue: 0,0:01:40.36,0:01:41.14,Default,,0,0,0,,memory that's going to be
Dialogue: 0,0:01:41.14,0:01:42.41,Default,,0,0,0,,required to render a render
Dialogue: 0,0:01:42.41,0:01:44.56,Default,,0,0,0,,graph, we can reduce our memory
Dialogue: 0,0:01:44.62,0:01:44.98,Default,,0,0,0,,footprint.
Dialogue: 0,0:01:48.85,0:01:50.33,Default,,0,0,0,,Another feature of this tiling,
Dialogue: 0,0:01:50.36,0:01:51.98,Default,,0,0,0,,which it means that if we're
Dialogue: 0,0:01:51.98,0:01:53.34,Default,,0,0,0,,only rendering part of an image
Dialogue: 0,0:01:53.78,0:01:55.00,Default,,0,0,0,,we can be very efficient and
Dialogue: 0,0:01:55.00,0:01:56.93,Default,,0,0,0,,only load the portion of the
Dialogue: 0,0:01:56.93,0:01:58.05,Default,,0,0,0,,input image that's needed.
Dialogue: 0,0:01:58.95,0:02:00.22,Default,,0,0,0,,So these are great performance
Dialogue: 0,0:02:00.22,0:02:01.51,Default,,0,0,0,,things that you get for free by
Dialogue: 0,0:02:01.51,0:02:02.34,Default,,0,0,0,,using Core Image.
Dialogue: 0,0:02:02.90,0:02:03.87,Default,,0,0,0,,Also when you're writing your
Dialogue: 0,0:02:03.87,0:02:06.29,Default,,0,0,0,,own kernels in Core Image, our
Dialogue: 0,0:02:06.29,0:02:08.09,Default,,0,0,0,,language extensions provide you
Dialogue: 0,0:02:08.09,0:02:09.14,Default,,0,0,0,,the ability to get this
Dialogue: 0,0:02:09.14,0:02:10.46,Default,,0,0,0,,functionality for free with very
Dialogue: 0,0:02:10.46,0:02:12.15,Default,,0,0,0,,little difficulty.
Dialogue: 0,0:02:12.65,0:02:15.98,Default,,0,0,0,,Another thing to keep in mind is
Dialogue: 0,0:02:15.98,0:02:17.14,Default,,0,0,0,,that all the filters in Core
Dialogue: 0,0:02:17.14,0:02:19.57,Default,,0,0,0,,Image may be based on one or
Dialogue: 0,0:02:20.46,0:02:21.55,Default,,0,0,0,,more kernels, either our
Dialogue: 0,0:02:21.55,0:02:22.83,Default,,0,0,0,,built-in kernels or custom
Dialogue: 0,0:02:22.83,0:02:23.33,Default,,0,0,0,,kernels.
Dialogue: 0,0:02:23.96,0:02:25.17,Default,,0,0,0,,And another trick Core Image
Dialogue: 0,0:02:25.17,0:02:27.36,Default,,0,0,0,,uses to get great performance is
Dialogue: 0,0:02:27.36,0:02:29.66,Default,,0,0,0,,to concatenate these kernels
Dialogue: 0,0:02:29.69,0:02:30.52,Default,,0,0,0,,into programs.
Dialogue: 0,0:02:30.92,0:02:32.32,Default,,0,0,0,,This allows Core Image to reduce
Dialogue: 0,0:02:32.36,0:02:33.29,Default,,0,0,0,,the number of intermediate
Dialogue: 0,0:02:33.29,0:02:35.07,Default,,0,0,0,,buffers, which allows us to
Dialogue: 0,0:02:35.07,0:02:36.53,Default,,0,0,0,,reduce our memory requirements
Dialogue: 0,0:02:36.53,0:02:37.97,Default,,0,0,0,,and also improves image quality.
Dialogue: 0,0:02:41.22,0:02:42.43,Default,,0,0,0,,So with that introduction
Dialogue: 0,0:02:42.43,0:02:43.83,Default,,0,0,0,,underway, I'm going to give a
Dialogue: 0,0:02:43.83,0:02:45.11,Default,,0,0,0,,brief description of what we've
Dialogue: 0,0:02:45.11,0:02:46.37,Default,,0,0,0,,added to Core Image this year.
Dialogue: 0,0:02:46.63,0:02:47.57,Default,,0,0,0,,It falls into three main
Dialogue: 0,0:02:47.57,0:02:48.22,Default,,0,0,0,,categories.
Dialogue: 0,0:02:48.63,0:02:49.51,Default,,0,0,0,,First, of course, is
Dialogue: 0,0:02:49.51,0:02:50.10,Default,,0,0,0,,performance.
Dialogue: 0,0:02:50.15,0:02:51.14,Default,,0,0,0,,As always, this is something
Dialogue: 0,0:02:51.14,0:02:52.12,Default,,0,0,0,,that's very important to Core
Dialogue: 0,0:02:52.12,0:02:53.45,Default,,0,0,0,,Image, and we've added some
Dialogue: 0,0:02:53.58,0:02:55.76,Default,,0,0,0,,enhancements in this area to
Dialogue: 0,0:02:55.76,0:02:57.09,Default,,0,0,0,,give your application the best
Dialogue: 0,0:02:57.09,0:02:57.63,Default,,0,0,0,,performance.
Dialogue: 0,0:02:58.20,0:03:00.93,Default,,0,0,0,,Specifically -- the next thing
Dialogue: 0,0:03:00.93,0:03:01.77,Default,,0,0,0,,I'd like to mention is that
Dialogue: 0,0:03:01.77,0:03:04.15,Default,,0,0,0,,we've also spent a lot of time
Dialogue: 0,0:03:04.15,0:03:06.98,Default,,0,0,0,,this year enhancing Core Image
Dialogue: 0,0:03:06.98,0:03:08.03,Default,,0,0,0,,to give you, the developer,
Dialogue: 0,0:03:08.03,0:03:09.40,Default,,0,0,0,,better information about how
Dialogue: 0,0:03:09.40,0:03:10.64,Default,,0,0,0,,Core Image works internally.
Dialogue: 0,0:03:11.17,0:03:13.09,Default,,0,0,0,,All of these optimizations we do
Dialogue: 0,0:03:13.09,0:03:14.34,Default,,0,0,0,,internally that I alluded to in
Dialogue: 0,0:03:14.34,0:03:15.90,Default,,0,0,0,,the previous slides, you can now
Dialogue: 0,0:03:15.90,0:03:18.00,Default,,0,0,0,,see what we're doing to achieve
Dialogue: 0,0:03:18.00,0:03:18.31,Default,,0,0,0,,these.
Dialogue: 0,0:03:20.16,0:03:21.68,Default,,0,0,0,,Thirdly, we've added a lot of
Dialogue: 0,0:03:21.68,0:03:23.19,Default,,0,0,0,,functionality, and this is to
Dialogue: 0,0:03:23.19,0:03:24.69,Default,,0,0,0,,allow your applications to get
Dialogue: 0,0:03:24.86,0:03:26.02,Default,,0,0,0,,the best access to all the new
Dialogue: 0,0:03:26.02,0:03:27.12,Default,,0,0,0,,features on our platform.
Dialogue: 0,0:03:28.86,0:03:30.39,Default,,0,0,0,,So a little bit more detail on
Dialogue: 0,0:03:30.39,0:03:30.62,Default,,0,0,0,,these.
Dialogue: 0,0:03:30.62,0:03:32.34,Default,,0,0,0,,In the area of performance, Core
Dialogue: 0,0:03:32.34,0:03:33.86,Default,,0,0,0,,Image now allows you to write CI
Dialogue: 0,0:03:33.97,0:03:35.12,Default,,0,0,0,,kernels directly in Metal.
Dialogue: 0,0:03:35.12,0:03:38.09,Default,,0,0,0,,And we also have a new API to
Dialogue: 0,0:03:38.09,0:03:39.70,Default,,0,0,0,,allow you to better render to
Dialogue: 0,0:03:39.70,0:03:40.52,Default,,0,0,0,,destinations.
Dialogue: 0,0:03:40.60,0:03:41.62,Default,,0,0,0,,We'll be talking about this in
Dialogue: 0,0:03:41.62,0:03:42.89,Default,,0,0,0,,much more detail later on in the
Dialogue: 0,0:03:42.89,0:03:43.57,Default,,0,0,0,,presentation.
Dialogue: 0,0:03:44.60,0:03:46.86,Default,,0,0,0,,In the area of information, we
Dialogue: 0,0:03:46.86,0:03:48.09,Default,,0,0,0,,have a new API that allows you
Dialogue: 0,0:03:48.09,0:03:50.12,Default,,0,0,0,,to get information about what
Dialogue: 0,0:03:50.12,0:03:51.20,Default,,0,0,0,,Core Image did for a given
Dialogue: 0,0:03:51.20,0:03:51.56,Default,,0,0,0,,render.
Dialogue: 0,0:03:52.11,0:03:53.56,Default,,0,0,0,,And also, we have some great new
Dialogue: 0,0:03:53.56,0:03:54.96,Default,,0,0,0,,Xcode Quick Look support, which
Dialogue: 0,0:03:54.96,0:03:55.50,Default,,0,0,0,,we'll show you.
Dialogue: 0,0:03:56.87,0:03:57.61,Default,,0,0,0,,And in the area of
Dialogue: 0,0:03:57.61,0:03:58.68,Default,,0,0,0,,functionality, we have some
Dialogue: 0,0:03:58.68,0:03:59.68,Default,,0,0,0,,great new stuff as well.
Dialogue: 0,0:03:59.68,0:04:00.77,Default,,0,0,0,,We have a new collection of
Dialogue: 0,0:04:00.82,0:04:02.77,Default,,0,0,0,,filters, new barcode support,
Dialogue: 0,0:04:03.07,0:04:05.75,Default,,0,0,0,,and also support for editing
Dialogue: 0,0:04:05.75,0:04:05.97,Default,,0,0,0,,depth.
Dialogue: 0,0:04:06.61,0:04:08.58,Default,,0,0,0,,I want to call out the session
Dialogue: 0,0:04:08.58,0:04:10.29,Default,,0,0,0,,that occurred earlier today on
Dialogue: 0,0:04:10.43,0:04:11.50,Default,,0,0,0,,image editing with depth.
Dialogue: 0,0:04:11.50,0:04:12.89,Default,,0,0,0,,If you didn't see it, you should
Dialogue: 0,0:04:12.89,0:04:14.01,Default,,0,0,0,,definitely go back and watch it.
Dialogue: 0,0:04:14.01,0:04:15.85,Default,,0,0,0,,It goes into great detail about
Dialogue: 0,0:04:15.85,0:04:16.86,Default,,0,0,0,,how to use Core Image to edit
Dialogue: 0,0:04:16.86,0:04:16.98,Default,,0,0,0,,depth.
Dialogue: 0,0:04:20.73,0:04:22.12,Default,,0,0,0,,So now let me talk in more
Dialogue: 0,0:04:22.12,0:04:23.31,Default,,0,0,0,,detail about the new filters
Dialogue: 0,0:04:23.31,0:04:24.48,Default,,0,0,0,,that we've added this release.
Dialogue: 0,0:04:25.24,0:04:27.69,Default,,0,0,0,,We now have 196 built-in
Dialogue: 0,0:04:27.69,0:04:30.46,Default,,0,0,0,,filters, and we've added some
Dialogue: 0,0:04:30.46,0:04:32.61,Default,,0,0,0,,that have been -- are great new
Dialogue: 0,0:04:32.61,0:04:33.20,Default,,0,0,0,,additions.
Dialogue: 0,0:04:33.63,0:04:34.82,Default,,0,0,0,,For example, some of these are
Dialogue: 0,0:04:34.82,0:04:36.59,Default,,0,0,0,,very useful when you're working
Dialogue: 0,0:04:36.59,0:04:37.26,Default,,0,0,0,,with depth data.
Dialogue: 0,0:04:37.74,0:04:39.04,Default,,0,0,0,,For example, we have convenience
Dialogue: 0,0:04:39.04,0:04:40.37,Default,,0,0,0,,filters for converting between
Dialogue: 0,0:04:40.37,0:04:41.36,Default,,0,0,0,,depth and disparity.
Dialogue: 0,0:04:41.95,0:04:43.37,Default,,0,0,0,,We also have morphological
Dialogue: 0,0:04:43.37,0:04:44.97,Default,,0,0,0,,operations, which allows you to
Dialogue: 0,0:04:45.31,0:04:46.99,Default,,0,0,0,,erode and dilate an image, which
Dialogue: 0,0:04:46.99,0:04:48.94,Default,,0,0,0,,is useful for manipulating depth
Dialogue: 0,0:04:48.94,0:04:49.61,Default,,0,0,0,,masks.
Dialogue: 0,0:04:50.27,0:04:52.12,Default,,0,0,0,,We also have convenience filters
Dialogue: 0,0:04:52.12,0:04:53.38,Default,,0,0,0,,that allow you to combine an
Dialogue: 0,0:04:53.38,0:04:54.81,Default,,0,0,0,,image with two different color
Dialogue: 0,0:04:54.81,0:04:56.19,Default,,0,0,0,,cubes based on the depth of an
Dialogue: 0,0:04:56.19,0:04:56.53,Default,,0,0,0,,image.
Dialogue: 0,0:04:58.04,0:04:59.40,Default,,0,0,0,,I also want to call out a great
Dialogue: 0,0:04:59.40,0:05:00.71,Default,,0,0,0,,new filter which we talk about
Dialogue: 0,0:05:00.71,0:05:01.88,Default,,0,0,0,,in the previous -- in the
Dialogue: 0,0:05:01.88,0:05:03.17,Default,,0,0,0,,editing session called
Dialogue: 0,0:05:03.17,0:05:04.85,Default,,0,0,0,,CIDepthBlurEffect, which allows
Dialogue: 0,0:05:04.85,0:05:06.44,Default,,0,0,0,,your application to get access
Dialogue: 0,0:05:06.44,0:05:08.52,Default,,0,0,0,,to the great depth blur effect
Dialogue: 0,0:05:08.57,0:05:10.29,Default,,0,0,0,,that we have in our camera and
Dialogue: 0,0:05:10.29,0:05:11.18,Default,,0,0,0,,photos application.
Dialogue: 0,0:05:13.02,0:05:14.98,Default,,0,0,0,,Again, I highly recommend you
Dialogue: 0,0:05:14.98,0:05:16.84,Default,,0,0,0,,watch the image editing and
Dialogue: 0,0:05:16.84,0:05:18.42,Default,,0,0,0,,depth session that was recorded
Dialogue: 0,0:05:18.42,0:05:19.70,Default,,0,0,0,,earlier today.
Dialogue: 0,0:05:21.34,0:05:23.23,Default,,0,0,0,,We also have several other new
Dialogue: 0,0:05:23.23,0:05:24.74,Default,,0,0,0,,filters based on popular
Dialogue: 0,0:05:24.74,0:05:25.29,Default,,0,0,0,,requests.
Dialogue: 0,0:05:25.51,0:05:26.83,Default,,0,0,0,,We have a filter now that allows
Dialogue: 0,0:05:26.83,0:05:28.03,Default,,0,0,0,,you to generate an image from
Dialogue: 0,0:05:28.03,0:05:29.02,Default,,0,0,0,,text, which is great for
Dialogue: 0,0:05:29.02,0:05:30.51,Default,,0,0,0,,allowing you to add watermarks
Dialogue: 0,0:05:30.51,0:05:32.45,Default,,0,0,0,,to video or other textual
Dialogue: 0,0:05:32.45,0:05:32.91,Default,,0,0,0,,overlays.
Dialogue: 0,0:05:33.55,0:05:34.89,Default,,0,0,0,,We have a filter that allows you
Dialogue: 0,0:05:34.89,0:05:36.14,Default,,0,0,0,,to compare two images in
Dialogue: 0,0:05:36.14,0:05:37.95,Default,,0,0,0,,LabDeltaE space, which is great
Dialogue: 0,0:05:38.01,0:05:39.67,Default,,0,0,0,,for seeing if your results are
Dialogue: 0,0:05:39.67,0:05:41.15,Default,,0,0,0,,what you expect or to give a
Dialogue: 0,0:05:41.15,0:05:42.49,Default,,0,0,0,,user information about how much
Dialogue: 0,0:05:42.49,0:05:43.54,Default,,0,0,0,,an image might have changed.
Dialogue: 0,0:05:44.67,0:05:47.58,Default,,0,0,0,,We also have a new bicubic
Dialogue: 0,0:05:47.58,0:05:49.22,Default,,0,0,0,,upsample, or downsample filter,
Dialogue: 0,0:05:49.65,0:05:51.67,Default,,0,0,0,,which is great for a variety of
Dialogue: 0,0:05:51.67,0:05:52.20,Default,,0,0,0,,purposes.
Dialogue: 0,0:05:53.01,0:05:54.13,Default,,0,0,0,,We also have a new way of
Dialogue: 0,0:05:54.13,0:05:55.31,Default,,0,0,0,,generating barcodes, which we'll
Dialogue: 0,0:05:55.31,0:05:56.59,Default,,0,0,0,,talk about in more detail later
Dialogue: 0,0:05:56.59,0:05:57.34,Default,,0,0,0,,in the presentation.
Dialogue: 0,0:05:59.42,0:06:00.68,Default,,0,0,0,,Lastly, in the area of filters,
Dialogue: 0,0:06:00.68,0:06:01.72,Default,,0,0,0,,we have some filters that have
Dialogue: 0,0:06:02.20,0:06:03.38,Default,,0,0,0,,been improved since our last
Dialogue: 0,0:06:03.38,0:06:03.70,Default,,0,0,0,,release.
Dialogue: 0,0:06:03.70,0:06:04.76,Default,,0,0,0,,We have several of the blend
Dialogue: 0,0:06:04.88,0:06:06.40,Default,,0,0,0,,mode filters -- now behave more
Dialogue: 0,0:06:06.84,0:06:07.95,Default,,0,0,0,,like expectations.
Dialogue: 0,0:06:07.95,0:06:10.17,Default,,0,0,0,,And we've also improved greatly
Dialogue: 0,0:06:10.35,0:06:11.88,Default,,0,0,0,,the quality of our demosaic and
Dialogue: 0,0:06:11.88,0:06:12.99,Default,,0,0,0,,noise reduction filters that are
Dialogue: 0,0:06:12.99,0:06:14.28,Default,,0,0,0,,part of our RAW pipeline.
Dialogue: 0,0:06:14.69,0:06:17.06,Default,,0,0,0,,So, as we release new cameras,
Dialogue: 0,0:06:17.06,0:06:17.93,Default,,0,0,0,,we'll be getting -- or support
Dialogue: 0,0:06:17.93,0:06:18.82,Default,,0,0,0,,for new cameras, you'll see the
Dialogue: 0,0:06:18.82,0:06:19.98,Default,,0,0,0,,improvements of that.
Dialogue: 0,0:06:24.51,0:06:26.45,Default,,0,0,0,,So that's new filters.
Dialogue: 0,0:06:26.52,0:06:28.84,Default,,0,0,0,,I'd like to bring Tony up to the
Dialogue: 0,0:06:28.84,0:06:29.98,Default,,0,0,0,,stage who'll be talking in
Dialogue: 0,0:06:29.98,0:06:32.16,Default,,0,0,0,,detail about how to write
Dialogue: 0,0:06:32.34,0:06:33.46,Default,,0,0,0,,kernels directly in Metal, which
Dialogue: 0,0:06:33.46,0:06:33.98,Default,,0,0,0,,is a great new feature.
Dialogue: 0,0:06:34.52,0:06:39.42,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:06:39.92,0:06:40.25,Default,,0,0,0,,>> All right.
Dialogue: 0,0:06:40.25,0:06:41.51,Default,,0,0,0,,Thank you David.
Dialogue: 0,0:06:42.04,0:06:42.86,Default,,0,0,0,,Good afternoon everyone.
Dialogue: 0,0:06:43.01,0:06:44.45,Default,,0,0,0,,My name is Tony, and I'm really
Dialogue: 0,0:06:44.45,0:06:45.64,Default,,0,0,0,,excited to tell you about this
Dialogue: 0,0:06:45.64,0:06:46.94,Default,,0,0,0,,great new feature we've added to
Dialogue: 0,0:06:46.94,0:06:47.44,Default,,0,0,0,,Core Image.
Dialogue: 0,0:06:48.04,0:06:49.43,Default,,0,0,0,,So let's get right to it.
Dialogue: 0,0:06:50.04,0:06:51.18,Default,,0,0,0,,So first, let's put this in a
Dialogue: 0,0:06:51.18,0:06:52.32,Default,,0,0,0,,little bit of context.
Dialogue: 0,0:06:52.46,0:06:54.01,Default,,0,0,0,,If you refer back to this simple
Dialogue: 0,0:06:54.01,0:06:55.11,Default,,0,0,0,,filter graph that you saw
Dialogue: 0,0:06:55.11,0:06:55.56,Default,,0,0,0,,earlier.
Dialogue: 0,0:06:55.56,0:06:57.23,Default,,0,0,0,,What we're talking about now are
Dialogue: 0,0:06:57.23,0:06:58.64,Default,,0,0,0,,these kernels that you see here
Dialogue: 0,0:06:58.64,0:07:00.36,Default,,0,0,0,,at the bottom, which allow you
Dialogue: 0,0:07:00.36,0:07:01.57,Default,,0,0,0,,to implement your very own
Dialogue: 0,0:07:01.57,0:07:03.12,Default,,0,0,0,,custom code that will describe
Dialogue: 0,0:07:03.12,0:07:04.54,Default,,0,0,0,,exactly how you want the pixel
Dialogue: 0,0:07:04.54,0:07:06.01,Default,,0,0,0,,to be processed on the GPU.
Dialogue: 0,0:07:06.61,0:07:09.55,Default,,0,0,0,,So previously these kernels were
Dialogue: 0,0:07:09.55,0:07:10.57,Default,,0,0,0,,written in the CIKernel
Dialogue: 0,0:07:10.57,0:07:12.50,Default,,0,0,0,,Language, which was the shading
Dialogue: 0,0:07:12.50,0:07:14.95,Default,,0,0,0,,language based on GLSL, but it
Dialogue: 0,0:07:14.95,0:07:16.59,Default,,0,0,0,,also provided some extensions
Dialogue: 0,0:07:16.91,0:07:18.47,Default,,0,0,0,,that allows Core Image to enable
Dialogue: 0,0:07:18.47,0:07:20.21,Default,,0,0,0,,automatic tiling and subregion
Dialogue: 0,0:07:20.21,0:07:20.59,Default,,0,0,0,,rendering.
Dialogue: 0,0:07:22.05,0:07:23.18,Default,,0,0,0,,For example, we had a function
Dialogue: 0,0:07:23.18,0:07:24.29,Default,,0,0,0,,called destCoord that lets you
Dialogue: 0,0:07:24.29,0:07:25.46,Default,,0,0,0,,access the coordinate of the
Dialogue: 0,0:07:25.53,0:07:26.49,Default,,0,0,0,,destination that you are about
Dialogue: 0,0:07:26.49,0:07:28.07,Default,,0,0,0,,to render to regardless of
Dialogue: 0,0:07:28.07,0:07:28.99,Default,,0,0,0,,whether you're just rendering a
Dialogue: 0,0:07:28.99,0:07:30.49,Default,,0,0,0,,subportion of the output or if
Dialogue: 0,0:07:30.49,0:07:31.57,Default,,0,0,0,,the output image is tiled.
Dialogue: 0,0:07:33.03,0:07:34.28,Default,,0,0,0,,We also have a couple of
Dialogue: 0,0:07:34.28,0:07:34.87,Default,,0,0,0,,functions called
Dialogue: 0,0:07:34.87,0:07:37.20,Default,,0,0,0,,samplerTransform and sample that
Dialogue: 0,0:07:37.20,0:07:38.35,Default,,0,0,0,,let you sample from an input
Dialogue: 0,0:07:38.35,0:07:40.04,Default,,0,0,0,,image regardless of whether the
Dialogue: 0,0:07:40.04,0:07:41.07,Default,,0,0,0,,input image is tiled.
Dialogue: 0,0:07:41.54,0:07:43.44,Default,,0,0,0,,So again, as David mentioned
Dialogue: 0,0:07:43.44,0:07:44.56,Default,,0,0,0,,earlier, this provides a nice
Dialogue: 0,0:07:44.56,0:07:46.09,Default,,0,0,0,,abstraction to tiling so that
Dialogue: 0,0:07:46.09,0:07:46.93,Default,,0,0,0,,you don't have to worry about
Dialogue: 0,0:07:46.93,0:07:48.35,Default,,0,0,0,,that when writing your kernels.
Dialogue: 0,0:07:50.70,0:07:52.06,Default,,0,0,0,,So once these kernels are
Dialogue: 0,0:07:52.06,0:07:53.01,Default,,0,0,0,,written, they are then
Dialogue: 0,0:07:53.01,0:07:54.79,Default,,0,0,0,,translated, concatenated
Dialogue: 0,0:07:54.79,0:07:55.95,Default,,0,0,0,,together as much as possible
Dialogue: 0,0:07:55.95,0:07:57.48,Default,,0,0,0,,with other kernels, and then
Dialogue: 0,0:07:57.48,0:07:59.22,Default,,0,0,0,,compiled at runtime to either
Dialogue: 0,0:07:59.22,0:08:00.46,Default,,0,0,0,,Metal or GLSL.
Dialogue: 0,0:08:01.69,0:08:03.58,Default,,0,0,0,,Now for a rich language like
Dialogue: 0,0:08:03.58,0:08:05.79,Default,,0,0,0,,Metal, the compilation phase can
Dialogue: 0,0:08:05.79,0:08:07.15,Default,,0,0,0,,actually take quite a long time
Dialogue: 0,0:08:07.15,0:08:07.58,Default,,0,0,0,,at runtime.
Dialogue: 0,0:08:07.58,0:08:09.36,Default,,0,0,0,,And, in fact, in the worst case,
Dialogue: 0,0:08:09.36,0:08:10.45,Default,,0,0,0,,if you're just rendering a very
Dialogue: 0,0:08:10.45,0:08:12.09,Default,,0,0,0,,small input image - sorry,
Dialogue: 0,0:08:12.09,0:08:13.46,Default,,0,0,0,,rendering a very small image or
Dialogue: 0,0:08:13.46,0:08:14.55,Default,,0,0,0,,a relatively simple filter
Dialogue: 0,0:08:14.55,0:08:16.24,Default,,0,0,0,,graph, most of that time could
Dialogue: 0,0:08:16.24,0:08:17.66,Default,,0,0,0,,actually be spent compiling
Dialogue: 0,0:08:17.66,0:08:18.78,Default,,0,0,0,,versus the actual rendering.
Dialogue: 0,0:08:19.39,0:08:21.65,Default,,0,0,0,,So to show you an example of
Dialogue: 0,0:08:21.65,0:08:23.79,Default,,0,0,0,,that, here's a case where on the
Dialogue: 0,0:08:23.79,0:08:25.21,Default,,0,0,0,,very first render before any of
Dialogue: 0,0:08:25.21,0:08:26.61,Default,,0,0,0,,the compilation has been cached,
Dialogue: 0,0:08:27.15,0:08:28.12,Default,,0,0,0,,you can see there's a lot of
Dialogue: 0,0:08:28.12,0:08:29.38,Default,,0,0,0,,time spent compiling versus
Dialogue: 0,0:08:29.38,0:08:29.80,Default,,0,0,0,,rendering.
Dialogue: 0,0:08:29.95,0:08:31.61,Default,,0,0,0,,So if we step through these
Dialogue: 0,0:08:32.16,0:08:33.71,Default,,0,0,0,,stage by stage, the first step
Dialogue: 0,0:08:33.71,0:08:35.13,Default,,0,0,0,,is to translate the CIKernels
Dialogue: 0,0:08:35.13,0:08:36.00,Default,,0,0,0,,shown in blue.
Dialogue: 0,0:08:36.54,0:08:37.48,Default,,0,0,0,,And the second stage is to
Dialogue: 0,0:08:37.48,0:08:38.73,Default,,0,0,0,,concatenate the CIKernels.
Dialogue: 0,0:08:39.04,0:08:40.80,Default,,0,0,0,,And then we go through a phase
Dialogue: 0,0:08:40.80,0:08:42.35,Default,,0,0,0,,to compile the CIKernels to an
Dialogue: 0,0:08:42.35,0:08:43.62,Default,,0,0,0,,intermediate representation,
Dialogue: 0,0:08:43.76,0:08:45.05,Default,,0,0,0,,which is independent of the
Dialogue: 0,0:08:45.05,0:08:45.42,Default,,0,0,0,,device.
Dialogue: 0,0:08:45.49,0:08:47.03,Default,,0,0,0,,And then there's a final stage
Dialogue: 0,0:08:47.03,0:08:50.96,Default,,0,0,0,,to actually compile that IR to
Dialogue: 0,0:08:50.96,0:08:53.39,Default,,0,0,0,,GPU code to be executed on the
Dialogue: 0,0:08:53.39,0:08:53.91,Default,,0,0,0,,GPU.
Dialogue: 0,0:08:55.22,0:08:56.65,Default,,0,0,0,,So the problem here is that
Dialogue: 0,0:08:56.65,0:08:59.25,Default,,0,0,0,,concatenating CIKernels is
Dialogue: 0,0:08:59.25,0:09:00.28,Default,,0,0,0,,something that has been done
Dialogue: 0,0:09:00.28,0:09:04.37,Default,,0,0,0,,dynamically at runtime, so what
Dialogue: 0,0:09:04.37,0:09:06.17,Default,,0,0,0,,if we were to allow that stage
Dialogue: 0,0:09:06.17,0:09:07.94,Default,,0,0,0,,to happen after the compilation?
Dialogue: 0,0:09:08.88,0:09:10.69,Default,,0,0,0,,So what that allows us to do is
Dialogue: 0,0:09:10.69,0:09:12.08,Default,,0,0,0,,hoist up that really expensive
Dialogue: 0,0:09:12.08,0:09:14.20,Default,,0,0,0,,compilation at build-time and
Dialogue: 0,0:09:14.20,0:09:15.68,Default,,0,0,0,,therefore leaving behind only
Dialogue: 0,0:09:15.68,0:09:17.14,Default,,0,0,0,,the work that needs to be done
Dialogue: 0,0:09:17.49,0:09:18.18,Default,,0,0,0,,at runtime.
Dialogue: 0,0:09:18.81,0:09:20.17,Default,,0,0,0,,So, as you can see, this is now
Dialogue: 0,0:09:20.17,0:09:21.67,Default,,0,0,0,,a much more efficient use of the
Dialogue: 0,0:09:21.67,0:09:23.88,Default,,0,0,0,,CPU, not to mention lower power
Dialogue: 0,0:09:23.88,0:09:24.43,Default,,0,0,0,,consumption.
Dialogue: 0,0:09:25.00,0:09:27.22,Default,,0,0,0,,So I'm pleased to say that this
Dialogue: 0,0:09:27.22,0:09:29.26,Default,,0,0,0,,is now possible in Core Image
Dialogue: 0,0:09:29.26,0:09:30.54,Default,,0,0,0,,and that's by writing CIKernels
Dialogue: 0,0:09:30.54,0:09:31.42,Default,,0,0,0,,directly in Metal.
Dialogue: 0,0:09:31.92,0:09:34.15,Default,,0,0,0,,And to make this happen required
Dialogue: 0,0:09:34.15,0:09:35.50,Default,,0,0,0,,some really close collaboration
Dialogue: 0,0:09:35.50,0:09:36.66,Default,,0,0,0,,with both the Metal Framework
Dialogue: 0,0:09:36.66,0:09:37.87,Default,,0,0,0,,Team and the Metal Compiler
Dialogue: 0,0:09:37.87,0:09:38.03,Default,,0,0,0,,Team.
Dialogue: 0,0:09:38.03,0:09:39.39,Default,,0,0,0,,And we think this is going to
Dialogue: 0,0:09:39.39,0:09:40.70,Default,,0,0,0,,open up doors to some really
Dialogue: 0,0:09:40.70,0:09:41.72,Default,,0,0,0,,exciting new opportunities.
Dialogue: 0,0:09:43.33,0:09:44.26,Default,,0,0,0,,But first, let me just highlight
Dialogue: 0,0:09:44.26,0:09:45.55,Default,,0,0,0,,some of the key benefits that
Dialogue: 0,0:09:45.55,0:09:47.18,Default,,0,0,0,,you're already getting today.
Dialogue: 0,0:09:48.28,0:09:51.06,Default,,0,0,0,,So, as you saw earlier, now the
Dialogue: 0,0:09:51.06,0:09:52.47,Default,,0,0,0,,CIKernels can be precompiled
Dialogue: 0,0:09:52.47,0:09:54.53,Default,,0,0,0,,offline at build-time.
Dialogue: 0,0:09:54.67,0:09:55.96,Default,,0,0,0,,And along with that, you can get
Dialogue: 0,0:09:55.96,0:09:57.06,Default,,0,0,0,,some really nice error
Dialogue: 0,0:09:57.06,0:09:57.84,Default,,0,0,0,,diagnostics.
Dialogue: 0,0:09:58.16,0:09:59.27,Default,,0,0,0,,So if you had some typo or a
Dialogue: 0,0:09:59.27,0:10:00.38,Default,,0,0,0,,mistake in your kernel, you can
Dialogue: 0,0:10:00.38,0:10:01.82,Default,,0,0,0,,see that directly in Xcode,
Dialogue: 0,0:10:02.24,0:10:03.64,Default,,0,0,0,,without having to wait for the
Dialogue: 0,0:10:03.64,0:10:05.34,Default,,0,0,0,,runtime to detect them.
Dialogue: 0,0:10:06.32,0:10:08.24,Default,,0,0,0,,Second is now you have access to
Dialogue: 0,0:10:08.24,0:10:09.60,Default,,0,0,0,,much more modern language
Dialogue: 0,0:10:09.60,0:10:11.46,Default,,0,0,0,,features since Metal is a
Dialogue: 0,0:10:11.46,0:10:12.80,Default,,0,0,0,,relatively new language that was
Dialogue: 0,0:10:12.80,0:10:13.77,Default,,0,0,0,,based on C++.
Dialogue: 0,0:10:13.84,0:10:17.54,Default,,0,0,0,,And I want to stress that with
Dialogue: 0,0:10:17.74,0:10:19.11,Default,,0,0,0,,writing CIKernels in Metal, you
Dialogue: 0,0:10:19.32,0:10:20.98,Default,,0,0,0,,still get all the benefits such
Dialogue: 0,0:10:20.98,0:10:22.50,Default,,0,0,0,,as concatenation and tiling,
Dialogue: 0,0:10:22.60,0:10:23.65,Default,,0,0,0,,which has been the cornerstone
Dialogue: 0,0:10:23.65,0:10:24.84,Default,,0,0,0,,of our Core Image framework for
Dialogue: 0,0:10:24.84,0:10:25.25,Default,,0,0,0,,many years.
Dialogue: 0,0:10:25.59,0:10:26.78,Default,,0,0,0,,So nothing is compromised by
Dialogue: 0,0:10:26.78,0:10:28.36,Default,,0,0,0,,writing CIKernels in this new
Dialogue: 0,0:10:28.36,0:10:28.61,Default,,0,0,0,,way.
Dialogue: 0,0:10:29.17,0:10:31.35,Default,,0,0,0,,And furthermore, these new
Dialogue: 0,0:10:31.35,0:10:33.80,Default,,0,0,0,,CIKernels in Metal can also be
Dialogue: 0,0:10:33.80,0:10:34.76,Default,,0,0,0,,mixed with traditional
Dialogue: 0,0:10:34.76,0:10:35.39,Default,,0,0,0,,CIKernels.
Dialogue: 0,0:10:35.69,0:10:37.50,Default,,0,0,0,,So [inaudible] can contain
Dialogue: 0,0:10:37.50,0:10:39.66,Default,,0,0,0,,either traditional kernels or
Dialogue: 0,0:10:39.66,0:10:40.62,Default,,0,0,0,,kernels written in Metal.
Dialogue: 0,0:10:40.88,0:10:42.47,Default,,0,0,0,,And that allows this feature to
Dialogue: 0,0:10:42.77,0:10:45.44,Default,,0,0,0,,be maximally compatible with
Dialogue: 0,0:10:45.57,0:10:46.77,Default,,0,0,0,,your existing application.
Dialogue: 0,0:10:47.34,0:10:50.04,Default,,0,0,0,,And, as you would expect, this
Dialogue: 0,0:10:50.20,0:10:51.32,Default,,0,0,0,,feature is supported in a wide
Dialogue: 0,0:10:51.32,0:10:52.90,Default,,0,0,0,,variety of platforms, namely iOS
Dialogue: 0,0:10:52.90,0:10:56.07,Default,,0,0,0,,for A8 or newer devices, as well
Dialogue: 0,0:10:56.07,0:10:59.51,Default,,0,0,0,,as macOS and tvOS.
Dialogue: 0,0:10:59.69,0:11:01.14,Default,,0,0,0,,So now let's take a look at how
Dialogue: 0,0:11:01.14,0:11:02.52,Default,,0,0,0,,we go about creating these Metal
Dialogue: 0,0:11:02.52,0:11:03.14,Default,,0,0,0,,CIKernels.
Dialogue: 0,0:11:03.66,0:11:05.89,Default,,0,0,0,,The first step is to write your
Dialogue: 0,0:11:05.89,0:11:07.47,Default,,0,0,0,,CIKernel in a Metal shader file.
Dialogue: 0,0:11:09.32,0:11:11.37,Default,,0,0,0,,Then once you have that CIKernel
Dialogue: 0,0:11:11.37,0:11:12.95,Default,,0,0,0,,implemented, the second step is
Dialogue: 0,0:11:12.98,0:11:14.24,Default,,0,0,0,,to compile and link the Metal
Dialogue: 0,0:11:14.24,0:11:16.30,Default,,0,0,0,,shader file in order to generate
Dialogue: 0,0:11:16.30,0:11:17.62,Default,,0,0,0,,a Metal library that can then be
Dialogue: 0,0:11:17.62,0:11:18.66,Default,,0,0,0,,loaded at runtime.
Dialogue: 0,0:11:19.24,0:11:21.70,Default,,0,0,0,,And then a final step is to just
Dialogue: 0,0:11:22.27,0:11:24.00,Default,,0,0,0,,initialize the CIKernel with any
Dialogue: 0,0:11:24.00,0:11:25.07,Default,,0,0,0,,function from that Metal
Dialogue: 0,0:11:25.07,0:11:25.45,Default,,0,0,0,,library.
Dialogue: 0,0:11:25.45,0:11:28.93,Default,,0,0,0,,So let's take a closer look at
Dialogue: 0,0:11:28.93,0:11:29.92,Default,,0,0,0,,the first step, writing a
Dialogue: 0,0:11:29.92,0:11:32.47,Default,,0,0,0,,CIKernel in Metal.
Dialogue: 0,0:11:33.22,0:11:34.29,Default,,0,0,0,,So to do that, I'd like to
Dialogue: 0,0:11:34.29,0:11:35.27,Default,,0,0,0,,introduce you to our new
Dialogue: 0,0:11:35.27,0:11:36.59,Default,,0,0,0,,CIKernal Metal library.
Dialogue: 0,0:11:37.09,0:11:38.35,Default,,0,0,0,,And what that is is basically a
Dialogue: 0,0:11:38.35,0:11:40.05,Default,,0,0,0,,header file that contains our
Dialogue: 0,0:11:40.05,0:11:41.81,Default,,0,0,0,,CIKernel extensions to the Metal
Dialogue: 0,0:11:41.81,0:11:42.62,Default,,0,0,0,,shading language.
Dialogue: 0,0:11:42.94,0:11:44.88,Default,,0,0,0,,So namely we have some new data
Dialogue: 0,0:11:44.88,0:11:47.54,Default,,0,0,0,,types, such as destination,
Dialogue: 0,0:11:47.64,0:11:48.91,Default,,0,0,0,,sampler, and sample.
Dialogue: 0,0:11:49.54,0:11:51.22,Default,,0,0,0,,Destination lets you access all
Dialogue: 0,0:11:51.22,0:11:52.39,Default,,0,0,0,,the information that you need
Dialogue: 0,0:11:52.71,0:11:54.51,Default,,0,0,0,,that pertains to the output.
Dialogue: 0,0:11:55.05,0:11:56.51,Default,,0,0,0,,And sampler lets you access all
Dialogue: 0,0:11:56.51,0:11:57.85,Default,,0,0,0,,the information that pertains to
Dialogue: 0,0:11:57.85,0:11:58.56,Default,,0,0,0,,the input image.
Dialogue: 0,0:11:59.14,0:12:00.92,Default,,0,0,0,,And sample is a representation
Dialogue: 0,0:12:00.92,0:12:02.87,Default,,0,0,0,,of a single-color sample from an
Dialogue: 0,0:12:02.87,0:12:03.48,Default,,0,0,0,,input image.
Dialogue: 0,0:12:04.77,0:12:05.86,Default,,0,0,0,,And along with these types we
Dialogue: 0,0:12:05.86,0:12:07.14,Default,,0,0,0,,also have some convenience
Dialogue: 0,0:12:07.14,0:12:08.34,Default,,0,0,0,,functions that are very useful
Dialogue: 0,0:12:08.34,0:12:09.26,Default,,0,0,0,,for image processing.
Dialogue: 0,0:12:10.67,0:12:11.78,Default,,0,0,0,,For example, you can do
Dialogue: 0,0:12:11.78,0:12:13.85,Default,,0,0,0,,premulitply and unpremultiply,
Dialogue: 0,0:12:13.93,0:12:14.99,Default,,0,0,0,,as well as some color
Dialogue: 0,0:12:14.99,0:12:16.32,Default,,0,0,0,,conversions between different
Dialogue: 0,0:12:16.47,0:12:17.20,Default,,0,0,0,,color spaces.
Dialogue: 0,0:12:17.62,0:12:19.82,Default,,0,0,0,,So these new extensions are
Dialogue: 0,0:12:20.20,0:12:21.37,Default,,0,0,0,,semantically the same as they
Dialogue: 0,0:12:21.37,0:12:22.59,Default,,0,0,0,,used to be in the CIKernel
Dialogue: 0,0:12:22.59,0:12:23.06,Default,,0,0,0,,language.
Dialogue: 0,0:12:23.54,0:12:25.69,Default,,0,0,0,,There's just some slight syntax
Dialogue: 0,0:12:25.88,0:12:27.50,Default,,0,0,0,,differences that pertains to the
Dialogue: 0,0:12:27.50,0:12:29.12,Default,,0,0,0,,destination and sampler types,
Dialogue: 0,0:12:29.84,0:12:30.57,Default,,0,0,0,,so let me show you that in a
Dialogue: 0,0:12:30.57,0:12:31.35,Default,,0,0,0,,little bit more detail.
Dialogue: 0,0:12:32.10,0:12:34.43,Default,,0,0,0,,So here's a snippet of what our
Dialogue: 0,0:12:34.56,0:12:35.79,Default,,0,0,0,,CIKernel Metal library looks
Dialogue: 0,0:12:35.79,0:12:35.98,Default,,0,0,0,,like.
Dialogue: 0,0:12:36.60,0:12:38.71,Default,,0,0,0,,It is called CIKernelMetalLib.h,
Dialogue: 0,0:12:39.28,0:12:40.69,Default,,0,0,0,,and all our extensions are
Dialogue: 0,0:12:40.81,0:12:42.32,Default,,0,0,0,,declared inside a namespace
Dialogue: 0,0:12:42.32,0:12:43.91,Default,,0,0,0,,called coreimage to avoid any
Dialogue: 0,0:12:43.91,0:12:44.75,Default,,0,0,0,,conflicts with Metal.
Dialogue: 0,0:12:45.33,0:12:47.39,Default,,0,0,0,,So the first step that we have
Dialogue: 0,0:12:47.39,0:12:48.80,Default,,0,0,0,,defined is called a destination
Dialogue: 0,0:12:48.92,0:12:50.20,Default,,0,0,0,,and it has a method that lets
Dialogue: 0,0:12:50.20,0:12:51.46,Default,,0,0,0,,you access the coordinate of the
Dialogue: 0,0:12:51.46,0:12:52.11,Default,,0,0,0,,destination.
Dialogue: 0,0:12:53.08,0:12:54.13,Default,,0,0,0,,Previously, if you were writing
Dialogue: 0,0:12:54.18,0:12:55.68,Default,,0,0,0,,CIKernels in the CIKernel
Dialogue: 0,0:12:55.68,0:12:57.78,Default,,0,0,0,,language, you would have done
Dialogue: 0,0:12:57.78,0:12:59.50,Default,,0,0,0,,that via a global function
Dialogue: 0,0:12:59.50,0:13:00.28,Default,,0,0,0,,called destCoord.
Dialogue: 0,0:13:00.61,0:13:01.35,Default,,0,0,0,,But now, if you're writing
Dialogue: 0,0:13:01.35,0:13:02.93,Default,,0,0,0,,kernels in Metal, you need to
Dialogue: 0,0:13:02.93,0:13:04.62,Default,,0,0,0,,declare this type as an argument
Dialogue: 0,0:13:04.62,0:13:05.65,Default,,0,0,0,,to your kernel in order to
Dialogue: 0,0:13:05.65,0:13:06.51,Default,,0,0,0,,access that method.
Dialogue: 0,0:13:07.05,0:13:09.40,Default,,0,0,0,,And then the second type we have
Dialogue: 0,0:13:09.40,0:13:10.64,Default,,0,0,0,,to find is the sampler.
Dialogue: 0,0:13:11.14,0:13:12.23,Default,,0,0,0,,And this has all the same
Dialogue: 0,0:13:12.23,0:13:13.87,Default,,0,0,0,,methods that used to exist as
Dialogue: 0,0:13:13.87,0:13:15.33,Default,,0,0,0,,global functions, but they are
Dialogue: 0,0:13:15.33,0:13:17.33,Default,,0,0,0,,now implemented as member
Dialogue: 0,0:13:17.33,0:13:18.66,Default,,0,0,0,,functions on the sampler type.
Dialogue: 0,0:13:19.23,0:13:22.44,Default,,0,0,0,,So to give you a nice summary of
Dialogue: 0,0:13:22.44,0:13:23.99,Default,,0,0,0,,all that, here's a table that
Dialogue: 0,0:13:23.99,0:13:25.50,Default,,0,0,0,,shows you the syntax that used
Dialogue: 0,0:13:25.50,0:13:28.17,Default,,0,0,0,,to exist in CIKernel language
Dialogue: 0,0:13:28.17,0:13:29.80,Default,,0,0,0,,versus the syntax that is now
Dialogue: 0,0:13:29.80,0:13:31.00,Default,,0,0,0,,available in Metal.
Dialogue: 0,0:13:31.60,0:13:32.42,Default,,0,0,0,,And, as you can see, in the
Dialogue: 0,0:13:32.42,0:13:34.45,Default,,0,0,0,,CIKernel language, those are all
Dialogue: 0,0:13:34.45,0:13:35.64,Default,,0,0,0,,implemented as global functions,
Dialogue: 0,0:13:35.76,0:13:37.18,Default,,0,0,0,,but now with Metal, those are
Dialogue: 0,0:13:37.18,0:13:38.62,Default,,0,0,0,,all member functions on their
Dialogue: 0,0:13:38.62,0:13:39.47,Default,,0,0,0,,appropriate types.
Dialogue: 0,0:13:40.05,0:13:40.89,Default,,0,0,0,,So we think that with the new
Dialogue: 0,0:13:40.89,0:13:41.85,Default,,0,0,0,,syntax they'll allow you to
Dialogue: 0,0:13:41.85,0:13:43.33,Default,,0,0,0,,write your code to be more
Dialogue: 0,0:13:43.48,0:13:44.82,Default,,0,0,0,,concise and easier to read.
Dialogue: 0,0:13:46.77,0:13:48.00,Default,,0,0,0,,But for sake of portability, we
Dialogue: 0,0:13:48.00,0:13:49.55,Default,,0,0,0,,did include the global sampler
Dialogue: 0,0:13:49.55,0:13:51.34,Default,,0,0,0,,functions in our header, which
Dialogue: 0,0:13:51.34,0:13:52.89,Default,,0,0,0,,are merely just wrappers to the
Dialogue: 0,0:13:52.89,0:13:53.51,Default,,0,0,0,,new syntax.
Dialogue: 0,0:13:53.59,0:13:54.75,Default,,0,0,0,,So that'll help minimize the
Dialogue: 0,0:13:54.75,0:13:55.86,Default,,0,0,0,,amount of code changes that you
Dialogue: 0,0:13:55.86,0:13:57.02,Default,,0,0,0,,need to make if you're importing
Dialogue: 0,0:13:57.02,0:13:58.33,Default,,0,0,0,,from existing kernels to Metal.
Dialogue: 0,0:13:58.93,0:14:01.79,Default,,0,0,0,,So now let's take a look at some
Dialogue: 0,0:14:01.79,0:14:03.23,Default,,0,0,0,,examples of CIKernels in Metal.
Dialogue: 0,0:14:03.32,0:14:04.90,Default,,0,0,0,,The first one we're going to
Dialogue: 0,0:14:04.97,0:14:06.46,Default,,0,0,0,,look at is a warp kernel.
Dialogue: 0,0:14:06.63,0:14:08.46,Default,,0,0,0,,And as with all Metal shaders,
Dialogue: 0,0:14:08.46,0:14:09.16,Default,,0,0,0,,the first thing you need to
Dialogue: 0,0:14:09.16,0:14:10.76,Default,,0,0,0,,include is the metal underscore
Dialogue: 0,0:14:10.76,0:14:12.78,Default,,0,0,0,,stdlib, but for CIKernels you
Dialogue: 0,0:14:12.78,0:14:14.27,Default,,0,0,0,,need to include our Metal kernel
Dialogue: 0,0:14:14.27,0:14:15.90,Default,,0,0,0,,library, and that can be done by
Dialogue: 0,0:14:15.90,0:14:17.05,Default,,0,0,0,,just including an umbrella
Dialogue: 0,0:14:17.10,0:14:20.17,Default,,0,0,0,,header CoreImage.h. Then the
Dialogue: 0,0:14:20.41,0:14:22.69,Default,,0,0,0,,next step is to implement all
Dialogue: 0,0:14:22.69,0:14:25.08,Default,,0,0,0,,your kernels inside the extern C
Dialogue: 0,0:14:25.08,0:14:29.23,Default,,0,0,0,,enclosure, and what that allows
Dialogue: 0,0:14:29.23,0:14:30.28,Default,,0,0,0,,is for the kernel to be
Dialogue: 0,0:14:30.28,0:14:31.89,Default,,0,0,0,,accessible at runtime by name.
Dialogue: 0,0:14:32.96,0:14:35.33,Default,,0,0,0,,So here we have a simple kernel
Dialogue: 0,0:14:35.33,0:14:36.40,Default,,0,0,0,,called myWarp.
Dialogue: 0,0:14:36.62,0:14:37.97,Default,,0,0,0,,And all it takes is a single
Dialogue: 0,0:14:37.97,0:14:39.61,Default,,0,0,0,,argument, a destination type,
Dialogue: 0,0:14:40.09,0:14:41.25,Default,,0,0,0,,and from that destination you
Dialogue: 0,0:14:41.25,0:14:42.44,Default,,0,0,0,,can access the coordinate that
Dialogue: 0,0:14:42.44,0:14:43.94,Default,,0,0,0,,you're about to render to and
Dialogue: 0,0:14:43.94,0:14:45.21,Default,,0,0,0,,apply various geometric
Dialogue: 0,0:14:45.21,0:14:46.35,Default,,0,0,0,,transformations that you want to
Dialogue: 0,0:14:46.35,0:14:46.50,Default,,0,0,0,,it.
Dialogue: 0,0:14:46.76,0:14:47.91,Default,,0,0,0,,And then return the result.
Dialogue: 0,0:14:47.91,0:14:50.04,Default,,0,0,0,,And for sake of comparison,
Dialogue: 0,0:14:50.17,0:14:51.46,Default,,0,0,0,,here's that same warp kernel
Dialogue: 0,0:14:51.46,0:14:52.59,Default,,0,0,0,,that was implemented in the
Dialogue: 0,0:14:52.59,0:14:53.55,Default,,0,0,0,,CIKernel language.
Dialogue: 0,0:14:54.13,0:14:56.28,Default,,0,0,0,,So you can see they're almost
Dialogue: 0,0:14:56.28,0:14:58.17,Default,,0,0,0,,identical minus some minor
Dialogue: 0,0:14:58.53,0:14:59.51,Default,,0,0,0,,syntax differences.
Dialogue: 0,0:14:59.90,0:15:00.89,Default,,0,0,0,,But semantically they are the
Dialogue: 0,0:15:00.89,0:15:02.31,Default,,0,0,0,,same, and at the end of the day
Dialogue: 0,0:15:02.31,0:15:04.16,Default,,0,0,0,,compiled to the exact same GPU
Dialogue: 0,0:15:04.75,0:15:04.85,Default,,0,0,0,,code.
Dialogue: 0,0:15:06.04,0:15:07.59,Default,,0,0,0,,The second example here is a
Dialogue: 0,0:15:07.59,0:15:08.25,Default,,0,0,0,,color kernel.
Dialogue: 0,0:15:08.70,0:15:09.93,Default,,0,0,0,,And for the most part it looks
Dialogue: 0,0:15:09.93,0:15:11.38,Default,,0,0,0,,very similar, the only
Dialogue: 0,0:15:11.38,0:15:12.40,Default,,0,0,0,,difference is now we have a
Dialogue: 0,0:15:12.40,0:15:14.62,Default,,0,0,0,,kernel called myColor, and what
Dialogue: 0,0:15:14.62,0:15:16.07,Default,,0,0,0,,it takes is a single sample as
Dialogue: 0,0:15:16.07,0:15:16.44,Default,,0,0,0,,input.
Dialogue: 0,0:15:16.55,0:15:18.41,Default,,0,0,0,,From that sample, you can apply
Dialogue: 0,0:15:18.41,0:15:19.84,Default,,0,0,0,,various color transformations
Dialogue: 0,0:15:19.84,0:15:21.29,Default,,0,0,0,,that you want on it and again
Dialogue: 0,0:15:21.29,0:15:22.08,Default,,0,0,0,,return the result.
Dialogue: 0,0:15:23.62,0:15:25.34,Default,,0,0,0,,Here again is that same color
Dialogue: 0,0:15:25.34,0:15:26.64,Default,,0,0,0,,kernel implemented in the
Dialogue: 0,0:15:26.70,0:15:27.69,Default,,0,0,0,,CIKernel language.
Dialogue: 0,0:15:28.23,0:15:31.15,Default,,0,0,0,,And then the last example I want
Dialogue: 0,0:15:31.15,0:15:32.92,Default,,0,0,0,,to show you is a general kernel,
Dialogue: 0,0:15:33.47,0:15:35.03,Default,,0,0,0,,which you can do if you can't
Dialogue: 0,0:15:35.03,0:15:36.29,Default,,0,0,0,,implement your kernel as either
Dialogue: 0,0:15:36.29,0:15:37.25,Default,,0,0,0,,a warp or a color.
Dialogue: 0,0:15:37.94,0:15:39.10,Default,,0,0,0,,And so here we have a kernel
Dialogue: 0,0:15:39.10,0:15:39.91,Default,,0,0,0,,called myKernel.
Dialogue: 0,0:15:39.91,0:15:41.76,Default,,0,0,0,,And it takes a single input,
Dialogue: 0,0:15:42.05,0:15:44.01,Default,,0,0,0,,which is a sampler type, and
Dialogue: 0,0:15:44.01,0:15:45.00,Default,,0,0,0,,from that sampler, you can
Dialogue: 0,0:15:45.00,0:15:46.52,Default,,0,0,0,,sample anywhere in the input
Dialogue: 0,0:15:46.52,0:15:48.18,Default,,0,0,0,,image and take as many samples
Dialogue: 0,0:15:48.18,0:15:48.70,Default,,0,0,0,,as you need.
Dialogue: 0,0:15:49.26,0:15:50.02,Default,,0,0,0,,And again, do something
Dialogue: 0,0:15:50.02,0:15:51.31,Default,,0,0,0,,interesting with it and return
Dialogue: 0,0:15:51.31,0:15:51.78,Default,,0,0,0,,the result.
Dialogue: 0,0:15:52.95,0:15:54.26,Default,,0,0,0,,And one more time, here is that
Dialogue: 0,0:15:54.30,0:15:56.69,Default,,0,0,0,,same CIKernel written in the old
Dialogue: 0,0:15:56.69,0:15:57.64,Default,,0,0,0,,CIKernal language.
Dialogue: 0,0:15:58.23,0:16:01.78,Default,,0,0,0,,So now that you have a CIKernel
Dialogue: 0,0:16:01.78,0:16:02.74,Default,,0,0,0,,implemented in Metal shader
Dialogue: 0,0:16:02.74,0:16:04.31,Default,,0,0,0,,file, the next step is to
Dialogue: 0,0:16:04.31,0:16:05.56,Default,,0,0,0,,compile and link the Metal
Dialogue: 0,0:16:05.56,0:16:05.88,Default,,0,0,0,,shader.
Dialogue: 0,0:16:07.86,0:16:08.73,Default,,0,0,0,,So, for those who have
Dialogue: 0,0:16:08.73,0:16:10.08,Default,,0,0,0,,experience writing Metal
Dialogue: 0,0:16:10.08,0:16:11.42,Default,,0,0,0,,shaders, this build pipeline
Dialogue: 0,0:16:11.42,0:16:13.30,Default,,0,0,0,,should look very familiar.
Dialogue: 0,0:16:13.73,0:16:14.78,Default,,0,0,0,,It's basically a two-stage
Dialogue: 0,0:16:14.78,0:16:15.21,Default,,0,0,0,,process.
Dialogue: 0,0:16:15.54,0:16:17.65,Default,,0,0,0,,The first one is compiling a
Dialogue: 0,0:16:17.65,0:16:20.09,Default,,0,0,0,,.metal to a .air file, and then
Dialogue: 0,0:16:20.09,0:16:21.80,Default,,0,0,0,,the second stage is to link the
Dialogue: 0,0:16:21.80,0:16:23.45,Default,,0,0,0,,.air file, and package it up in
Dialogue: 0,0:16:23.45,0:16:24.49,Default,,0,0,0,,a .metallib file.
Dialogue: 0,0:16:25.95,0:16:27.51,Default,,0,0,0,,The only additional thing you
Dialogue: 0,0:16:27.51,0:16:29.09,Default,,0,0,0,,need to do here for CIKernels is
Dialogue: 0,0:16:29.09,0:16:30.26,Default,,0,0,0,,specify some new options.
Dialogue: 0,0:16:31.31,0:16:32.63,Default,,0,0,0,,The first option you need to
Dialogue: 0,0:16:32.63,0:16:33.93,Default,,0,0,0,,specify is for the compiler.
Dialogue: 0,0:16:34.12,0:16:35.75,Default,,0,0,0,,It is called -fcikernel.
Dialogue: 0,0:16:35.78,0:16:38.35,Default,,0,0,0,,And then the second option is
Dialogue: 0,0:16:38.35,0:16:39.80,Default,,0,0,0,,for the linker and it's called
Dialogue: 0,0:16:40.37,0:16:40.95,Default,,0,0,0,,-cikernel.
Dialogue: 0,0:16:40.95,0:16:42.50,Default,,0,0,0,,Note that there's no f on that
Dialogue: 0,0:16:42.50,0:16:42.88,Default,,0,0,0,,option.
Dialogue: 0,0:16:43.74,0:16:44.95,Default,,0,0,0,,And you can do that directly in
Dialogue: 0,0:16:44.99,0:16:47.45,Default,,0,0,0,,Xcode, and let me show you that
Dialogue: 0,0:16:47.45,0:16:48.84,Default,,0,0,0,,with a short little video clip
Dialogue: 0,0:16:48.84,0:16:50.09,Default,,0,0,0,,that illustrates how that can be
Dialogue: 0,0:16:50.09,0:16:50.35,Default,,0,0,0,,done.
Dialogue: 0,0:16:51.54,0:16:53.88,Default,,0,0,0,,So for the compiler option, you
Dialogue: 0,0:16:53.88,0:16:54.89,Default,,0,0,0,,could just look up the Metal
Dialogue: 0,0:16:54.89,0:16:56.39,Default,,0,0,0,,compiler build options and
Dialogue: 0,0:16:56.39,0:16:59.66,Default,,0,0,0,,specify -fcikernel directly in
Dialogue: 0,0:16:59.66,0:17:00.98,Default,,0,0,0,,the other Metal compiler flags.
Dialogue: 0,0:17:01.56,0:17:03.35,Default,,0,0,0,,And because we don't have a UI
Dialogue: 0,0:17:03.35,0:17:05.33,Default,,0,0,0,,for linker options to specify
Dialogue: 0,0:17:05.33,0:17:06.25,Default,,0,0,0,,that, you have to add a
Dialogue: 0,0:17:06.25,0:17:07.34,Default,,0,0,0,,user-to-find setting.
Dialogue: 0,0:17:08.04,0:17:09.73,Default,,0,0,0,,And give that setting a key
Dialogue: 0,0:17:09.78,0:17:12.58,Default,,0,0,0,,called MTLLINKER underscore
Dialogue: 0,0:17:12.58,0:17:15.09,Default,,0,0,0,,FLAGS and then the value that
Dialogue: 0,0:17:15.09,0:17:16.96,Default,,0,0,0,,you specify is -cikernel.
Dialogue: 0,0:17:17.04,0:17:19.10,Default,,0,0,0,,So you just need to set this up
Dialogue: 0,0:17:19.10,0:17:20.13,Default,,0,0,0,,once for your project.
Dialogue: 0,0:17:20.13,0:17:21.31,Default,,0,0,0,,And then all the Metal shaders
Dialogue: 0,0:17:21.31,0:17:22.54,Default,,0,0,0,,that you have in there will be
Dialogue: 0,0:17:22.76,0:17:23.91,Default,,0,0,0,,automatically compiled with
Dialogue: 0,0:17:23.91,0:17:24.51,Default,,0,0,0,,these options.
Dialogue: 0,0:17:25.16,0:17:27.23,Default,,0,0,0,,But if you prefer to do things
Dialogue: 0,0:17:27.31,0:17:28.26,Default,,0,0,0,,on [inaudible] or in a custom
Dialogue: 0,0:17:28.26,0:17:30.20,Default,,0,0,0,,scrip, you can also invoke those
Dialogue: 0,0:17:30.23,0:17:32.70,Default,,0,0,0,,two compiler and linker tools,
Dialogue: 0,0:17:32.80,0:17:32.96,Default,,0,0,0,,like so.
Dialogue: 0,0:17:36.50,0:17:38.22,Default,,0,0,0,,So now the last and probably the
Dialogue: 0,0:17:38.22,0:17:40.25,Default,,0,0,0,,easiest step is to initialize a
Dialogue: 0,0:17:40.33,0:17:42.17,Default,,0,0,0,,CIKernel with a given function
Dialogue: 0,0:17:42.17,0:17:43.04,Default,,0,0,0,,from the Metal library.
Dialogue: 0,0:17:43.60,0:17:46.05,Default,,0,0,0,,And so to do that we have some
Dialogue: 0,0:17:46.05,0:17:47.88,Default,,0,0,0,,new API on our CIKernel class,
Dialogue: 0,0:17:48.01,0:17:50.42,Default,,0,0,0,,and they allow you to initialize
Dialogue: 0,0:17:50.42,0:17:51.91,Default,,0,0,0,,the CIKernel with a given
Dialogue: 0,0:17:51.91,0:17:53.88,Default,,0,0,0,,function by name as well as a
Dialogue: 0,0:17:53.88,0:17:55.31,Default,,0,0,0,,Metal library that you can load
Dialogue: 0,0:17:55.53,0:17:56.54,Default,,0,0,0,,at runtime.
Dialogue: 0,0:17:57.05,0:17:58.16,Default,,0,0,0,,There's also a variant on this
Dialogue: 0,0:17:58.16,0:17:59.83,Default,,0,0,0,,API that lets you specify an
Dialogue: 0,0:17:59.83,0:18:01.70,Default,,0,0,0,,output pixel format for your
Dialogue: 0,0:18:01.70,0:18:02.15,Default,,0,0,0,,kernel.
Dialogue: 0,0:18:02.21,0:18:04.15,Default,,0,0,0,,So if your kernel is just going
Dialogue: 0,0:18:04.18,0:18:05.57,Default,,0,0,0,,to output some single shadow
Dialogue: 0,0:18:05.57,0:18:07.30,Default,,0,0,0,,data, you can specify a single
Dialogue: 0,0:18:07.30,0:18:08.92,Default,,0,0,0,,shadow format for that kernel.
Dialogue: 0,0:18:09.65,0:18:13.17,Default,,0,0,0,,So here's an example of how to
Dialogue: 0,0:18:13.17,0:18:14.36,Default,,0,0,0,,initialize the CIKernel.
Dialogue: 0,0:18:14.81,0:18:15.79,Default,,0,0,0,,All it takes is those three
Dialogue: 0,0:18:15.79,0:18:16.41,Default,,0,0,0,,simple lines.
Dialogue: 0,0:18:17.40,0:18:19.36,Default,,0,0,0,,The first two is for loading the
Dialogue: 0,0:18:19.36,0:18:21.71,Default,,0,0,0,,Metal library, which, by
Dialogue: 0,0:18:21.71,0:18:22.74,Default,,0,0,0,,default, if it was built in
Dialogue: 0,0:18:22.74,0:18:23.78,Default,,0,0,0,,Xcode, will be called
Dialogue: 0,0:18:23.78,0:18:24.65,Default,,0,0,0,,default.metallib.
Dialogue: 0,0:18:24.82,0:18:26.80,Default,,0,0,0,,And then once you have that data
Dialogue: 0,0:18:26.80,0:18:28.12,Default,,0,0,0,,loaded, you can initialize the
Dialogue: 0,0:18:28.12,0:18:30.57,Default,,0,0,0,,CIKernel with a given function
Dialogue: 0,0:18:30.57,0:18:31.52,Default,,0,0,0,,name from that library.
Dialogue: 0,0:18:33.34,0:18:35.10,Default,,0,0,0,,Similarly, for warp and color
Dialogue: 0,0:18:35.10,0:18:36.76,Default,,0,0,0,,kernels they can be initialized
Dialogue: 0,0:18:36.76,0:18:38.07,Default,,0,0,0,,with the exactly the same API.
Dialogue: 0,0:18:39.75,0:18:40.82,Default,,0,0,0,,So once you have that kernel
Dialogue: 0,0:18:41.15,0:18:42.47,Default,,0,0,0,,initialized you can apply that
Dialogue: 0,0:18:42.47,0:18:43.89,Default,,0,0,0,,however you like to produce the
Dialogue: 0,0:18:43.89,0:18:45.16,Default,,0,0,0,,filter graph that you desire.
Dialogue: 0,0:18:46.25,0:18:47.14,Default,,0,0,0,,So that's all there is to
Dialogue: 0,0:18:47.14,0:18:49.33,Default,,0,0,0,,writing CIKernels in Metal and
Dialogue: 0,0:18:49.33,0:18:50.19,Default,,0,0,0,,we think this is going to be a
Dialogue: 0,0:18:50.19,0:18:51.23,Default,,0,0,0,,great new workflow for
Dialogue: 0,0:18:51.23,0:18:53.88,Default,,0,0,0,,developers so we look forward to
Dialogue: 0,0:18:54.40,0:18:55.50,Default,,0,0,0,,seeing some amazing things that
Dialogue: 0,0:18:55.50,0:18:56.38,Default,,0,0,0,,you can do with this new
Dialogue: 0,0:18:56.38,0:18:57.04,Default,,0,0,0,,capability.
Dialogue: 0,0:18:59.30,0:18:59.91,Default,,0,0,0,,All right.
Dialogue: 0,0:19:00.18,0:19:01.35,Default,,0,0,0,,So now the next topic I'd like
Dialogue: 0,0:19:01.35,0:19:03.50,Default,,0,0,0,,to talk about is a new API that
Dialogue: 0,0:19:03.50,0:19:05.11,Default,,0,0,0,,we have for rendering to
Dialogue: 0,0:19:05.11,0:19:05.79,Default,,0,0,0,,destinations.
Dialogue: 0,0:19:06.46,0:19:10.02,Default,,0,0,0,,And this is a new consistent API
Dialogue: 0,0:19:10.29,0:19:11.68,Default,,0,0,0,,across all the different
Dialogue: 0,0:19:11.85,0:19:12.88,Default,,0,0,0,,destination types that we
Dialogue: 0,0:19:12.88,0:19:13.34,Default,,0,0,0,,support.
Dialogue: 0,0:19:13.86,0:19:15.78,Default,,0,0,0,,Namely IOSurfaces, which, by the
Dialogue: 0,0:19:15.78,0:19:17.31,Default,,0,0,0,,way, is now public API on iOS.
Dialogue: 0,0:19:18.23,0:19:19.91,Default,,0,0,0,,And we also support rendering to
Dialogue: 0,0:19:19.91,0:19:21.98,Default,,0,0,0,,CVPixelBuffers, as well as Metal
Dialogue: 0,0:19:21.98,0:19:22.93,Default,,0,0,0,,and OpenGL Textures.
Dialogue: 0,0:19:23.90,0:19:25.07,Default,,0,0,0,,Or even just some raw bitmap
Dialogue: 0,0:19:25.07,0:19:26.18,Default,,0,0,0,,data that you have in memory.
Dialogue: 0,0:19:26.74,0:19:29.14,Default,,0,0,0,,And one of the first things
Dialogue: 0,0:19:29.14,0:19:30.26,Default,,0,0,0,,you'll notice with this new API
Dialogue: 0,0:19:30.68,0:19:32.39,Default,,0,0,0,,is that it will now return
Dialogue: 0,0:19:32.39,0:19:33.62,Default,,0,0,0,,immediately, if it detects a
Dialogue: 0,0:19:33.62,0:19:35.14,Default,,0,0,0,,render failure, and give you
Dialogue: 0,0:19:35.14,0:19:36.63,Default,,0,0,0,,back an error indicating why it
Dialogue: 0,0:19:36.63,0:19:37.01,Default,,0,0,0,,failed.
Dialogue: 0,0:19:37.50,0:19:39.16,Default,,0,0,0,,So now you can actually detect
Dialogue: 0,0:19:39.16,0:19:40.24,Default,,0,0,0,,that programmatically in the
Dialogue: 0,0:19:40.24,0:19:41.92,Default,,0,0,0,,application and fails gracefully
Dialogue: 0,0:19:42.20,0:19:43.39,Default,,0,0,0,,if an error is detected.
Dialogue: 0,0:19:43.91,0:19:47.71,Default,,0,0,0,,With this API, you can also set
Dialogue: 0,0:19:47.77,0:19:49.38,Default,,0,0,0,,some common properties for the
Dialogue: 0,0:19:49.38,0:19:51.43,Default,,0,0,0,,destination object, such as an
Dialogue: 0,0:19:51.43,0:19:52.78,Default,,0,0,0,,alpha mode or a clamping mode
Dialogue: 0,0:19:52.78,0:19:54.74,Default,,0,0,0,,behavior, or even a colorspace
Dialogue: 0,0:19:54.78,0:19:55.66,Default,,0,0,0,,that you want to render the
Dialogue: 0,0:19:55.66,0:19:56.25,Default,,0,0,0,,output to.
Dialogue: 0,0:19:57.27,0:19:58.94,Default,,0,0,0,,Previously, with our existing
Dialogue: 0,0:19:58.94,0:20:00.76,Default,,0,0,0,,API, the alpha mode and clamping
Dialogue: 0,0:20:00.76,0:20:02.13,Default,,0,0,0,,mode was something that would be
Dialogue: 0,0:20:02.13,0:20:03.69,Default,,0,0,0,,determined implicitly, based on
Dialogue: 0,0:20:03.69,0:20:05.08,Default,,0,0,0,,the format of your destination.
Dialogue: 0,0:20:05.63,0:20:06.87,Default,,0,0,0,,But now, you can actually
Dialogue: 0,0:20:06.87,0:20:08.53,Default,,0,0,0,,explicitly override that with
Dialogue: 0,0:20:08.53,0:20:09.59,Default,,0,0,0,,the behavior that you want.
Dialogue: 0,0:20:11.99,0:20:12.96,Default,,0,0,0,,In addition to these common
Dialogue: 0,0:20:12.96,0:20:14.23,Default,,0,0,0,,properties, we have some new
Dialogue: 0,0:20:14.23,0:20:15.42,Default,,0,0,0,,advanced properties that you can
Dialogue: 0,0:20:15.47,0:20:16.98,Default,,0,0,0,,set on the destination, such as
Dialogue: 0,0:20:17.04,0:20:18.02,Default,,0,0,0,,dithering and blending.
Dialogue: 0,0:20:18.74,0:20:19.87,Default,,0,0,0,,So, for example, if you have an
Dialogue: 0,0:20:19.87,0:20:22.13,Default,,0,0,0,,8-bit output buffer that you
Dialogue: 0,0:20:22.13,0:20:23.48,Default,,0,0,0,,want to render to, you can just
Dialogue: 0,0:20:23.48,0:20:25.18,Default,,0,0,0,,simply enable dithering to get
Dialogue: 0,0:20:25.34,0:20:26.59,Default,,0,0,0,,some -- a greater perceived
Dialogue: 0,0:20:26.59,0:20:28.43,Default,,0,0,0,,color depth in order to reduce
Dialogue: 0,0:20:28.43,0:20:30.81,Default,,0,0,0,,some banding artifacts that you
Dialogue: 0,0:20:30.81,0:20:31.87,Default,,0,0,0,,may see in certain parts of the
Dialogue: 0,0:20:31.87,0:20:32.34,Default,,0,0,0,,image.
Dialogue: 0,0:20:32.87,0:20:36.55,Default,,0,0,0,,And a nice thing about these
Dialogue: 0,0:20:36.55,0:20:38.23,Default,,0,0,0,,properties is now they
Dialogue: 0,0:20:38.34,0:20:40.02,Default,,0,0,0,,effectively reduce the need for
Dialogue: 0,0:20:40.02,0:20:41.77,Default,,0,0,0,,having to create multiple
Dialogue: 0,0:20:41.77,0:20:42.55,Default,,0,0,0,,CIContexts.
Dialogue: 0,0:20:42.55,0:20:44.75,Default,,0,0,0,,And that's because some of these
Dialogue: 0,0:20:44.75,0:20:46.55,Default,,0,0,0,,properties used to be tied to
Dialogue: 0,0:20:46.55,0:20:47.46,Default,,0,0,0,,the CIContexts.
Dialogue: 0,0:20:47.46,0:20:48.57,Default,,0,0,0,,So, if you had multiple
Dialogue: 0,0:20:48.57,0:20:49.68,Default,,0,0,0,,configuration of different
Dialogue: 0,0:20:49.68,0:20:51.36,Default,,0,0,0,,destinations, you would have had
Dialogue: 0,0:20:51.36,0:20:52.95,Default,,0,0,0,,to create a CIContext for every
Dialogue: 0,0:20:52.95,0:20:53.49,Default,,0,0,0,,single one.
Dialogue: 0,0:20:54.10,0:20:55.35,Default,,0,0,0,,So now that these properties are
Dialogue: 0,0:20:55.35,0:20:57.72,Default,,0,0,0,,nicely decoupled, you can, for
Dialogue: 0,0:20:57.72,0:20:58.97,Default,,0,0,0,,the most part, just have one
Dialogue: 0,0:20:58.97,0:21:00.88,Default,,0,0,0,,CIContext that can render to
Dialogue: 0,0:21:00.88,0:21:02.34,Default,,0,0,0,,various different destinations.
Dialogue: 0,0:21:03.84,0:21:06.10,Default,,0,0,0,,But along with all these
Dialogue: 0,0:21:06.17,0:21:07.40,Default,,0,0,0,,functionality that this API
Dialogue: 0,0:21:07.40,0:21:09.21,Default,,0,0,0,,provides, there are some really
Dialogue: 0,0:21:09.21,0:21:11.38,Default,,0,0,0,,great performance enhancements
Dialogue: 0,0:21:11.62,0:21:13.30,Default,,0,0,0,,that can be realized with this
Dialogue: 0,0:21:13.30,0:21:13.69,Default,,0,0,0,,new API.
Dialogue: 0,0:21:14.95,0:21:16.87,Default,,0,0,0,,For example, our CIContext API
Dialogue: 0,0:21:16.98,0:21:18.82,Default,,0,0,0,,for rendering to IOSurfaces or
Dialogue: 0,0:21:18.82,0:21:19.73,Default,,0,0,0,,CVPixelBuffers.
Dialogue: 0,0:21:20.43,0:21:22.49,Default,,0,0,0,,They used to return after all
Dialogue: 0,0:21:22.49,0:21:24.66,Default,,0,0,0,,the render on the GPU is
Dialogue: 0,0:21:24.74,0:21:25.29,Default,,0,0,0,,completed.
Dialogue: 0,0:21:26.24,0:21:28.87,Default,,0,0,0,,But now with this new API, it
Dialogue: 0,0:21:28.87,0:21:30.75,Default,,0,0,0,,will return as soon as the CPU
Dialogue: 0,0:21:30.75,0:21:32.02,Default,,0,0,0,,has finished issuing all the
Dialogue: 0,0:21:32.02,0:21:33.03,Default,,0,0,0,,work for the GPU.
Dialogue: 0,0:21:33.56,0:21:34.89,Default,,0,0,0,,And without having to wait for
Dialogue: 0,0:21:34.89,0:21:36.03,Default,,0,0,0,,the GPU work to finish.
Dialogue: 0,0:21:37.17,0:21:38.67,Default,,0,0,0,,So we think this new flexibility
Dialogue: 0,0:21:38.67,0:21:40.41,Default,,0,0,0,,will now allow you to pipeline
Dialogue: 0,0:21:40.47,0:21:42.14,Default,,0,0,0,,all your CPU and GPU work much
Dialogue: 0,0:21:42.14,0:21:42.79,Default,,0,0,0,,more efficiently.
Dialogue: 0,0:21:44.12,0:21:45.65,Default,,0,0,0,,So let me show you an example of
Dialogue: 0,0:21:46.35,0:21:46.91,Default,,0,0,0,,that use case.
Dialogue: 0,0:21:47.74,0:21:49.27,Default,,0,0,0,,So here we have a simple render
Dialogue: 0,0:21:49.27,0:21:52.24,Default,,0,0,0,,routine that is going to clear a
Dialogue: 0,0:21:52.24,0:21:53.87,Default,,0,0,0,,destination surface and then
Dialogue: 0,0:21:53.87,0:21:55.99,Default,,0,0,0,,render a foreground image over
Dialogue: 0,0:21:55.99,0:21:57.21,Default,,0,0,0,,top of a background image.
Dialogue: 0,0:21:58.33,0:21:59.86,Default,,0,0,0,,So the first thing we do is
Dialogue: 0,0:21:59.86,0:22:01.94,Default,,0,0,0,,initialize a CIRenderDestination
Dialogue: 0,0:22:01.94,0:22:03.82,Default,,0,0,0,,object given in ioSurface.
Dialogue: 0,0:22:04.41,0:22:07.08,Default,,0,0,0,,And then the first thing we want
Dialogue: 0,0:22:07.50,0:22:09.87,Default,,0,0,0,,is to get a CIContext and start
Dialogue: 0,0:22:09.87,0:22:11.43,Default,,0,0,0,,a render task to clear the
Dialogue: 0,0:22:11.43,0:22:12.09,Default,,0,0,0,,destination.
Dialogue: 0,0:22:13.61,0:22:15.47,Default,,0,0,0,,But before waiting for that task
Dialogue: 0,0:22:15.47,0:22:16.79,Default,,0,0,0,,to actually finish, we can now
Dialogue: 0,0:22:16.79,0:22:18.76,Default,,0,0,0,,start another task to render the
Dialogue: 0,0:22:18.76,0:22:19.51,Default,,0,0,0,,background image to the
Dialogue: 0,0:22:19.51,0:22:19.97,Default,,0,0,0,,destination.
Dialogue: 0,0:22:23.18,0:22:24.81,Default,,0,0,0,,And then, now before we start
Dialogue: 0,0:22:24.81,0:22:26.14,Default,,0,0,0,,the final task, we can set a
Dialogue: 0,0:22:26.14,0:22:27.78,Default,,0,0,0,,blend kernel on this destination
Dialogue: 0,0:22:27.78,0:22:29.87,Default,,0,0,0,,object, which can be anyone of
Dialogue: 0,0:22:29.87,0:22:32.09,Default,,0,0,0,,our 37 built-in blend kernels.
Dialogue: 0,0:22:32.61,0:22:33.79,Default,,0,0,0,,In this case, we've chosen a
Dialogue: 0,0:22:33.79,0:22:34.69,Default,,0,0,0,,sourceOver blend.
Dialogue: 0,0:22:35.20,0:22:37.18,Default,,0,0,0,,But you can even create your own
Dialogue: 0,0:22:37.18,0:22:39.07,Default,,0,0,0,,custom blend kernel by using our
Dialogue: 0,0:22:39.07,0:22:40.62,Default,,0,0,0,,new CIBlendKernel API.
Dialogue: 0,0:22:40.62,0:22:44.38,Default,,0,0,0,,So once we have the blend kernel
Dialogue: 0,0:22:44.53,0:22:47.48,Default,,0,0,0,,that we want, we then call
Dialogue: 0,0:22:47.48,0:22:49.06,Default,,0,0,0,,CIContext to start the final
Dialogue: 0,0:22:49.06,0:22:50.35,Default,,0,0,0,,render task to render the
Dialogue: 0,0:22:50.35,0:22:52.09,Default,,0,0,0,,foreground image over top of
Dialogue: 0,0:22:52.41,0:22:53.57,Default,,0,0,0,,whatever is already in that
Dialogue: 0,0:22:53.57,0:22:54.22,Default,,0,0,0,,destination.
Dialogue: 0,0:22:54.94,0:22:56.28,Default,,0,0,0,,And only then do you need to
Dialogue: 0,0:22:56.28,0:22:58.46,Default,,0,0,0,,call waitUntilCompleted, if you
Dialogue: 0,0:22:58.46,0:23:00.45,Default,,0,0,0,,need to access the contents on
Dialogue: 0,0:23:00.45,0:23:01.07,Default,,0,0,0,,the CPU.
Dialogue: 0,0:23:01.71,0:23:03.51,Default,,0,0,0,,So with this new setup, this
Dialogue: 0,0:23:03.51,0:23:05.27,Default,,0,0,0,,will now minimize the latency of
Dialogue: 0,0:23:05.27,0:23:06.86,Default,,0,0,0,,getting your results without
Dialogue: 0,0:23:06.86,0:23:08.75,Default,,0,0,0,,having to do any unnecessary
Dialogue: 0,0:23:08.75,0:23:09.96,Default,,0,0,0,,synchronization with the GPU.
Dialogue: 0,0:23:13.46,0:23:14.70,Default,,0,0,0,,The next use case I'd like to
Dialogue: 0,0:23:14.86,0:23:16.72,Default,,0,0,0,,illustrate is one that will
Dialogue: 0,0:23:17.26,0:23:18.66,Default,,0,0,0,,highlight a much more subtle
Dialogue: 0,0:23:18.66,0:23:21.07,Default,,0,0,0,,performance benefit, but it can
Dialogue: 0,0:23:21.07,0:23:22.05,Default,,0,0,0,,have a huge impact in your
Dialogue: 0,0:23:22.05,0:23:22.59,Default,,0,0,0,,application.
Dialogue: 0,0:23:22.64,0:23:23.97,Default,,0,0,0,,And that's rendering to Metal
Dialogue: 0,0:23:23.97,0:23:24.91,Default,,0,0,0,,drawable textures.
Dialogue: 0,0:23:25.16,0:23:27.36,Default,,0,0,0,,So you can do that very simply
Dialogue: 0,0:23:27.36,0:23:29.75,Default,,0,0,0,,by getting a currentDrawable
Dialogue: 0,0:23:29.75,0:23:30.54,Default,,0,0,0,,from, let's say Metal
Dialogue: 0,0:23:30.62,0:23:30.97,Default,,0,0,0,,[inaudible] view.
Dialogue: 0,0:23:31.23,0:23:32.78,Default,,0,0,0,,And then from that, you can
Dialogue: 0,0:23:32.78,0:23:34.81,Default,,0,0,0,,initialize a CIRenderDestination
Dialogue: 0,0:23:35.20,0:23:36.35,Default,,0,0,0,,with the texture from that
Dialogue: 0,0:23:36.35,0:23:36.79,Default,,0,0,0,,drawable.
Dialogue: 0,0:23:36.79,0:23:40.56,Default,,0,0,0,,So this will work just fine, but
Dialogue: 0,0:23:40.63,0:23:41.88,Default,,0,0,0,,if you were to do this in a
Dialogue: 0,0:23:41.88,0:23:44.48,Default,,0,0,0,,per-frame render loop, there's a
Dialogue: 0,0:23:44.87,0:23:46.07,Default,,0,0,0,,potential for a performance
Dialogue: 0,0:23:46.07,0:23:47.24,Default,,0,0,0,,bottleneck here that may not be
Dialogue: 0,0:23:47.24,0:23:48.03,Default,,0,0,0,,so obvious.
Dialogue: 0,0:23:48.38,0:23:51.04,Default,,0,0,0,,So let me try to describe that
Dialogue: 0,0:23:51.69,0:23:52.90,Default,,0,0,0,,or explain that in a little bit
Dialogue: 0,0:23:52.90,0:23:54.44,Default,,0,0,0,,more detail with a timeline view
Dialogue: 0,0:23:54.44,0:23:54.71,Default,,0,0,0,,here.
Dialogue: 0,0:23:55.65,0:23:56.79,Default,,0,0,0,,And please bear with me because
Dialogue: 0,0:23:56.79,0:23:58.32,Default,,0,0,0,,there could be a lot of steps
Dialogue: 0,0:23:58.32,0:23:58.68,Default,,0,0,0,,involved.
Dialogue: 0,0:23:59.38,0:24:01.61,Default,,0,0,0,,So here we have a timeline that
Dialogue: 0,0:24:01.61,0:24:03.30,Default,,0,0,0,,has two tracks, the CPU at the
Dialogue: 0,0:24:03.30,0:24:04.74,Default,,0,0,0,,top and the GPU at the bottom.
Dialogue: 0,0:24:05.51,0:24:06.47,Default,,0,0,0,,Technically there's actually a
Dialogue: 0,0:24:06.47,0:24:07.35,Default,,0,0,0,,third component in play here,
Dialogue: 0,0:24:07.35,0:24:08.41,Default,,0,0,0,,which is to display.
Dialogue: 0,0:24:08.41,0:24:10.44,Default,,0,0,0,,But for the sake of simplicity,
Dialogue: 0,0:24:10.69,0:24:11.70,Default,,0,0,0,,we'll just treat that as part of
Dialogue: 0,0:24:11.70,0:24:12.10,Default,,0,0,0,,the GPU.
Dialogue: 0,0:24:12.76,0:24:14.75,Default,,0,0,0,,So in the very first frame, your
Dialogue: 0,0:24:14.75,0:24:16.50,Default,,0,0,0,,app will try to get a drawable
Dialogue: 0,0:24:16.50,0:24:17.05,Default,,0,0,0,,from the view.
Dialogue: 0,0:24:17.58,0:24:19.93,Default,,0,0,0,,And then from that drawable you
Dialogue: 0,0:24:19.93,0:24:22.39,Default,,0,0,0,,can get a texture and then start
Dialogue: 0,0:24:22.39,0:24:24.74,Default,,0,0,0,,a task to render to that
Dialogue: 0,0:24:24.91,0:24:25.39,Default,,0,0,0,,texture.
Dialogue: 0,0:24:26.80,0:24:28.57,Default,,0,0,0,,So once the CI gets that call,
Dialogue: 0,0:24:28.57,0:24:29.66,Default,,0,0,0,,we will start encoding the
Dialogue: 0,0:24:29.66,0:24:32.34,Default,,0,0,0,,commands on the CPU for the work
Dialogue: 0,0:24:32.34,0:24:33.58,Default,,0,0,0,,to be done on the GPU.
Dialogue: 0,0:24:34.29,0:24:35.62,Default,,0,0,0,,And in this particular case,
Dialogue: 0,0:24:35.62,0:24:37.58,Default,,0,0,0,,we're illustrating a filter
Dialogue: 0,0:24:37.58,0:24:38.87,Default,,0,0,0,,graph that actually has multiple
Dialogue: 0,0:24:38.87,0:24:40.13,Default,,0,0,0,,render passes, namely two
Dialogue: 0,0:24:40.13,0:24:41.87,Default,,0,0,0,,intermediate passes and a final
Dialogue: 0,0:24:41.87,0:24:43.51,Default,,0,0,0,,destination pass.
Dialogue: 0,0:24:44.76,0:24:45.80,Default,,0,0,0,,Once Core Image has finished
Dialogue: 0,0:24:45.80,0:24:47.24,Default,,0,0,0,,encoding all the work, the call
Dialogue: 0,0:24:47.24,0:24:48.33,Default,,0,0,0,,to startTask will return.
Dialogue: 0,0:24:48.76,0:24:50.88,Default,,0,0,0,,And then from then, that point
Dialogue: 0,0:24:50.88,0:24:52.45,Default,,0,0,0,,on the GPU will happily schedule
Dialogue: 0,0:24:52.45,0:24:53.82,Default,,0,0,0,,that work to be done at some
Dialogue: 0,0:24:53.82,0:24:55.97,Default,,0,0,0,,appropriate time.
Dialogue: 0,0:24:56.18,0:24:58.76,Default,,0,0,0,,But, if the work on the GPU is
Dialogue: 0,0:24:58.76,0:25:01.03,Default,,0,0,0,,going to take a long time, your
Dialogue: 0,0:25:01.03,0:25:02.95,Default,,0,0,0,,app could get called to render
Dialogue: 0,0:25:02.95,0:25:05.67,Default,,0,0,0,,another frame before the work is
Dialogue: 0,0:25:05.67,0:25:06.04,Default,,0,0,0,,done.
Dialogue: 0,0:25:06.91,0:25:08.14,Default,,0,0,0,,And at that point, if you try to
Dialogue: 0,0:25:08.14,0:25:10.60,Default,,0,0,0,,get a drawable, that call to get
Dialogue: 0,0:25:10.60,0:25:12.75,Default,,0,0,0,,drawable will stall until it is
Dialogue: 0,0:25:12.75,0:25:14.17,Default,,0,0,0,,ready to be vended back to your
Dialogue: 0,0:25:14.17,0:25:14.82,Default,,0,0,0,,application.
Dialogue: 0,0:25:15.07,0:25:18.10,Default,,0,0,0,,And then only then can you get
Dialogue: 0,0:25:18.10,0:25:19.76,Default,,0,0,0,,the texture from it and start
Dialogue: 0,0:25:19.76,0:25:21.80,Default,,0,0,0,,another task to render to it and
Dialogue: 0,0:25:22.59,0:25:24.18,Default,,0,0,0,,then so on for all subsequent
Dialogue: 0,0:25:24.18,0:25:24.51,Default,,0,0,0,,frames.
Dialogue: 0,0:25:24.51,0:25:27.10,Default,,0,0,0,,So, as you can see here, this is
Dialogue: 0,0:25:27.10,0:25:28.50,Default,,0,0,0,,not a very efficient use of both
Dialogue: 0,0:25:28.50,0:25:30.00,Default,,0,0,0,,the CPU and the GPU because
Dialogue: 0,0:25:30.00,0:25:31.44,Default,,0,0,0,,there's a lot of idle times on
Dialogue: 0,0:25:31.44,0:25:32.21,Default,,0,0,0,,both processors.
Dialogue: 0,0:25:32.78,0:25:35.29,Default,,0,0,0,,But, if you look closely here,
Dialogue: 0,0:25:35.29,0:25:37.68,Default,,0,0,0,,the drawable texture that we're
Dialogue: 0,0:25:37.68,0:25:39.46,Default,,0,0,0,,about to render to is actually
Dialogue: 0,0:25:39.46,0:25:41.34,Default,,0,0,0,,not needed until the very last
Dialogue: 0,0:25:41.34,0:25:41.96,Default,,0,0,0,,render pass.
Dialogue: 0,0:25:43.02,0:25:44.28,Default,,0,0,0,,So let's look at how we can
Dialogue: 0,0:25:44.28,0:25:45.82,Default,,0,0,0,,actually improve this scenario.
Dialogue: 0,0:25:48.72,0:25:49.65,Default,,0,0,0,,So, with our new
Dialogue: 0,0:25:49.65,0:25:52.35,Default,,0,0,0,,CIRenderDestination API, you can
Dialogue: 0,0:25:52.35,0:25:54.42,Default,,0,0,0,,now initialize it, not with the
Dialogue: 0,0:25:54.42,0:25:56.94,Default,,0,0,0,,texture, per se, but rather, all
Dialogue: 0,0:25:56.94,0:25:58.31,Default,,0,0,0,,the properties of the textures,
Dialogue: 0,0:25:58.54,0:26:00.72,Default,,0,0,0,,such as the width and height and
Dialogue: 0,0:26:00.72,0:26:02.16,Default,,0,0,0,,the pixel format of the texture.
Dialogue: 0,0:26:02.68,0:26:04.67,Default,,0,0,0,,And then you can provide that
Dialogue: 0,0:26:04.67,0:26:06.63,Default,,0,0,0,,texture via call back, which
Dialogue: 0,0:26:06.63,0:26:08.50,Default,,0,0,0,,will be called lazily at the
Dialogue: 0,0:26:08.50,0:26:10.20,Default,,0,0,0,,latest possible time for when
Dialogue: 0,0:26:10.20,0:26:11.73,Default,,0,0,0,,that texture is actually needed.
Dialogue: 0,0:26:12.36,0:26:15.22,Default,,0,0,0,,And so now, with the destination
Dialogue: 0,0:26:15.22,0:26:17.13,Default,,0,0,0,,object initialized immediately,
Dialogue: 0,0:26:17.13,0:26:18.51,Default,,0,0,0,,you can start a task and render
Dialogue: 0,0:26:18.51,0:26:20.50,Default,,0,0,0,,to it much sooner, and this will
Dialogue: 0,0:26:20.50,0:26:22.01,Default,,0,0,0,,effectively defer that
Dialogue: 0,0:26:22.14,0:26:23.32,Default,,0,0,0,,potentially blocking call to
Dialogue: 0,0:26:23.32,0:26:24.87,Default,,0,0,0,,currentDrawable to a much later
Dialogue: 0,0:26:24.87,0:26:25.51,Default,,0,0,0,,point in time.
Dialogue: 0,0:26:25.55,0:26:28.31,Default,,0,0,0,,So now, if we look at this
Dialogue: 0,0:26:28.31,0:26:32.10,Default,,0,0,0,,example, the work now on the CPU
Dialogue: 0,0:26:32.10,0:26:33.71,Default,,0,0,0,,and GPU can be pipelined much
Dialogue: 0,0:26:33.71,0:26:34.35,Default,,0,0,0,,more efficiently.
Dialogue: 0,0:26:35.48,0:26:36.81,Default,,0,0,0,,So if you're rendering to Metal
Dialogue: 0,0:26:36.81,0:26:38.39,Default,,0,0,0,,drawable textures, we strongly
Dialogue: 0,0:26:38.39,0:26:39.70,Default,,0,0,0,,encourage you to use this new
Dialogue: 0,0:26:39.70,0:26:39.88,Default,,0,0,0,,API.
Dialogue: 0,0:26:39.88,0:26:41.73,Default,,0,0,0,,Because this could greatly
Dialogue: 0,0:26:41.73,0:26:43.06,Default,,0,0,0,,improve the frame rate of your
Dialogue: 0,0:26:43.06,0:26:43.59,Default,,0,0,0,,application.
Dialogue: 0,0:26:44.12,0:26:45.34,Default,,0,0,0,,In fact, we have seen cases
Dialogue: 0,0:26:45.34,0:26:46.62,Default,,0,0,0,,where the frame rate literally
Dialogue: 0,0:26:46.62,0:26:48.43,Default,,0,0,0,,doubled just by simply employing
Dialogue: 0,0:26:48.43,0:26:49.00,Default,,0,0,0,,this technique.
Dialogue: 0,0:26:49.00,0:26:49.63,Default,,0,0,0,,All right.
Dialogue: 0,0:26:51.86,0:26:55.68,Default,,0,0,0,,So now I'd like to hand it back
Dialogue: 0,0:26:55.68,0:26:57.13,Default,,0,0,0,,to David who will tell you about
Dialogue: 0,0:26:57.13,0:26:58.43,Default,,0,0,0,,some really cool stuff that lets
Dialogue: 0,0:26:58.43,0:26:59.87,Default,,0,0,0,,you look under the hood inside
Dialogue: 0,0:26:59.87,0:27:00.59,Default,,0,0,0,,the Core Image framework.
Dialogue: 0,0:27:00.80,0:27:00.98,Default,,0,0,0,,Thank you.
Dialogue: 0,0:27:01.52,0:27:05.96,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:27:06.46,0:27:07.40,Default,,0,0,0,,>> Thank you so much Tony.
Dialogue: 0,0:27:07.40,0:27:08.21,Default,,0,0,0,,That's great stuff.
Dialogue: 0,0:27:09.38,0:27:10.15,Default,,0,0,0,,As I mentioned in my
Dialogue: 0,0:27:10.15,0:27:11.88,Default,,0,0,0,,introduction, Core Image has a
Dialogue: 0,0:27:11.88,0:27:13.29,Default,,0,0,0,,lot of great tricks it uses to
Dialogue: 0,0:27:13.29,0:27:14.46,Default,,0,0,0,,get the best performance.
Dialogue: 0,0:27:14.99,0:27:16.29,Default,,0,0,0,,And one of our goals this year
Dialogue: 0,0:27:16.29,0:27:17.58,Default,,0,0,0,,was to make it clearer to you,
Dialogue: 0,0:27:17.58,0:27:19.38,Default,,0,0,0,,the developer, how those tricks
Dialogue: 0,0:27:19.38,0:27:20.62,Default,,0,0,0,,are occurring so that you can
Dialogue: 0,0:27:20.62,0:27:22.69,Default,,0,0,0,,get a better understanding of
Dialogue: 0,0:27:22.69,0:27:23.72,Default,,0,0,0,,how to use Core Image
Dialogue: 0,0:27:23.72,0:27:24.26,Default,,0,0,0,,efficiently.
Dialogue: 0,0:27:25.55,0:27:27.08,Default,,0,0,0,,And we've done that in a couple
Dialogue: 0,0:27:27.08,0:27:27.88,Default,,0,0,0,,of interesting ways.
Dialogue: 0,0:27:28.22,0:27:29.77,Default,,0,0,0,,First of all, in our new APIs,
Dialogue: 0,0:27:29.87,0:27:30.78,Default,,0,0,0,,we have some new ways of
Dialogue: 0,0:27:30.78,0:27:32.61,Default,,0,0,0,,returning you information about
Dialogue: 0,0:27:32.65,0:27:33.08,Default,,0,0,0,,the render.
Dialogue: 0,0:27:34.22,0:27:36.05,Default,,0,0,0,,After you've issued a task to
Dialogue: 0,0:27:36.05,0:27:37.98,Default,,0,0,0,,render, you can now, after when
Dialogue: 0,0:27:37.98,0:27:39.03,Default,,0,0,0,,you wait for that task to
Dialogue: 0,0:27:39.03,0:27:40.27,Default,,0,0,0,,complete, it will return a
Dialogue: 0,0:27:40.27,0:27:42.48,Default,,0,0,0,,CIRenderInfo object.
Dialogue: 0,0:27:42.86,0:27:44.35,Default,,0,0,0,,And this object will return to
Dialogue: 0,0:27:44.35,0:27:45.28,Default,,0,0,0,,you an object with a few
Dialogue: 0,0:27:45.28,0:27:46.87,Default,,0,0,0,,properties on it, including the
Dialogue: 0,0:27:46.87,0:27:48.40,Default,,0,0,0,,number of passes that Core Image
Dialogue: 0,0:27:48.62,0:27:50.06,Default,,0,0,0,,needed to use to perform that
Dialogue: 0,0:27:50.19,0:27:50.58,Default,,0,0,0,,render.
Dialogue: 0,0:27:50.92,0:27:52.24,Default,,0,0,0,,As well as the total amount of
Dialogue: 0,0:27:52.24,0:27:54.02,Default,,0,0,0,,time spent executing kernels on
Dialogue: 0,0:27:54.02,0:27:55.71,Default,,0,0,0,,the device and also the total
Dialogue: 0,0:27:55.71,0:27:57.09,Default,,0,0,0,,number of pixels processed.
Dialogue: 0,0:27:57.43,0:27:58.94,Default,,0,0,0,,So that's just a great piece of
Dialogue: 0,0:27:58.94,0:28:00.08,Default,,0,0,0,,information that you can get
Dialogue: 0,0:28:00.25,0:28:01.54,Default,,0,0,0,,when we return information to
Dialogue: 0,0:28:01.54,0:28:01.67,Default,,0,0,0,,you.
Dialogue: 0,0:28:02.77,0:28:04.77,Default,,0,0,0,,But perhaps what is even cooler
Dialogue: 0,0:28:05.07,0:28:06.72,Default,,0,0,0,,is the awesome new editions
Dialogue: 0,0:28:06.72,0:28:07.99,Default,,0,0,0,,we've made to Core Image to
Dialogue: 0,0:28:07.99,0:28:09.45,Default,,0,0,0,,provide better Quick Looks in
Dialogue: 0,0:28:09.51,0:28:09.90,Default,,0,0,0,,Xcode.
Dialogue: 0,0:28:11.86,0:28:14.64,Default,,0,0,0,,Notably, we now have a great
Dialogue: 0,0:28:14.77,0:28:16.57,Default,,0,0,0,,Quick Look support for CIImages.
Dialogue: 0,0:28:16.84,0:28:17.95,Default,,0,0,0,,In addition to just showing the
Dialogue: 0,0:28:17.99,0:28:19.22,Default,,0,0,0,,pixels, we now show you the
Dialogue: 0,0:28:19.25,0:28:20.61,Default,,0,0,0,,image graph that you constructed
Dialogue: 0,0:28:20.61,0:28:21.54,Default,,0,0,0,,to produce that image.
Dialogue: 0,0:28:22.69,0:28:23.77,Default,,0,0,0,,If you do a Quick Look on a
Dialogue: 0,0:28:23.77,0:28:26.42,Default,,0,0,0,,CIRenderTask, it'll show you the
Dialogue: 0,0:28:26.42,0:28:28.04,Default,,0,0,0,,optimized graph that Core Image
Dialogue: 0,0:28:28.20,0:28:29.63,Default,,0,0,0,,converted your image graph into.
Dialogue: 0,0:28:30.52,0:28:31.89,Default,,0,0,0,,And, if you wait for the render
Dialogue: 0,0:28:31.89,0:28:33.49,Default,,0,0,0,,info to be returned to you, if
Dialogue: 0,0:28:33.49,0:28:34.50,Default,,0,0,0,,you do a Quick Look on that,
Dialogue: 0,0:28:34.78,0:28:35.94,Default,,0,0,0,,it'll show you all the
Dialogue: 0,0:28:35.94,0:28:37.54,Default,,0,0,0,,concatenation, timing, and
Dialogue: 0,0:28:37.54,0:28:38.77,Default,,0,0,0,,caching information that Core
Dialogue: 0,0:28:38.77,0:28:39.69,Default,,0,0,0,,Image did internally.
Dialogue: 0,0:28:40.06,0:28:41.62,Default,,0,0,0,,So to give you an idea, we're
Dialogue: 0,0:28:41.62,0:28:42.43,Default,,0,0,0,,going to show you this in a very
Dialogue: 0,0:28:42.43,0:28:43.04,Default,,0,0,0,,visual way.
Dialogue: 0,0:28:43.47,0:28:44.21,Default,,0,0,0,,Here's some code.
Dialogue: 0,0:28:44.27,0:28:45.48,Default,,0,0,0,,Let's pretend we're stepping
Dialogue: 0,0:28:45.48,0:28:46.37,Default,,0,0,0,,through this in Xcode.
Dialogue: 0,0:28:47.12,0:28:49.46,Default,,0,0,0,,Here's an example of a image
Dialogue: 0,0:28:49.46,0:28:50.12,Default,,0,0,0,,graph that we're going to
Dialogue: 0,0:28:50.12,0:28:50.71,Default,,0,0,0,,construct.
Dialogue: 0,0:28:51.03,0:28:52.11,Default,,0,0,0,,In this case, we're creating a
Dialogue: 0,0:28:52.11,0:28:54.46,Default,,0,0,0,,CIImage from a URL, and we have
Dialogue: 0,0:28:54.46,0:28:55.24,Default,,0,0,0,,a new option that we're
Dialogue: 0,0:28:55.24,0:28:57.35,Default,,0,0,0,,specifying on this image, which
Dialogue: 0,0:28:57.35,0:28:57.52,Default,,0,0,0,,is
Dialogue: 0,0:28:57.70,0:29:01.29,Default,,0,0,0,,kCIApplyImageOrientationProperty
Dialogue: 0,0:29:02.26,0:29:03.69,Default,,0,0,0,,to true.
Dialogue: 0,0:29:03.90,0:29:05.27,Default,,0,0,0,,And what this will do is
Dialogue: 0,0:29:05.27,0:29:06.60,Default,,0,0,0,,automatically make the image
Dialogue: 0,0:29:06.60,0:29:08.66,Default,,0,0,0,,upright for you, which is a nice
Dialogue: 0,0:29:08.66,0:29:09.18,Default,,0,0,0,,convenience.
Dialogue: 0,0:29:10.07,0:29:11.06,Default,,0,0,0,,The next thing we're going to do
Dialogue: 0,0:29:11.06,0:29:12.22,Default,,0,0,0,,is we're going to add onto that
Dialogue: 0,0:29:12.22,0:29:13.23,Default,,0,0,0,,image an additional
Dialogue: 0,0:29:13.23,0:29:14.62,Default,,0,0,0,,AffineTransform which scales it
Dialogue: 0,0:29:14.62,0:29:16.90,Default,,0,0,0,,down by .5.
Dialogue: 0,0:29:16.90,0:29:18.61,Default,,0,0,0,,Now imagine we're in Xcode, and
Dialogue: 0,0:29:18.61,0:29:20.19,Default,,0,0,0,,we hover over the image object.
Dialogue: 0,0:29:20.58,0:29:22.35,Default,,0,0,0,,And, if you click on the little
Dialogue: 0,0:29:22.35,0:29:24.52,Default,,0,0,0,,eye icon, it'll now pick up an
Dialogue: 0,0:29:24.52,0:29:25.34,Default,,0,0,0,,image like this.
Dialogue: 0,0:29:25.75,0:29:27.05,Default,,0,0,0,,In addition to the image showing
Dialogue: 0,0:29:27.05,0:29:28.12,Default,,0,0,0,,you what the image looks like
Dialogue: 0,0:29:28.12,0:29:29.49,Default,,0,0,0,,and it's nice and upright, it
Dialogue: 0,0:29:29.49,0:29:31.43,Default,,0,0,0,,also shows you the graph to
Dialogue: 0,0:29:31.43,0:29:32.81,Default,,0,0,0,,create that image below it.
Dialogue: 0,0:29:33.25,0:29:35.35,Default,,0,0,0,,If we zoom in, we can see all
Dialogue: 0,0:29:35.35,0:29:36.09,Default,,0,0,0,,sorts of interesting
Dialogue: 0,0:29:36.09,0:29:36.72,Default,,0,0,0,,information.
Dialogue: 0,0:29:37.27,0:29:39.43,Default,,0,0,0,,We can see, at the input of the
Dialogue: 0,0:29:39.43,0:29:41.04,Default,,0,0,0,,image graph, we have our
Dialogue: 0,0:29:41.04,0:29:41.85,Default,,0,0,0,,IOSurface.
Dialogue: 0,0:29:41.98,0:29:43.54,Default,,0,0,0,,This is, I can tell by looking
Dialogue: 0,0:29:43.54,0:29:44.73,Default,,0,0,0,,at it it's a YCC image.
Dialogue: 0,0:29:44.73,0:29:45.71,Default,,0,0,0,,It means it probably came from a
Dialogue: 0,0:29:45.71,0:29:47.67,Default,,0,0,0,,JPEG, and you can see the size
Dialogue: 0,0:29:48.61,0:29:51.37,Default,,0,0,0,,of that surface, as well as that
Dialogue: 0,0:29:51.37,0:29:51.88,Default,,0,0,0,,it's opaque.
Dialogue: 0,0:29:52.48,0:29:54.99,Default,,0,0,0,,You can then see the next step
Dialogue: 0,0:29:54.99,0:29:56.59,Default,,0,0,0,,above that in the graph is a
Dialogue: 0,0:29:56.59,0:29:57.85,Default,,0,0,0,,color-matching operation.
Dialogue: 0,0:29:57.85,0:29:59.07,Default,,0,0,0,,So we were able to determine
Dialogue: 0,0:29:59.07,0:30:00.00,Default,,0,0,0,,automatically what the
Dialogue: 0,0:30:00.23,0:30:01.42,Default,,0,0,0,,colorspace of the input image
Dialogue: 0,0:30:01.42,0:30:01.76,Default,,0,0,0,,was.
Dialogue: 0,0:30:02.03,0:30:03.32,Default,,0,0,0,,And we've inserted it in the
Dialogue: 0,0:30:03.32,0:30:05.27,Default,,0,0,0,,render graph and operation to
Dialogue: 0,0:30:05.47,0:30:06.82,Default,,0,0,0,,convert from the display P3
Dialogue: 0,0:30:06.82,0:30:08.26,Default,,0,0,0,,colorspace to Core Image's
Dialogue: 0,0:30:08.26,0:30:08.96,Default,,0,0,0,,workingspace.
Dialogue: 0,0:30:10.99,0:30:12.90,Default,,0,0,0,,And lastly, you can see three
Dialogue: 0,0:30:12.90,0:30:13.95,Default,,0,0,0,,affine matrices.
Dialogue: 0,0:30:14.08,0:30:15.37,Default,,0,0,0,,The first one, as we're counting
Dialogue: 0,0:30:15.37,0:30:16.89,Default,,0,0,0,,from the bottom, is the matrix
Dialogue: 0,0:30:16.89,0:30:17.86,Default,,0,0,0,,that converts from the image
Dialogue: 0,0:30:17.86,0:30:18.98,Default,,0,0,0,,coordinate system to the
Dialogue: 0,0:30:18.98,0:30:20.26,Default,,0,0,0,,Cartesian coordinate system that
Dialogue: 0,0:30:20.26,0:30:21.09,Default,,0,0,0,,Core Image uses.
Dialogue: 0,0:30:21.95,0:30:23.42,Default,,0,0,0,,Then we have the affine to make
Dialogue: 0,0:30:23.42,0:30:24.83,Default,,0,0,0,,the image upright, and then the
Dialogue: 0,0:30:24.83,0:30:27.12,Default,,0,0,0,,image affine to scale it down by
Dialogue: 0,0:30:27.12,0:30:27.71,Default,,0,0,0,,.5.
Dialogue: 0,0:30:28.47,0:30:29.66,Default,,0,0,0,,So now you can really look at an
Dialogue: 0,0:30:29.66,0:30:30.71,Default,,0,0,0,,image and see everything that's
Dialogue: 0,0:30:30.75,0:30:33.49,Default,,0,0,0,,being asked of it.
Dialogue: 0,0:30:33.77,0:30:35.28,Default,,0,0,0,,Now let's do something slightly
Dialogue: 0,0:30:35.28,0:30:35.99,Default,,0,0,0,,different this time.
Dialogue: 0,0:30:35.99,0:30:37.72,Default,,0,0,0,,Now we're going to ask for an
Dialogue: 0,0:30:37.72,0:30:38.69,Default,,0,0,0,,image, but we're going to ask
Dialogue: 0,0:30:38.69,0:30:40.77,Default,,0,0,0,,for the auxiliary disparity
Dialogue: 0,0:30:40.77,0:30:41.13,Default,,0,0,0,,image.
Dialogue: 0,0:30:41.27,0:30:42.47,Default,,0,0,0,,And this is a new option that we
Dialogue: 0,0:30:42.47,0:30:44.40,Default,,0,0,0,,have as well, and this, if your
Dialogue: 0,0:30:44.40,0:30:46.18,Default,,0,0,0,,image has depth information in
Dialogue: 0,0:30:46.18,0:30:49.16,Default,,0,0,0,,it, it will return that as a
Dialogue: 0,0:30:49.16,0:30:50.18,Default,,0,0,0,,monochrome image.
Dialogue: 0,0:30:51.82,0:30:53.28,Default,,0,0,0,,After we ask for that image,
Dialogue: 0,0:30:53.67,0:30:55.09,Default,,0,0,0,,we're going to apply a filter on
Dialogue: 0,0:30:55.09,0:30:55.20,Default,,0,0,0,,it.
Dialogue: 0,0:30:55.31,0:30:56.27,Default,,0,0,0,,In this case, we're going to
Dialogue: 0,0:30:56.27,0:30:58.18,Default,,0,0,0,,apply a bicubic scale transform
Dialogue: 0,0:30:58.46,0:30:59.53,Default,,0,0,0,,to adjust its size.
Dialogue: 0,0:31:01.21,0:31:03.21,Default,,0,0,0,,Now, if we were to hover over
Dialogue: 0,0:31:03.21,0:31:04.25,Default,,0,0,0,,this object while we're
Dialogue: 0,0:31:04.25,0:31:06.23,Default,,0,0,0,,debugging in Xcode, we will now
Dialogue: 0,0:31:06.74,0:31:07.82,Default,,0,0,0,,be able to get this image.
Dialogue: 0,0:31:08.25,0:31:09.27,Default,,0,0,0,,And now you can actually see the
Dialogue: 0,0:31:09.27,0:31:11.73,Default,,0,0,0,,disparity image where white is
Dialogue: 0,0:31:11.73,0:31:13.76,Default,,0,0,0,,in the foreground and darker is
Dialogue: 0,0:31:14.15,0:31:15.15,Default,,0,0,0,,further in the background, but
Dialogue: 0,0:31:15.46,0:31:17.72,Default,,0,0,0,,we can also see the graph that
Dialogue: 0,0:31:17.72,0:31:19.07,Default,,0,0,0,,was used to generate this image.
Dialogue: 0,0:31:19.80,0:31:21.60,Default,,0,0,0,,Here we see that the leaf or
Dialogue: 0,0:31:21.60,0:31:23.93,Default,,0,0,0,,input image is an IOSurface that
Dialogue: 0,0:31:23.93,0:31:25.58,Default,,0,0,0,,is a format luminance half
Dialogue: 0,0:31:25.58,0:31:27.98,Default,,0,0,0,,float, and you can also see that
Dialogue: 0,0:31:27.98,0:31:29.02,Default,,0,0,0,,the dimensions of the image are
Dialogue: 0,0:31:29.02,0:31:30.46,Default,,0,0,0,,smaller than the original image.
Dialogue: 0,0:31:31.92,0:31:33.31,Default,,0,0,0,,You can also see at the top of
Dialogue: 0,0:31:33.31,0:31:36.46,Default,,0,0,0,,this graph the cubic upsampling
Dialogue: 0,0:31:36.46,0:31:37.39,Default,,0,0,0,,filter that we've applied.
Dialogue: 0,0:31:38.82,0:31:40.02,Default,,0,0,0,,There's actually some method to
Dialogue: 0,0:31:40.02,0:31:41.29,Default,,0,0,0,,our colors that we chose here.
Dialogue: 0,0:31:41.56,0:31:42.73,Default,,0,0,0,,One thing you'll notice is all
Dialogue: 0,0:31:42.73,0:31:44.30,Default,,0,0,0,,of the inputs to our graphs are
Dialogue: 0,0:31:44.34,0:31:44.67,Default,,0,0,0,,purple.
Dialogue: 0,0:31:45.26,0:31:46.56,Default,,0,0,0,,Anything that affects the color
Dialogue: 0,0:31:46.56,0:31:48.65,Default,,0,0,0,,of an image, i.e., CIColorKernel
Dialogue: 0,0:31:49.04,0:31:49.54,Default,,0,0,0,,is red.
Dialogue: 0,0:31:49.63,0:31:50.88,Default,,0,0,0,,Anything that affects the
Dialogue: 0,0:31:50.88,0:31:52.18,Default,,0,0,0,,geometry, in other words, a
Dialogue: 0,0:31:52.18,0:31:53.68,Default,,0,0,0,,CIWarpKernel, is green.
Dialogue: 0,0:31:54.08,0:31:55.65,Default,,0,0,0,,And the rest of the kernels are
Dialogue: 0,0:31:55.65,0:31:56.98,Default,,0,0,0,,in a blue color.
Dialogue: 0,0:32:00.85,0:32:02.59,Default,,0,0,0,,So now let's get even more
Dialogue: 0,0:32:02.59,0:32:03.03,Default,,0,0,0,,interesting.
Dialogue: 0,0:32:03.03,0:32:04.79,Default,,0,0,0,,We're going to take the primary
Dialogue: 0,0:32:04.79,0:32:05.80,Default,,0,0,0,,image and we're going to apply
Dialogue: 0,0:32:05.80,0:32:07.91,Default,,0,0,0,,two different color cubes to it.
Dialogue: 0,0:32:08.26,0:32:09.72,Default,,0,0,0,,We're going to take those two
Dialogue: 0,0:32:09.72,0:32:10.97,Default,,0,0,0,,resulting images and then we're
Dialogue: 0,0:32:10.97,0:32:12.22,Default,,0,0,0,,going to combine them with the
Dialogue: 0,0:32:12.28,0:32:13.77,Default,,0,0,0,,CIBlendWithMask filter.
Dialogue: 0,0:32:14.42,0:32:16.48,Default,,0,0,0,,And, if we look at this in Quick
Dialogue: 0,0:32:16.48,0:32:18.36,Default,,0,0,0,,Looks, we now see the final
Dialogue: 0,0:32:18.36,0:32:19.80,Default,,0,0,0,,image where it's been
Dialogue: 0,0:32:19.96,0:32:21.21,Default,,0,0,0,,beautifully filtered with two
Dialogue: 0,0:32:21.21,0:32:22.28,Default,,0,0,0,,different effects, based on
Dialogue: 0,0:32:22.32,0:32:23.25,Default,,0,0,0,,foreground and background.
Dialogue: 0,0:32:23.54,0:32:25.99,Default,,0,0,0,,But also, we see detailed
Dialogue: 0,0:32:25.99,0:32:27.52,Default,,0,0,0,,information about the graph that
Dialogue: 0,0:32:27.52,0:32:28.48,Default,,0,0,0,,was used to produce it.
Dialogue: 0,0:32:29.29,0:32:30.73,Default,,0,0,0,,You can see here, on the
Dialogue: 0,0:32:30.78,0:32:32.29,Default,,0,0,0,,left-hand side, the portion of
Dialogue: 0,0:32:32.29,0:32:33.66,Default,,0,0,0,,the subgraph where we took the
Dialogue: 0,0:32:33.66,0:32:36.35,Default,,0,0,0,,input image, got the color cube
Dialogue: 0,0:32:36.35,0:32:40.06,Default,,0,0,0,,data, which is a 32 by 24 image,
Dialogue: 0,0:32:40.49,0:32:41.91,Default,,0,0,0,,and then apply that color cube
Dialogue: 0,0:32:41.91,0:32:42.19,Default,,0,0,0,,to it.
Dialogue: 0,0:32:42.81,0:32:44.99,Default,,0,0,0,,On the middle graph, we're doing
Dialogue: 0,0:32:44.99,0:32:45.79,Default,,0,0,0,,the same thing for the
Dialogue: 0,0:32:45.79,0:32:46.67,Default,,0,0,0,,background image.
Dialogue: 0,0:32:47.42,0:32:49.08,Default,,0,0,0,,All of these, plus the mask
Dialogue: 0,0:32:49.08,0:32:50.56,Default,,0,0,0,,image, are used to combine with
Dialogue: 0,0:32:50.56,0:32:51.59,Default,,0,0,0,,the blendWithMask kernel.
Dialogue: 0,0:32:52.19,0:32:55.21,Default,,0,0,0,,So we're hoping that gives you
Dialogue: 0,0:32:55.21,0:32:57.20,Default,,0,0,0,,great insight on how your
Dialogue: 0,0:32:57.20,0:32:58.81,Default,,0,0,0,,application creates CIImages.
Dialogue: 0,0:32:59.08,0:33:00.41,Default,,0,0,0,,But what happens when it comes
Dialogue: 0,0:33:00.41,0:33:00.95,Default,,0,0,0,,time to render?
Dialogue: 0,0:33:00.95,0:33:01.77,Default,,0,0,0,,And this is where things get
Dialogue: 0,0:33:01.77,0:33:02.50,Default,,0,0,0,,really interesting.
Dialogue: 0,0:33:03.30,0:33:04.93,Default,,0,0,0,,Once you tell a CIContext to
Dialogue: 0,0:33:04.93,0:33:06.57,Default,,0,0,0,,start a task, that'll return a
Dialogue: 0,0:33:06.57,0:33:07.92,Default,,0,0,0,,CIRenderedTask object.
Dialogue: 0,0:33:08.19,0:33:10.07,Default,,0,0,0,,This also supports Quick Looks.
Dialogue: 0,0:33:10.61,0:33:12.16,Default,,0,0,0,,And, if we look at this, we see
Dialogue: 0,0:33:12.16,0:33:13.29,Default,,0,0,0,,now an even more elaborate
Dialogue: 0,0:33:13.29,0:33:13.68,Default,,0,0,0,,graph.
Dialogue: 0,0:33:14.16,0:33:17.00,Default,,0,0,0,,Again, the color coding is the
Dialogue: 0,0:33:17.00,0:33:18.60,Default,,0,0,0,,same and we can see some of the
Dialogue: 0,0:33:18.60,0:33:21.73,Default,,0,0,0,,same operations but now, what we
Dialogue: 0,0:33:21.73,0:33:23.13,Default,,0,0,0,,saw before as a color matching
Dialogue: 0,0:33:23.13,0:33:24.47,Default,,0,0,0,,operation has been converted
Dialogue: 0,0:33:24.47,0:33:25.43,Default,,0,0,0,,into the primitives that are
Dialogue: 0,0:33:25.43,0:33:26.60,Default,,0,0,0,,needed to do the color
Dialogue: 0,0:33:26.60,0:33:27.05,Default,,0,0,0,,management.
Dialogue: 0,0:33:27.28,0:33:28.42,Default,,0,0,0,,So we can see that we needed to
Dialogue: 0,0:33:28.42,0:33:30.51,Default,,0,0,0,,apply this gamma function and
Dialogue: 0,0:33:30.51,0:33:31.86,Default,,0,0,0,,this color matrix to convert
Dialogue: 0,0:33:31.86,0:33:33.57,Default,,0,0,0,,from P3 to our workingspace.
Dialogue: 0,0:33:34.73,0:33:35.94,Default,,0,0,0,,Another thing you can see is,
Dialogue: 0,0:33:35.94,0:33:37.23,Default,,0,0,0,,while the original image had
Dialogue: 0,0:33:37.23,0:33:39.14,Default,,0,0,0,,three affine transforms, Core
Dialogue: 0,0:33:39.14,0:33:41.09,Default,,0,0,0,,Image has concatenated those all
Dialogue: 0,0:33:41.09,0:33:41.52,Default,,0,0,0,,into one.
Dialogue: 0,0:33:42.05,0:33:45.64,Default,,0,0,0,,Another thing you can notice is
Dialogue: 0,0:33:45.70,0:33:47.38,Default,,0,0,0,,at the end of the graph, we now
Dialogue: 0,0:33:47.38,0:33:48.46,Default,,0,0,0,,know what the destination
Dialogue: 0,0:33:48.46,0:33:49.29,Default,,0,0,0,,colorspace is.
Dialogue: 0,0:33:49.40,0:33:50.99,Default,,0,0,0,,So those operations have been
Dialogue: 0,0:33:50.99,0:33:52.24,Default,,0,0,0,,applied to the image as well,
Dialogue: 0,0:33:53.42,0:33:57.24,Default,,0,0,0,,both applying the colorspace as
Dialogue: 0,0:33:57.24,0:33:58.37,Default,,0,0,0,,well as the coordinate system
Dialogue: 0,0:33:58.37,0:33:59.40,Default,,0,0,0,,transform for the final
Dialogue: 0,0:33:59.40,0:33:59.98,Default,,0,0,0,,destination.
Dialogue: 0,0:33:59.98,0:34:02.00,Default,,0,0,0,,You can also see it associated
Dialogue: 0,0:34:02.00,0:34:03.06,Default,,0,0,0,,with all these objects or all
Dialogue: 0,0:34:03.06,0:34:04.33,Default,,0,0,0,,the dimensions of all the images
Dialogue: 0,0:34:04.33,0:34:05.51,Default,,0,0,0,,that are involved at each stage
Dialogue: 0,0:34:05.51,0:34:09.21,Default,,0,0,0,,of the render graph.
Dialogue: 0,0:34:09.28,0:34:10.61,Default,,0,0,0,,Now, if you wait for your task
Dialogue: 0,0:34:10.61,0:34:12.46,Default,,0,0,0,,to be completed, now there's a
Dialogue: 0,0:34:12.46,0:34:13.16,Default,,0,0,0,,new object.
Dialogue: 0,0:34:13.16,0:34:14.75,Default,,0,0,0,,And associated with this object
Dialogue: 0,0:34:15.84,0:34:17.60,Default,,0,0,0,,is detailed information about
Dialogue: 0,0:34:17.60,0:34:18.91,Default,,0,0,0,,how Core Image was able to
Dialogue: 0,0:34:18.91,0:34:20.24,Default,,0,0,0,,concatenate and what the
Dialogue: 0,0:34:20.24,0:34:21.74,Default,,0,0,0,,performance of that render was.
Dialogue: 0,0:34:22.39,0:34:23.29,Default,,0,0,0,,You'll see now there's much
Dialogue: 0,0:34:23.29,0:34:25.03,Default,,0,0,0,,fewer objects in the tree
Dialogue: 0,0:34:25.03,0:34:26.19,Default,,0,0,0,,because of concatenation.
Dialogue: 0,0:34:26.53,0:34:27.53,Default,,0,0,0,,If we look at one of the lower
Dialogue: 0,0:34:27.53,0:34:29.64,Default,,0,0,0,,ones here, we can see that this
Dialogue: 0,0:34:29.70,0:34:31.68,Default,,0,0,0,,particular program is the result
Dialogue: 0,0:34:31.68,0:34:33.57,Default,,0,0,0,,of concatenating a few steps
Dialogue: 0,0:34:33.57,0:34:36.82,Default,,0,0,0,,into one program, and we can
Dialogue: 0,0:34:36.82,0:34:38.33,Default,,0,0,0,,also see associated with this
Dialogue: 0,0:34:38.56,0:34:39.50,Default,,0,0,0,,the amount of time that was
Dialogue: 0,0:34:39.50,0:34:41.13,Default,,0,0,0,,spent on that program in
Dialogue: 0,0:34:41.13,0:34:41.82,Default,,0,0,0,,milliseconds.
Dialogue: 0,0:34:42.56,0:34:43.84,Default,,0,0,0,,One great feature of Core Image
Dialogue: 0,0:34:43.84,0:34:44.80,Default,,0,0,0,,is, if you then render this
Dialogue: 0,0:34:44.80,0:34:47.09,Default,,0,0,0,,image again later and a portion
Dialogue: 0,0:34:47.09,0:34:48.55,Default,,0,0,0,,of the graph is the same, then
Dialogue: 0,0:34:48.55,0:34:50.52,Default,,0,0,0,,Core Image may be able to obtain
Dialogue: 0,0:34:50.52,0:34:51.66,Default,,0,0,0,,the previous results from a
Dialogue: 0,0:34:51.66,0:34:52.15,Default,,0,0,0,,cache.
Dialogue: 0,0:34:52.68,0:34:54.02,Default,,0,0,0,,If that happens, then you'll see
Dialogue: 0,0:34:54.02,0:34:55.27,Default,,0,0,0,,the time go to zero in those
Dialogue: 0,0:34:55.27,0:34:55.74,Default,,0,0,0,,cases.
Dialogue: 0,0:34:56.22,0:34:57.82,Default,,0,0,0,,So this also provides a way for
Dialogue: 0,0:34:57.82,0:34:59.57,Default,,0,0,0,,your application to know how
Dialogue: 0,0:34:59.57,0:35:00.91,Default,,0,0,0,,efficiently Core Image is able
Dialogue: 0,0:35:00.91,0:35:02.78,Default,,0,0,0,,to render and cache your
Dialogue: 0,0:35:02.78,0:35:05.42,Default,,0,0,0,,results, given memory limits.
Dialogue: 0,0:35:05.99,0:35:09.14,Default,,0,0,0,,So we hope you find this really
Dialogue: 0,0:35:09.14,0:35:10.89,Default,,0,0,0,,informative and instructional on
Dialogue: 0,0:35:10.89,0:35:12.23,Default,,0,0,0,,how Core Image works internally.
Dialogue: 0,0:35:13.90,0:35:14.85,Default,,0,0,0,,The next subject I'd like to
Dialogue: 0,0:35:14.85,0:35:17.01,Default,,0,0,0,,talk a little bit about today is
Dialogue: 0,0:35:17.54,0:35:18.93,Default,,0,0,0,,barcodes, specifically the
Dialogue: 0,0:35:18.93,0:35:20.45,Default,,0,0,0,,CIBarcodeDescriptor API.
Dialogue: 0,0:35:21.70,0:35:23.38,Default,,0,0,0,,We now have great broad support
Dialogue: 0,0:35:23.42,0:35:24.89,Default,,0,0,0,,for barcodes on our platform.
Dialogue: 0,0:35:25.34,0:35:26.80,Default,,0,0,0,,Barcodes of various different
Dialogue: 0,0:35:26.80,0:35:29.01,Default,,0,0,0,,types from Aztec to Code128 to
Dialogue: 0,0:35:29.01,0:35:31.04,Default,,0,0,0,,QRCode and PDF417.
Dialogue: 0,0:35:32.47,0:35:33.82,Default,,0,0,0,,We also have support for
Dialogue: 0,0:35:33.82,0:35:35.73,Default,,0,0,0,,barcodes across a broad variety
Dialogue: 0,0:35:35.73,0:35:37.41,Default,,0,0,0,,of frameworks, and those
Dialogue: 0,0:35:37.41,0:35:38.60,Default,,0,0,0,,frameworks use barcodes in
Dialogue: 0,0:35:38.60,0:35:39.98,Default,,0,0,0,,different ways for good reasons.
Dialogue: 0,0:35:40.60,0:35:43.32,Default,,0,0,0,,For example, oops, sorry.
Dialogue: 0,0:35:43.32,0:35:46.05,Default,,0,0,0,,AVFoundation is the framework to
Dialogue: 0,0:35:46.05,0:35:47.50,Default,,0,0,0,,use if you want to detect
Dialogue: 0,0:35:47.58,0:35:49.05,Default,,0,0,0,,barcodes when you're capturing
Dialogue: 0,0:35:49.30,0:35:50.41,Default,,0,0,0,,video from the camera.
Dialogue: 0,0:35:51.51,0:35:53.64,Default,,0,0,0,,If you want to detect barcodes
Dialogue: 0,0:35:53.90,0:35:55.66,Default,,0,0,0,,from either still images or from
Dialogue: 0,0:35:55.66,0:35:57.76,Default,,0,0,0,,a video post-capture, the Vision
Dialogue: 0,0:35:57.76,0:35:58.94,Default,,0,0,0,,framework is a great way of
Dialogue: 0,0:35:59.04,0:36:00.07,Default,,0,0,0,,using it.
Dialogue: 0,0:36:00.26,0:36:01.52,Default,,0,0,0,,And lastly, you can use Core
Dialogue: 0,0:36:01.52,0:36:04.18,Default,,0,0,0,,Image to render barcodes into
Dialogue: 0,0:36:04.18,0:36:05.26,Default,,0,0,0,,actual image files.
Dialogue: 0,0:36:06.60,0:36:08.12,Default,,0,0,0,,Given this broad support across
Dialogue: 0,0:36:08.12,0:36:09.82,Default,,0,0,0,,frameworks, we wanted to have a
Dialogue: 0,0:36:09.82,0:36:11.22,Default,,0,0,0,,new data type that would allow
Dialogue: 0,0:36:11.83,0:36:14.02,Default,,0,0,0,,the barcode information to be
Dialogue: 0,0:36:14.02,0:36:15.21,Default,,0,0,0,,transported between these
Dialogue: 0,0:36:15.25,0:36:17.21,Default,,0,0,0,,frameworks in a lossless way.
Dialogue: 0,0:36:19.11,0:36:21.14,Default,,0,0,0,,And that is the reason for the
Dialogue: 0,0:36:21.14,0:36:23.79,Default,,0,0,0,,new CIBarcodeDescription API.
Dialogue: 0,0:36:25.04,0:36:27.55,Default,,0,0,0,,There's one key property of this
Dialogue: 0,0:36:27.55,0:36:28.93,Default,,0,0,0,,object, and that is the
Dialogue: 0,0:36:28.93,0:36:30.10,Default,,0,0,0,,errorCorrectedPayload.
Dialogue: 0,0:36:30.86,0:36:32.76,Default,,0,0,0,,This is not just the textural
Dialogue: 0,0:36:32.76,0:36:34.79,Default,,0,0,0,,message of a barcode.
Dialogue: 0,0:36:34.79,0:36:36.04,Default,,0,0,0,,It's actually the raw data,
Dialogue: 0,0:36:36.35,0:36:38.37,Default,,0,0,0,,which allows you to use barcodes
Dialogue: 0,0:36:38.37,0:36:39.90,Default,,0,0,0,,and get information out of them
Dialogue: 0,0:36:40.10,0:36:41.72,Default,,0,0,0,,in ways that are more than just
Dialogue: 0,0:36:41.72,0:36:42.68,Default,,0,0,0,,textural information.
Dialogue: 0,0:36:43.02,0:36:45.05,Default,,0,0,0,,So, with this raw
Dialogue: 0,0:36:45.80,0:36:47.25,Default,,0,0,0,,errorCorrectedPayload and
Dialogue: 0,0:36:47.25,0:36:48.88,Default,,0,0,0,,understanding of each barcode's
Dialogue: 0,0:36:49.05,0:36:50.42,Default,,0,0,0,,formatting, you can do
Dialogue: 0,0:36:50.90,0:36:53.04,Default,,0,0,0,,interesting properties and build
Dialogue: 0,0:36:53.04,0:36:53.81,Default,,0,0,0,,interesting vertical
Dialogue: 0,0:36:53.81,0:36:55.31,Default,,0,0,0,,applications based on barcodes.
Dialogue: 0,0:36:56.30,0:36:58.06,Default,,0,0,0,,Also there are properties that
Dialogue: 0,0:36:58.06,0:36:59.43,Default,,0,0,0,,are unique to each particular
Dialogue: 0,0:36:59.43,0:36:59.94,Default,,0,0,0,,barcode.
Dialogue: 0,0:37:00.43,0:37:01.75,Default,,0,0,0,,For example, in the case of the
Dialogue: 0,0:37:01.75,0:37:04.27,Default,,0,0,0,,Aztec barcode, you can know how
Dialogue: 0,0:37:04.54,0:37:06.45,Default,,0,0,0,,many layers were involved in
Dialogue: 0,0:37:06.45,0:37:06.90,Default,,0,0,0,,that code.
Dialogue: 0,0:37:07.30,0:37:08.97,Default,,0,0,0,,Or, in the case of the QRCode
Dialogue: 0,0:37:09.22,0:37:10.77,Default,,0,0,0,,barcode, what the maskPattern
Dialogue: 0,0:37:10.77,0:37:11.76,Default,,0,0,0,,that was used on this.
Dialogue: 0,0:37:12.88,0:37:14.93,Default,,0,0,0,,So let me give you an example of
Dialogue: 0,0:37:14.93,0:37:16.61,Default,,0,0,0,,how this type can be used across
Dialogue: 0,0:37:16.65,0:37:17.78,Default,,0,0,0,,these three frameworks.
Dialogue: 0,0:37:18.24,0:37:20.51,Default,,0,0,0,,So firstly, in the area of
Dialogue: 0,0:37:20.57,0:37:23.43,Default,,0,0,0,,AVFoundation, it is possible to
Dialogue: 0,0:37:23.67,0:37:24.47,Default,,0,0,0,,register for a
Dialogue: 0,0:37:24.47,0:37:26.61,Default,,0,0,0,,metadataOutputObjectDelegate
Dialogue: 0,0:37:26.92,0:37:29.13,Default,,0,0,0,,that will see barcodes, as they
Dialogue: 0,0:37:29.13,0:37:31.85,Default,,0,0,0,,are appeared in a video feed.
Dialogue: 0,0:37:33.07,0:37:35.45,Default,,0,0,0,,In your code, all you have to do
Dialogue: 0,0:37:35.45,0:37:36.45,Default,,0,0,0,,is setup this object.
Dialogue: 0,0:37:36.75,0:37:38.70,Default,,0,0,0,,And, in your response for when
Dialogue: 0,0:37:38.70,0:37:41.25,Default,,0,0,0,,that object is detected, you can
Dialogue: 0,0:37:41.43,0:37:44.11,Default,,0,0,0,,ask for the object as a
Dialogue: 0,0:37:44.11,0:37:45.82,Default,,0,0,0,,AVMetadataMachine
Dialogue: 0,0:37:45.82,0:37:47.28,Default,,0,0,0,,ReadableCodeObject.
Dialogue: 0,0:37:47.91,0:37:49.37,Default,,0,0,0,,From that object, you can get
Dialogue: 0,0:37:49.46,0:37:51.01,Default,,0,0,0,,the descriptor property, and
Dialogue: 0,0:37:51.01,0:37:52.12,Default,,0,0,0,,that will return one of the
Dialogue: 0,0:37:52.12,0:37:53.98,Default,,0,0,0,,CIBarcodeDescriptor objects.
Dialogue: 0,0:37:57.16,0:37:58.61,Default,,0,0,0,,Second if you want to use the
Dialogue: 0,0:37:58.61,0:37:59.78,Default,,0,0,0,,Vision framework to detect
Dialogue: 0,0:37:59.85,0:38:01.00,Default,,0,0,0,,barcodes, the code is really
Dialogue: 0,0:38:01.00,0:38:01.77,Default,,0,0,0,,simple as well.
Dialogue: 0,0:38:02.26,0:38:03.35,Default,,0,0,0,,Basically, we're going to use
Dialogue: 0,0:38:03.35,0:38:05.22,Default,,0,0,0,,Vision to both create a request
Dialogue: 0,0:38:05.22,0:38:06.96,Default,,0,0,0,,handler as well as a request.
Dialogue: 0,0:38:07.63,0:38:09.22,Default,,0,0,0,,Then we're going to issue that
Dialogue: 0,0:38:09.22,0:38:10.84,Default,,0,0,0,,request to the handler to detect
Dialogue: 0,0:38:10.89,0:38:11.44,Default,,0,0,0,,the barcode.
Dialogue: 0,0:38:12.00,0:38:13.94,Default,,0,0,0,,Once we get the request results
Dialogue: 0,0:38:13.94,0:38:15.78,Default,,0,0,0,,back, we can then get the
Dialogue: 0,0:38:15.78,0:38:17.46,Default,,0,0,0,,barcodeDescriptor object from
Dialogue: 0,0:38:17.46,0:38:18.22,Default,,0,0,0,,that result.
Dialogue: 0,0:38:19.01,0:38:19.56,Default,,0,0,0,,Very simple.
Dialogue: 0,0:38:20.67,0:38:23.09,Default,,0,0,0,,And lastly, simplest of all, is
Dialogue: 0,0:38:23.09,0:38:24.53,Default,,0,0,0,,using Core Image to generate a
Dialogue: 0,0:38:24.53,0:38:26.34,Default,,0,0,0,,barcode image from a descriptor.
Dialogue: 0,0:38:26.98,0:38:28.06,Default,,0,0,0,,So, in this case, it's very
Dialogue: 0,0:38:28.06,0:38:28.43,Default,,0,0,0,,easy.
Dialogue: 0,0:38:28.43,0:38:29.56,Default,,0,0,0,,We just create an instance of a
Dialogue: 0,0:38:29.56,0:38:31.42,Default,,0,0,0,,CIFilter of type
Dialogue: 0,0:38:31.48,0:38:32.39,Default,,0,0,0,,BarcodeGenerator.
Dialogue: 0,0:38:33.17,0:38:34.97,Default,,0,0,0,,We then give that filter the
Dialogue: 0,0:38:34.97,0:38:36.73,Default,,0,0,0,,input of the descriptor object
Dialogue: 0,0:38:36.79,0:38:38.47,Default,,0,0,0,,for the inputBarcodeDescriptor.
Dialogue: 0,0:38:39.14,0:38:40.15,Default,,0,0,0,,And then we're going ask for the
Dialogue: 0,0:38:40.15,0:38:40.82,Default,,0,0,0,,output image.
Dialogue: 0,0:38:42.18,0:38:43.95,Default,,0,0,0,,And these combined allow us to
Dialogue: 0,0:38:43.95,0:38:45.72,Default,,0,0,0,,do some interesting stuff with
Dialogue: 0,0:38:46.10,0:38:47.64,Default,,0,0,0,,both detection and generation of
Dialogue: 0,0:38:47.64,0:38:48.23,Default,,0,0,0,,barcodes.
Dialogue: 0,0:38:48.63,0:38:50.63,Default,,0,0,0,,And so, as a brief prerecorded
Dialogue: 0,0:38:50.63,0:38:52.06,Default,,0,0,0,,demo of this, let me show you a
Dialogue: 0,0:38:52.06,0:38:53.06,Default,,0,0,0,,sample app that we wrote.
Dialogue: 0,0:38:53.82,0:38:55.86,Default,,0,0,0,,And what this does is look for
Dialogue: 0,0:38:56.10,0:38:57.63,Default,,0,0,0,,frames of video, pulls the
Dialogue: 0,0:38:57.63,0:38:59.31,Default,,0,0,0,,barcode, and actually renders
Dialogue: 0,0:38:59.54,0:39:01.08,Default,,0,0,0,,the barcode back over the
Dialogue: 0,0:39:01.25,0:39:03.98,Default,,0,0,0,,barcode as a -- kind of a
Dialogue: 0,0:39:03.98,0:39:05.34,Default,,0,0,0,,augmented image over it.
Dialogue: 0,0:39:05.84,0:39:06.70,Default,,0,0,0,,And you can see that we were
Dialogue: 0,0:39:06.70,0:39:08.61,Default,,0,0,0,,able to perfectly reproduce the
Dialogue: 0,0:39:08.61,0:39:10.12,Default,,0,0,0,,detected barcode and re-render
Dialogue: 0,0:39:10.12,0:39:10.73,Default,,0,0,0,,it on top of it.
Dialogue: 0,0:39:11.21,0:39:12.50,Default,,0,0,0,,If we just see that again real
Dialogue: 0,0:39:12.50,0:39:13.99,Default,,0,0,0,,quickly, we can actually even
Dialogue: 0,0:39:13.99,0:39:15.16,Default,,0,0,0,,see that it's being render
Dialogue: 0,0:39:15.16,0:39:17.53,Default,,0,0,0,,because overlapping my thumb in
Dialogue: 0,0:39:17.53,0:39:18.02,Default,,0,0,0,,the image.
Dialogue: 0,0:39:19.46,0:39:19.75,Default,,0,0,0,,So --
Dialogue: 0,0:39:20.52,0:39:25.86,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:39:26.36,0:39:26.73,Default,,0,0,0,,All right.
Dialogue: 0,0:39:26.73,0:39:28.60,Default,,0,0,0,,So for our last section of our
Dialogue: 0,0:39:28.60,0:39:30.42,Default,,0,0,0,,talk today, I'm really excited
Dialogue: 0,0:39:30.42,0:39:32.04,Default,,0,0,0,,to talk about how to use Core
Dialogue: 0,0:39:32.04,0:39:33.47,Default,,0,0,0,,Image and Vision together.
Dialogue: 0,0:39:33.98,0:39:35.42,Default,,0,0,0,,These are two great frameworks.
Dialogue: 0,0:39:35.60,0:39:36.93,Default,,0,0,0,,Core Image is a great easy to
Dialogue: 0,0:39:36.93,0:39:38.20,Default,,0,0,0,,use framework for applying image
Dialogue: 0,0:39:38.26,0:39:39.37,Default,,0,0,0,,processing to images.
Dialogue: 0,0:39:39.69,0:39:41.30,Default,,0,0,0,,Vision is a great framework for
Dialogue: 0,0:39:41.49,0:39:42.74,Default,,0,0,0,,finding information about
Dialogue: 0,0:39:42.74,0:39:43.17,Default,,0,0,0,,images.
Dialogue: 0,0:39:43.17,0:39:44.93,Default,,0,0,0,,And you can use those together
Dialogue: 0,0:39:44.93,0:39:46.62,Default,,0,0,0,,in great and novel ways.
Dialogue: 0,0:39:48.35,0:39:50.64,Default,,0,0,0,,For example, you can use Core
Dialogue: 0,0:39:50.64,0:39:52.14,Default,,0,0,0,,Image as a way of preparing
Dialogue: 0,0:39:52.14,0:39:53.87,Default,,0,0,0,,images before passing them to
Dialogue: 0,0:39:53.87,0:39:54.26,Default,,0,0,0,,Vision.
Dialogue: 0,0:39:54.75,0:39:56.10,Default,,0,0,0,,For example, you might want to
Dialogue: 0,0:39:56.10,0:39:57.63,Default,,0,0,0,,crop the image to an area of
Dialogue: 0,0:39:57.63,0:39:58.15,Default,,0,0,0,,interest.
Dialogue: 0,0:39:58.15,0:39:59.94,Default,,0,0,0,,Or correctly make the image
Dialogue: 0,0:39:59.94,0:40:00.47,Default,,0,0,0,,upright.
Dialogue: 0,0:40:00.75,0:40:02.33,Default,,0,0,0,,Or convert to grayscale before
Dialogue: 0,0:40:02.36,0:40:03.17,Default,,0,0,0,,passing division.
Dialogue: 0,0:40:04.98,0:40:06.40,Default,,0,0,0,,Also, once you've called Vision,
Dialogue: 0,0:40:06.67,0:40:07.94,Default,,0,0,0,,once you have information about
Dialogue: 0,0:40:07.94,0:40:09.28,Default,,0,0,0,,the image, you might be able to
Dialogue: 0,0:40:09.28,0:40:10.72,Default,,0,0,0,,use that as a way of guiding how
Dialogue: 0,0:40:10.72,0:40:12.45,Default,,0,0,0,,you want to adjust the look of
Dialogue: 0,0:40:12.45,0:40:12.98,Default,,0,0,0,,your image.
Dialogue: 0,0:40:13.26,0:40:14.57,Default,,0,0,0,,So, for example, if a feature is
Dialogue: 0,0:40:14.57,0:40:16.16,Default,,0,0,0,,detected in an image, you might
Dialogue: 0,0:40:16.16,0:40:17.90,Default,,0,0,0,,choose different ways to apply
Dialogue: 0,0:40:18.40,0:40:19.64,Default,,0,0,0,,image processing to it.
Dialogue: 0,0:40:20.99,0:40:22.28,Default,,0,0,0,,And, of course, these two can be
Dialogue: 0,0:40:22.28,0:40:23.03,Default,,0,0,0,,combined together.
Dialogue: 0,0:40:23.91,0:40:25.43,Default,,0,0,0,,But to go into a little bit more
Dialogue: 0,0:40:25.50,0:40:26.53,Default,,0,0,0,,detail about this.
Dialogue: 0,0:40:26.53,0:40:28.03,Default,,0,0,0,,We have a interesting demo we'd
Dialogue: 0,0:40:28.03,0:40:29.76,Default,,0,0,0,,like to talk about today, where
Dialogue: 0,0:40:29.76,0:40:31.53,Default,,0,0,0,,we're going to try to generate a
Dialogue: 0,0:40:31.53,0:40:34.07,Default,,0,0,0,,photo from several frames of the
Dialogue: 0,0:40:34.07,0:40:34.52,Default,,0,0,0,,video.
Dialogue: 0,0:40:34.79,0:40:36.68,Default,,0,0,0,,Where the unwanted objects have
Dialogue: 0,0:40:36.68,0:40:38.45,Default,,0,0,0,,been removed from that.
Dialogue: 0,0:40:38.85,0:40:39.90,Default,,0,0,0,,And this demo is going to
Dialogue: 0,0:40:39.90,0:40:41.51,Default,,0,0,0,,involve using three frameworks
Dialogue: 0,0:40:41.51,0:40:42.35,Default,,0,0,0,,and four steps.
Dialogue: 0,0:40:42.83,0:40:44.16,Default,,0,0,0,,The first step is going to be
Dialogue: 0,0:40:44.16,0:40:45.53,Default,,0,0,0,,using AVFoundation to get the
Dialogue: 0,0:40:45.53,0:40:46.56,Default,,0,0,0,,frames out of the video.
Dialogue: 0,0:40:47.51,0:40:49.22,Default,,0,0,0,,And that's very simple to do.
Dialogue: 0,0:40:50.06,0:40:51.38,Default,,0,0,0,,Then we're going to use Vision
Dialogue: 0,0:40:51.55,0:40:53.21,Default,,0,0,0,,to determine what the homography
Dialogue: 0,0:40:53.21,0:40:55.29,Default,,0,0,0,,matrices are needed to align
Dialogue: 0,0:40:55.29,0:40:57.03,Default,,0,0,0,,each of these frames to a common
Dialogue: 0,0:40:57.03,0:40:57.55,Default,,0,0,0,,reference.
Dialogue: 0,0:40:58.67,0:40:59.81,Default,,0,0,0,,Inevitably there's some camera
Dialogue: 0,0:40:59.81,0:41:00.60,Default,,0,0,0,,shake, so a little bit of
Dialogue: 0,0:41:00.60,0:41:01.84,Default,,0,0,0,,correction goes a long way.
Dialogue: 0,0:41:02.96,0:41:04.45,Default,,0,0,0,,So that will allow us to get
Dialogue: 0,0:41:04.45,0:41:06.49,Default,,0,0,0,,these homography matrices
Dialogue: 0,0:41:06.49,0:41:07.49,Default,,0,0,0,,represented here as these
Dialogue: 0,0:41:07.70,0:41:09.64,Default,,0,0,0,,slightly moving arrows for each
Dialogue: 0,0:41:09.64,0:41:10.44,Default,,0,0,0,,frame in the image.
Dialogue: 0,0:41:11.90,0:41:13.74,Default,,0,0,0,,The third step is to use Core
Dialogue: 0,0:41:13.74,0:41:15.49,Default,,0,0,0,,Image to align all these frames
Dialogue: 0,0:41:15.49,0:41:15.97,Default,,0,0,0,,to each other.
Dialogue: 0,0:41:16.75,0:41:17.94,Default,,0,0,0,,And that's very easy to do, as
Dialogue: 0,0:41:17.94,0:41:18.11,Default,,0,0,0,,well.
Dialogue: 0,0:41:19.11,0:41:20.80,Default,,0,0,0,,And lastly, we're going to use a
Dialogue: 0,0:41:20.80,0:41:22.57,Default,,0,0,0,,median technique to create a
Dialogue: 0,0:41:22.57,0:41:24.50,Default,,0,0,0,,single photo from all the frames
Dialogue: 0,0:41:24.50,0:41:26.93,Default,,0,0,0,,in the video in a way that
Dialogue: 0,0:41:27.05,0:41:29.11,Default,,0,0,0,,produces an optimal image.
Dialogue: 0,0:41:29.89,0:41:31.42,Default,,0,0,0,,The technique here is to produce
Dialogue: 0,0:41:31.42,0:41:33.17,Default,,0,0,0,,an output image where, at each
Dialogue: 0,0:41:33.17,0:41:34.32,Default,,0,0,0,,location of the output, we're
Dialogue: 0,0:41:34.50,0:41:36.27,Default,,0,0,0,,going to look at locations in
Dialogue: 0,0:41:36.27,0:41:37.07,Default,,0,0,0,,the input frames.
Dialogue: 0,0:41:37.46,0:41:38.78,Default,,0,0,0,,And we're going to use the
Dialogue: 0,0:41:38.78,0:41:41.24,Default,,0,0,0,,median value at each location.
Dialogue: 0,0:41:41.49,0:41:42.86,Default,,0,0,0,,If you look in this example
Dialogue: 0,0:41:42.86,0:41:44.97,Default,,0,0,0,,here, the first four images are
Dialogue: 0,0:41:45.74,0:41:47.50,Default,,0,0,0,,that little spot is over the
Dialogue: 0,0:41:47.50,0:41:49.21,Default,,0,0,0,,concrete pavement, but the fifth
Dialogue: 0,0:41:49.21,0:41:52.05,Default,,0,0,0,,one is over the legs.
Dialogue: 0,0:41:52.67,0:41:54.02,Default,,0,0,0,,Now, if we take the median of
Dialogue: 0,0:41:54.13,0:41:55.66,Default,,0,0,0,,these five values, we're going
Dialogue: 0,0:41:55.66,0:41:56.73,Default,,0,0,0,,to get a value that looks like
Dialogue: 0,0:41:56.88,0:41:57.68,Default,,0,0,0,,just the concrete.
Dialogue: 0,0:41:58.24,0:41:59.07,Default,,0,0,0,,If we do the same thing at
Dialogue: 0,0:41:59.07,0:42:00.44,Default,,0,0,0,,another portion of the image,
Dialogue: 0,0:42:00.63,0:42:02.28,Default,,0,0,0,,again, we're here underneath the
Dialogue: 0,0:42:02.28,0:42:02.71,Default,,0,0,0,,tree.
Dialogue: 0,0:42:02.95,0:42:04.88,Default,,0,0,0,,Three of the five frames are
Dialogue: 0,0:42:04.88,0:42:05.22,Default,,0,0,0,,good.
Dialogue: 0,0:42:05.27,0:42:07.72,Default,,0,0,0,,The other two are less good.
Dialogue: 0,0:42:07.92,0:42:08.93,Default,,0,0,0,,So we're going to use the median
Dialogue: 0,0:42:08.93,0:42:10.43,Default,,0,0,0,,of those, and if you do that for
Dialogue: 0,0:42:10.43,0:42:12.34,Default,,0,0,0,,every pixel of an image, you get
Dialogue: 0,0:42:12.52,0:42:13.30,Default,,0,0,0,,a great result.
Dialogue: 0,0:42:13.30,0:42:14.54,Default,,0,0,0,,Where objects that are
Dialogue: 0,0:42:14.54,0:42:16.18,Default,,0,0,0,,transitory in the video are
Dialogue: 0,0:42:16.18,0:42:17.07,Default,,0,0,0,,magically removed.
Dialogue: 0,0:42:17.53,0:42:20.01,Default,,0,0,0,,Let me talk a little bit about
Dialogue: 0,0:42:20.01,0:42:21.34,Default,,0,0,0,,the code, and I promise we'll
Dialogue: 0,0:42:21.34,0:42:22.23,Default,,0,0,0,,get to the demo at the end.
Dialogue: 0,0:42:22.99,0:42:24.58,Default,,0,0,0,,The first step here is we're
Dialogue: 0,0:42:24.58,0:42:26.09,Default,,0,0,0,,going to use Vision to determine
Dialogue: 0,0:42:26.09,0:42:27.87,Default,,0,0,0,,the homographic registration for
Dialogue: 0,0:42:27.87,0:42:28.36,Default,,0,0,0,,each frame.
Dialogue: 0,0:42:28.72,0:42:29.91,Default,,0,0,0,,Again, this is quite easy.
Dialogue: 0,0:42:30.10,0:42:31.07,Default,,0,0,0,,We're going to use Vision to
Dialogue: 0,0:42:31.07,0:42:32.84,Default,,0,0,0,,create a request and a request
Dialogue: 0,0:42:32.84,0:42:35.39,Default,,0,0,0,,handler to produce that
Dialogue: 0,0:42:35.39,0:42:36.09,Default,,0,0,0,,information.
Dialogue: 0,0:42:36.54,0:42:38.23,Default,,0,0,0,,We're going to tell Vision to
Dialogue: 0,0:42:38.23,0:42:39.28,Default,,0,0,0,,perform that request.
Dialogue: 0,0:42:40.42,0:42:41.83,Default,,0,0,0,,And then once we get the result,
Dialogue: 0,0:42:41.83,0:42:43.33,Default,,0,0,0,,we'll ask for the result and
Dialogue: 0,0:42:43.70,0:42:45.08,Default,,0,0,0,,make sure it is an object of
Dialogue: 0,0:42:45.13,0:42:47.84,Default,,0,0,0,,type VNImageHomographic
Dialogue: 0,0:42:48.78,0:42:49.90,Default,,0,0,0,,AlignmentObservation.
Dialogue: 0,0:42:49.90,0:42:50.61,Default,,0,0,0,,Wow, that's a mouthful.
Dialogue: 0,0:42:51.05,0:42:52.56,Default,,0,0,0,,And then we'll return that.
Dialogue: 0,0:42:52.62,0:42:54.91,Default,,0,0,0,,That object is basically a 3 by
Dialogue: 0,0:42:54.91,0:42:55.62,Default,,0,0,0,,3 matrix.
Dialogue: 0,0:42:56.14,0:42:59.16,Default,,0,0,0,,Once we've returned that, we can
Dialogue: 0,0:42:59.16,0:43:01.08,Default,,0,0,0,,then use Core Image to align the
Dialogue: 0,0:43:01.08,0:43:02.79,Default,,0,0,0,,images based on this 3 by 3
Dialogue: 0,0:43:02.79,0:43:03.28,Default,,0,0,0,,matrix.
Dialogue: 0,0:43:03.59,0:43:04.58,Default,,0,0,0,,This is a little tricky, but
Dialogue: 0,0:43:04.58,0:43:05.96,Default,,0,0,0,,it's actually very easy to do
Dialogue: 0,0:43:06.22,0:43:07.95,Default,,0,0,0,,using a custom warp kernel
Dialogue: 0,0:43:07.95,0:43:08.58,Default,,0,0,0,,written in Metal.
Dialogue: 0,0:43:09.87,0:43:11.36,Default,,0,0,0,,You can see here in this kernel
Dialogue: 0,0:43:11.69,0:43:13.03,Default,,0,0,0,,we now have a parameter which is
Dialogue: 0,0:43:13.03,0:43:14.06,Default,,0,0,0,,a float3 by 3.
Dialogue: 0,0:43:14.06,0:43:15.03,Default,,0,0,0,,This is something that's new to
Dialogue: 0,0:43:15.03,0:43:15.92,Default,,0,0,0,,Core Image this year.
Dialogue: 0,0:43:16.66,0:43:17.70,Default,,0,0,0,,And what we're going to do is
Dialogue: 0,0:43:17.70,0:43:18.75,Default,,0,0,0,,we're going to get destCoord,
Dialogue: 0,0:43:18.97,0:43:20.40,Default,,0,0,0,,convert that to a homogenous
Dialogue: 0,0:43:20.40,0:43:21.93,Default,,0,0,0,,destCoord by adding a 1 to the
Dialogue: 0,0:43:21.93,0:43:22.10,Default,,0,0,0,,end.
Dialogue: 0,0:43:22.85,0:43:24.10,Default,,0,0,0,,We're then going to multiply
Dialogue: 0,0:43:24.10,0:43:26.96,Default,,0,0,0,,that vector by the matrix and
Dialogue: 0,0:43:26.96,0:43:27.86,Default,,0,0,0,,that gives us our
Dialogue: 0,0:43:27.86,0:43:29.70,Default,,0,0,0,,homogenousSrcCoord.
Dialogue: 0,0:43:29.70,0:43:31.25,Default,,0,0,0,,Then we're going to do a
Dialogue: 0,0:43:31.25,0:43:33.33,Default,,0,0,0,,perspective divide to get us the
Dialogue: 0,0:43:33.33,0:43:34.36,Default,,0,0,0,,source coordinate that we're
Dialogue: 0,0:43:34.36,0:43:35.08,Default,,0,0,0,,going to sample from.
Dialogue: 0,0:43:35.99,0:43:37.25,Default,,0,0,0,,And that's all there is to it.
Dialogue: 0,0:43:39.09,0:43:40.57,Default,,0,0,0,,The last step is to apply the
Dialogue: 0,0:43:40.57,0:43:41.94,Default,,0,0,0,,median filter in Core Image,
Dialogue: 0,0:43:41.98,0:43:43.90,Default,,0,0,0,,and, in this example here, I'm
Dialogue: 0,0:43:43.90,0:43:45.20,Default,,0,0,0,,illustrating the code that we
Dialogue: 0,0:43:45.26,0:43:47.41,Default,,0,0,0,,use for a 5-image median.
Dialogue: 0,0:43:48.05,0:43:49.45,Default,,0,0,0,,In fact, sometimes you have many
Dialogue: 0,0:43:49.45,0:43:50.52,Default,,0,0,0,,more and we'll go into that
Dialogue: 0,0:43:50.52,0:43:51.13,Default,,0,0,0,,during the demo.
Dialogue: 0,0:43:51.64,0:43:52.64,Default,,0,0,0,,But, in this case, we're going
Dialogue: 0,0:43:52.64,0:43:54.51,Default,,0,0,0,,to use a sorting network to
Dialogue: 0,0:43:55.08,0:43:56.72,Default,,0,0,0,,determine what the median value
Dialogue: 0,0:43:56.72,0:43:58.37,Default,,0,0,0,,of the five pixel samples are.
Dialogue: 0,0:43:59.17,0:44:00.34,Default,,0,0,0,,Again, if we look here, this is
Dialogue: 0,0:44:00.34,0:44:02.08,Default,,0,0,0,,a great example where writing
Dialogue: 0,0:44:02.08,0:44:03.62,Default,,0,0,0,,this kernel in Metal was
Dialogue: 0,0:44:03.62,0:44:05.60,Default,,0,0,0,,actually very convenient and
Dialogue: 0,0:44:05.60,0:44:07.12,Default,,0,0,0,,easy, because now we can
Dialogue: 0,0:44:07.12,0:44:08.53,Default,,0,0,0,,actually pass the values into
Dialogue: 0,0:44:08.53,0:44:11.08,Default,,0,0,0,,this swap function by reference
Dialogue: 0,0:44:11.14,0:44:11.86,Default,,0,0,0,,rather than value.
Dialogue: 0,0:44:12.57,0:44:15.02,Default,,0,0,0,,So now for the fun part.
Dialogue: 0,0:44:15.02,0:44:16.96,Default,,0,0,0,,I'm going to invite Sky up to
Dialogue: 0,0:44:16.96,0:44:17.42,Default,,0,0,0,,the stage.
Dialogue: 0,0:44:17.42,0:44:18.33,Default,,0,0,0,,He'll be showing you more about
Dialogue: 0,0:44:18.33,0:44:19.83,Default,,0,0,0,,this and showing how this filter
Dialogue: 0,0:44:19.83,0:44:19.97,Default,,0,0,0,,works.
Dialogue: 0,0:44:22.52,0:44:26.97,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:44:27.47,0:44:27.74,Default,,0,0,0,,>> All right.
Dialogue: 0,0:44:27.74,0:44:28.26,Default,,0,0,0,,Thank you, David.
Dialogue: 0,0:44:28.81,0:44:30.57,Default,,0,0,0,,Hi, my name is Sky and it's a
Dialogue: 0,0:44:30.57,0:44:31.59,Default,,0,0,0,,pleasure for me to bring to you
Dialogue: 0,0:44:31.59,0:44:33.36,Default,,0,0,0,,today this demo.
Dialogue: 0,0:44:33.36,0:44:34.72,Default,,0,0,0,,As we can see here on the top,
Dialogue: 0,0:44:34.72,0:44:36.28,Default,,0,0,0,,this is our input in video.
Dialogue: 0,0:44:36.48,0:44:38.45,Default,,0,0,0,,And, if I scrub around on the
Dialogue: 0,0:44:38.45,0:44:40.51,Default,,0,0,0,,slider, we can see that there's
Dialogue: 0,0:44:40.51,0:44:41.69,Default,,0,0,0,,no point in time during the
Dialogue: 0,0:44:41.69,0:44:43.29,Default,,0,0,0,,whole duration of the video that
Dialogue: 0,0:44:43.29,0:44:44.91,Default,,0,0,0,,there's a clear image that we
Dialogue: 0,0:44:44.91,0:44:46.20,Default,,0,0,0,,can take of the landmark.
Dialogue: 0,0:44:46.77,0:44:48.15,Default,,0,0,0,,So, for example, at the
Dialogue: 0,0:44:48.15,0:44:49.38,Default,,0,0,0,,beginning, we're obstructed by
Dialogue: 0,0:44:49.38,0:44:50.47,Default,,0,0,0,,the shadow here.
Dialogue: 0,0:44:50.51,0:44:52.03,Default,,0,0,0,,And then we have people passing
Dialogue: 0,0:44:52.03,0:44:52.38,Default,,0,0,0,,by.
Dialogue: 0,0:44:53.00,0:44:54.19,Default,,0,0,0,,So there's really just no point
Dialogue: 0,0:44:54.19,0:44:55.54,Default,,0,0,0,,during the entire video where we
Dialogue: 0,0:44:55.54,0:44:56.45,Default,,0,0,0,,can get a clean shot.
Dialogue: 0,0:44:57.21,0:45:00.58,Default,,0,0,0,,And actually, if we zoom in on
Dialogue: 0,0:45:00.58,0:45:01.84,Default,,0,0,0,,one of the corners, we can see
Dialogue: 0,0:45:01.84,0:45:03.06,Default,,0,0,0,,that it's constantly shifting
Dialogue: 0,0:45:03.29,0:45:04.88,Default,,0,0,0,,across the entire duration.
Dialogue: 0,0:45:05.61,0:45:06.81,Default,,0,0,0,,So before we run the reduction
Dialogue: 0,0:45:06.81,0:45:08.39,Default,,0,0,0,,kernel, we need to first align
Dialogue: 0,0:45:08.39,0:45:09.14,Default,,0,0,0,,these frames.
Dialogue: 0,0:45:09.25,0:45:10.53,Default,,0,0,0,,And the way we do that is using
Dialogue: 0,0:45:10.53,0:45:11.75,Default,,0,0,0,,Vision, as David just mentioned.
Dialogue: 0,0:45:12.55,0:45:14.52,Default,,0,0,0,,Now Vision offers two
Dialogue: 0,0:45:14.55,0:45:17.35,Default,,0,0,0,,registration APIs, as shown here
Dialogue: 0,0:45:17.35,0:45:17.98,Default,,0,0,0,,in the slider.
Dialogue: 0,0:45:18.53,0:45:20.74,Default,,0,0,0,,We have a homographic line, and
Dialogue: 0,0:45:20.74,0:45:21.67,Default,,0,0,0,,which David just mentioned, but
Dialogue: 0,0:45:21.67,0:45:22.78,Default,,0,0,0,,Vision also offers a
Dialogue: 0,0:45:22.78,0:45:24.47,Default,,0,0,0,,translational alignment which,
Dialogue: 0,0:45:24.47,0:45:25.56,Default,,0,0,0,,in this case, doesn't work
Dialogue: 0,0:45:25.56,0:45:26.37,Default,,0,0,0,,extremely well.
Dialogue: 0,0:45:26.37,0:45:27.67,Default,,0,0,0,,It's because our camera movement
Dialogue: 0,0:45:27.67,0:45:29.38,Default,,0,0,0,,is not restricted to one plane
Dialogue: 0,0:45:29.38,0:45:30.45,Default,,0,0,0,,that is parallel to the image
Dialogue: 0,0:45:31.35,0:45:31.74,Default,,0,0,0,,plane.
Dialogue: 0,0:45:31.99,0:45:33.36,Default,,0,0,0,,So the way we're doing the
Dialogue: 0,0:45:33.36,0:45:34.41,Default,,0,0,0,,stabilization is we're
Dialogue: 0,0:45:34.41,0:45:35.90,Default,,0,0,0,,registering every frame during
Dialogue: 0,0:45:35.90,0:45:37.69,Default,,0,0,0,,the video onto the middle frame.
Dialogue: 0,0:45:38.08,0:45:39.32,Default,,0,0,0,,And so you can expect a pretty
Dialogue: 0,0:45:39.32,0:45:41.31,Default,,0,0,0,,dramatic camera movement between
Dialogue: 0,0:45:41.31,0:45:42.57,Default,,0,0,0,,the first frame and middle
Dialogue: 0,0:45:42.57,0:45:43.72,Default,,0,0,0,,frame, which is why the
Dialogue: 0,0:45:43.72,0:45:45.23,Default,,0,0,0,,homographic registration is
Dialogue: 0,0:45:45.23,0:45:46.16,Default,,0,0,0,,going to work better for us in
Dialogue: 0,0:45:46.16,0:45:46.53,Default,,0,0,0,,this case.
Dialogue: 0,0:45:46.53,0:45:48.89,Default,,0,0,0,,So let's just go with that.
Dialogue: 0,0:45:48.89,0:45:50.49,Default,,0,0,0,,So with that turned on, if I
Dialogue: 0,0:45:50.49,0:45:52.31,Default,,0,0,0,,zoom in on this corner here
Dialogue: 0,0:45:52.31,0:45:54.59,Default,,0,0,0,,again and scrub through, you can
Dialogue: 0,0:45:54.64,0:45:56.40,Default,,0,0,0,,see that the point is barely
Dialogue: 0,0:45:56.40,0:45:58.81,Default,,0,0,0,,moving across the entire frame.
Dialogue: 0,0:45:59.50,0:46:01.28,Default,,0,0,0,,And if we go back and scrub
Dialogue: 0,0:46:01.28,0:46:02.94,Default,,0,0,0,,through, the video becomes
Dialogue: 0,0:46:02.94,0:46:04.21,Default,,0,0,0,,extremely stabilized.
Dialogue: 0,0:46:05.27,0:46:06.72,Default,,0,0,0,,And so this gives you an idea,
Dialogue: 0,0:46:06.76,0:46:08.38,Default,,0,0,0,,if you're like writing an image
Dialogue: 0,0:46:08.38,0:46:10.86,Default,,0,0,0,,stabilization application, then
Dialogue: 0,0:46:11.00,0:46:12.14,Default,,0,0,0,,you could easily do that with
Dialogue: 0,0:46:12.14,0:46:13.22,Default,,0,0,0,,Core Image and Vision.
Dialogue: 0,0:46:14.33,0:46:15.79,Default,,0,0,0,,So now let me jump into the
Dialogue: 0,0:46:15.79,0:46:16.57,Default,,0,0,0,,reduction part.
Dialogue: 0,0:46:17.15,0:46:18.33,Default,,0,0,0,,And the first thing I'd like to
Dialogue: 0,0:46:18.33,0:46:20.57,Default,,0,0,0,,point out is doing a median
Dialogue: 0,0:46:20.57,0:46:23.29,Default,,0,0,0,,reduction over what we have here
Dialogue: 0,0:46:23.29,0:46:24.87,Default,,0,0,0,,is 148 frames.
Dialogue: 0,0:46:25.05,0:46:26.32,Default,,0,0,0,,It's not really that practical
Dialogue: 0,0:46:26.32,0:46:27.42,Default,,0,0,0,,because we need to hold all
Dialogue: 0,0:46:27.42,0:46:28.38,Default,,0,0,0,,those frames in memory when
Dialogue: 0,0:46:28.38,0:46:29.12,Default,,0,0,0,,we're sorting them.
Dialogue: 0,0:46:29.79,0:46:31.31,Default,,0,0,0,,So what we do here instead is we
Dialogue: 0,0:46:31.31,0:46:33.28,Default,,0,0,0,,take the median of median as an
Dialogue: 0,0:46:33.28,0:46:34.05,Default,,0,0,0,,approximation.
Dialogue: 0,0:46:34.47,0:46:35.59,Default,,0,0,0,,So the first thing we do is
Dialogue: 0,0:46:35.59,0:46:37.38,Default,,0,0,0,,we're dividing entire frames,
Dialogue: 0,0:46:37.52,0:46:39.99,Default,,0,0,0,,the 148 frames, into several
Dialogue: 0,0:46:39.99,0:46:40.36,Default,,0,0,0,,groups.
Dialogue: 0,0:46:40.90,0:46:41.81,Default,,0,0,0,,And for each one of those
Dialogue: 0,0:46:41.81,0:46:43.39,Default,,0,0,0,,groups, we compute a local group
Dialogue: 0,0:46:43.39,0:46:43.80,Default,,0,0,0,,median.
Dialogue: 0,0:46:44.28,0:46:45.63,Default,,0,0,0,,And on the second pass, we run
Dialogue: 0,0:46:45.63,0:46:46.94,Default,,0,0,0,,our reduction kernel again on
Dialogue: 0,0:46:46.94,0:46:48.31,Default,,0,0,0,,the local medians to compute the
Dialogue: 0,0:46:48.31,0:46:50.20,Default,,0,0,0,,final approximation results.
Dialogue: 0,0:46:50.70,0:46:51.77,Default,,0,0,0,,Which is why we have this
Dialogue: 0,0:46:51.77,0:46:53.99,Default,,0,0,0,,control here on the bottom, and
Dialogue: 0,0:46:54.24,0:46:56.53,Default,,0,0,0,,these ticks here that shows you
Dialogue: 0,0:46:56.53,0:46:58.81,Default,,0,0,0,,how the frames are grouped.
Dialogue: 0,0:46:59.53,0:47:01.48,Default,,0,0,0,,And so, if I change this group
Dialogue: 0,0:47:01.48,0:47:03.47,Default,,0,0,0,,count here, we can see that the
Dialogue: 0,0:47:03.47,0:47:04.49,Default,,0,0,0,,indicators are changing.
Dialogue: 0,0:47:04.49,0:47:05.88,Default,,0,0,0,,So, if we have a group count of
Dialogue: 0,0:47:05.88,0:47:07.14,Default,,0,0,0,,three, that means we're dividing
Dialogue: 0,0:47:07.14,0:47:08.31,Default,,0,0,0,,the entire video range into
Dialogue: 0,0:47:08.31,0:47:08.87,Default,,0,0,0,,three groups.
Dialogue: 0,0:47:09.42,0:47:10.61,Default,,0,0,0,,And for each one of those
Dialogue: 0,0:47:10.61,0:47:11.61,Default,,0,0,0,,groups, I can change the group
Dialogue: 0,0:47:11.61,0:47:14.24,Default,,0,0,0,,size, which indicates how many
Dialogue: 0,0:47:14.24,0:47:15.74,Default,,0,0,0,,evenly distributed tasks we're
Dialogue: 0,0:47:15.92,0:47:17.72,Default,,0,0,0,,taking out of the frames to use
Dialogue: 0,0:47:17.72,0:47:18.43,Default,,0,0,0,,for our group median
Dialogue: 0,0:47:18.43,0:47:19.00,Default,,0,0,0,,computation.
Dialogue: 0,0:47:19.83,0:47:21.07,Default,,0,0,0,,So, with that in mind, let's try
Dialogue: 0,0:47:21.07,0:47:23.38,Default,,0,0,0,,something with a group count of
Dialogue: 0,0:47:23.62,0:47:26.46,Default,,0,0,0,,five and group size of seven,
Dialogue: 0,0:47:26.61,0:47:27.20,Default,,0,0,0,,let's say.
Dialogue: 0,0:47:28.17,0:47:29.12,Default,,0,0,0,,And let's just see what that
Dialogue: 0,0:47:29.12,0:47:29.65,Default,,0,0,0,,gets us.
Dialogue: 0,0:47:30.18,0:47:32.60,Default,,0,0,0,,It's going to take a little bit
Dialogue: 0,0:47:32.60,0:47:33.88,Default,,0,0,0,,of time to run because Vision
Dialogue: 0,0:47:33.88,0:47:35.21,Default,,0,0,0,,needs to do all the registration
Dialogue: 0,0:47:35.21,0:47:37.06,Default,,0,0,0,,and we need to warp the images.
Dialogue: 0,0:47:37.55,0:47:39.23,Default,,0,0,0,,And so, as we see here in the
Dialogue: 0,0:47:39.23,0:47:41.26,Default,,0,0,0,,output, none of the moving
Dialogue: 0,0:47:41.26,0:47:42.73,Default,,0,0,0,,transient objects were actually
Dialogue: 0,0:47:42.73,0:47:45.45,Default,,0,0,0,,in our final reduced image, and
Dialogue: 0,0:47:45.45,0:47:47.33,Default,,0,0,0,,we have a very clean shot of our
Dialogue: 0,0:47:47.33,0:47:48.95,Default,,0,0,0,,landmark, which is exactly what
Dialogue: 0,0:47:48.95,0:47:49.26,Default,,0,0,0,,we wanted.
Dialogue: 0,0:47:49.73,0:47:51.83,Default,,0,0,0,,And, if we switch back between
Dialogue: 0,0:47:51.91,0:47:53.82,Default,,0,0,0,,the input and the output, we can
Dialogue: 0,0:47:53.82,0:47:55.35,Default,,0,0,0,,see that all textual details are
Dialogue: 0,0:47:55.35,0:47:57.15,Default,,0,0,0,,very well preserved, which gives
Dialogue: 0,0:47:57.15,0:47:58.66,Default,,0,0,0,,you an idea of how well Vision
Dialogue: 0,0:47:58.66,0:47:59.55,Default,,0,0,0,,is doing the alignment.
Dialogue: 0,0:48:00.18,0:48:02.24,Default,,0,0,0,,And so I hope this gives you a
Dialogue: 0,0:48:02.24,0:48:03.55,Default,,0,0,0,,sense of like the interesting
Dialogue: 0,0:48:03.55,0:48:04.81,Default,,0,0,0,,applications you can build with
Dialogue: 0,0:48:04.81,0:48:06.06,Default,,0,0,0,,this nice synergy between Core
Dialogue: 0,0:48:06.06,0:48:07.15,Default,,0,0,0,,Image and Vision.
Dialogue: 0,0:48:08.03,0:48:09.67,Default,,0,0,0,,And with that, I'd like to
Dialogue: 0,0:48:09.82,0:48:11.52,Default,,0,0,0,,invite David back onstage and to
Dialogue: 0,0:48:11.52,0:48:11.98,Default,,0,0,0,,give you a recap.
Dialogue: 0,0:48:12.52,0:48:18.18,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:48:18.68,0:48:19.05,Default,,0,0,0,,>> All right.
Dialogue: 0,0:48:19.05,0:48:20.28,Default,,0,0,0,,Well, thank you all so much.
Dialogue: 0,0:48:20.81,0:48:22.29,Default,,0,0,0,,Let me just give just a summary
Dialogue: 0,0:48:22.29,0:48:23.54,Default,,0,0,0,,of what we talked about today.
Dialogue: 0,0:48:23.61,0:48:25.05,Default,,0,0,0,,Again, our primary goals for
Dialogue: 0,0:48:25.05,0:48:26.45,Default,,0,0,0,,this release was to give your
Dialogue: 0,0:48:26.45,0:48:27.94,Default,,0,0,0,,applications better performance,
Dialogue: 0,0:48:28.60,0:48:29.78,Default,,0,0,0,,better information about how
Dialogue: 0,0:48:29.83,0:48:32.20,Default,,0,0,0,,Core Image works, and great new
Dialogue: 0,0:48:32.20,0:48:32.99,Default,,0,0,0,,functionality.
Dialogue: 0,0:48:33.33,0:48:34.63,Default,,0,0,0,,And we really look forward to
Dialogue: 0,0:48:34.63,0:48:36.23,Default,,0,0,0,,seeing how your applications can
Dialogue: 0,0:48:36.78,0:48:39.20,Default,,0,0,0,,grow this year based on this new
Dialogue: 0,0:48:39.43,0:48:40.20,Default,,0,0,0,,functionality.
Dialogue: 0,0:48:40.70,0:48:43.27,Default,,0,0,0,,So we look forward to you coming
Dialogue: 0,0:48:43.52,0:48:45.32,Default,,0,0,0,,to some of our related sessions.
Dialogue: 0,0:48:45.62,0:48:46.99,Default,,0,0,0,,If you look -- need more
Dialogue: 0,0:48:46.99,0:48:48.04,Default,,0,0,0,,information, please go to
Dialogue: 0,0:48:48.04,0:48:50.35,Default,,0,0,0,,developer.apple.com website.
Dialogue: 0,0:48:50.99,0:48:52.25,Default,,0,0,0,,There are some related sessions
Dialogue: 0,0:48:52.25,0:48:53.33,Default,,0,0,0,,that are definitely worth
Dialogue: 0,0:48:53.33,0:48:53.78,Default,,0,0,0,,watching.
Dialogue: 0,0:48:53.78,0:48:54.89,Default,,0,0,0,,There was a session earlier
Dialogue: 0,0:48:54.89,0:48:57.20,Default,,0,0,0,,today called image editing with
Dialogue: 0,0:48:57.28,0:48:59.65,Default,,0,0,0,,depth, as well as sessions on
Dialogue: 0,0:48:59.65,0:49:02.58,Default,,0,0,0,,Vision framework and sessions on
Dialogue: 0,0:49:02.58,0:49:04.82,Default,,0,0,0,,capturing data with depth.
Dialogue: 0,0:49:05.03,0:49:06.27,Default,,0,0,0,,Thank you so much for coming and
Dialogue: 0,0:49:06.27,0:49:07.72,Default,,0,0,0,,have a great rest of your show.
Dialogue: 0,0:49:07.72,0:49:07.97,Default,,0,0,0,,Thanks.
Dialogue: 0,0:49:08.51,0:49:10.51,Default,,0,0,0,,[ Applause ]
