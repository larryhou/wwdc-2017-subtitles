[Script Info]
; Script generated by FFmpeg/Lavc57.89.100
ScriptType: v4.00+
PlayResX: 384
PlayResY: 288

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,16,&Hffffff,&Hffffff,&H0,&H0,0,0,0,0,100,100,0,0,1,1,0,2,10,10,10,0

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:21.52,0:00:27.50,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:00:29.21,0:00:29.96,Default,,0,0,0,,>> Hello, everyone.
Dialogue: 0,0:00:30.31,0:00:31.55,Default,,0,0,0,,Welcome to Engineering for
Dialogue: 0,0:00:31.55,0:00:32.25,Default,,0,0,0,,Testability.
Dialogue: 0,0:00:33.26,0:00:34.55,Default,,0,0,0,,My name is Brian Croom, and I
Dialogue: 0,0:00:34.55,0:00:36.31,Default,,0,0,0,,work on the Xcode Team.
Dialogue: 0,0:00:37.36,0:00:38.85,Default,,0,0,0,,My colleague Greg and I, want to
Dialogue: 0,0:00:38.85,0:00:39.79,Default,,0,0,0,,share some things that we've
Dialogue: 0,0:00:39.79,0:00:41.90,Default,,0,0,0,,been learning about testability
Dialogue: 0,0:00:42.05,0:00:42.95,Default,,0,0,0,,and what it means for the
Dialogue: 0,0:00:42.95,0:00:45.49,Default,,0,0,0,,process of developing great
Dialogue: 0,0:00:48.83,0:00:48.94,Default,,0,0,0,,apps.
Dialogue: 0,0:00:49.14,0:00:50.78,Default,,0,0,0,,I'll start by talking about what
Dialogue: 0,0:00:50.78,0:00:52.30,Default,,0,0,0,,it means for an app's code to be
Dialogue: 0,0:00:52.35,0:00:52.77,Default,,0,0,0,,testable.
Dialogue: 0,0:00:53.69,0:00:55.32,Default,,0,0,0,,And we'll see some examples of
Dialogue: 0,0:00:55.32,0:00:56.48,Default,,0,0,0,,techniques that can be applied
Dialogue: 0,0:00:56.55,0:00:58.38,Default,,0,0,0,,to improving testability of an
Dialogue: 0,0:00:58.38,0:00:59.75,Default,,0,0,0,,existing code.
Dialogue: 0,0:01:01.28,0:01:03.29,Default,,0,0,0,,Then Gregg will come up, and
Dialogue: 0,0:01:03.29,0:01:04.62,Default,,0,0,0,,talk about some ways of working
Dialogue: 0,0:01:04.62,0:01:06.20,Default,,0,0,0,,with your test suite to help
Dialogue: 0,0:01:06.20,0:01:08.15,Default,,0,0,0,,ensure that it helps support the
Dialogue: 0,0:01:08.15,0:01:09.99,Default,,0,0,0,,development of your app, even as
Dialogue: 0,0:01:09.99,0:01:11.52,Default,,0,0,0,,it grows in size and complexity.
Dialogue: 0,0:01:14.26,0:01:15.79,Default,,0,0,0,,So, let's dive in, and talk
Dialogue: 0,0:01:15.79,0:01:16.90,Default,,0,0,0,,about testability.
Dialogue: 0,0:01:17.35,0:01:20.62,Default,,0,0,0,,I remember a while back, when I
Dialogue: 0,0:01:20.62,0:01:21.88,Default,,0,0,0,,was first learning about writing
Dialogue: 0,0:01:22.39,0:01:22.67,Default,,0,0,0,,tests.
Dialogue: 0,0:01:23.75,0:01:25.12,Default,,0,0,0,,I'd been hearing a lot about how
Dialogue: 0,0:01:25.12,0:01:26.81,Default,,0,0,0,,a test suite could help during
Dialogue: 0,0:01:26.81,0:01:27.77,Default,,0,0,0,,the development of my app.
Dialogue: 0,0:01:27.97,0:01:30.82,Default,,0,0,0,,How it could provide confidence,
Dialogue: 0,0:01:31.18,0:01:32.66,Default,,0,0,0,,that the code I was writing was
Dialogue: 0,0:01:32.66,0:01:33.91,Default,,0,0,0,,working the way it was supposed
Dialogue: 0,0:01:34.65,0:01:34.72,Default,,0,0,0,,to.
Dialogue: 0,0:01:35.64,0:01:36.77,Default,,0,0,0,,How it could help patch
Dialogue: 0,0:01:36.83,0:01:38.92,Default,,0,0,0,,regressions in my code as my app
Dialogue: 0,0:01:39.07,0:01:40.27,Default,,0,0,0,,grew and changed over time.
Dialogue: 0,0:01:40.87,0:01:43.63,Default,,0,0,0,,And how it could serve as
Dialogue: 0,0:01:43.63,0:01:45.21,Default,,0,0,0,,executable documentation for my
Dialogue: 0,0:01:45.21,0:01:45.51,Default,,0,0,0,,code.
Dialogue: 0,0:01:46.13,0:01:49.07,Default,,0,0,0,,But, I would start writing a
Dialogue: 0,0:01:49.07,0:01:51.64,Default,,0,0,0,,test, and get stuck before I'd
Dialogue: 0,0:01:51.64,0:01:52.50,Default,,0,0,0,,gotten very far.
Dialogue: 0,0:01:53.14,0:01:56.17,Default,,0,0,0,,It felt as if my app's code were
Dialogue: 0,0:01:56.17,0:01:57.98,Default,,0,0,0,,actively trying to prevent me
Dialogue: 0,0:01:57.98,0:01:58.88,Default,,0,0,0,,from writing the test.
Dialogue: 0,0:01:59.42,0:02:02.95,Default,,0,0,0,,It took a while, but eventually
Dialogue: 0,0:02:02.95,0:02:04.26,Default,,0,0,0,,I discovered that I was
Dialogue: 0,0:02:04.26,0:02:06.08,Default,,0,0,0,,structuring my code in a way
Dialogue: 0,0:02:06.08,0:02:07.24,Default,,0,0,0,,that interfered with effective
Dialogue: 0,0:02:07.29,0:02:07.50,Default,,0,0,0,,testing.
Dialogue: 0,0:02:10.90,0:02:12.39,Default,,0,0,0,,To explore what this means,
Dialogue: 0,0:02:12.90,0:02:14.06,Default,,0,0,0,,let's first take a look at a
Dialogue: 0,0:02:14.06,0:02:15.94,Default,,0,0,0,,unit test for some code that is
Dialogue: 0,0:02:15.94,0:02:18.49,Default,,0,0,0,,readily testable, sorting an
Dialogue: 0,0:02:18.88,0:02:18.95,Default,,0,0,0,,array.
Dialogue: 0,0:02:21.46,0:02:23.64,Default,,0,0,0,,This is a test that exercises
Dialogue: 0,0:02:23.64,0:02:25.19,Default,,0,0,0,,the Sorted Method from the Swift
Dialogue: 0,0:02:25.19,0:02:25.97,Default,,0,0,0,,Standard Library.
Dialogue: 0,0:02:26.68,0:02:29.80,Default,,0,0,0,,It begins by setting up an array
Dialogue: 0,0:02:29.80,0:02:30.88,Default,,0,0,0,,of unsorted values.
Dialogue: 0,0:02:31.56,0:02:35.45,Default,,0,0,0,,It calls the sorted method on
Dialogue: 0,0:02:35.45,0:02:35.93,Default,,0,0,0,,that array.
Dialogue: 0,0:02:36.65,0:02:39.56,Default,,0,0,0,,And then asserts that the
Dialogue: 0,0:02:39.56,0:02:41.61,Default,,0,0,0,,returned array has the values in
Dialogue: 0,0:02:41.69,0:02:45.00,Default,,0,0,0,,the expected order.
Dialogue: 0,0:02:45.19,0:02:47.37,Default,,0,0,0,,Generalizing this, we can see
Dialogue: 0,0:02:47.37,0:02:49.06,Default,,0,0,0,,that the test structure consists
Dialogue: 0,0:02:49.06,0:02:51.23,Default,,0,0,0,,of first, setting up any
Dialogue: 0,0:02:51.23,0:02:53.39,Default,,0,0,0,,required input state or values,
Dialogue: 0,0:02:54.53,0:02:56.14,Default,,0,0,0,,then, calling the code being
Dialogue: 0,0:02:56.14,0:02:59.39,Default,,0,0,0,,tested, and finally, asserting
Dialogue: 0,0:02:59.39,0:03:00.56,Default,,0,0,0,,that the returned output is
Dialogue: 0,0:03:00.56,0:03:01.75,Default,,0,0,0,,correct.
Dialogue: 0,0:03:02.42,0:03:04.36,Default,,0,0,0,,This is sometimes referred to as
Dialogue: 0,0:03:04.36,0:03:05.96,Default,,0,0,0,,the Arrange Act Assert Pattern.
Dialogue: 0,0:03:06.59,0:03:11.43,Default,,0,0,0,,So, we've seen that sorted is a
Dialogue: 0,0:03:11.43,0:03:13.21,Default,,0,0,0,,nicely testable piece of code.
Dialogue: 0,0:03:14.27,0:03:15.47,Default,,0,0,0,,But I know what you're thinking,
Dialogue: 0,0:03:16.18,0:03:17.40,Default,,0,0,0,,"My app's code doesn't have a
Dialogue: 0,0:03:17.49,0:03:19.43,Default,,0,0,0,,single sorting algorithm in it."
Dialogue: 0,0:03:20.50,0:03:22.06,Default,,0,0,0,,In my experience, most of the
Dialogue: 0,0:03:22.06,0:03:23.49,Default,,0,0,0,,code in apps, looks pretty
Dialogue: 0,0:03:23.49,0:03:24.31,Default,,0,0,0,,different than the sorting
Dialogue: 0,0:03:24.31,0:03:24.82,Default,,0,0,0,,algorithm.
Dialogue: 0,0:03:25.28,0:03:27.62,Default,,0,0,0,,Still, there are some
Dialogue: 0,0:03:27.62,0:03:29.33,Default,,0,0,0,,characteristics of the sorted
Dialogue: 0,0:03:29.33,0:03:31.12,Default,,0,0,0,,method that we can strive to
Dialogue: 0,0:03:31.12,0:03:32.43,Default,,0,0,0,,achieve in our app's code, and
Dialogue: 0,0:03:32.84,0:03:34.02,Default,,0,0,0,,to make them more testable.
Dialogue: 0,0:03:35.29,0:03:38.21,Default,,0,0,0,,Specifically, testable code
Dialogue: 0,0:03:38.21,0:03:39.84,Default,,0,0,0,,provides a way for its clients
Dialogue: 0,0:03:39.84,0:03:41.52,Default,,0,0,0,,to have control over all of the
Dialogue: 0,0:03:41.52,0:03:42.84,Default,,0,0,0,,inputs that it operates on.
Dialogue: 0,0:03:43.42,0:03:46.45,Default,,0,0,0,,It provides a way for its
Dialogue: 0,0:03:46.45,0:03:48.28,Default,,0,0,0,,clients to inspect any output
Dialogue: 0,0:03:48.28,0:03:49.03,Default,,0,0,0,,being generated.
Dialogue: 0,0:03:49.66,0:03:52.44,Default,,0,0,0,,And it avoids relying on
Dialogue: 0,0:03:52.44,0:03:54.17,Default,,0,0,0,,internal state that could affect
Dialogue: 0,0:03:54.17,0:03:55.35,Default,,0,0,0,,the code's behavior later on.
Dialogue: 0,0:03:55.35,0:04:02.11,Default,,0,0,0,,I want to use code examples to
Dialogue: 0,0:04:02.42,0:04:03.31,Default,,0,0,0,,demonstrate a couple of
Dialogue: 0,0:04:03.31,0:04:05.02,Default,,0,0,0,,techniques that can be used to
Dialogue: 0,0:04:05.02,0:04:06.62,Default,,0,0,0,,help application code take on
Dialogue: 0,0:04:06.62,0:04:08.64,Default,,0,0,0,,these characteristics, and thus,
Dialogue: 0,0:04:08.64,0:04:09.88,Default,,0,0,0,,improve its testability.
Dialogue: 0,0:04:13.84,0:04:15.66,Default,,0,0,0,,The first technique is how to
Dialogue: 0,0:04:15.66,0:04:16.92,Default,,0,0,0,,introduce protocols and
Dialogue: 0,0:04:16.92,0:04:18.34,Default,,0,0,0,,parameterization into a piece of
Dialogue: 0,0:04:18.34,0:04:18.50,Default,,0,0,0,,code.
Dialogue: 0,0:04:21.41,0:04:23.46,Default,,0,0,0,,For this example, imagine a
Dialogue: 0,0:04:23.46,0:04:25.47,Default,,0,0,0,,document browser app, that is
Dialogue: 0,0:04:25.47,0:04:27.06,Default,,0,0,0,,capable of previewing documents
Dialogue: 0,0:04:27.06,0:04:29.05,Default,,0,0,0,,of various types, and has the
Dialogue: 0,0:04:29.05,0:04:30.41,Default,,0,0,0,,ability to switch to a different
Dialogue: 0,0:04:30.41,0:04:31.78,Default,,0,0,0,,app for viewing it in more
Dialogue: 0,0:04:31.78,0:04:33.77,Default,,0,0,0,,detail or editing it.
Dialogue: 0,0:04:34.94,0:04:36.68,Default,,0,0,0,,The previous screen we see here,
Dialogue: 0,0:04:36.68,0:04:38.09,Default,,0,0,0,,includes an open button for
Dialogue: 0,0:04:38.09,0:04:39.55,Default,,0,0,0,,this, along with a segmented
Dialogue: 0,0:04:39.55,0:04:40.90,Default,,0,0,0,,control for choosing [inaudible]
Dialogue: 0,0:04:41.15,0:04:42.55,Default,,0,0,0,,open for viewing or editing.
Dialogue: 0,0:04:42.55,0:04:46.78,Default,,0,0,0,,So, let's have a look at the
Dialogue: 0,0:04:46.78,0:04:48.51,Default,,0,0,0,,first try at some code for this
Dialogue: 0,0:04:48.86,0:04:49.00,Default,,0,0,0,,screen.
Dialogue: 0,0:04:51.72,0:04:52.80,Default,,0,0,0,,So, the event handler in the
Dialogue: 0,0:04:52.80,0:04:54.22,Default,,0,0,0,,view controller that gets
Dialogue: 0,0:04:54.22,0:04:55.63,Default,,0,0,0,,invoked when that Open button is
Dialogue: 0,0:04:56.64,0:04:56.77,Default,,0,0,0,,tapped.
Dialogue: 0,0:04:59.00,0:05:00.22,Default,,0,0,0,,It starts with some business
Dialogue: 0,0:05:00.22,0:05:02.76,Default,,0,0,0,,logic for constructing a URL to
Dialogue: 0,0:05:02.76,0:05:04.54,Default,,0,0,0,,be used to request that iOS
Dialogue: 0,0:05:04.54,0:05:06.19,Default,,0,0,0,,switch to the other app.
Dialogue: 0,0:05:08.22,0:05:10.59,Default,,0,0,0,,Then, it uses the shared UI
Dialogue: 0,0:05:10.59,0:05:12.36,Default,,0,0,0,,application instance, provided
Dialogue: 0,0:05:12.36,0:05:14.58,Default,,0,0,0,,by UIKit, to determine whether
Dialogue: 0,0:05:14.58,0:05:15.81,Default,,0,0,0,,the system is able to handle
Dialogue: 0,0:05:15.81,0:05:18.26,Default,,0,0,0,,this Open request, and perform
Dialogue: 0,0:05:18.26,0:05:19.93,Default,,0,0,0,,the open URL action if it is.
Dialogue: 0,0:05:20.60,0:05:23.39,Default,,0,0,0,,And if not, it calls a helper
Dialogue: 0,0:05:23.39,0:05:25.39,Default,,0,0,0,,method to show some UI to direct
Dialogue: 0,0:05:25.39,0:05:26.53,Default,,0,0,0,,the user to install the other
Dialogue: 0,0:05:26.53,0:05:27.00,Default,,0,0,0,,app.
Dialogue: 0,0:05:30.09,0:05:31.54,Default,,0,0,0,,Now, I want to write some tests
Dialogue: 0,0:05:31.70,0:05:33.00,Default,,0,0,0,,to make sure that this Open
Dialogue: 0,0:05:33.00,0:05:34.19,Default,,0,0,0,,button is working the way it's
Dialogue: 0,0:05:34.19,0:05:35.44,Default,,0,0,0,,supposed to.
Dialogue: 0,0:05:36.92,0:05:38.20,Default,,0,0,0,,There are a couple of different
Dialogue: 0,0:05:38.20,0:05:39.90,Default,,0,0,0,,ways to approach testing this.
Dialogue: 0,0:05:41.45,0:05:43.35,Default,,0,0,0,,One option would be to write a
Dialogue: 0,0:05:43.35,0:05:43.92,Default,,0,0,0,,UI test.
Dialogue: 0,0:05:45.22,0:05:46.57,Default,,0,0,0,,We ask to launch the app,
Dialogue: 0,0:05:46.57,0:05:48.89,Default,,0,0,0,,navigate to this screen, tap on
Dialogue: 0,0:05:48.94,0:05:50.32,Default,,0,0,0,,the [inaudible] control, to peck
Dialogue: 0,0:05:50.32,0:05:52.26,Default,,0,0,0,,and open mode, tap the Open
Dialogue: 0,0:05:52.26,0:05:55.20,Default,,0,0,0,,button, and then verify that the
Dialogue: 0,0:05:55.20,0:05:56.51,Default,,0,0,0,,phone switched to show the other
Dialogue: 0,0:05:56.51,0:05:57.19,Default,,0,0,0,,app.
Dialogue: 0,0:05:57.45,0:06:00.20,Default,,0,0,0,,While this would work, there are
Dialogue: 0,0:06:00.20,0:06:01.45,Default,,0,0,0,,some drawbacks to this approach.
Dialogue: 0,0:06:01.89,0:06:04.87,Default,,0,0,0,,For one, the task would probably
Dialogue: 0,0:06:04.87,0:06:07.01,Default,,0,0,0,,take a while to run, especially
Dialogue: 0,0:06:07.01,0:06:08.84,Default,,0,0,0,,if I wanted to expand it to test
Dialogue: 0,0:06:08.84,0:06:09.98,Default,,0,0,0,,with several different documents
Dialogue: 0,0:06:09.98,0:06:11.07,Default,,0,0,0,,types for the different open
Dialogue: 0,0:06:11.07,0:06:11.47,Default,,0,0,0,,modes.
Dialogue: 0,0:06:12.00,0:06:15.09,Default,,0,0,0,,The bigger problem, however, is
Dialogue: 0,0:06:15.09,0:06:17.61,Default,,0,0,0,,that a UI test would have no way
Dialogue: 0,0:06:17.61,0:06:19.21,Default,,0,0,0,,to inspect that URL that was
Dialogue: 0,0:06:19.21,0:06:21.37,Default,,0,0,0,,being generated, to request that
Dialogue: 0,0:06:21.37,0:06:22.24,Default,,0,0,0,,iOS switch apps.
Dialogue: 0,0:06:23.17,0:06:24.53,Default,,0,0,0,,And that URL is really something
Dialogue: 0,0:06:24.53,0:06:25.44,Default,,0,0,0,,that I want to be able to
Dialogue: 0,0:06:25.44,0:06:26.58,Default,,0,0,0,,inspect more precisely.
Dialogue: 0,0:06:28.18,0:06:29.63,Default,,0,0,0,,So, it really feels like a unit
Dialogue: 0,0:06:29.63,0:06:30.88,Default,,0,0,0,,test is more appropriate for the
Dialogue: 0,0:06:30.88,0:06:31.56,Default,,0,0,0,,situation.
Dialogue: 0,0:06:34.42,0:06:35.59,Default,,0,0,0,,So, let's see what it would take
Dialogue: 0,0:06:35.59,0:06:36.84,Default,,0,0,0,,to write a unit test for this
Dialogue: 0,0:06:36.84,0:06:37.00,Default,,0,0,0,,code.
Dialogue: 0,0:06:40.02,0:06:41.81,Default,,0,0,0,,First, you need an instance of
Dialogue: 0,0:06:41.81,0:06:42.76,Default,,0,0,0,,the view controller to work
Dialogue: 0,0:06:42.76,0:06:42.93,Default,,0,0,0,,with.
Dialogue: 0,0:06:44.35,0:06:45.29,Default,,0,0,0,,My view controller uses a
Dialogue: 0,0:06:45.29,0:06:47.41,Default,,0,0,0,,storyboard for its UI, so I'll
Dialogue: 0,0:06:47.41,0:06:48.99,Default,,0,0,0,,ask UI Storyboard to give me an
Dialogue: 0,0:06:48.99,0:06:50.13,Default,,0,0,0,,instance of the view controller.
Dialogue: 0,0:06:50.65,0:06:54.62,Default,,0,0,0,,Then we need to load the view to
Dialogue: 0,0:06:55.98,0:06:57.19,Default,,0,0,0,,populate that [inaudible]
Dialogue: 0,0:06:57.19,0:06:59.86,Default,,0,0,0,,control property, so that we --
Dialogue: 0,0:06:59.86,0:07:01.78,Default,,0,0,0,,it's populated by the view data.
Dialogue: 0,0:07:01.78,0:07:03.79,Default,,0,0,0,,We can then configure that for
Dialogue: 0,0:07:03.79,0:07:05.10,Default,,0,0,0,,our open mode.
Dialogue: 0,0:07:05.76,0:07:07.41,Default,,0,0,0,,Provide a document to work with.
Dialogue: 0,0:07:08.11,0:07:12.14,Default,,0,0,0,,And with the setup finally
Dialogue: 0,0:07:12.14,0:07:13.57,Default,,0,0,0,,complete, we're now ready to
Dialogue: 0,0:07:13.57,0:07:15.55,Default,,0,0,0,,call the method being tested.
Dialogue: 0,0:07:18.12,0:07:19.58,Default,,0,0,0,,But what do we do now?
Dialogue: 0,0:07:20.84,0:07:22.05,Default,,0,0,0,,It's not so clear what kind of
Dialogue: 0,0:07:22.05,0:07:23.00,Default,,0,0,0,,assertion we could write here.
Dialogue: 0,0:07:27.06,0:07:29.18,Default,,0,0,0,,Let's go back to the code, and
Dialogue: 0,0:07:29.18,0:07:30.35,Default,,0,0,0,,look more closely at what makes
Dialogue: 0,0:07:30.35,0:07:32.15,Default,,0,0,0,,this challenging to test.
Dialogue: 0,0:07:34.39,0:07:36.48,Default,,0,0,0,,For one thing, just being in a
Dialogue: 0,0:07:36.48,0:07:37.81,Default,,0,0,0,,view controller, made the
Dialogue: 0,0:07:37.81,0:07:39.35,Default,,0,0,0,,methods test more complicated.
Dialogue: 0,0:07:39.99,0:07:40.81,Default,,0,0,0,,You're going to jump through
Dialogue: 0,0:07:40.81,0:07:41.44,Default,,0,0,0,,some hoops to get the view
Dialogue: 0,0:07:41.44,0:07:42.51,Default,,0,0,0,,controller instance to work
Dialogue: 0,0:07:42.51,0:07:42.66,Default,,0,0,0,,with.
Dialogue: 0,0:07:43.24,0:07:46.78,Default,,0,0,0,,Then here, we're pulling input
Dialogue: 0,0:07:46.78,0:07:48.29,Default,,0,0,0,,state directly from the view.
Dialogue: 0,0:07:48.29,0:07:50.65,Default,,0,0,0,,[Inaudible] of the test had to
Dialogue: 0,0:07:50.65,0:07:52.54,Default,,0,0,0,,force the view to load, and then
Dialogue: 0,0:07:52.58,0:07:54.64,Default,,0,0,0,,indirectly provide the input by
Dialogue: 0,0:07:54.64,0:07:56.07,Default,,0,0,0,,setting a property on some
Dialogue: 0,0:07:56.78,0:08:00.07,Default,,0,0,0,,sub-view.
Dialogue: 0,0:08:00.27,0:08:01.97,Default,,0,0,0,,The biggest problem though was
Dialogue: 0,0:08:01.97,0:08:03.83,Default,,0,0,0,,this usage of a UI application
Dialogue: 0,0:08:03.83,0:08:04.71,Default,,0,0,0,,shared instance.
Dialogue: 0,0:08:08.52,0:08:10.29,Default,,0,0,0,,The return value from this call
Dialogue: 0,0:08:10.29,0:08:12.82,Default,,0,0,0,,to can open URL, is effectively
Dialogue: 0,0:08:12.82,0:08:14.13,Default,,0,0,0,,another input for the method.
Dialogue: 0,0:08:15.59,0:08:16.97,Default,,0,0,0,,But since this relies on global
Dialogue: 0,0:08:16.97,0:08:18.68,Default,,0,0,0,,system state, there's no
Dialogue: 0,0:08:18.68,0:08:20.36,Default,,0,0,0,,programmatic way for the test to
Dialogue: 0,0:08:20.36,0:08:21.51,Default,,0,0,0,,control the result of this
Dialogue: 0,0:08:21.51,0:08:22.00,Default,,0,0,0,,query.
Dialogue: 0,0:08:25.40,0:08:26.61,Default,,0,0,0,,Nor is there a good way for a
Dialogue: 0,0:08:26.61,0:08:28.31,Default,,0,0,0,,unit test to observe the side
Dialogue: 0,0:08:28.31,0:08:29.84,Default,,0,0,0,,effects of opening a URL.
Dialogue: 0,0:08:30.62,0:08:33.81,Default,,0,0,0,,In fact, after calling this, the
Dialogue: 0,0:08:33.81,0:08:35.16,Default,,0,0,0,,test render app would actually
Dialogue: 0,0:08:35.16,0:08:36.64,Default,,0,0,0,,be sent to the background, and
Dialogue: 0,0:08:36.64,0:08:37.55,Default,,0,0,0,,there'd be no way to bring it
Dialogue: 0,0:08:37.55,0:08:38.21,Default,,0,0,0,,back to the foreground
Dialogue: 0,0:08:38.21,0:08:38.77,Default,,0,0,0,,afterwards.
Dialogue: 0,0:08:38.77,0:08:42.65,Default,,0,0,0,,So, let's see what we can do to
Dialogue: 0,0:08:42.65,0:08:43.95,Default,,0,0,0,,improve the testability of this
Dialogue: 0,0:08:43.95,0:08:44.21,Default,,0,0,0,,code.
Dialogue: 0,0:08:44.86,0:08:48.85,Default,,0,0,0,,We can start by getting it out
Dialogue: 0,0:08:48.85,0:08:49.59,Default,,0,0,0,,of the view controller.
Dialogue: 0,0:08:50.05,0:08:53.08,Default,,0,0,0,,Let's introduce a new document
Dialogue: 0,0:08:53.08,0:08:55.21,Default,,0,0,0,,opener class, to encapsulate
Dialogue: 0,0:08:55.21,0:08:56.21,Default,,0,0,0,,this logic and behavior.
Dialogue: 0,0:08:58.76,0:09:00.51,Default,,0,0,0,,The open mode and document
Dialogue: 0,0:09:00.51,0:09:02.43,Default,,0,0,0,,inputs, should now be provided a
Dialogue: 0,0:09:02.43,0:09:04.13,Default,,0,0,0,,simple method arguments that the
Dialogue: 0,0:09:04.13,0:09:05.35,Default,,0,0,0,,test can pass indirectly.
Dialogue: 0,0:09:06.00,0:09:09.31,Default,,0,0,0,,But we still have to fix the
Dialogue: 0,0:09:09.31,0:09:11.03,Default,,0,0,0,,problems caused by that shared
Dialogue: 0,0:09:11.03,0:09:12.50,Default,,0,0,0,,UI application incidence.
Dialogue: 0,0:09:13.03,0:09:17.25,Default,,0,0,0,,What can we do about that?
Dialogue: 0,0:09:18.06,0:09:20.09,Default,,0,0,0,,Well, to start, we can stop
Dialogue: 0,0:09:20.09,0:09:21.34,Default,,0,0,0,,using that [inaudible] accessor
Dialogue: 0,0:09:21.34,0:09:22.38,Default,,0,0,0,,directly into method.
Dialogue: 0,0:09:22.97,0:09:25.70,Default,,0,0,0,,Let's add an initializer to the
Dialogue: 0,0:09:25.70,0:09:27.79,Default,,0,0,0,,class that lets us pass in a
Dialogue: 0,0:09:27.79,0:09:29.78,Default,,0,0,0,,particular application instance.
Dialogue: 0,0:09:30.32,0:09:34.13,Default,,0,0,0,,We can provide a default value
Dialogue: 0,0:09:34.13,0:09:35.99,Default,,0,0,0,,for the argument, so the
Dialogue: 0,0:09:35.99,0:09:36.34,Default,,0,0,0,,[inaudible] in the view
Dialogue: 0,0:09:36.34,0:09:37.44,Default,,0,0,0,,controller, doesn't have to
Dialogue: 0,0:09:37.44,0:09:38.43,Default,,0,0,0,,worry about this detail.
Dialogue: 0,0:09:39.00,0:09:44.55,Default,,0,0,0,,Back in the open method, we then
Dialogue: 0,0:09:44.55,0:09:45.56,Default,,0,0,0,,switch over to use the
Dialogue: 0,0:09:45.56,0:09:47.01,Default,,0,0,0,,application instance that was
Dialogue: 0,0:09:47.01,0:09:49.42,Default,,0,0,0,,passed in.
Dialogue: 0,0:09:49.64,0:09:50.37,Default,,0,0,0,,Let's see how far this
Dialogue: 0,0:09:50.37,0:09:51.36,Default,,0,0,0,,refactoring gets us.
Dialogue: 0,0:09:55.02,0:09:56.56,Default,,0,0,0,,If we try to rewrite our test
Dialogue: 0,0:09:56.56,0:09:58.54,Default,,0,0,0,,now, with the document open or
Dialogue: 0,0:09:58.54,0:10:00.12,Default,,0,0,0,,in its current state, we'll
Dialogue: 0,0:10:00.12,0:10:01.01,Default,,0,0,0,,still find ourselves getting
Dialogue: 0,0:10:01.01,0:10:01.61,Default,,0,0,0,,stuck.
Dialogue: 0,0:10:02.90,0:10:03.79,Default,,0,0,0,,You want to pass in an
Dialogue: 0,0:10:03.79,0:10:04.84,Default,,0,0,0,,application instance that we
Dialogue: 0,0:10:04.84,0:10:05.97,Default,,0,0,0,,have control over.
Dialogue: 0,0:10:06.57,0:10:07.89,Default,,0,0,0,,So, you can imagine sub-classing
Dialogue: 0,0:10:07.89,0:10:10.16,Default,,0,0,0,,UI application, overriding the
Dialogue: 0,0:10:10.16,0:10:12.24,Default,,0,0,0,,can open URL and open methods,
Dialogue: 0,0:10:12.46,0:10:13.90,Default,,0,0,0,,to get the control that we need.
Dialogue: 0,0:10:14.17,0:10:16.62,Default,,0,0,0,,However, it turns out that UI
Dialogue: 0,0:10:16.62,0:10:18.49,Default,,0,0,0,,application strictly enforces
Dialogue: 0,0:10:18.49,0:10:19.45,Default,,0,0,0,,its singleton nature.
Dialogue: 0,0:10:20.17,0:10:21.48,Default,,0,0,0,,And throws an exception to try
Dialogue: 0,0:10:21.48,0:10:23.09,Default,,0,0,0,,to make a second instance, even
Dialogue: 0,0:10:23.09,0:10:24.00,Default,,0,0,0,,if it's a subclass.
Dialogue: 0,0:10:27.05,0:10:28.01,Default,,0,0,0,,So, instead of using
Dialogue: 0,0:10:28.07,0:10:29.88,Default,,0,0,0,,sub-classing, to get the control
Dialogue: 0,0:10:29.88,0:10:32.18,Default,,0,0,0,,that we need, let's instead add
Dialogue: 0,0:10:32.18,0:10:33.77,Default,,0,0,0,,a protocol, URL Opening.
Dialogue: 0,0:10:34.32,0:10:38.14,Default,,0,0,0,,We go to protocol, two methods,
Dialogue: 0,0:10:38.79,0:10:39.76,Default,,0,0,0,,with precisely the same
Dialogue: 0,0:10:39.76,0:10:41.60,Default,,0,0,0,,signatures as the application
Dialogue: 0,0:10:41.60,0:10:43.51,Default,,0,0,0,,methods that we've been using up
Dialogue: 0,0:10:44.17,0:10:47.51,Default,,0,0,0,,to this point.
Dialogue: 0,0:10:47.51,0:10:49.55,Default,,0,0,0,,We still want UI application to
Dialogue: 0,0:10:49.55,0:10:50.97,Default,,0,0,0,,be the primary implementation of
Dialogue: 0,0:10:50.97,0:10:51.60,Default,,0,0,0,,this protocol.
Dialogue: 0,0:10:52.88,0:10:54.63,Default,,0,0,0,,So, we'll throw an extension on
Dialogue: 0,0:10:54.63,0:10:56.47,Default,,0,0,0,,UI application to give it the
Dialogue: 0,0:10:56.47,0:10:57.73,Default,,0,0,0,,URL opening conformance.
Dialogue: 0,0:10:58.23,0:11:02.07,Default,,0,0,0,,Since the method signatures line
Dialogue: 0,0:11:02.07,0:11:03.74,Default,,0,0,0,,up exactly, you don't have to
Dialogue: 0,0:11:03.74,0:11:05.11,Default,,0,0,0,,add any additional code in the
Dialogue: 0,0:11:05.11,0:11:05.90,Default,,0,0,0,,extension to get the
Dialogue: 0,0:11:05.90,0:11:06.39,Default,,0,0,0,,conformance.
Dialogue: 0,0:11:06.43,0:11:12.06,Default,,0,0,0,,With a protocol in place, let's
Dialogue: 0,0:11:12.06,0:11:13.74,Default,,0,0,0,,update the document opener to
Dialogue: 0,0:11:13.74,0:11:15.44,Default,,0,0,0,,use the protocol instead of
Dialogue: 0,0:11:15.44,0:11:17.00,Default,,0,0,0,,requiring UI application itself.
Dialogue: 0,0:11:20.37,0:11:21.95,Default,,0,0,0,,First, we change the property
Dialogue: 0,0:11:21.95,0:11:24.31,Default,,0,0,0,,and initialize a parameter to
Dialogue: 0,0:11:24.31,0:11:25.77,Default,,0,0,0,,accept any implementation of the
Dialogue: 0,0:11:25.77,0:11:26.86,Default,,0,0,0,,URL opening protocol.
Dialogue: 0,0:11:27.45,0:11:30.22,Default,,0,0,0,,Note that we're still able to
Dialogue: 0,0:11:30.22,0:11:31.72,Default,,0,0,0,,keep the shared UI application
Dialogue: 0,0:11:31.72,0:11:32.85,Default,,0,0,0,,instance with the default
Dialogue: 0,0:11:32.85,0:11:34.82,Default,,0,0,0,,argument as a convenience when
Dialogue: 0,0:11:34.82,0:11:35.51,Default,,0,0,0,,we use it in the view
Dialogue: 0,0:11:35.51,0:11:35.99,Default,,0,0,0,,controller.
Dialogue: 0,0:11:39.32,0:11:40.86,Default,,0,0,0,,A final change requires the
Dialogue: 0,0:11:40.86,0:11:43.18,Default,,0,0,0,,document opener simply to adopt
Dialogue: 0,0:11:43.18,0:11:45.42,Default,,0,0,0,,the URL opener property name.
Dialogue: 0,0:11:48.58,0:11:49.83,Default,,0,0,0,,With that, let's return to the
Dialogue: 0,0:11:49.83,0:11:51.55,Default,,0,0,0,,test and see how the pieces fit
Dialogue: 0,0:11:51.55,0:11:52.00,Default,,0,0,0,,together.
Dialogue: 0,0:11:57.05,0:11:58.80,Default,,0,0,0,,Since UI Application doesn't
Dialogue: 0,0:11:58.80,0:12:00.20,Default,,0,0,0,,give us the control that we need
Dialogue: 0,0:12:00.20,0:12:02.15,Default,,0,0,0,,in our test, we want to create a
Dialogue: 0,0:12:02.15,0:12:04.08,Default,,0,0,0,,secondary mock implementation of
Dialogue: 0,0:12:04.08,0:12:06.57,Default,,0,0,0,,the protocol, to use in its
Dialogue: 0,0:12:08.44,0:12:08.57,Default,,0,0,0,,place.
Dialogue: 0,0:12:08.75,0:12:10.51,Default,,0,0,0,,Here we add a sub-implementation
Dialogue: 0,0:12:10.60,0:12:13.87,Default,,0,0,0,,of the two methods.
Dialogue: 0,0:12:13.87,0:12:16.25,Default,,0,0,0,,The can open URL method acts as
Dialogue: 0,0:12:16.25,0:12:17.52,Default,,0,0,0,,an input from the document
Dialogue: 0,0:12:17.52,0:12:17.90,Default,,0,0,0,,opener.
Dialogue: 0,0:12:18.73,0:12:19.60,Default,,0,0,0,,So, the test needs to have
Dialogue: 0,0:12:19.60,0:12:20.78,Default,,0,0,0,,control over this input.
Dialogue: 0,0:12:21.81,0:12:22.82,Default,,0,0,0,,We can get that by having the
Dialogue: 0,0:12:22.82,0:12:24.72,Default,,0,0,0,,implementation return the value
Dialogue: 0,0:12:24.72,0:12:26.28,Default,,0,0,0,,of a property that the test can
Dialogue: 0,0:12:26.28,0:12:27.10,Default,,0,0,0,,set beforehand.
Dialogue: 0,0:12:30.30,0:12:32.11,Default,,0,0,0,,The open method, act as an
Dialogue: 0,0:12:32.11,0:12:33.64,Default,,0,0,0,,output from the document opener.
Dialogue: 0,0:12:34.84,0:12:35.78,Default,,0,0,0,,The test wants to be able to
Dialogue: 0,0:12:35.78,0:12:38.00,Default,,0,0,0,,access any URL that was passed
Dialogue: 0,0:12:38.00,0:12:38.70,Default,,0,0,0,,into this method.
Dialogue: 0,0:12:39.18,0:12:41.92,Default,,0,0,0,,We can achieve that by stashing
Dialogue: 0,0:12:41.92,0:12:43.92,Default,,0,0,0,,the URL into a property for the
Dialogue: 0,0:12:43.98,0:12:45.35,Default,,0,0,0,,test to -- to read afterwards.
Dialogue: 0,0:12:48.96,0:12:50.62,Default,,0,0,0,,So, let's go ahead and write the
Dialogue: 0,0:12:50.62,0:12:51.00,Default,,0,0,0,,test.
Dialogue: 0,0:12:53.44,0:12:54.73,Default,,0,0,0,,First, we create an instance of
Dialogue: 0,0:12:54.73,0:12:56.15,Default,,0,0,0,,our mock URL opener that we just
Dialogue: 0,0:12:56.15,0:12:58.31,Default,,0,0,0,,wrote, and configure the input
Dialogue: 0,0:12:58.55,0:12:59.71,Default,,0,0,0,,using the can open property.
Dialogue: 0,0:13:02.30,0:13:03.45,Default,,0,0,0,,And create a document opener.
Dialogue: 0,0:13:03.45,0:13:06.05,Default,,0,0,0,,And we pass in that mock URL
Dialogue: 0,0:13:06.05,0:13:07.11,Default,,0,0,0,,opener as the argument.
Dialogue: 0,0:13:07.67,0:13:11.76,Default,,0,0,0,,With that setup finished, we can
Dialogue: 0,0:13:11.76,0:13:14.22,Default,,0,0,0,,call the open method, passing in
Dialogue: 0,0:13:14.22,0:13:15.70,Default,,0,0,0,,document and open mode values,
Dialogue: 0,0:13:16.07,0:13:18.19,Default,,0,0,0,,to act as the rest of the input.
Dialogue: 0,0:13:20.32,0:13:22.30,Default,,0,0,0,,And we can then assert that the
Dialogue: 0,0:13:22.30,0:13:24.12,Default,,0,0,0,,opened URL property of the mock
Dialogue: 0,0:13:24.12,0:13:26.22,Default,,0,0,0,,URL opener, has been set to the
Dialogue: 0,0:13:26.22,0:13:27.04,Default,,0,0,0,,expected URL.
Dialogue: 0,0:13:27.67,0:13:30.97,Default,,0,0,0,,This one assertion, is testing
Dialogue: 0,0:13:30.97,0:13:32.45,Default,,0,0,0,,both at the open method was
Dialogue: 0,0:13:32.45,0:13:34.76,Default,,0,0,0,,called at all, as well as the
Dialogue: 0,0:13:34.76,0:13:36.44,Default,,0,0,0,,URL passed in contains the
Dialogue: 0,0:13:36.44,0:13:37.01,Default,,0,0,0,,correct data.
Dialogue: 0,0:13:40.70,0:13:42.19,Default,,0,0,0,,With that test under our belt,
Dialogue: 0,0:13:42.55,0:13:43.61,Default,,0,0,0,,you could continue to write
Dialogue: 0,0:13:43.61,0:13:45.05,Default,,0,0,0,,tests for other variations of
Dialogue: 0,0:13:45.05,0:13:47.29,Default,,0,0,0,,input data, such as when the can
Dialogue: 0,0:13:47.29,0:13:48.63,Default,,0,0,0,,open property is set to false.
Dialogue: 0,0:13:48.63,0:13:50.44,Default,,0,0,0,,But we have a lot more to cover,
Dialogue: 0,0:13:50.44,0:13:51.81,Default,,0,0,0,,so let's just leave it there.
Dialogue: 0,0:13:55.65,0:13:57.78,Default,,0,0,0,,So, in this example, you
Dialogue: 0,0:13:57.78,0:13:59.77,Default,,0,0,0,,performed a few refactorings to
Dialogue: 0,0:13:59.77,0:14:01.41,Default,,0,0,0,,allow us to write unit tests for
Dialogue: 0,0:14:01.41,0:14:02.00,Default,,0,0,0,,our code.
Dialogue: 0,0:14:04.44,0:14:05.51,Default,,0,0,0,,We pulled out explicit
Dialogue: 0,0:14:05.51,0:14:07.05,Default,,0,0,0,,references to a shared singleton
Dialogue: 0,0:14:07.05,0:14:09.42,Default,,0,0,0,,instance, and replaced them with
Dialogue: 0,0:14:09.42,0:14:11.52,Default,,0,0,0,,parameterized input to offer
Dialogue: 0,0:14:11.52,0:14:12.25,Default,,0,0,0,,substitution.
Dialogue: 0,0:14:13.67,0:14:15.57,Default,,0,0,0,,This is sometimes referred to as
Dialogue: 0,0:14:15.57,0:14:17.98,Default,,0,0,0,,a penancy injection.
Dialogue: 0,0:14:18.20,0:14:20.19,Default,,0,0,0,,In this example, we use an
Dialogue: 0,0:14:20.19,0:14:22.36,Default,,0,0,0,,initializer parameter to achieve
Dialogue: 0,0:14:22.36,0:14:22.92,Default,,0,0,0,,this.
Dialogue: 0,0:14:23.30,0:14:24.47,Default,,0,0,0,,We could also have used a
Dialogue: 0,0:14:24.47,0:14:26.64,Default,,0,0,0,,property setter, or a parameter
Dialogue: 0,0:14:26.64,0:14:27.50,Default,,0,0,0,,of the method being tested.
Dialogue: 0,0:14:31.20,0:14:33.24,Default,,0,0,0,,We created a protocol to
Dialogue: 0,0:14:33.24,0:14:34.28,Default,,0,0,0,,decouple the code from the
Dialogue: 0,0:14:34.28,0:14:35.40,Default,,0,0,0,,concrete class that it
Dialogue: 0,0:14:35.40,0:14:37.00,Default,,0,0,0,,previously depended on.
Dialogue: 0,0:14:39.10,0:14:40.40,Default,,0,0,0,,And we created a test
Dialogue: 0,0:14:40.40,0:14:42.76,Default,,0,0,0,,implementation to use in its
Dialogue: 0,0:14:42.76,0:14:43.18,Default,,0,0,0,,place.
Dialogue: 0,0:14:43.18,0:14:45.51,Default,,0,0,0,,And it gave us the control that
Dialogue: 0,0:14:45.51,0:14:46.83,Default,,0,0,0,,we needed over the inputs, and
Dialogue: 0,0:14:47.43,0:14:49.35,Default,,0,0,0,,the visibility into the outputs.
Dialogue: 0,0:14:56.28,0:14:58.66,Default,,0,0,0,,Next, I want to look at how
Dialogue: 0,0:14:58.66,0:15:00.36,Default,,0,0,0,,separating out logic from
Dialogue: 0,0:15:00.36,0:15:02.18,Default,,0,0,0,,effects, can also be used to
Dialogue: 0,0:15:02.18,0:15:03.39,Default,,0,0,0,,enhance testability.
Dialogue: 0,0:15:07.64,0:15:10.23,Default,,0,0,0,,The example here is an on-disk
Dialogue: 0,0:15:10.32,0:15:12.47,Default,,0,0,0,,cache class, which might be used
Dialogue: 0,0:15:12.47,0:15:14.53,Default,,0,0,0,,by an app for faster retrieval
Dialogue: 0,0:15:14.53,0:15:15.81,Default,,0,0,0,,of assets that have been
Dialogue: 0,0:15:15.81,0:15:17.35,Default,,0,0,0,,previously downloaded from a
Dialogue: 0,0:15:17.86,0:15:18.00,Default,,0,0,0,,server.
Dialogue: 0,0:15:20.95,0:15:22.87,Default,,0,0,0,,This cache defines a script for
Dialogue: 0,0:15:22.87,0:15:24.07,Default,,0,0,0,,representing the items that it
Dialogue: 0,0:15:24.07,0:15:24.42,Default,,0,0,0,,stores.
Dialogue: 0,0:15:24.90,0:15:26.93,Default,,0,0,0,,It defines the path to the item
Dialogue: 0,0:15:26.93,0:15:28.94,Default,,0,0,0,,on the file system, how long
Dialogue: 0,0:15:28.94,0:15:30.44,Default,,0,0,0,,it's been in the cache, and its
Dialogue: 0,0:15:30.44,0:15:31.15,Default,,0,0,0,,size on disk.
Dialogue: 0,0:15:31.66,0:15:34.17,Default,,0,0,0,,And it provides a way to get the
Dialogue: 0,0:15:34.17,0:15:35.71,Default,,0,0,0,,set of all the items currently
Dialogue: 0,0:15:35.71,0:15:36.59,Default,,0,0,0,,stored in the cache.
Dialogue: 0,0:15:40.10,0:15:41.18,Default,,0,0,0,,The method that you want to look
Dialogue: 0,0:15:41.18,0:15:43.22,Default,,0,0,0,,at now, though, is a cleanup
Dialogue: 0,0:15:43.22,0:15:43.59,Default,,0,0,0,,method.
Dialogue: 0,0:15:44.32,0:15:45.10,Default,,0,0,0,,It's meant to be called
Dialogue: 0,0:15:45.10,0:15:46.82,Default,,0,0,0,,periodically, to ensure that the
Dialogue: 0,0:15:46.82,0:15:47.98,Default,,0,0,0,,cache doesn't grow to take up
Dialogue: 0,0:15:47.98,0:15:49.15,Default,,0,0,0,,too much space in the file
Dialogue: 0,0:15:49.15,0:15:49.49,Default,,0,0,0,,system.
Dialogue: 0,0:15:49.84,0:15:53.14,Default,,0,0,0,,So, let's have a look at the
Dialogue: 0,0:15:53.14,0:15:54.72,Default,,0,0,0,,starting implementation for this
Dialogue: 0,0:15:55.18,0:15:55.33,Default,,0,0,0,,method.
Dialogue: 0,0:15:57.26,0:15:59.72,Default,,0,0,0,,First, it asks for the set of
Dialogue: 0,0:15:59.72,0:16:00.92,Default,,0,0,0,,all the current items in the
Dialogue: 0,0:16:00.92,0:16:02.93,Default,,0,0,0,,cache, sorts them from newest to
Dialogue: 0,0:16:02.93,0:16:03.46,Default,,0,0,0,,oldest.
Dialogue: 0,0:16:03.94,0:16:07.65,Default,,0,0,0,,But then it [inaudible] over all
Dialogue: 0,0:16:07.65,0:16:09.99,Default,,0,0,0,,of these items, keeping track of
Dialogue: 0,0:16:09.99,0:16:11.41,Default,,0,0,0,,the total size of the items
Dialogue: 0,0:16:11.41,0:16:12.00,Default,,0,0,0,,already seen.
Dialogue: 0,0:16:15.09,0:16:16.09,Default,,0,0,0,,Once you've seen enough items
Dialogue: 0,0:16:16.16,0:16:17.20,Default,,0,0,0,,then we reached our maximum
Dialogue: 0,0:16:17.20,0:16:19.42,Default,,0,0,0,,size, we begin removing the rest
Dialogue: 0,0:16:19.42,0:16:23.64,Default,,0,0,0,,of them from the file system.
Dialogue: 0,0:16:23.90,0:16:24.99,Default,,0,0,0,,So, let's think about how to
Dialogue: 0,0:16:24.99,0:16:25.65,Default,,0,0,0,,test this method.
Dialogue: 0,0:16:26.98,0:16:27.85,Default,,0,0,0,,What are the inputs?
Dialogue: 0,0:16:28.19,0:16:31.57,Default,,0,0,0,,What are the outputs?
Dialogue: 0,0:16:31.70,0:16:33.90,Default,,0,0,0,,Well, one input is the parameter
Dialogue: 0,0:16:33.90,0:16:35.12,Default,,0,0,0,,specifying how large you want
Dialogue: 0,0:16:35.12,0:16:36.35,Default,,0,0,0,,the cache to be able to grow.
Dialogue: 0,0:16:36.35,0:16:39.08,Default,,0,0,0,,This is a simple integer, and a
Dialogue: 0,0:16:39.08,0:16:41.00,Default,,0,0,0,,method parameter, so the test
Dialogue: 0,0:16:41.00,0:16:42.48,Default,,0,0,0,,already has full control over
Dialogue: 0,0:16:42.61,0:16:42.66,Default,,0,0,0,,it.
Dialogue: 0,0:16:45.32,0:16:47.51,Default,,0,0,0,,The other input, is the list of
Dialogue: 0,0:16:47.51,0:16:48.82,Default,,0,0,0,,items that are currently stored
Dialogue: 0,0:16:48.82,0:16:51.23,Default,,0,0,0,,in the cache.
Dialogue: 0,0:16:51.44,0:16:52.64,Default,,0,0,0,,We didn't take the time to look
Dialogue: 0,0:16:52.64,0:16:54.33,Default,,0,0,0,,at how this is implemented, but
Dialogue: 0,0:16:54.33,0:16:56.24,Default,,0,0,0,,the key point is that it uses a
Dialogue: 0,0:16:56.24,0:16:57.98,Default,,0,0,0,,file manager to retrieve a list
Dialogue: 0,0:16:57.98,0:16:59.59,Default,,0,0,0,,of files from the disc.
Dialogue: 0,0:17:01.74,0:17:03.33,Default,,0,0,0,,This means that the input is
Dialogue: 0,0:17:03.33,0:17:04.63,Default,,0,0,0,,actually derived from the file
Dialogue: 0,0:17:04.63,0:17:06.84,Default,,0,0,0,,system, which is the dependency
Dialogue: 0,0:17:06.84,0:17:07.73,Default,,0,0,0,,that the tests would need to
Dialogue: 0,0:17:07.73,0:17:08.98,Default,,0,0,0,,deal with.
Dialogue: 0,0:17:12.30,0:17:14.28,Default,,0,0,0,,The clean cache method has no
Dialogue: 0,0:17:14.28,0:17:14.97,Default,,0,0,0,,return value.
Dialogue: 0,0:17:15.58,0:17:18.61,Default,,0,0,0,,So, its output can't be data.
Dialogue: 0,0:17:18.79,0:17:20.57,Default,,0,0,0,,Rather, it's the side effect of
Dialogue: 0,0:17:20.57,0:17:22.30,Default,,0,0,0,,a certain set of files having
Dialogue: 0,0:17:22.30,0:17:23.61,Default,,0,0,0,,been removed from the disc.
Dialogue: 0,0:17:24.06,0:17:27.20,Default,,0,0,0,,Because of this dependency on
Dialogue: 0,0:17:27.20,0:17:29.15,Default,,0,0,0,,the file system, tests for this
Dialogue: 0,0:17:29.15,0:17:31.44,Default,,0,0,0,,method would need to deal with a
Dialogue: 0,0:17:31.44,0:17:33.13,Default,,0,0,0,,file manager in the file system.
Dialogue: 0,0:17:34.34,0:17:35.97,Default,,0,0,0,,For setup, they might need to
Dialogue: 0,0:17:35.97,0:17:37.88,Default,,0,0,0,,create a temporary directory and
Dialogue: 0,0:17:37.88,0:17:39.72,Default,,0,0,0,,populate it with a bunch of
Dialogue: 0,0:17:39.72,0:17:41.53,Default,,0,0,0,,files of certain sizes and give
Dialogue: 0,0:17:41.53,0:17:43.20,Default,,0,0,0,,them particular timestamps to
Dialogue: 0,0:17:43.20,0:17:43.94,Default,,0,0,0,,provide the input.
Dialogue: 0,0:17:45.86,0:17:47.47,Default,,0,0,0,,To validate the output, you
Dialogue: 0,0:17:47.84,0:17:48.88,Default,,0,0,0,,would need to then return to the
Dialogue: 0,0:17:48.88,0:17:50.94,Default,,0,0,0,,file system to see which files
Dialogue: 0,0:17:50.94,0:17:52.00,Default,,0,0,0,,are still there.
Dialogue: 0,0:17:56.18,0:17:57.27,Default,,0,0,0,,One way to approach this could
Dialogue: 0,0:17:57.27,0:17:59.82,Default,,0,0,0,,be to use the protocols and
Dialogue: 0,0:17:59.82,0:18:01.12,Default,,0,0,0,,parameterization techniques that
Dialogue: 0,0:18:01.12,0:18:01.93,Default,,0,0,0,,we've already seen.
Dialogue: 0,0:18:03.30,0:18:04.64,Default,,0,0,0,,You could introduce a file
Dialogue: 0,0:18:04.64,0:18:06.68,Default,,0,0,0,,manager protocol that has the
Dialogue: 0,0:18:06.68,0:18:07.92,Default,,0,0,0,,methods that we need for getting
Dialogue: 0,0:18:07.92,0:18:09.61,Default,,0,0,0,,a list of files, and for
Dialogue: 0,0:18:09.61,0:18:10.31,Default,,0,0,0,,removing a file.
Dialogue: 0,0:18:11.79,0:18:13.03,Default,,0,0,0,,And then create a test
Dialogue: 0,0:18:13.03,0:18:15.21,Default,,0,0,0,,implementation that would allow
Dialogue: 0,0:18:15.21,0:18:16.45,Default,,0,0,0,,specifying the list of files
Dialogue: 0,0:18:16.45,0:18:17.99,Default,,0,0,0,,that would be returned, and a
Dialogue: 0,0:18:17.99,0:18:19.25,Default,,0,0,0,,query of which ones have been
Dialogue: 0,0:18:19.75,0:18:19.95,Default,,0,0,0,,removed.
Dialogue: 0,0:18:22.00,0:18:23.40,Default,,0,0,0,,If we do this though, we're
Dialogue: 0,0:18:23.40,0:18:25.14,Default,,0,0,0,,still interacting indirectly
Dialogue: 0,0:18:25.29,0:18:26.28,Default,,0,0,0,,with the code that we're trying
Dialogue: 0,0:18:26.28,0:18:28.39,Default,,0,0,0,,to test mediated by the file
Dialogue: 0,0:18:28.39,0:18:28.76,Default,,0,0,0,,manager.
Dialogue: 0,0:18:32.31,0:18:34.15,Default,,0,0,0,,Instead, let's try something a
Dialogue: 0,0:18:34.15,0:18:35.16,Default,,0,0,0,,little bit different.
Dialogue: 0,0:18:35.83,0:18:37.41,Default,,0,0,0,,We could take our clean cache
Dialogue: 0,0:18:37.41,0:18:40.38,Default,,0,0,0,,method and factor out the logic
Dialogue: 0,0:18:40.66,0:18:41.90,Default,,0,0,0,,responsible for deciding while
Dialogue: 0,0:18:41.90,0:18:44.13,Default,,0,0,0,,files should be removed, the
Dialogue: 0,0:18:44.13,0:18:46.61,Default,,0,0,0,,clean-up policy, which you can
Dialogue: 0,0:18:46.61,0:18:47.58,Default,,0,0,0,,then interact with more
Dialogue: 0,0:18:47.58,0:18:48.03,Default,,0,0,0,,directly.
Dialogue: 0,0:18:48.67,0:18:51.61,Default,,0,0,0,,Let's see how that might work.
Dialogue: 0,0:18:54.78,0:18:56.14,Default,,0,0,0,,To clearly define the APIs we're
Dialogue: 0,0:18:56.14,0:18:57.32,Default,,0,0,0,,going to work with, let's first
Dialogue: 0,0:18:57.59,0:18:59.21,Default,,0,0,0,,define clean-up policy as a
Dialogue: 0,0:18:59.21,0:18:59.78,Default,,0,0,0,,protocol.
Dialogue: 0,0:19:00.41,0:19:03.98,Default,,0,0,0,,It just needs a single method --
Dialogue: 0,0:19:04.33,0:19:05.13,Default,,0,0,0,,items to remove.
Dialogue: 0,0:19:06.46,0:19:07.88,Default,,0,0,0,,Notice how the type signature
Dialogue: 0,0:19:07.88,0:19:09.70,Default,,0,0,0,,that we've given it, looks a bit
Dialogue: 0,0:19:09.70,0:19:11.84,Default,,0,0,0,,different than from the clean
Dialogue: 0,0:19:11.84,0:19:13.13,Default,,0,0,0,,cache method that we started
Dialogue: 0,0:19:13.42,0:19:13.50,Default,,0,0,0,,with.
Dialogue: 0,0:19:16.07,0:19:18.86,Default,,0,0,0,,As input, the new method takes a
Dialogue: 0,0:19:18.92,0:19:20.28,Default,,0,0,0,,set of cache item values.
Dialogue: 0,0:19:21.62,0:19:23.32,Default,,0,0,0,,And for output, it returns
Dialogue: 0,0:19:23.42,0:19:25.51,Default,,0,0,0,,another set of them, but that is
Dialogue: 0,0:19:25.51,0:19:27.21,Default,,0,0,0,,the ones to be removed.
Dialogue: 0,0:19:30.60,0:19:32.05,Default,,0,0,0,,So, let's see how we can
Dialogue: 0,0:19:32.05,0:19:33.70,Default,,0,0,0,,implement this protocol using
Dialogue: 0,0:19:33.70,0:19:35.17,Default,,0,0,0,,the algorithm that we previously
Dialogue: 0,0:19:35.17,0:19:37.33,Default,,0,0,0,,saw from the cache class.
Dialogue: 0,0:19:39.42,0:19:40.55,Default,,0,0,0,,Well, first define a property
Dialogue: 0,0:19:40.76,0:19:41.97,Default,,0,0,0,,for that max size input.
Dialogue: 0,0:19:42.90,0:19:44.28,Default,,0,0,0,,That'll let us specify this max
Dialogue: 0,0:19:44.28,0:19:45.50,Default,,0,0,0,,size, and we construct the
Dialogue: 0,0:19:45.50,0:19:45.94,Default,,0,0,0,,policy.
Dialogue: 0,0:19:48.92,0:19:50.65,Default,,0,0,0,,Then we add the items to remove
Dialogue: 0,0:19:50.65,0:19:52.17,Default,,0,0,0,,method that the protocol
Dialogue: 0,0:19:52.17,0:19:52.72,Default,,0,0,0,,requires.
Dialogue: 0,0:19:56.14,0:19:57.69,Default,,0,0,0,,We want to inspect each of the
Dialogue: 0,0:19:57.69,0:19:59.10,Default,,0,0,0,,items passed into the method,
Dialogue: 0,0:19:59.79,0:20:01.25,Default,,0,0,0,,and build up a set of items to
Dialogue: 0,0:20:01.25,0:20:02.91,Default,,0,0,0,,remove, and return that to the
Dialogue: 0,0:20:02.91,0:20:04.00,Default,,0,0,0,,method when we're done.
Dialogue: 0,0:20:07.22,0:20:09.17,Default,,0,0,0,,To populate the set, we'll loop
Dialogue: 0,0:20:09.17,0:20:10.35,Default,,0,0,0,,over all of the items from
Dialogue: 0,0:20:10.35,0:20:13.42,Default,,0,0,0,,newest to oldest, summing up the
Dialogue: 0,0:20:13.42,0:20:14.83,Default,,0,0,0,,size of all the items we've seen
Dialogue: 0,0:20:14.83,0:20:16.01,Default,,0,0,0,,so far.
Dialogue: 0,0:20:18.34,0:20:19.78,Default,,0,0,0,,Once we've reached the maximum
Dialogue: 0,0:20:19.78,0:20:22.35,Default,,0,0,0,,size, we start adding the rest
Dialogue: 0,0:20:22.35,0:20:24.19,Default,,0,0,0,,to the set of items to remove.
Dialogue: 0,0:20:27.50,0:20:29.83,Default,,0,0,0,,Looking at this code, we can see
Dialogue: 0,0:20:29.83,0:20:31.09,Default,,0,0,0,,that the side effects that were
Dialogue: 0,0:20:31.09,0:20:32.56,Default,,0,0,0,,prone in the earlier version
Dialogue: 0,0:20:32.81,0:20:33.56,Default,,0,0,0,,have been removed.
Dialogue: 0,0:20:34.17,0:20:36.67,Default,,0,0,0,,What remains is the underlying
Dialogue: 0,0:20:36.67,0:20:40.10,Default,,0,0,0,,algorithm, taking data as input,
Dialogue: 0,0:20:40.81,0:20:44.02,Default,,0,0,0,,and returning some data as
Dialogue: 0,0:20:44.02,0:20:44.42,Default,,0,0,0,,output.
Dialogue: 0,0:20:45.57,0:20:46.89,Default,,0,0,0,,We can also visualize the data
Dialogue: 0,0:20:46.89,0:20:47.96,Default,,0,0,0,,flow that we've achieved by
Dialogue: 0,0:20:47.96,0:20:48.50,Default,,0,0,0,,doing this.
Dialogue: 0,0:20:49.11,0:20:51.83,Default,,0,0,0,,Notice that the code has taken
Dialogue: 0,0:20:51.83,0:20:53.21,Default,,0,0,0,,on a very functional style.
Dialogue: 0,0:20:53.95,0:20:55.38,Default,,0,0,0,,Data in; data out.
Dialogue: 0,0:20:59.74,0:21:01.34,Default,,0,0,0,,With the logic factored out in
Dialogue: 0,0:21:01.34,0:21:03.46,Default,,0,0,0,,this way, we've enabled
Dialogue: 0,0:21:03.46,0:21:04.80,Default,,0,0,0,,ourselves to write clear,
Dialogue: 0,0:21:04.80,0:21:06.54,Default,,0,0,0,,concise tests that put the
Dialogue: 0,0:21:06.54,0:21:10.22,Default,,0,0,0,,algorithm through its paces.
Dialogue: 0,0:21:10.34,0:21:12.05,Default,,0,0,0,,All we have to do is define an
Dialogue: 0,0:21:12.16,0:21:16.54,Default,,0,0,0,,input set with some cache items,
Dialogue: 0,0:21:16.54,0:21:17.83,Default,,0,0,0,,create an instance of the type,
Dialogue: 0,0:21:18.66,0:21:20.30,Default,,0,0,0,,calling the method, directly
Dialogue: 0,0:21:20.30,0:21:21.49,Default,,0,0,0,,passing in the values that it
Dialogue: 0,0:21:21.49,0:21:25.25,Default,,0,0,0,,needs, and then asserting that
Dialogue: 0,0:21:25.25,0:21:27.03,Default,,0,0,0,,the returned items match the
Dialogue: 0,0:21:27.03,0:21:27.74,Default,,0,0,0,,expected result.
Dialogue: 0,0:21:28.27,0:21:32.30,Default,,0,0,0,,With a code in this form, we now
Dialogue: 0,0:21:32.30,0:21:33.33,Default,,0,0,0,,have easy control over the
Dialogue: 0,0:21:33.33,0:21:35.45,Default,,0,0,0,,inputs, visibility into the
Dialogue: 0,0:21:35.45,0:21:38.12,Default,,0,0,0,,outputs, and there's no hidden
Dialogue: 0,0:21:38.12,0:21:39.49,Default,,0,0,0,,state to contend with at all.
Dialogue: 0,0:21:40.48,0:21:41.66,Default,,0,0,0,,It's very reminiscent of the
Dialogue: 0,0:21:41.66,0:21:43.61,Default,,0,0,0,,test for the sorted method that
Dialogue: 0,0:21:43.61,0:21:44.58,Default,,0,0,0,,we saw at the beginning.
Dialogue: 0,0:21:46.50,0:21:48.41,Default,,0,0,0,,This allows the test to be easy
Dialogue: 0,0:21:48.41,0:21:50.14,Default,,0,0,0,,to read, with minimal
Dialogue: 0,0:21:50.14,0:21:51.93,Default,,0,0,0,,distraction from the essentials
Dialogue: 0,0:21:51.93,0:21:55.51,Default,,0,0,0,,of what is being tested to run
Dialogue: 0,0:21:55.51,0:21:57.45,Default,,0,0,0,,very quickly because it has no
Dialogue: 0,0:21:57.45,0:21:59.54,Default,,0,0,0,,dependency on slow resources
Dialogue: 0,0:21:59.54,0:22:00.44,Default,,0,0,0,,like the file system.
Dialogue: 0,0:22:00.97,0:22:04.41,Default,,0,0,0,,And to be deterministic because
Dialogue: 0,0:22:04.58,0:22:06.26,Default,,0,0,0,,all of the data in use is fully
Dialogue: 0,0:22:06.26,0:22:06.94,Default,,0,0,0,,self-contained.
Dialogue: 0,0:22:11.76,0:22:13.60,Default,,0,0,0,,Taking a peek back at the
Dialogue: 0,0:22:13.60,0:22:15.14,Default,,0,0,0,,original clean cache method,
Dialogue: 0,0:22:15.48,0:22:17.48,Default,,0,0,0,,after the extraction, we see
Dialogue: 0,0:22:17.48,0:22:19.33,Default,,0,0,0,,that there's very little left.
Dialogue: 0,0:22:21.48,0:22:22.83,Default,,0,0,0,,All we're doing is asking the
Dialogue: 0,0:22:22.83,0:22:24.74,Default,,0,0,0,,clean-up policy for the list of
Dialogue: 0,0:22:24.74,0:22:28.13,Default,,0,0,0,,items to remove, and iterating
Dialogue: 0,0:22:28.13,0:22:30.08,Default,,0,0,0,,over all of them, removing them
Dialogue: 0,0:22:30.08,0:22:30.91,Default,,0,0,0,,from the file system.
Dialogue: 0,0:22:33.24,0:22:36.04,Default,,0,0,0,,To test what remains, we could
Dialogue: 0,0:22:36.04,0:22:37.50,Default,,0,0,0,,decide to introduce that file
Dialogue: 0,0:22:37.50,0:22:39.19,Default,,0,0,0,,manager protocol and testable
Dialogue: 0,0:22:39.19,0:22:41.24,Default,,0,0,0,,implementation to allow writing
Dialogue: 0,0:22:41.24,0:22:42.84,Default,,0,0,0,,a very isolated unit tests for
Dialogue: 0,0:22:43.45,0:22:43.50,Default,,0,0,0,,it.
Dialogue: 0,0:22:44.50,0:22:46.49,Default,,0,0,0,,Or we might decide that a couple
Dialogue: 0,0:22:46.49,0:22:48.47,Default,,0,0,0,,of integration tests are
Dialogue: 0,0:22:48.47,0:22:49.51,Default,,0,0,0,,sufficient to give the
Dialogue: 0,0:22:49.51,0:22:51.50,Default,,0,0,0,,confidence that we need that the
Dialogue: 0,0:22:51.50,0:22:52.65,Default,,0,0,0,,code is doing the right thing.
Dialogue: 0,0:22:53.92,0:22:55.18,Default,,0,0,0,,This thin layer of [inaudible]
Dialogue: 0,0:22:55.30,0:22:56.99,Default,,0,0,0,,code that's left.
Dialogue: 0,0:23:01.82,0:23:04.19,Default,,0,0,0,,So, in this example, we looked
Dialogue: 0,0:23:04.74,0:23:08.04,Default,,0,0,0,,at how to extract business logic
Dialogue: 0,0:23:08.04,0:23:09.61,Default,,0,0,0,,and algorithms into separate
Dialogue: 0,0:23:09.61,0:23:12.18,Default,,0,0,0,,types, away from the code, using
Dialogue: 0,0:23:12.21,0:23:13.61,Default,,0,0,0,,side effects.
Dialogue: 0,0:23:15.64,0:23:17.81,Default,,0,0,0,,When doing this, the algorithms
Dialogue: 0,0:23:17.81,0:23:19.05,Default,,0,0,0,,tend to take on a rather
Dialogue: 0,0:23:19.05,0:23:21.03,Default,,0,0,0,,functional style, using value
Dialogue: 0,0:23:21.03,0:23:22.98,Default,,0,0,0,,types to describe the inputs and
Dialogue: 0,0:23:23.19,0:23:23.98,Default,,0,0,0,,the outputs.
Dialogue: 0,0:23:24.47,0:23:26.93,Default,,0,0,0,,This allows for straightforward
Dialogue: 0,0:23:26.93,0:23:29.22,Default,,0,0,0,,unit tests that exercise the
Dialogue: 0,0:23:29.22,0:23:30.81,Default,,0,0,0,,algorithm in as much detail as
Dialogue: 0,0:23:30.81,0:23:31.33,Default,,0,0,0,,you require.
Dialogue: 0,0:23:34.68,0:23:36.12,Default,,0,0,0,,We're left with a small amount
Dialogue: 0,0:23:36.12,0:23:37.64,Default,,0,0,0,,of code that perform side
Dialogue: 0,0:23:37.64,0:23:38.97,Default,,0,0,0,,effects based on the computer
Dialogue: 0,0:23:38.97,0:23:39.41,Default,,0,0,0,,data.
Dialogue: 0,0:23:39.91,0:23:42.34,Default,,0,0,0,,This bit is often a good
Dialogue: 0,0:23:42.34,0:23:43.86,Default,,0,0,0,,candidate for testing with
Dialogue: 0,0:23:43.86,0:23:46.32,Default,,0,0,0,,integration tests in order to
Dialogue: 0,0:23:46.32,0:23:47.41,Default,,0,0,0,,track that its interaction with
Dialogue: 0,0:23:47.41,0:23:48.53,Default,,0,0,0,,the rest of the system is
Dialogue: 0,0:23:48.53,0:23:49.26,Default,,0,0,0,,working properly.
Dialogue: 0,0:23:54.18,0:23:57.13,Default,,0,0,0,,So, to wrap up, we saw examples
Dialogue: 0,0:23:57.13,0:23:59.19,Default,,0,0,0,,that allowed us to explore two
Dialogue: 0,0:23:59.19,0:24:00.96,Default,,0,0,0,,sets of techniques that allow us
Dialogue: 0,0:24:00.96,0:24:03.12,Default,,0,0,0,,to structure or ask code, so
Dialogue: 0,0:24:03.12,0:24:04.96,Default,,0,0,0,,that tests have control over the
Dialogue: 0,0:24:04.96,0:24:07.00,Default,,0,0,0,,code's inputs, and visibility
Dialogue: 0,0:24:07.00,0:24:09.13,Default,,0,0,0,,into its outputs, thereby
Dialogue: 0,0:24:09.13,0:24:10.46,Default,,0,0,0,,allowing us to write effective
Dialogue: 0,0:24:10.46,0:24:12.03,Default,,0,0,0,,unit tests for it.
Dialogue: 0,0:24:14.78,0:24:16.30,Default,,0,0,0,,And now, I want to call up my
Dialogue: 0,0:24:16.30,0:24:18.15,Default,,0,0,0,,colleague, Greg Tracy, to talk
Dialogue: 0,0:24:18.15,0:24:19.47,Default,,0,0,0,,about how to create a test suite
Dialogue: 0,0:24:19.82,0:24:21.13,Default,,0,0,0,,that scales with your app as it
Dialogue: 0,0:24:21.13,0:24:21.56,Default,,0,0,0,,grows.
Dialogue: 0,0:24:23.52,0:24:27.50,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:24:31.64,0:24:32.59,Default,,0,0,0,,>> Hi, everyone.
Dialogue: 0,0:24:32.80,0:24:33.54,Default,,0,0,0,,My name is Greg.
Dialogue: 0,0:24:33.54,0:24:36.00,Default,,0,0,0,,And I also work on Xcode.
Dialogue: 0,0:24:37.32,0:24:38.87,Default,,0,0,0,,Earlier, Brian showed you some
Dialogue: 0,0:24:38.87,0:24:40.18,Default,,0,0,0,,techniques about how to make app
Dialogue: 0,0:24:40.18,0:24:41.22,Default,,0,0,0,,code more testable.
Dialogue: 0,0:24:41.83,0:24:42.93,Default,,0,0,0,,Now, I want to show you how to
Dialogue: 0,0:24:42.93,0:24:44.34,Default,,0,0,0,,make the accompanying test code
Dialogue: 0,0:24:44.34,0:24:45.36,Default,,0,0,0,,more scalable.
Dialogue: 0,0:24:45.36,0:24:47.32,Default,,0,0,0,,To do this, we'll look at a few
Dialogue: 0,0:24:47.32,0:24:49.38,Default,,0,0,0,,methods to make tests faster,
Dialogue: 0,0:24:49.38,0:24:51.17,Default,,0,0,0,,more readable, and more
Dialogue: 0,0:24:51.17,0:24:52.01,Default,,0,0,0,,modularized.
Dialogue: 0,0:24:52.45,0:24:54.31,Default,,0,0,0,,I also want to mention that many
Dialogue: 0,0:24:54.31,0:24:55.61,Default,,0,0,0,,of the techniques that Brian
Dialogue: 0,0:24:55.61,0:24:57.26,Default,,0,0,0,,described earlier, can also be
Dialogue: 0,0:24:57.26,0:24:58.26,Default,,0,0,0,,applied to test code.
Dialogue: 0,0:24:58.93,0:25:00.06,Default,,0,0,0,,Here, we're going to go through
Dialogue: 0,0:25:00.06,0:25:01.77,Default,,0,0,0,,some additional tips.
Dialogue: 0,0:25:03.20,0:25:05.52,Default,,0,0,0,,First, I'll talk about having a
Dialogue: 0,0:25:05.61,0:25:07.17,Default,,0,0,0,,balance between UI and unit
Dialogue: 0,0:25:08.11,0:25:08.33,Default,,0,0,0,,tests.
Dialogue: 0,0:25:09.38,0:25:11.50,Default,,0,0,0,,Then, dive into code that helps
Dialogue: 0,0:25:11.50,0:25:13.82,Default,,0,0,0,,test scale with the focus on UI
Dialogue: 0,0:25:13.82,0:25:14.38,Default,,0,0,0,,test code.
Dialogue: 0,0:25:15.09,0:25:17.39,Default,,0,0,0,,And then, I'll talk about the
Dialogue: 0,0:25:17.39,0:25:19.42,Default,,0,0,0,,importance of having quality in
Dialogue: 0,0:25:19.42,0:25:20.00,Default,,0,0,0,,test code.
Dialogue: 0,0:25:22.74,0:25:23.72,Default,,0,0,0,,Striking the right balance
Dialogue: 0,0:25:23.78,0:25:27.44,Default,,0,0,0,,between UI and unit tests.
Dialogue: 0,0:25:27.44,0:25:28.44,Default,,0,0,0,,I sometimes like to view my
Dialogue: 0,0:25:28.44,0:25:30.01,Default,,0,0,0,,distribution of tests as a
Dialogue: 0,0:25:30.01,0:25:30.54,Default,,0,0,0,,pyramid.
Dialogue: 0,0:25:31.82,0:25:33.22,Default,,0,0,0,,At the top, you have your UI
Dialogue: 0,0:25:33.22,0:25:36.04,Default,,0,0,0,,tests, and at the bottom, you
Dialogue: 0,0:25:36.04,0:25:37.91,Default,,0,0,0,,have your unit tests.
Dialogue: 0,0:25:38.66,0:25:40.03,Default,,0,0,0,,These [inaudible] pyramid
Dialogue: 0,0:25:40.03,0:25:42.29,Default,,0,0,0,,structure we usually have more
Dialogue: 0,0:25:42.41,0:25:44.34,Default,,0,0,0,,unit tests than we will UI
Dialogue: 0,0:25:44.34,0:25:44.83,Default,,0,0,0,,tests.
Dialogue: 0,0:25:45.34,0:25:46.53,Default,,0,0,0,,This is usually because unit
Dialogue: 0,0:25:46.53,0:25:48.50,Default,,0,0,0,,tests can run much more quickly
Dialogue: 0,0:25:48.50,0:25:49.57,Default,,0,0,0,,than UI tests.
Dialogue: 0,0:25:50.96,0:25:53.30,Default,,0,0,0,,Now between UI and unit tests,
Dialogue: 0,0:25:53.46,0:25:56.21,Default,,0,0,0,,we also have integration tests.
Dialogue: 0,0:25:56.99,0:25:58.73,Default,,0,0,0,,However, today, we're going to
Dialogue: 0,0:25:58.73,0:26:00.16,Default,,0,0,0,,focus more on just UI and unit
Dialogue: 0,0:26:00.16,0:26:00.33,Default,,0,0,0,,tests.
Dialogue: 0,0:26:04.40,0:26:06.22,Default,,0,0,0,,Aside from the distribution, we
Dialogue: 0,0:26:06.22,0:26:07.52,Default,,0,0,0,,might also look at the pyramid
Dialogue: 0,0:26:07.52,0:26:08.79,Default,,0,0,0,,as a way to do maintenance
Dialogue: 0,0:26:08.79,0:26:09.25,Default,,0,0,0,,costs.
Dialogue: 0,0:26:09.99,0:26:11.50,Default,,0,0,0,,Generally, UI tests tend to have
Dialogue: 0,0:26:11.50,0:26:12.59,Default,,0,0,0,,a higher maintenance cost
Dialogue: 0,0:26:12.59,0:26:14.04,Default,,0,0,0,,because of the number of things
Dialogue: 0,0:26:14.04,0:26:14.72,Default,,0,0,0,,that can happen.
Dialogue: 0,0:26:15.90,0:26:17.11,Default,,0,0,0,,Unit tests on the other hand,
Dialogue: 0,0:26:17.40,0:26:19.21,Default,,0,0,0,,have a lower maintenance cost.
Dialogue: 0,0:26:19.48,0:26:21.63,Default,,0,0,0,,So, if a unit test fails, it's
Dialogue: 0,0:26:21.63,0:26:23.21,Default,,0,0,0,,usually immediately obvious
Dialogue: 0,0:26:23.35,0:26:24.15,Default,,0,0,0,,what's gone wrong.
Dialogue: 0,0:26:25.34,0:26:27.07,Default,,0,0,0,,With UI tests, it's like casting
Dialogue: 0,0:26:27.07,0:26:28.92,Default,,0,0,0,,a wide net where you can get
Dialogue: 0,0:26:28.92,0:26:30.01,Default,,0,0,0,,failures that are difficult to
Dialogue: 0,0:26:30.01,0:26:32.00,Default,,0,0,0,,understand, or might not be
Dialogue: 0,0:26:32.00,0:26:33.29,Default,,0,0,0,,relevant to the test at hand.
Dialogue: 0,0:26:33.34,0:26:34.95,Default,,0,0,0,,So, it can be a bit more tricky.
Dialogue: 0,0:26:38.22,0:26:39.56,Default,,0,0,0,,While the testing pyramid is a
Dialogue: 0,0:26:39.56,0:26:41.22,Default,,0,0,0,,great way to represent
Dialogue: 0,0:26:41.51,0:26:43.18,Default,,0,0,0,,distributions of -- our
Dialogue: 0,0:26:43.18,0:26:45.10,Default,,0,0,0,,distribution of tests, it
Dialogue: 0,0:26:45.10,0:26:46.49,Default,,0,0,0,,doesn't represent every
Dialogue: 0,0:26:46.54,0:26:47.14,Default,,0,0,0,,situation.
Dialogue: 0,0:26:47.83,0:26:49.00,Default,,0,0,0,,In fact, you might think of
Dialogue: 0,0:26:49.00,0:26:50.82,Default,,0,0,0,,testing as a spectrum, rather
Dialogue: 0,0:26:50.82,0:26:51.73,Default,,0,0,0,,than a pyramid.
Dialogue: 0,0:26:52.30,0:26:53.89,Default,,0,0,0,,It's often the case that some UI
Dialogue: 0,0:26:54.38,0:26:55.61,Default,,0,0,0,,and unit tests, exist on
Dialogue: 0,0:26:55.68,0:26:56.95,Default,,0,0,0,,opposite ends of the spectrum,
Dialogue: 0,0:26:57.41,0:26:58.73,Default,,0,0,0,,or opposite ends of the pyramid.
Dialogue: 0,0:26:59.31,0:27:01.06,Default,,0,0,0,,Some UI tests might be more like
Dialogue: 0,0:27:01.06,0:27:03.63,Default,,0,0,0,,unit tests, and a unit test
Dialogue: 0,0:27:03.70,0:27:04.94,Default,,0,0,0,,might interact with several
Dialogue: 0,0:27:04.94,0:27:07.14,Default,,0,0,0,,different modules of code and
Dialogue: 0,0:27:07.14,0:27:08.89,Default,,0,0,0,,not just single, isolated bits.
Dialogue: 0,0:27:09.99,0:27:10.92,Default,,0,0,0,,The pyramid is just a good
Dialogue: 0,0:27:10.92,0:27:11.75,Default,,0,0,0,,approximation.
Dialogue: 0,0:27:11.75,0:27:15.82,Default,,0,0,0,,It's not written in stone.
Dialogue: 0,0:27:15.91,0:27:16.90,Default,,0,0,0,,When thinking about these two
Dialogue: 0,0:27:16.90,0:27:18.15,Default,,0,0,0,,kinds of tests, we need to
Dialogue: 0,0:27:18.15,0:27:19.04,Default,,0,0,0,,consider each of their
Dialogue: 0,0:27:19.04,0:27:20.00,Default,,0,0,0,,strengths.
Dialogue: 0,0:27:21.39,0:27:23.33,Default,,0,0,0,,Unit tests are great at testing
Dialogue: 0,0:27:23.33,0:27:25.14,Default,,0,0,0,,small bits of code that might be
Dialogue: 0,0:27:25.14,0:27:26.85,Default,,0,0,0,,hard to reach without access to
Dialogue: 0,0:27:26.85,0:27:28.03,Default,,0,0,0,,all of our app source code.
Dialogue: 0,0:27:28.55,0:27:30.90,Default,,0,0,0,,UI tests on the other hand, are
Dialogue: 0,0:27:30.90,0:27:32.20,Default,,0,0,0,,great when you need to test
Dialogue: 0,0:27:32.20,0:27:34.11,Default,,0,0,0,,large chunks of code, working
Dialogue: 0,0:27:34.11,0:27:34.53,Default,,0,0,0,,together.
Dialogue: 0,0:27:35.69,0:27:36.96,Default,,0,0,0,,Of course, we need to keep in
Dialogue: 0,0:27:36.96,0:27:38.41,Default,,0,0,0,,mind that unit tests do have
Dialogue: 0,0:27:38.41,0:27:39.72,Default,,0,0,0,,access to all of our app's
Dialogue: 0,0:27:39.72,0:27:42.69,Default,,0,0,0,,source, whereas UI tests do not.
Dialogue: 0,0:27:45.04,0:27:46.83,Default,,0,0,0,,Focusing more on UI tests, let's
Dialogue: 0,0:27:47.06,0:27:48.10,Default,,0,0,0,,look at a few things you could
Dialogue: 0,0:27:48.10,0:27:49.31,Default,,0,0,0,,to do improve the quality of
Dialogue: 0,0:27:49.31,0:27:50.03,Default,,0,0,0,,your test code.
Dialogue: 0,0:27:51.07,0:27:52.01,Default,,0,0,0,,By making some of the changes
Dialogue: 0,0:27:52.01,0:27:54.24,Default,,0,0,0,,I'm about to suggest, we can
Dialogue: 0,0:27:54.24,0:27:56.03,Default,,0,0,0,,make it easier to create tests
Dialogue: 0,0:27:56.25,0:27:57.77,Default,,0,0,0,,that scale alongside our app
Dialogue: 0,0:27:57.88,0:27:57.98,Default,,0,0,0,,code.
Dialogue: 0,0:28:01.05,0:28:03.36,Default,,0,0,0,,We'll look at abstracting UI
Dialogue: 0,0:28:03.36,0:28:06.20,Default,,0,0,0,,element queries, creating
Dialogue: 0,0:28:06.25,0:28:07.69,Default,,0,0,0,,objects in utility functions,
Dialogue: 0,0:28:07.72,0:28:08.74,Default,,0,0,0,,which can then be placed in a
Dialogue: 0,0:28:08.74,0:28:11.92,Default,,0,0,0,,library for later use, and
Dialogue: 0,0:28:12.13,0:28:13.59,Default,,0,0,0,,utilizing keyboard shortcuts.
Dialogue: 0,0:28:17.33,0:28:18.12,Default,,0,0,0,,So, first we'll look at
Dialogue: 0,0:28:18.12,0:28:19.61,Default,,0,0,0,,abstracting UI element queries.
Dialogue: 0,0:28:20.98,0:28:22.12,Default,,0,0,0,,Say I have an app that has
Dialogue: 0,0:28:22.25,0:28:23.19,Default,,0,0,0,,several buttons in a view
Dialogue: 0,0:28:23.19,0:28:23.70,Default,,0,0,0,,controller.
Dialogue: 0,0:28:24.50,0:28:25.93,Default,,0,0,0,,And each button is at the same
Dialogue: 0,0:28:25.93,0:28:27.09,Default,,0,0,0,,level in the view hierarchy.
Dialogue: 0,0:28:27.09,0:28:29.31,Default,,0,0,0,,The only difference is the name
Dialogue: 0,0:28:29.41,0:28:31.74,Default,,0,0,0,,of each button.
Dialogue: 0,0:28:31.90,0:28:32.84,Default,,0,0,0,,Instead of writing out this
Dialogue: 0,0:28:32.84,0:28:34.71,Default,,0,0,0,,query seven times, let's wrap
Dialogue: 0,0:28:34.71,0:28:35.42,Default,,0,0,0,,this up in a method.
Dialogue: 0,0:28:39.12,0:28:40.75,Default,,0,0,0,,We can now modify each of our
Dialogue: 0,0:28:40.75,0:28:42.42,Default,,0,0,0,,queries to use the new method we
Dialogue: 0,0:28:42.42,0:28:43.07,Default,,0,0,0,,just created.
Dialogue: 0,0:28:43.68,0:28:45.56,Default,,0,0,0,,However, I might even go
Dialogue: 0,0:28:45.56,0:28:45.88,Default,,0,0,0,,further.
Dialogue: 0,0:28:49.37,0:28:50.66,Default,,0,0,0,,Since each method calls the
Dialogue: 0,0:28:50.77,0:28:53.03,Default,,0,0,0,,same, except for the name, let's
Dialogue: 0,0:28:53.03,0:28:54.33,Default,,0,0,0,,put all those names in array and
Dialogue: 0,0:28:54.33,0:28:56.49,Default,,0,0,0,,just loop through them.
Dialogue: 0,0:28:56.70,0:28:57.65,Default,,0,0,0,,This adds some benefit of
Dialogue: 0,0:28:57.65,0:28:59.12,Default,,0,0,0,,maintainability for this code.
Dialogue: 0,0:28:59.62,0:29:00.76,Default,,0,0,0,,If I add an extra button in the
Dialogue: 0,0:29:00.81,0:29:02.93,Default,,0,0,0,,future, I don't have to add a
Dialogue: 0,0:29:02.93,0:29:03.76,Default,,0,0,0,,new line of code.
Dialogue: 0,0:29:03.89,0:29:05.00,Default,,0,0,0,,I just have to add an extra
Dialogue: 0,0:29:05.00,0:29:09.21,Default,,0,0,0,,button name to the array.
Dialogue: 0,0:29:09.38,0:29:11.09,Default,,0,0,0,,By nature of what a UI test is,
Dialogue: 0,0:29:11.73,0:29:14.12,Default,,0,0,0,,we're issuing a lot of these
Dialogue: 0,0:29:14.12,0:29:14.58,Default,,0,0,0,,queries.
Dialogue: 0,0:29:14.58,0:29:16.93,Default,,0,0,0,,So, if you're using the same
Dialogue: 0,0:29:16.93,0:29:18.95,Default,,0,0,0,,query multiple times, store it
Dialogue: 0,0:29:18.95,0:29:19.78,Default,,0,0,0,,as a variable.
Dialogue: 0,0:29:20.08,0:29:21.67,Default,,0,0,0,,Even if it's only part of a
Dialogue: 0,0:29:21.82,0:29:26.13,Default,,0,0,0,,query, store it somewhere.
Dialogue: 0,0:29:26.24,0:29:27.83,Default,,0,0,0,,Also, if you have queries that
Dialogue: 0,0:29:27.83,0:29:29.39,Default,,0,0,0,,are very similar, consider
Dialogue: 0,0:29:29.39,0:29:30.69,Default,,0,0,0,,creating a helper method around
Dialogue: 0,0:29:30.69,0:29:31.32,Default,,0,0,0,,that query.
Dialogue: 0,0:29:32.53,0:29:34.06,Default,,0,0,0,,The code will look a lot cleaner
Dialogue: 0,0:29:34.06,0:29:35.57,Default,,0,0,0,,and become much more readable.
Dialogue: 0,0:29:36.42,0:29:38.25,Default,,0,0,0,,In terms of scaling our test
Dialogue: 0,0:29:38.25,0:29:39.87,Default,,0,0,0,,suite, the use of shorter lines
Dialogue: 0,0:29:39.97,0:29:42.36,Default,,0,0,0,,of code -- of shorter lines of
Dialogue: 0,0:29:42.36,0:29:43.48,Default,,0,0,0,,test code and thoughtfully named
Dialogue: 0,0:29:43.48,0:29:45.00,Default,,0,0,0,,helper methods, will make it
Dialogue: 0,0:29:45.15,0:29:46.58,Default,,0,0,0,,faster and easier to implement
Dialogue: 0,0:29:46.58,0:29:51.05,Default,,0,0,0,,new tests when the time comes.
Dialogue: 0,0:29:51.24,0:29:52.35,Default,,0,0,0,,So, that was abstracting UI
Dialogue: 0,0:29:52.35,0:29:53.40,Default,,0,0,0,,element queries.
Dialogue: 0,0:29:54.17,0:29:55.29,Default,,0,0,0,,Now, let's move on to creating
Dialogue: 0,0:29:55.29,0:29:56.65,Default,,0,0,0,,objects in utility functions.
Dialogue: 0,0:29:57.00,0:29:59.95,Default,,0,0,0,,I have this game I've been
Dialogue: 0,0:29:59.95,0:30:01.92,Default,,0,0,0,,working on, and for each test, I
Dialogue: 0,0:30:01.92,0:30:02.98,Default,,0,0,0,,want to change some settings.
Dialogue: 0,0:30:04.33,0:30:06.51,Default,,0,0,0,,Now, this is not a great example
Dialogue: 0,0:30:06.51,0:30:07.18,Default,,0,0,0,,of scalable code.
Dialogue: 0,0:30:08.17,0:30:09.30,Default,,0,0,0,,Because I've been recently
Dialogue: 0,0:30:09.30,0:30:10.38,Default,,0,0,0,,working with this app, I'm
Dialogue: 0,0:30:10.38,0:30:11.69,Default,,0,0,0,,familiar with how everything is
Dialogue: 0,0:30:11.69,0:30:12.08,Default,,0,0,0,,laid out.
Dialogue: 0,0:30:13.01,0:30:14.30,Default,,0,0,0,,I understand exactly what's
Dialogue: 0,0:30:14.30,0:30:14.75,Default,,0,0,0,,going on.
Dialogue: 0,0:30:15.75,0:30:17.87,Default,,0,0,0,,However, later, if I was to come
Dialogue: 0,0:30:17.87,0:30:19.11,Default,,0,0,0,,back to this code after a few
Dialogue: 0,0:30:19.11,0:30:21.55,Default,,0,0,0,,weeks, or better yet, somebody
Dialogue: 0,0:30:21.55,0:30:23.13,Default,,0,0,0,,not familiar with my code has to
Dialogue: 0,0:30:23.13,0:30:24.80,Default,,0,0,0,,sit down and read what I wrote,
Dialogue: 0,0:30:25.03,0:30:26.41,Default,,0,0,0,,it might not make all that much
Dialogue: 0,0:30:26.49,0:30:27.00,Default,,0,0,0,,sense.
Dialogue: 0,0:30:28.34,0:30:30.15,Default,,0,0,0,,I first have to realize that I
Dialogue: 0,0:30:30.38,0:30:32.89,Default,,0,0,0,,have a Settings page that I need
Dialogue: 0,0:30:32.89,0:30:35.16,Default,,0,0,0,,to get in and out of.
Dialogue: 0,0:30:35.16,0:30:36.64,Default,,0,0,0,,And I then have to realize that
Dialogue: 0,0:30:36.64,0:30:38.45,Default,,0,0,0,,between those two lines, I'm
Dialogue: 0,0:30:38.45,0:30:39.80,Default,,0,0,0,,going through a difficulty page,
Dialogue: 0,0:30:40.07,0:30:42.80,Default,,0,0,0,,setting the difficulty, then I'm
Dialogue: 0,0:30:42.80,0:30:43.67,Default,,0,0,0,,going through a sound page, and
Dialogue: 0,0:30:43.67,0:30:44.73,Default,,0,0,0,,setting the sound.
Dialogue: 0,0:30:45.95,0:30:47.18,Default,,0,0,0,,Coming after an extended period
Dialogue: 0,0:30:47.18,0:30:49.07,Default,,0,0,0,,of time, I might not understand
Dialogue: 0,0:30:49.07,0:30:50.49,Default,,0,0,0,,why I have two back tabs at the
Dialogue: 0,0:30:50.49,0:30:50.88,Default,,0,0,0,,bottom.
Dialogue: 0,0:30:50.88,0:30:53.33,Default,,0,0,0,,I would have to run through this
Dialogue: 0,0:30:53.37,0:30:54.62,Default,,0,0,0,,test to actually see this
Dialogue: 0,0:30:54.62,0:30:55.03,Default,,0,0,0,,happen.
Dialogue: 0,0:30:56.67,0:30:58.37,Default,,0,0,0,,And if the test were broken
Dialogue: 0,0:30:58.37,0:30:59.38,Default,,0,0,0,,because of some change in the
Dialogue: 0,0:30:59.38,0:31:01.15,Default,,0,0,0,,actual UI, I wouldn't be able to
Dialogue: 0,0:31:01.15,0:31:02.63,Default,,0,0,0,,run my test, and I would be able
Dialogue: 0,0:31:02.63,0:31:03.69,Default,,0,0,0,,to see what I wanted to see.
Dialogue: 0,0:31:04.51,0:31:05.88,Default,,0,0,0,,I'd be clueless as to why the
Dialogue: 0,0:31:05.88,0:31:07.32,Default,,0,0,0,,code was written the way it was.
Dialogue: 0,0:31:08.52,0:31:09.93,Default,,0,0,0,,To fix this, let's try to
Dialogue: 0,0:31:09.93,0:31:11.31,Default,,0,0,0,,abstract away some of this logic
Dialogue: 0,0:31:11.31,0:31:12.23,Default,,0,0,0,,into helper methods.
Dialogue: 0,0:31:12.92,0:31:16.67,Default,,0,0,0,,We can create a method to set
Dialogue: 0,0:31:16.70,0:31:17.40,Default,,0,0,0,,the difficulty.
Dialogue: 0,0:31:17.40,0:31:19.68,Default,,0,0,0,,And then similarly, we can
Dialogue: 0,0:31:19.68,0:31:20.59,Default,,0,0,0,,create a method to set the
Dialogue: 0,0:31:20.68,0:31:21.07,Default,,0,0,0,,sound.
Dialogue: 0,0:31:21.64,0:31:23.06,Default,,0,0,0,,But can we do a little better?
Dialogue: 0,0:31:24.05,0:31:26.86,Default,,0,0,0,,Sure. We can instead, of instead
Dialogue: 0,0:31:26.86,0:31:27.95,Default,,0,0,0,,of passing stream typed
Dialogue: 0,0:31:28.01,0:31:29.83,Default,,0,0,0,,arguments, let's utilize enums.
Dialogue: 0,0:31:31.00,0:31:32.41,Default,,0,0,0,,That way, Xcode can -- helps
Dialogue: 0,0:31:32.41,0:31:34.04,Default,,0,0,0,,determine if the arguments we're
Dialogue: 0,0:31:34.04,0:31:35.88,Default,,0,0,0,,passing are even valid, before
Dialogue: 0,0:31:35.88,0:31:36.92,Default,,0,0,0,,we even compile.
Dialogue: 0,0:31:40.28,0:31:41.46,Default,,0,0,0,,Now, looking at the code from
Dialogue: 0,0:31:41.46,0:31:43.06,Default,,0,0,0,,before, if we replace some of
Dialogue: 0,0:31:43.06,0:31:44.13,Default,,0,0,0,,the code with our new helper
Dialogue: 0,0:31:44.13,0:31:47.39,Default,,0,0,0,,methods, we reduce what we had
Dialogue: 0,0:31:47.39,0:31:47.83,Default,,0,0,0,,before.
Dialogue: 0,0:31:47.83,0:31:48.97,Default,,0,0,0,,And this is already starting to
Dialogue: 0,0:31:48.97,0:31:49.80,Default,,0,0,0,,look a lot better.
Dialogue: 0,0:31:49.80,0:31:53.12,Default,,0,0,0,,What about the initial jump in
Dialogue: 0,0:31:53.12,0:31:54.39,Default,,0,0,0,,and out of the Settings page?
Dialogue: 0,0:31:55.02,0:31:56.73,Default,,0,0,0,,Can we improve this as well?
Dialogue: 0,0:31:57.09,0:31:57.87,Default,,0,0,0,,I think we can.
Dialogue: 0,0:31:58.84,0:32:00.56,Default,,0,0,0,,Let's make a game app class.
Dialogue: 0,0:32:00.56,0:32:03.57,Default,,0,0,0,,And in this class, I'll include
Dialogue: 0,0:32:03.57,0:32:05.28,Default,,0,0,0,,the enums I defined earlier for
Dialogue: 0,0:32:05.28,0:32:07.79,Default,,0,0,0,,difficulty and sound.
Dialogue: 0,0:32:07.83,0:32:09.07,Default,,0,0,0,,I'll also include the helper
Dialogue: 0,0:32:09.07,0:32:10.83,Default,,0,0,0,,methods from before that set
Dialogue: 0,0:32:10.83,0:32:12.00,Default,,0,0,0,,those settings.
Dialogue: 0,0:32:13.40,0:32:14.52,Default,,0,0,0,,We'll create another method
Dialogue: 0,0:32:14.52,0:32:16.29,Default,,0,0,0,,called Configure Settings, that
Dialogue: 0,0:32:16.29,0:32:17.33,Default,,0,0,0,,takes the two settings as
Dialogue: 0,0:32:17.33,0:32:20.50,Default,,0,0,0,,inputs, and we'll migrate the
Dialogue: 0,0:32:20.55,0:32:22.34,Default,,0,0,0,,setup logic from before, into
Dialogue: 0,0:32:22.34,0:32:23.21,Default,,0,0,0,,the configure method.
Dialogue: 0,0:32:23.72,0:32:26.97,Default,,0,0,0,,Back to where we were before,
Dialogue: 0,0:32:27.21,0:32:28.29,Default,,0,0,0,,now that we've created this game
Dialogue: 0,0:32:28.29,0:32:30.28,Default,,0,0,0,,app class, we can take away all
Dialogue: 0,0:32:30.28,0:32:32.27,Default,,0,0,0,,the code we wrote before, and
Dialogue: 0,0:32:32.27,0:32:33.87,Default,,0,0,0,,just use a single call, the
Dialogue: 0,0:32:33.87,0:32:34.63,Default,,0,0,0,,configure method.
Dialogue: 0,0:32:35.48,0:32:36.96,Default,,0,0,0,,This looks a lot more readable
Dialogue: 0,0:32:36.96,0:32:38.29,Default,,0,0,0,,to me than what we had before.
Dialogue: 0,0:32:39.28,0:32:41.42,Default,,0,0,0,,Now, if I wrote more tests than
Dialogue: 0,0:32:41.42,0:32:42.86,Default,,0,0,0,,needed to set the settings, I
Dialogue: 0,0:32:43.21,0:32:44.16,Default,,0,0,0,,would just call our configure
Dialogue: 0,0:32:44.16,0:32:44.66,Default,,0,0,0,,method.
Dialogue: 0,0:32:46.17,0:32:48.28,Default,,0,0,0,,And if I needed to -- or if I
Dialogue: 0,0:32:48.28,0:32:49.39,Default,,0,0,0,,decided that I wanted to add
Dialogue: 0,0:32:49.39,0:32:50.84,Default,,0,0,0,,more settings to my app, I would
Dialogue: 0,0:32:50.84,0:32:51.83,Default,,0,0,0,,just have to update our
Dialogue: 0,0:32:51.83,0:32:53.03,Default,,0,0,0,,configure settings method to
Dialogue: 0,0:32:53.03,0:32:53.95,Default,,0,0,0,,handle these additional
Dialogue: 0,0:32:53.95,0:32:54.31,Default,,0,0,0,,settings.
Dialogue: 0,0:32:55.00,0:32:58.86,Default,,0,0,0,,From the example, one of the
Dialogue: 0,0:32:58.86,0:33:00.52,Default,,0,0,0,,most important things to do when
Dialogue: 0,0:33:00.52,0:33:02.10,Default,,0,0,0,,trying to scale your tests, is
Dialogue: 0,0:33:02.10,0:33:03.93,Default,,0,0,0,,to create abstraction that you
Dialogue: 0,0:33:04.06,0:33:05.73,Default,,0,0,0,,can later put into a library
Dialogue: 0,0:33:05.73,0:33:06.01,Default,,0,0,0,,suite.
Dialogue: 0,0:33:06.61,0:33:07.80,Default,,0,0,0,,By doing this, we're
Dialogue: 0,0:33:07.80,0:33:09.48,Default,,0,0,0,,encapsulating common workflows
Dialogue: 0,0:33:09.81,0:33:10.99,Default,,0,0,0,,that can be applied to more than
Dialogue: 0,0:33:10.99,0:33:12.27,Default,,0,0,0,,one test.
Dialogue: 0,0:33:13.82,0:33:15.30,Default,,0,0,0,,This also means that we're able
Dialogue: 0,0:33:15.30,0:33:16.68,Default,,0,0,0,,to share test code across
Dialogue: 0,0:33:16.75,0:33:17.72,Default,,0,0,0,,different platforms.
Dialogue: 0,0:33:18.26,0:33:22.31,Default,,0,0,0,,And, of course, by sharing code,
Dialogue: 0,0:33:22.31,0:33:23.91,Default,,0,0,0,,we improve maintainability.
Dialogue: 0,0:33:24.93,0:33:26.01,Default,,0,0,0,,If something related to an
Dialogue: 0,0:33:26.01,0:33:27.88,Default,,0,0,0,,abstracted workflow changes, we
Dialogue: 0,0:33:27.88,0:33:29.15,Default,,0,0,0,,only have to update our code in
Dialogue: 0,0:33:29.15,0:33:32.08,Default,,0,0,0,,a single place, as opposed to
Dialogue: 0,0:33:34.76,0:33:35.20,Default,,0,0,0,,several.
Dialogue: 0,0:33:35.25,0:33:36.18,Default,,0,0,0,,One other improvement that I
Dialogue: 0,0:33:36.18,0:33:37.65,Default,,0,0,0,,want to mention, in our
Dialogue: 0,0:33:37.65,0:33:39.76,Default,,0,0,0,,configure method, and new in
Dialogue: 0,0:33:39.92,0:33:42.57,Default,,0,0,0,,Xcode this year, we can add an
Dialogue: 0,0:33:42.57,0:33:45.04,Default,,0,0,0,,XCTContent.runActivity block to
Dialogue: 0,0:33:45.67,0:33:46.71,Default,,0,0,0,,our code.
Dialogue: 0,0:33:46.91,0:33:48.09,Default,,0,0,0,,This makes it so that when we
Dialogue: 0,0:33:48.09,0:33:49.64,Default,,0,0,0,,run our test, instead of having
Dialogue: 0,0:33:49.64,0:33:51.01,Default,,0,0,0,,a log that contains all the
Dialogue: 0,0:33:51.01,0:33:52.43,Default,,0,0,0,,actions that we made at the top
Dialogue: 0,0:33:52.43,0:33:55.06,Default,,0,0,0,,level, we can nest our logging,
Dialogue: 0,0:33:55.06,0:33:56.08,Default,,0,0,0,,using runActivity.
Dialogue: 0,0:33:56.63,0:33:59.41,Default,,0,0,0,,This helps organize our logging
Dialogue: 0,0:33:59.41,0:34:01.69,Default,,0,0,0,,to make things look a little bit
Dialogue: 0,0:34:02.56,0:34:02.73,Default,,0,0,0,,cleaner.
Dialogue: 0,0:34:02.86,0:34:03.99,Default,,0,0,0,,For more information regarding
Dialogue: 0,0:34:03.99,0:34:05.93,Default,,0,0,0,,the test activity feature, check
Dialogue: 0,0:34:05.93,0:34:07.52,Default,,0,0,0,,out the earlier talk about
Dialogue: 0,0:34:07.52,0:34:11.01,Default,,0,0,0,,What's New in Testing?
Dialogue: 0,0:34:11.55,0:34:13.12,Default,,0,0,0,,Now, let's move on to Utilizing
Dialogue: 0,0:34:13.12,0:34:15.00,Default,,0,0,0,,Keyboard Shortcuts for macOS UI
Dialogue: 0,0:34:15.00,0:34:15.33,Default,,0,0,0,,Tests.
Dialogue: 0,0:34:17.89,0:34:19.17,Default,,0,0,0,,Let's say I have an app where
Dialogue: 0,0:34:19.17,0:34:20.61,Default,,0,0,0,,the user can pick a color for
Dialogue: 0,0:34:20.61,0:34:21.88,Default,,0,0,0,,their text, using the standard
Dialogue: 0,0:34:21.88,0:34:23.28,Default,,0,0,0,,macOS color picker.
Dialogue: 0,0:34:23.89,0:34:25.34,Default,,0,0,0,,And I'm writing a test to verify
Dialogue: 0,0:34:25.34,0:34:26.65,Default,,0,0,0,,that the color is set correctly.
Dialogue: 0,0:34:27.20,0:34:30.19,Default,,0,0,0,,The typical way to bring up the
Dialogue: 0,0:34:30.19,0:34:32.06,Default,,0,0,0,,color picker in my app is by
Dialogue: 0,0:34:32.06,0:34:34.06,Default,,0,0,0,,opening the Format menu, and
Dialogue: 0,0:34:34.06,0:34:35.72,Default,,0,0,0,,navigating to the Font sub-menu,
Dialogue: 0,0:34:36.09,0:34:37.32,Default,,0,0,0,,and finally choosing Show
Dialogue: 0,0:34:37.32,0:34:37.93,Default,,0,0,0,,Colors.
Dialogue: 0,0:34:37.99,0:34:40.80,Default,,0,0,0,,I can write this in my UI test
Dialogue: 0,0:34:40.80,0:34:41.51,Default,,0,0,0,,like this.
Dialogue: 0,0:34:43.98,0:34:45.62,Default,,0,0,0,,But there's a faster way to do
Dialogue: 0,0:34:45.62,0:34:47.02,Default,,0,0,0,,this that'll scale better as my
Dialogue: 0,0:34:47.02,0:34:47.85,Default,,0,0,0,,test [inaudible] grows.
Dialogue: 0,0:34:49.17,0:34:50.82,Default,,0,0,0,,Notice that the Show Colors menu
Dialogue: 0,0:34:50.82,0:34:52.58,Default,,0,0,0,,item has an associated keyboard
Dialogue: 0,0:34:52.58,0:34:53.24,Default,,0,0,0,,shortcut.
Dialogue: 0,0:34:53.85,0:34:57.46,Default,,0,0,0,,Rather than using multiple lines
Dialogue: 0,0:34:57.46,0:34:58.52,Default,,0,0,0,,of code to bring up the color
Dialogue: 0,0:34:58.52,0:35:01.17,Default,,0,0,0,,picker, we can just use one line
Dialogue: 0,0:35:01.17,0:35:02.67,Default,,0,0,0,,of code using the shortcut.
Dialogue: 0,0:35:03.24,0:35:06.44,Default,,0,0,0,,And for the sake of readability,
Dialogue: 0,0:35:06.62,0:35:07.81,Default,,0,0,0,,I might use a wrapper to make
Dialogue: 0,0:35:07.81,0:35:08.58,Default,,0,0,0,,this call for me.
Dialogue: 0,0:35:09.65,0:35:11.27,Default,,0,0,0,,So, not only is this less code
Dialogue: 0,0:35:11.27,0:35:13.06,Default,,0,0,0,,to maintain in my tests, it's
Dialogue: 0,0:35:13.06,0:35:14.31,Default,,0,0,0,,less code that has to be run
Dialogue: 0,0:35:14.31,0:35:15.85,Default,,0,0,0,,that isn't directly relevant to
Dialogue: 0,0:35:15.85,0:35:17.02,Default,,0,0,0,,the actual test I'm trying to
Dialogue: 0,0:35:17.05,0:35:18.00,Default,,0,0,0,,perform.
Dialogue: 0,0:35:20.58,0:35:22.33,Default,,0,0,0,,So, in an example test method, I
Dialogue: 0,0:35:22.33,0:35:23.45,Default,,0,0,0,,was previously going through the
Dialogue: 0,0:35:23.45,0:35:25.01,Default,,0,0,0,,menu to get the color picker to
Dialogue: 0,0:35:25.01,0:35:25.32,Default,,0,0,0,,show.
Dialogue: 0,0:35:25.83,0:35:29.14,Default,,0,0,0,,Using the new wrapper method, we
Dialogue: 0,0:35:29.14,0:35:30.41,Default,,0,0,0,,remove all those extra lines and
Dialogue: 0,0:35:30.41,0:35:31.86,Default,,0,0,0,,reduce to a single method.
Dialogue: 0,0:35:32.59,0:35:33.91,Default,,0,0,0,,Not only does this make my test
Dialogue: 0,0:35:34.04,0:35:35.43,Default,,0,0,0,,faster, it makes my code look a
Dialogue: 0,0:35:35.43,0:35:36.88,Default,,0,0,0,,lot more readable.
Dialogue: 0,0:35:39.21,0:35:40.89,Default,,0,0,0,,Looking at what we just saw, if
Dialogue: 0,0:35:40.89,0:35:42.07,Default,,0,0,0,,you're writing a UI test for a
Dialogue: 0,0:35:42.07,0:35:44.08,Default,,0,0,0,,macOS application, you can offer
Dialogue: 0,0:35:44.08,0:35:45.42,Default,,0,0,0,,a keyboard shortcut instead of
Dialogue: 0,0:35:45.42,0:35:46.42,Default,,0,0,0,,going through the menu bar.
Dialogue: 0,0:35:47.06,0:35:49.02,Default,,0,0,0,,I'm still going to have at least
Dialogue: 0,0:35:49.02,0:35:50.74,Default,,0,0,0,,one test that ensures that
Dialogue: 0,0:35:50.74,0:35:52.05,Default,,0,0,0,,bringing up the color picker via
Dialogue: 0,0:35:52.05,0:35:53.69,Default,,0,0,0,,the menu bar, works properly,
Dialogue: 0,0:35:54.08,0:35:56.25,Default,,0,0,0,,but that doesn't need to be
Dialogue: 0,0:35:56.25,0:35:57.83,Default,,0,0,0,,repeated across every single
Dialogue: 0,0:35:57.83,0:35:58.79,Default,,0,0,0,,test that involves the color
Dialogue: 0,0:35:58.79,0:35:59.13,Default,,0,0,0,,picker.
Dialogue: 0,0:36:02.92,0:36:04.96,Default,,0,0,0,,In the process of using keyboard
Dialogue: 0,0:36:04.96,0:36:06.88,Default,,0,0,0,,shortcuts, we make our test code
Dialogue: 0,0:36:06.88,0:36:09.20,Default,,0,0,0,,more compact by skipping extra
Dialogue: 0,0:36:09.20,0:36:10.50,Default,,0,0,0,,steps needed to work through the
Dialogue: 0,0:36:10.50,0:36:12.86,Default,,0,0,0,,UI, sometimes reducing multiple
Dialogue: 0,0:36:12.86,0:36:14.21,Default,,0,0,0,,lines of code to a single line,
Dialogue: 0,0:36:14.55,0:36:15.75,Default,,0,0,0,,which can help for readability.
Dialogue: 0,0:36:18.64,0:36:20.35,Default,,0,0,0,,Finally, I want to stress to all
Dialogue: 0,0:36:20.35,0:36:21.97,Default,,0,0,0,,of you that writing good tests
Dialogue: 0,0:36:22.10,0:36:23.50,Default,,0,0,0,,is about writing good code.
Dialogue: 0,0:36:24.13,0:36:25.89,Default,,0,0,0,,It's easy to treat tests as an
Dialogue: 0,0:36:25.89,0:36:26.44,Default,,0,0,0,,afterthought.
Dialogue: 0,0:36:27.45,0:36:29.37,Default,,0,0,0,,Usually, we focus on trying to
Dialogue: 0,0:36:29.37,0:36:30.47,Default,,0,0,0,,make our app the best it can
Dialogue: 0,0:36:30.47,0:36:32.35,Default,,0,0,0,,possibly be, by investing all
Dialogue: 0,0:36:32.35,0:36:33.51,Default,,0,0,0,,this time in writing beautiful
Dialogue: 0,0:36:33.51,0:36:35.22,Default,,0,0,0,,app code that adheres to all
Dialogue: 0,0:36:35.22,0:36:36.70,Default,,0,0,0,,these principles of good design.
Dialogue: 0,0:36:36.97,0:36:38.25,Default,,0,0,0,,We might have this additional
Dialogue: 0,0:36:38.50,0:36:40.34,Default,,0,0,0,,requirement of writing test
Dialogue: 0,0:36:40.40,0:36:40.69,Default,,0,0,0,,code.
Dialogue: 0,0:36:40.69,0:36:41.75,Default,,0,0,0,,It might be something tacked on
Dialogue: 0,0:36:41.75,0:36:43.20,Default,,0,0,0,,at the end or done in a hurry
Dialogue: 0,0:36:43.20,0:36:44.55,Default,,0,0,0,,just to check off a checkbox.
Dialogue: 0,0:36:44.61,0:36:46.90,Default,,0,0,0,,But we can't allow this to
Dialogue: 0,0:36:47.19,0:36:47.33,Default,,0,0,0,,happen.
Dialogue: 0,0:36:48.93,0:36:50.48,Default,,0,0,0,,Without the same attention to
Dialogue: 0,0:36:50.48,0:36:52.33,Default,,0,0,0,,detail, test code isn't going to
Dialogue: 0,0:36:52.33,0:36:53.90,Default,,0,0,0,,scale the same way our app code
Dialogue: 0,0:36:53.90,0:36:54.00,Default,,0,0,0,,might.
Dialogue: 0,0:36:56.42,0:36:58.55,Default,,0,0,0,,So, to that end, test code is
Dialogue: 0,0:36:58.55,0:37:00.27,Default,,0,0,0,,important even though it isn't
Dialogue: 0,0:37:00.27,0:37:00.74,Default,,0,0,0,,shipping.
Dialogue: 0,0:37:02.16,0:37:03.50,Default,,0,0,0,,Also note that the test suite
Dialogue: 0,0:37:03.50,0:37:04.94,Default,,0,0,0,,should support the evolution of
Dialogue: 0,0:37:04.94,0:37:06.69,Default,,0,0,0,,your app, and not hinder change.
Dialogue: 0,0:37:07.16,0:37:08.40,Default,,0,0,0,,With low quality test code, it
Dialogue: 0,0:37:08.40,0:37:10.01,Default,,0,0,0,,becomes a burden to have to
Dialogue: 0,0:37:10.01,0:37:11.06,Default,,0,0,0,,update your test whenever you
Dialogue: 0,0:37:11.06,0:37:12.28,Default,,0,0,0,,make a change to your app.
Dialogue: 0,0:37:13.16,0:37:14.63,Default,,0,0,0,,But by consciously designing
Dialogue: 0,0:37:14.63,0:37:16.42,Default,,0,0,0,,test code with quality in mind,
Dialogue: 0,0:37:16.82,0:37:18.74,Default,,0,0,0,,our ability to scale won't be
Dialogue: 0,0:37:18.74,0:37:19.86,Default,,0,0,0,,inhibited by poorly designed
Dialogue: 0,0:37:19.86,0:37:20.11,Default,,0,0,0,,tests.
Dialogue: 0,0:37:20.84,0:37:24.16,Default,,0,0,0,,And of course, coding principles
Dialogue: 0,0:37:24.16,0:37:26.06,Default,,0,0,0,,that apply to app code, also
Dialogue: 0,0:37:26.06,0:37:27.09,Default,,0,0,0,,apply to test code.
Dialogue: 0,0:37:27.69,0:37:28.83,Default,,0,0,0,,Test code and app code should be
Dialogue: 0,0:37:28.83,0:37:29.54,Default,,0,0,0,,viewed equally.
Dialogue: 0,0:37:30.11,0:37:33.25,Default,,0,0,0,,And here's an idea for you.
Dialogue: 0,0:37:33.29,0:37:34.71,Default,,0,0,0,,We should have code reviews for
Dialogue: 0,0:37:34.71,0:37:36.65,Default,,0,0,0,,test code, not just code reviews
Dialogue: 0,0:37:36.89,0:37:37.99,Default,,0,0,0,,with test code.
Dialogue: 0,0:37:38.60,0:37:39.45,Default,,0,0,0,,Having code reviews that are
Dialogue: 0,0:37:39.45,0:37:40.98,Default,,0,0,0,,exclusively for test code,
Dialogue: 0,0:37:40.98,0:37:42.01,Default,,0,0,0,,ensures that somebody else is
Dialogue: 0,0:37:42.01,0:37:42.66,Default,,0,0,0,,checking your work, or
Dialogue: 0,0:37:43.02,0:37:44.63,Default,,0,0,0,,[inaudible] with a test cover,
Dialogue: 0,0:37:44.95,0:37:46.26,Default,,0,0,0,,and it's a chance to further
Dialogue: 0,0:37:46.26,0:37:47.57,Default,,0,0,0,,improve the tests themselves.
Dialogue: 0,0:37:47.57,0:37:51.51,Default,,0,0,0,,Now, I want to leave you with a
Dialogue: 0,0:37:51.51,0:37:51.73,Default,,0,0,0,,thought.
Dialogue: 0,0:37:52.32,0:37:54.02,Default,,0,0,0,,App code and the tests that
Dialogue: 0,0:37:54.02,0:37:55.52,Default,,0,0,0,,verify it, are really two halves
Dialogue: 0,0:37:55.52,0:37:56.02,Default,,0,0,0,,of a whole.
Dialogue: 0,0:37:56.73,0:37:57.90,Default,,0,0,0,,When you update your app code,
Dialogue: 0,0:37:57.97,0:37:58.98,Default,,0,0,0,,you'll need to update your test
Dialogue: 0,0:37:59.20,0:37:59.72,Default,,0,0,0,,code too.
Dialogue: 0,0:37:59.72,0:38:04.03,Default,,0,0,0,,We need to think of app code and
Dialogue: 0,0:38:04.03,0:38:05.97,Default,,0,0,0,,the test code, as part of the
Dialogue: 0,0:38:05.97,0:38:07.53,Default,,0,0,0,,same thing, our code.
Dialogue: 0,0:38:08.48,0:38:09.37,Default,,0,0,0,,By making our code more
Dialogue: 0,0:38:09.37,0:38:10.96,Default,,0,0,0,,testable, as Brian discussed
Dialogue: 0,0:38:10.96,0:38:12.55,Default,,0,0,0,,earlier, and by treating test
Dialogue: 0,0:38:12.55,0:38:13.82,Default,,0,0,0,,code with the same care as your
Dialogue: 0,0:38:13.82,0:38:15.29,Default,,0,0,0,,app code, you improve the
Dialogue: 0,0:38:15.29,0:38:16.31,Default,,0,0,0,,quality of the whole app.
Dialogue: 0,0:38:17.20,0:38:18.24,Default,,0,0,0,,We ought to be proud of both
Dialogue: 0,0:38:18.24,0:38:20.17,Default,,0,0,0,,halves, and treat each with the
Dialogue: 0,0:38:20.17,0:38:21.50,Default,,0,0,0,,care and attention that they
Dialogue: 0,0:38:21.50,0:38:21.93,Default,,0,0,0,,deserve.
Dialogue: 0,0:38:25.83,0:38:27.00,Default,,0,0,0,,For more information and
Dialogue: 0,0:38:27.00,0:38:27.98,Default,,0,0,0,,resources regarding this
Dialogue: 0,0:38:27.98,0:38:29.29,Default,,0,0,0,,session, you can visit the link
Dialogue: 0,0:38:29.32,0:38:30.23,Default,,0,0,0,,listed on the screen.
Dialogue: 0,0:38:30.23,0:38:33.30,Default,,0,0,0,,Here are a few related sessions.
Dialogue: 0,0:38:33.36,0:38:34.60,Default,,0,0,0,,One that happened yesterday, and
Dialogue: 0,0:38:34.60,0:38:35.83,Default,,0,0,0,,a few that happened in previous
Dialogue: 0,0:38:35.83,0:38:36.20,Default,,0,0,0,,years.
Dialogue: 0,0:38:36.23,0:38:37.62,Default,,0,0,0,,You can check those out online,
Dialogue: 0,0:38:37.71,0:38:40.16,Default,,0,0,0,,or through the WWDC app.
Dialogue: 0,0:38:40.45,0:38:41.48,Default,,0,0,0,,And with that, I'd like to thank
Dialogue: 0,0:38:41.48,0:38:42.51,Default,,0,0,0,,you for your attention, and I
Dialogue: 0,0:38:42.51,0:38:43.34,Default,,0,0,0,,hope you enjoy the rest of the
Dialogue: 0,0:38:43.34,0:38:43.68,Default,,0,0,0,,conference.
Dialogue: 0,0:38:44.52,0:38:50.50,Default,,0,0,0,,[ Applause ]
