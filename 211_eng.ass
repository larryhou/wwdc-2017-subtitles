[Script Info]
; Script generated by FFmpeg/Lavc57.89.100
ScriptType: v4.00+
PlayResX: 384
PlayResY: 288

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,16,&Hffffff,&Hffffff,&H0,&H0,0,0,0,0,100,100,0,0,1,1,0,2,10,10,10,0

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:21.03,0:00:23.03,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:00:23.04,0:00:25.04,Default,,0,0,0,,.
Dialogue: 0,0:00:25.06,0:00:25.39,Default,,0,0,0,,Thank you.
Dialogue: 0,0:00:26.07,0:00:27.16,Default,,0,0,0,,I'm Chris Dreessen.
Dialogue: 0,0:00:27.40,0:00:28.77,Default,,0,0,0,,This is Touch Bar Fundamentals.
Dialogue: 0,0:00:29.14,0:00:30.65,Default,,0,0,0,,If you have no idea whatsoever
Dialogue: 0,0:00:30.65,0:00:32.24,Default,,0,0,0,,what Touch Bar is, I'm not sure
Dialogue: 0,0:00:32.24,0:00:33.34,Default,,0,0,0,,how you got here, but I'm glad
Dialogue: 0,0:00:33.34,0:00:33.66,Default,,0,0,0,,you're here.
Dialogue: 0,0:00:34.29,0:00:36.88,Default,,0,0,0,,Likely most of us are a bit more
Dialogue: 0,0:00:36.88,0:00:38.78,Default,,0,0,0,,familiar with Touch Bar, but we
Dialogue: 0,0:00:38.78,0:00:39.60,Default,,0,0,0,,may not have had a chance to
Dialogue: 0,0:00:39.60,0:00:40.30,Default,,0,0,0,,actually play with it.
Dialogue: 0,0:00:40.30,0:00:42.43,Default,,0,0,0,,So, let me orient you to it.
Dialogue: 0,0:00:42.81,0:00:44.35,Default,,0,0,0,,So, we have here a picture of a
Dialogue: 0,0:00:44.35,0:00:45.86,Default,,0,0,0,,MacBook Pro and in place of the
Dialogue: 0,0:00:45.86,0:00:47.59,Default,,0,0,0,,F keys you might be used to, we
Dialogue: 0,0:00:47.59,0:00:48.57,Default,,0,0,0,,have this thing we call Touch
Dialogue: 0,0:00:48.61,0:00:48.85,Default,,0,0,0,,Bar.
Dialogue: 0,0:00:49.15,0:00:50.82,Default,,0,0,0,,And this is an interactive input
Dialogue: 0,0:00:50.82,0:00:51.80,Default,,0,0,0,,and display device.
Dialogue: 0,0:00:52.23,0:00:53.60,Default,,0,0,0,,And let me familiarize you with
Dialogue: 0,0:00:53.60,0:00:54.00,Default,,0,0,0,,these parts.
Dialogue: 0,0:00:54.00,0:00:56.69,Default,,0,0,0,,On the left, we have the escape
Dialogue: 0,0:00:56.69,0:00:58.22,Default,,0,0,0,,key, which should be pretty
Dialogue: 0,0:00:58.22,0:00:58.90,Default,,0,0,0,,familiar to everyone.
Dialogue: 0,0:00:59.23,0:01:00.03,Default,,0,0,0,,And on the right, we have this
Dialogue: 0,0:01:00.03,0:01:01.14,Default,,0,0,0,,thing called the control script.
Dialogue: 0,0:01:01.59,0:01:02.76,Default,,0,0,0,,And you can go ahead and
Dialogue: 0,0:01:02.76,0:01:04.09,Default,,0,0,0,,disclose the control strip if
Dialogue: 0,0:01:04.09,0:01:04.45,Default,,0,0,0,,you want.
Dialogue: 0,0:01:04.80,0:01:05.89,Default,,0,0,0,,And you'll have basically the
Dialogue: 0,0:01:05.89,0:01:07.41,Default,,0,0,0,,old media functions the F keys
Dialogue: 0,0:01:07.41,0:01:07.77,Default,,0,0,0,,offer.
Dialogue: 0,0:01:08.21,0:01:09.28,Default,,0,0,0,,And you can use this the same
Dialogue: 0,0:01:09.28,0:01:10.57,Default,,0,0,0,,way you always have, button
Dialogue: 0,0:01:11.29,0:01:12.25,Default,,0,0,0,,presses.
Dialogue: 0,0:01:12.65,0:01:14.37,Default,,0,0,0,,You don't have to disclose it
Dialogue: 0,0:01:14.62,0:01:15.01,Default,,0,0,0,,thought.
Dialogue: 0,0:01:16.01,0:01:18.56,Default,,0,0,0,,You can actually just go ahead
Dialogue: 0,0:01:18.56,0:01:20.09,Default,,0,0,0,,and use it in its collapsed
Dialogue: 0,0:01:20.09,0:01:20.35,Default,,0,0,0,,form.
Dialogue: 0,0:01:20.76,0:01:21.85,Default,,0,0,0,,And when it's its collapsed form
Dialogue: 0,0:01:21.85,0:01:22.91,Default,,0,0,0,,it has some neat functions too.
Dialogue: 0,0:01:23.17,0:01:24.71,Default,,0,0,0,,We can just do like a glancing
Dialogue: 0,0:01:24.71,0:01:26.30,Default,,0,0,0,,swipe over the volume button and
Dialogue: 0,0:01:26.30,0:01:27.38,Default,,0,0,0,,adjust the volume directly.
Dialogue: 0,0:01:27.80,0:01:28.89,Default,,0,0,0,,So, there's a lot of
Dialogue: 0,0:01:28.89,0:01:30.31,Default,,0,0,0,,conveniences here for adjusting
Dialogue: 0,0:01:30.31,0:01:31.35,Default,,0,0,0,,certain system functions.
Dialogue: 0,0:01:31.87,0:01:33.59,Default,,0,0,0,,But, that's not really the most
Dialogue: 0,0:01:33.59,0:01:34.57,Default,,0,0,0,,interesting parts of Touch Bar,
Dialogue: 0,0:01:34.57,0:01:35.87,Default,,0,0,0,,the most interesting parts are
Dialogue: 0,0:01:35.87,0:01:37.55,Default,,0,0,0,,between the escape key and the
Dialogue: 0,0:01:37.55,0:01:38.13,Default,,0,0,0,,control strip.
Dialogue: 0,0:01:38.43,0:01:38.94,Default,,0,0,0,,And that's where your
Dialogue: 0,0:01:38.94,0:01:40.07,Default,,0,0,0,,application content is going to
Dialogue: 0,0:01:40.07,0:01:40.27,Default,,0,0,0,,go.
Dialogue: 0,0:01:40.68,0:01:41.45,Default,,0,0,0,,And so, let me show you what
Dialogue: 0,0:01:41.45,0:01:42.64,Default,,0,0,0,,some of our system applications
Dialogue: 0,0:01:42.64,0:01:43.31,Default,,0,0,0,,have done with this.
Dialogue: 0,0:01:44.62,0:01:45.70,Default,,0,0,0,,So, here we have photos.
Dialogue: 0,0:01:46.32,0:01:47.65,Default,,0,0,0,,And this is just browsing the
Dialogue: 0,0:01:47.65,0:01:48.44,Default,,0,0,0,,photos library.
Dialogue: 0,0:01:48.64,0:01:50.02,Default,,0,0,0,,And we can actually go ahead and
Dialogue: 0,0:01:50.02,0:01:51.84,Default,,0,0,0,,scrub through our photo library
Dialogue: 0,0:01:51.84,0:01:52.06,Default,,0,0,0,,here.
Dialogue: 0,0:01:52.06,0:01:53.31,Default,,0,0,0,,It's just like in iOS with
Dialogue: 0,0:01:53.31,0:01:54.59,Default,,0,0,0,,direct input with our finger, so
Dialogue: 0,0:01:54.59,0:01:56.01,Default,,0,0,0,,we plop our finger down on the
Dialogue: 0,0:01:56.01,0:01:57.62,Default,,0,0,0,,Touch Bar and it's just tracking
Dialogue: 0,0:01:57.62,0:01:57.77,Default,,0,0,0,,it.
Dialogue: 0,0:01:57.89,0:01:59.48,Default,,0,0,0,,We also have momentum swipes
Dialogue: 0,0:01:59.48,0:02:01.39,Default,,0,0,0,,there if we want to browse
Dialogue: 0,0:02:01.39,0:02:02.06,Default,,0,0,0,,through it quickly.
Dialogue: 0,0:02:02.12,0:02:05.11,Default,,0,0,0,,If you go to edit a photo, this
Dialogue: 0,0:02:05.22,0:02:07.11,Default,,0,0,0,,is the photos crop and rotate
Dialogue: 0,0:02:07.11,0:02:07.33,Default,,0,0,0,,tool.
Dialogue: 0,0:02:07.60,0:02:08.51,Default,,0,0,0,,And they have this rotation
Dialogue: 0,0:02:08.51,0:02:09.33,Default,,0,0,0,,thing in the middle of the Touch
Dialogue: 0,0:02:09.33,0:02:10.63,Default,,0,0,0,,Bar and it tracks your finger
Dialogue: 0,0:02:10.85,0:02:12.00,Default,,0,0,0,,directly, which is pretty fun,
Dialogue: 0,0:02:12.00,0:02:12.67,Default,,0,0,0,,because it's sort of like
Dialogue: 0,0:02:12.67,0:02:15.60,Default,,0,0,0,,actually rotating a picture on a
Dialogue: 0,0:02:15.91,0:02:16.23,Default,,0,0,0,,table.
Dialogue: 0,0:02:16.85,0:02:19.05,Default,,0,0,0,,Finally, photos also exposes
Dialogue: 0,0:02:19.05,0:02:19.51,Default,,0,0,0,,filters.
Dialogue: 0,0:02:19.61,0:02:21.11,Default,,0,0,0,,So, we can scrub and swipe
Dialogue: 0,0:02:21.11,0:02:21.86,Default,,0,0,0,,through our filters here.
Dialogue: 0,0:02:22.12,0:02:23.20,Default,,0,0,0,,And this is an interesting use
Dialogue: 0,0:02:23.20,0:02:24.74,Default,,0,0,0,,of Touch Bar, because normally
Dialogue: 0,0:02:24.74,0:02:25.72,Default,,0,0,0,,if we were using a mouse or a
Dialogue: 0,0:02:25.72,0:02:27.32,Default,,0,0,0,,track pad, we'd go ahead and
Dialogue: 0,0:02:27.32,0:02:29.01,Default,,0,0,0,,look at our photo and then look
Dialogue: 0,0:02:29.01,0:02:30.66,Default,,0,0,0,,at the filters section and move
Dialogue: 0,0:02:30.66,0:02:31.88,Default,,0,0,0,,the mouse or track pad to that,
Dialogue: 0,0:02:31.88,0:02:32.95,Default,,0,0,0,,select the next filter.
Dialogue: 0,0:02:33.17,0:02:34.04,Default,,0,0,0,,And with Touch Bar we can
Dialogue: 0,0:02:34.04,0:02:35.41,Default,,0,0,0,,actually keep our eyes on the
Dialogue: 0,0:02:36.08,0:02:36.19,Default,,0,0,0,,cat.
Dialogue: 0,0:02:37.38,0:02:38.93,Default,,0,0,0,,Here's QuickTime Player.
Dialogue: 0,0:02:38.93,0:02:40.55,Default,,0,0,0,,QuickTime Player has a scrubber
Dialogue: 0,0:02:40.55,0:02:41.67,Default,,0,0,0,,control directly in the touch
Dialogue: 0,0:02:41.67,0:02:43.01,Default,,0,0,0,,bar, so we can move a movie back
Dialogue: 0,0:02:43.01,0:02:44.49,Default,,0,0,0,,and forth, it's pretty neat.
Dialogue: 0,0:02:44.62,0:02:45.53,Default,,0,0,0,,And they've also gone ahead and
Dialogue: 0,0:02:45.53,0:02:46.78,Default,,0,0,0,,exposed a similar control for
Dialogue: 0,0:02:46.78,0:02:48.98,Default,,0,0,0,,trimming, so we can adjust the
Dialogue: 0,0:02:48.98,0:02:50.40,Default,,0,0,0,,beginning and end of a movie
Dialogue: 0,0:02:50.40,0:02:51.16,Default,,0,0,0,,that we've recorded.
Dialogue: 0,0:02:51.77,0:02:52.87,Default,,0,0,0,,Something I'd like to point out
Dialogue: 0,0:02:52.91,0:02:54.21,Default,,0,0,0,,about QuickTime Player here, is
Dialogue: 0,0:02:54.21,0:02:55.18,Default,,0,0,0,,that QuickTime Player didn't
Dialogue: 0,0:02:55.18,0:02:56.76,Default,,0,0,0,,write any code to do this, this
Dialogue: 0,0:02:56.76,0:02:58.31,Default,,0,0,0,,is all inside of AVKit and
Dialogue: 0,0:02:58.31,0:02:58.90,Default,,0,0,0,,AVPlayer view.
Dialogue: 0,0:02:58.90,0:03:00.24,Default,,0,0,0,,So, if you're already using
Dialogue: 0,0:03:00.24,0:03:01.45,Default,,0,0,0,,AVKit, you've probably got this
Dialogue: 0,0:03:01.45,0:03:02.43,Default,,0,0,0,,functionality for free,
Dialogue: 0,0:03:02.71,0:03:03.51,Default,,0,0,0,,congratulations.
Dialogue: 0,0:03:04.50,0:03:06.50,Default,,0,0,0,,Let's look at text edit for a
Dialogue: 0,0:03:06.50,0:03:06.80,Default,,0,0,0,,moment.
Dialogue: 0,0:03:07.23,0:03:08.59,Default,,0,0,0,,So, everyone's familiar with
Dialogue: 0,0:03:08.59,0:03:09.65,Default,,0,0,0,,QuickType on iOS.
Dialogue: 0,0:03:09.89,0:03:10.96,Default,,0,0,0,,And We've gone ahead and brought
Dialogue: 0,0:03:10.96,0:03:12.64,Default,,0,0,0,,QuickType over to Touch Bar on
Dialogue: 0,0:03:12.64,0:03:14.04,Default,,0,0,0,,macOS, and as everyone know
Dialogue: 0,0:03:14.04,0:03:15.43,Default,,0,0,0,,QuickType is a great short
Dialogue: 0,0:03:15.43,0:03:16.37,Default,,0,0,0,,fiction writing tool.
Dialogue: 0,0:03:16.78,0:03:18.18,Default,,0,0,0,,So, if we go ahead and write a
Dialogue: 0,0:03:18.18,0:03:20.46,Default,,0,0,0,,short story here, 'the fact is
Dialogue: 0,0:03:20.46,0:03:22.00,Default,,0,0,0,,he has to;' this is not the best
Dialogue: 0,0:03:22.00,0:03:22.99,Default,,0,0,0,,short fiction I've read.
Dialogue: 0,0:03:23.46,0:03:24.86,Default,,0,0,0,,But that's okay, because Touch
Dialogue: 0,0:03:24.86,0:03:25.84,Default,,0,0,0,,Bar gives us a way of spicing
Dialogue: 0,0:03:25.84,0:03:26.10,Default,,0,0,0,,that up.
Dialogue: 0,0:03:26.10,0:03:27.46,Default,,0,0,0,,We also have the emoji picker.
Dialogue: 0,0:03:28.43,0:03:30.70,Default,,0,0,0,,And, let's go ahead and spice it
Dialogue: 0,0:03:30.70,0:03:31.03,Default,,0,0,0,,up a bit.
Dialogue: 0,0:03:31.03,0:03:33.06,Default,,0,0,0,,We can browse our emoji here and
Dialogue: 0,0:03:33.06,0:03:34.31,Default,,0,0,0,,say I laughed until I cried, I
Dialogue: 0,0:03:34.31,0:03:36.24,Default,,0,0,0,,was turned into a frog, and I'm
Dialogue: 0,0:03:36.24,0:03:37.53,Default,,0,0,0,,happy I'm no longer a frog.
Dialogue: 0,0:03:37.83,0:03:39.13,Default,,0,0,0,,So, we've added some nice human
Dialogue: 0,0:03:39.13,0:03:40.83,Default,,0,0,0,,emotion and drama to our story,
Dialogue: 0,0:03:41.14,0:03:42.08,Default,,0,0,0,,all thanks to Touch Bar.
Dialogue: 0,0:03:43.29,0:03:45.76,Default,,0,0,0,,TextEdit of course, is a text
Dialogue: 0,0:03:45.76,0:03:46.81,Default,,0,0,0,,editing tool also, so we can
Dialogue: 0,0:03:46.81,0:03:48.63,Default,,0,0,0,,collapse the QuickType options
Dialogue: 0,0:03:48.63,0:03:49.77,Default,,0,0,0,,here and bring up text
Dialogue: 0,0:03:49.77,0:03:50.59,Default,,0,0,0,,formatting controls.
Dialogue: 0,0:03:50.77,0:03:51.92,Default,,0,0,0,,And maybe the most useful thing
Dialogue: 0,0:03:51.92,0:03:53.12,Default,,0,0,0,,is to make it bold, or italic,
Dialogue: 0,0:03:53.12,0:03:54.64,Default,,0,0,0,,or add some color to it and pink
Dialogue: 0,0:03:54.64,0:03:55.86,Default,,0,0,0,,feels right for the story where
Dialogue: 0,0:03:55.86,0:03:57.08,Default,,0,0,0,,I'm turned into a frog, and not
Dialogue: 0,0:03:57.08,0:03:57.66,Default,,0,0,0,,a frog again.
Dialogue: 0,0:03:58.00,0:03:58.95,Default,,0,0,0,,Anyway, let's never speak of
Dialogue: 0,0:03:58.95,0:03:59.52,Default,,0,0,0,,that.
Dialogue: 0,0:04:00.89,0:04:02.41,Default,,0,0,0,,Something else I want to point
Dialogue: 0,0:04:02.41,0:04:03.46,Default,,0,0,0,,out about all these examples
Dialogue: 0,0:04:03.46,0:04:04.66,Default,,0,0,0,,I've show you is that they're
Dialogue: 0,0:04:04.66,0:04:05.36,Default,,0,0,0,,customizable.
Dialogue: 0,0:04:05.36,0:04:07.06,Default,,0,0,0,,We have a customization panel
Dialogue: 0,0:04:07.40,0:04:08.70,Default,,0,0,0,,for Touch Bar.
Dialogue: 0,0:04:09.04,0:04:10.29,Default,,0,0,0,,And you can rearrange items in
Dialogue: 0,0:04:10.29,0:04:10.41,Default,,0,0,0,,it.
Dialogue: 0,0:04:10.65,0:04:11.88,Default,,0,0,0,,You can add items from the
Dialogue: 0,0:04:11.88,0:04:12.88,Default,,0,0,0,,customization panel on the
Dialogue: 0,0:04:12.88,0:04:14.09,Default,,0,0,0,,screen or remove them from the
Dialogue: 0,0:04:14.09,0:04:14.58,Default,,0,0,0,,Touch Bar.
Dialogue: 0,0:04:14.89,0:04:16.33,Default,,0,0,0,,And this is important, because
Dialogue: 0,0:04:16.33,0:04:17.46,Default,,0,0,0,,every user's workflow is a
Dialogue: 0,0:04:17.46,0:04:18.29,Default,,0,0,0,,little bit different.
Dialogue: 0,0:04:18.29,0:04:19.25,Default,,0,0,0,,Some are doing different things
Dialogue: 0,0:04:19.25,0:04:20.38,Default,,0,0,0,,with your application, and
Dialogue: 0,0:04:20.38,0:04:21.37,Default,,0,0,0,,others just prefer to use the
Dialogue: 0,0:04:21.37,0:04:22.40,Default,,0,0,0,,computer in a different way.
Dialogue: 0,0:04:22.62,0:04:24.20,Default,,0,0,0,,And by enabling customization,
Dialogue: 0,0:04:24.49,0:04:25.77,Default,,0,0,0,,you can give users the exact
Dialogue: 0,0:04:25.77,0:04:26.61,Default,,0,0,0,,experience they want.
Dialogue: 0,0:04:27.12,0:04:28.09,Default,,0,0,0,,And I'll teach you how to do
Dialogue: 0,0:04:28.09,0:04:29.13,Default,,0,0,0,,that programmatically in just a
Dialogue: 0,0:04:29.13,0:04:29.63,Default,,0,0,0,,little bit.
Dialogue: 0,0:04:30.38,0:04:31.53,Default,,0,0,0,,Let's cover some of the
Dialogue: 0,0:04:31.53,0:04:33.05,Default,,0,0,0,,technical details and some of
Dialogue: 0,0:04:33.93,0:04:35.03,Default,,0,0,0,,the implications that come with
Dialogue: 0,0:04:35.03,0:04:35.26,Default,,0,0,0,,that.
Dialogue: 0,0:04:35.65,0:04:36.78,Default,,0,0,0,,So, the Touch Bar is the
Dialogue: 0,0:04:36.78,0:04:38.41,Default,,0,0,0,,beautiful P3 retina display.
Dialogue: 0,0:04:38.41,0:04:40.46,Default,,0,0,0,,It has a nice P3 color gamut,
Dialogue: 0,0:04:40.77,0:04:42.50,Default,,0,0,0,,great blacks, wonderful
Dialogue: 0,0:04:42.50,0:04:43.08,Default,,0,0,0,,contrast.
Dialogue: 0,0:04:43.44,0:04:46.28,Default,,0,0,0,,And that means that our assets
Dialogue: 0,0:04:46.28,0:04:47.59,Default,,0,0,0,,we include in our applications
Dialogue: 0,0:04:47.59,0:04:49.05,Default,,0,0,0,,don't have to cover as much as
Dialogue: 0,0:04:49.05,0:04:50.18,Default,,0,0,0,,what we do on the main screen.
Dialogue: 0,0:04:50.87,0:04:52.74,Default,,0,0,0,,Additionally, it's a true multi
Dialogue: 0,0:04:52.74,0:04:54.48,Default,,0,0,0,,touch device, which means we can
Dialogue: 0,0:04:54.48,0:04:55.91,Default,,0,0,0,,actually track multiple fingers.
Dialogue: 0,0:04:56.28,0:04:57.84,Default,,0,0,0,,And that affords us some new
Dialogue: 0,0:04:57.84,0:04:58.73,Default,,0,0,0,,options for what sort of
Dialogue: 0,0:04:58.73,0:04:59.54,Default,,0,0,0,,controls we might make.
Dialogue: 0,0:04:59.70,0:05:01.33,Default,,0,0,0,,You're going to hear this a lot
Dialogue: 0,0:05:01.33,0:05:02.18,Default,,0,0,0,,about Touch Bar, that it's
Dialogue: 0,0:05:02.18,0:05:03.00,Default,,0,0,0,,context sensitive.
Dialogue: 0,0:05:03.56,0:05:05.63,Default,,0,0,0,,And that's very neat in terms of
Dialogue: 0,0:05:05.68,0:05:07.34,Default,,0,0,0,,enabling the user to work with
Dialogue: 0,0:05:07.34,0:05:08.54,Default,,0,0,0,,functions in the application
Dialogue: 0,0:05:08.54,0:05:10.61,Default,,0,0,0,,that are appropriate, but it has
Dialogue: 0,0:05:10.61,0:05:11.92,Default,,0,0,0,,implications for event handling,
Dialogue: 0,0:05:11.92,0:05:13.12,Default,,0,0,0,,because the context in the
Dialogue: 0,0:05:13.12,0:05:14.96,Default,,0,0,0,,application might change, which
Dialogue: 0,0:05:14.96,0:05:16.29,Default,,0,0,0,,the user is using the Touch Bar,
Dialogue: 0,0:05:16.40,0:05:17.88,Default,,0,0,0,,and our controls need to react
Dialogue: 0,0:05:18.72,0:05:19.18,Default,,0,0,0,,to that.
Dialogue: 0,0:05:19.25,0:05:20.69,Default,,0,0,0,,And finally, we actually go
Dialogue: 0,0:05:20.69,0:05:22.73,Default,,0,0,0,,ahead and take some care to
Dialogue: 0,0:05:22.73,0:05:24.43,Default,,0,0,0,,match the key taps and glyphs on
Dialogue: 0,0:05:24.43,0:05:25.95,Default,,0,0,0,,the Touch Bar to those on the
Dialogue: 0,0:05:25.95,0:05:27.02,Default,,0,0,0,,physical keyboard, and we do
Dialogue: 0,0:05:27.02,0:05:28.14,Default,,0,0,0,,that by watching the ambient
Dialogue: 0,0:05:28.14,0:05:29.45,Default,,0,0,0,,brightness, and knowing whether
Dialogue: 0,0:05:29.45,0:05:30.63,Default,,0,0,0,,or not the keyboard backlight is
Dialogue: 0,0:05:30.63,0:05:30.82,Default,,0,0,0,,on.
Dialogue: 0,0:05:31.13,0:05:32.30,Default,,0,0,0,,But this has implications for
Dialogue: 0,0:05:32.30,0:05:33.34,Default,,0,0,0,,how we might draw custom
Dialogue: 0,0:05:33.34,0:05:33.88,Default,,0,0,0,,controls.
Dialogue: 0,0:05:34.25,0:05:35.12,Default,,0,0,0,,And we're not going to go into
Dialogue: 0,0:05:35.12,0:05:36.00,Default,,0,0,0,,detail on any of those
Dialogue: 0,0:05:36.00,0:05:37.20,Default,,0,0,0,,implications in this session,
Dialogue: 0,0:05:37.20,0:05:38.32,Default,,0,0,0,,but we do have a session later
Dialogue: 0,0:05:38.32,0:05:39.85,Default,,0,0,0,,this afternoon that will cover
Dialogue: 0,0:05:39.85,0:05:40.62,Default,,0,0,0,,all these topics.
Dialogue: 0,0:05:41.88,0:05:44.86,Default,,0,0,0,,So, I'm assuming that once
Dialogue: 0,0:05:44.86,0:05:45.68,Default,,0,0,0,,you're done here, maybe even
Dialogue: 0,0:05:45.68,0:05:46.52,Default,,0,0,0,,before that, you're going to be
Dialogue: 0,0:05:46.52,0:05:47.75,Default,,0,0,0,,really jazzed to add Touch Bar
Dialogue: 0,0:05:47.75,0:05:49.01,Default,,0,0,0,,support to your application if
Dialogue: 0,0:05:49.01,0:05:49.69,Default,,0,0,0,,you haven't already.
Dialogue: 0,0:05:49.69,0:05:50.90,Default,,0,0,0,,But when you're coming up with
Dialogue: 0,0:05:50.90,0:05:52.33,Default,,0,0,0,,your UI's there's a few things
Dialogue: 0,0:05:52.33,0:05:53.06,Default,,0,0,0,,to keep in mind.
Dialogue: 0,0:05:53.40,0:05:54.51,Default,,0,0,0,,And the first of them, the prime
Dialogue: 0,0:05:54.51,0:05:56.15,Default,,0,0,0,,directive of Touch Bar is that
Dialogue: 0,0:05:56.15,0:05:57.32,Default,,0,0,0,,the Touch Bar is an input
Dialogue: 0,0:05:57.32,0:05:57.72,Default,,0,0,0,,device.
Dialogue: 0,0:05:57.72,0:05:58.94,Default,,0,0,0,,It's meant to be interacted with
Dialogue: 0,0:05:58.94,0:05:59.52,Default,,0,0,0,,by the user.
Dialogue: 0,0:05:59.77,0:06:00.62,Default,,0,0,0,,It's not supposed to be
Dialogue: 0,0:06:00.62,0:06:01.42,Default,,0,0,0,,displaying things.
Dialogue: 0,0:06:01.42,0:06:02.70,Default,,0,0,0,,So, no status indicators or
Dialogue: 0,0:06:02.70,0:06:03.41,Default,,0,0,0,,stock tickers.
Dialogue: 0,0:06:04.05,0:06:05.66,Default,,0,0,0,,The next thing we should keep in
Dialogue: 0,0:06:05.66,0:06:06.71,Default,,0,0,0,,mind when making our Touch Bar
Dialogue: 0,0:06:06.71,0:06:09.05,Default,,0,0,0,,UI's is that we don't want to
Dialogue: 0,0:06:09.05,0:06:10.40,Default,,0,0,0,,put functionality in the Touch
Dialogue: 0,0:06:10.43,0:06:11.89,Default,,0,0,0,,Bar that doesn't exist anywhere
Dialogue: 0,0:06:11.89,0:06:12.91,Default,,0,0,0,,else in the application.
Dialogue: 0,0:06:13.23,0:06:14.75,Default,,0,0,0,,It's great to have null and fun
Dialogue: 0,0:06:14.75,0:06:16.07,Default,,0,0,0,,Touch Bar UI's, but it shouldn't
Dialogue: 0,0:06:16.07,0:06:17.22,Default,,0,0,0,,be the only way of accessing
Dialogue: 0,0:06:17.22,0:06:17.88,Default,,0,0,0,,functionality.
Dialogue: 0,0:06:18.33,0:06:19.74,Default,,0,0,0,,And there's a good reason for a
Dialogue: 0,0:06:19.74,0:06:21.53,Default,,0,0,0,,lot of that, and that's that not
Dialogue: 0,0:06:21.53,0:06:23.11,Default,,0,0,0,,every user has a Touch Bar, so
Dialogue: 0,0:06:23.11,0:06:24.34,Default,,0,0,0,,if you only put something in the
Dialogue: 0,0:06:24.34,0:06:25.31,Default,,0,0,0,,Touch Bar, you're going to be
Dialogue: 0,0:06:25.31,0:06:26.55,Default,,0,0,0,,losing out on functionality for
Dialogue: 0,0:06:26.55,0:06:27.22,Default,,0,0,0,,a lot of users.
Dialogue: 0,0:06:27.87,0:06:30.48,Default,,0,0,0,,And finally, this is almost a
Dialogue: 0,0:06:30.48,0:06:31.62,Default,,0,0,0,,side effect of saying the Touch
Dialogue: 0,0:06:31.62,0:06:32.48,Default,,0,0,0,,Bar is an input device.
Dialogue: 0,0:06:32.87,0:06:34.21,Default,,0,0,0,,While we want creative beautiful
Dialogue: 0,0:06:34.21,0:06:35.39,Default,,0,0,0,,UI's in the Touch Bar, they
Dialogue: 0,0:06:35.39,0:06:36.49,Default,,0,0,0,,shouldn't be taking center
Dialogue: 0,0:06:36.49,0:06:36.97,Default,,0,0,0,,stage.
Dialogue: 0,0:06:37.21,0:06:38.48,Default,,0,0,0,,The content the user's working
Dialogue: 0,0:06:38.48,0:06:40.23,Default,,0,0,0,,with on the main screen should
Dialogue: 0,0:06:40.23,0:06:41.32,Default,,0,0,0,,always be their focus.
Dialogue: 0,0:06:41.32,0:06:42.26,Default,,0,0,0,,So, the Touch Bar shouldn't be
Dialogue: 0,0:06:42.26,0:06:42.83,Default,,0,0,0,,distracting.
Dialogue: 0,0:06:43.81,0:06:45.51,Default,,0,0,0,,With that out of the way, we're
Dialogue: 0,0:06:45.51,0:06:46.44,Default,,0,0,0,,going to go ahead and cover the
Dialogue: 0,0:06:46.44,0:06:48.02,Default,,0,0,0,,core classes that let you use
Dialogue: 0,0:06:48.02,0:06:48.71,Default,,0,0,0,,the Touch Bar in your
Dialogue: 0,0:06:48.71,0:06:49.34,Default,,0,0,0,,application.
Dialogue: 0,0:06:49.63,0:06:50.67,Default,,0,0,0,,We're going to cover how the
Dialogue: 0,0:06:50.67,0:06:52.01,Default,,0,0,0,,responder change is integrated
Dialogue: 0,0:06:52.01,0:06:53.27,Default,,0,0,0,,with these for discovering what
Dialogue: 0,0:06:53.27,0:06:54.74,Default,,0,0,0,,context sensitive functionality
Dialogue: 0,0:06:54.74,0:06:55.34,Default,,0,0,0,,to display.
Dialogue: 0,0:06:55.34,0:06:56.67,Default,,0,0,0,,And then, we're going to go
Dialogue: 0,0:06:56.67,0:06:58.14,Default,,0,0,0,,ahead and take a deep dive on
Dialogue: 0,0:06:58.14,0:06:59.67,Default,,0,0,0,,one of those core classes and
Dialogue: 0,0:06:59.67,0:07:00.76,Default,,0,0,0,,show you most of what it can do.
Dialogue: 0,0:07:01.65,0:07:02.36,Default,,0,0,0,,So, let's start with the
Dialogue: 0,0:07:02.36,0:07:02.82,Default,,0,0,0,,classes.
Dialogue: 0,0:07:03.60,0:07:05.44,Default,,0,0,0,,The first class is of course
Dialogue: 0,0:07:05.51,0:07:06.30,Default,,0,0,0,,NSTouchBarItem.
Dialogue: 0,0:07:06.79,0:07:08.10,Default,,0,0,0,,And that plays with NSTouchBar
Dialogue: 0,0:07:08.10,0:07:08.89,Default,,0,0,0,,and NSResponder.
Dialogue: 0,0:07:09.21,0:07:10.49,Default,,0,0,0,,And let's just take a closer
Dialogue: 0,0:07:10.86,0:07:11.11,Default,,0,0,0,,look.
Dialogue: 0,0:07:11.11,0:07:12.47,Default,,0,0,0,,This is a mockup of the mail
Dialogue: 0,0:07:12.47,0:07:13.31,Default,,0,0,0,,Touch Bar I've made.
Dialogue: 0,0:07:13.31,0:07:14.55,Default,,0,0,0,,And everything I'm highlighting
Dialogue: 0,0:07:14.55,0:07:16.49,Default,,0,0,0,,here, is an NS view, or NS
Dialogue: 0,0:07:16.49,0:07:17.43,Default,,0,0,0,,control, or NS button.
Dialogue: 0,0:07:17.43,0:07:18.39,Default,,0,0,0,,They're all things you're very
Dialogue: 0,0:07:18.39,0:07:19.83,Default,,0,0,0,,familiar with because Touch Bar
Dialogue: 0,0:07:20.12,0:07:21.65,Default,,0,0,0,,is reusing the existing view
Dialogue: 0,0:07:21.65,0:07:23.22,Default,,0,0,0,,functionality we've been using
Dialogue: 0,0:07:23.22,0:07:24.64,Default,,0,0,0,,in our Cocoa apps for very long
Dialogue: 0,0:07:25.81,0:07:26.46,Default,,0,0,0,,time.
Dialogue: 0,0:07:26.46,0:07:27.56,Default,,0,0,0,,There's a few things though that
Dialogue: 0,0:07:27.56,0:07:28.94,Default,,0,0,0,,Touch Bar does, that view isn't
Dialogue: 0,0:07:28.94,0:07:29.78,Default,,0,0,0,,prepared to do.
Dialogue: 0,0:07:30.04,0:07:31.35,Default,,0,0,0,,So, we need some way of adapting
Dialogue: 0,0:07:31.35,0:07:31.56,Default,,0,0,0,,that.
Dialogue: 0,0:07:31.56,0:07:32.30,Default,,0,0,0,,And that's what this
Dialogue: 0,0:07:32.30,0:07:33.40,Default,,0,0,0,,NSTouchBarItem class does.
Dialogue: 0,0:07:33.40,0:07:35.19,Default,,0,0,0,,So, it binds a view to the Touch
Dialogue: 0,0:07:35.23,0:07:35.45,Default,,0,0,0,,Bar.
Dialogue: 0,0:07:36.19,0:07:37.79,Default,,0,0,0,,NSTouchBarItem itself is a very
Dialogue: 0,0:07:37.79,0:07:38.60,Default,,0,0,0,,basic class.
Dialogue: 0,0:07:38.66,0:07:40.73,Default,,0,0,0,,It's intended to be sub classed
Dialogue: 0,0:07:40.73,0:07:41.96,Default,,0,0,0,,and that's probably not
Dialogue: 0,0:07:41.96,0:07:43.04,Default,,0,0,0,,something you're actually going
Dialogue: 0,0:07:43.04,0:07:43.72,Default,,0,0,0,,to have to do.
Dialogue: 0,0:07:43.72,0:07:45.29,Default,,0,0,0,,Because AppKit includes about
Dialogue: 0,0:07:45.29,0:07:46.90,Default,,0,0,0,,half a dozen existing Touch Bar
Dialogue: 0,0:07:46.90,0:07:48.11,Default,,0,0,0,,subclasses that will handle a
Dialogue: 0,0:07:48.11,0:07:49.63,Default,,0,0,0,,lot of the needs you're going to
Dialogue: 0,0:07:49.63,0:07:49.90,Default,,0,0,0,,have.
Dialogue: 0,0:07:50.27,0:07:51.98,Default,,0,0,0,,And finally one of the most
Dialogue: 0,0:07:51.98,0:07:52.89,Default,,0,0,0,,important features of the
Dialogue: 0,0:07:52.89,0:07:54.87,Default,,0,0,0,,NSTouchBarItem class is that it
Dialogue: 0,0:07:54.87,0:07:56.57,Default,,0,0,0,,has an identifier that uniquely
Dialogue: 0,0:07:56.57,0:07:57.78,Default,,0,0,0,,identifies that item and
Dialogue: 0,0:07:57.78,0:07:59.22,Default,,0,0,0,,functionality within its
Dialogue: 0,0:07:59.28,0:08:00.30,Default,,0,0,0,,NSTouchBar instance.
Dialogue: 0,0:08:01.07,0:08:03.02,Default,,0,0,0,,So, let's talk about NSTouchBar
Dialogue: 0,0:08:03.02,0:08:03.69,Default,,0,0,0,,itself.
Dialogue: 0,0:08:03.84,0:08:05.45,Default,,0,0,0,,The most important thing is that
Dialogue: 0,0:08:05.45,0:08:06.94,Default,,0,0,0,,it has an array of those item
Dialogue: 0,0:08:06.94,0:08:08.49,Default,,0,0,0,,identifiers that identify the
Dialogue: 0,0:08:08.49,0:08:08.88,Default,,0,0,0,,items.
Dialogue: 0,0:08:08.88,0:08:10.29,Default,,0,0,0,,And this is important for
Dialogue: 0,0:08:10.41,0:08:12.06,Default,,0,0,0,,resolving what functionalities
Dialogue: 0,0:08:12.06,0:08:13.03,Default,,0,0,0,,goes into the Touch Bar to the
Dialogue: 0,0:08:13.03,0:08:14.21,Default,,0,0,0,,views used to display it.
Dialogue: 0,0:08:14.68,0:08:15.74,Default,,0,0,0,,Let's take a quick look at a
Dialogue: 0,0:08:15.74,0:08:16.31,Default,,0,0,0,,code snippet.
Dialogue: 0,0:08:17.11,0:08:18.56,Default,,0,0,0,,So, here we're going to go ahead
Dialogue: 0,0:08:18.56,0:08:19.38,Default,,0,0,0,,and just declare some
Dialogue: 0,0:08:19.38,0:08:21.05,Default,,0,0,0,,identifiers for a shark and sea
Dialogue: 0,0:08:21.05,0:08:21.37,Default,,0,0,0,,turtle.
Dialogue: 0,0:08:21.88,0:08:23.03,Default,,0,0,0,,Usually when you come up with
Dialogue: 0,0:08:23.03,0:08:24.74,Default,,0,0,0,,identifiers for our code, we
Dialogue: 0,0:08:24.74,0:08:26.50,Default,,0,0,0,,recommend using reverse DNS, but
Dialogue: 0,0:08:26.50,0:08:27.28,Default,,0,0,0,,these are a little bit more
Dialogue: 0,0:08:27.28,0:08:27.69,Default,,0,0,0,,legible.
Dialogue: 0,0:08:27.78,0:08:30.31,Default,,0,0,0,,And once we have those
Dialogue: 0,0:08:30.31,0:08:31.89,Default,,0,0,0,,identifiers, we're going to go
Dialogue: 0,0:08:31.89,0:08:33.16,Default,,0,0,0,,ahead and instantiate a new
Dialogue: 0,0:08:33.16,0:08:34.55,Default,,0,0,0,,NSTouchBar and just set the
Dialogue: 0,0:08:34.55,0:08:35.86,Default,,0,0,0,,default the item identifiers
Dialogue: 0,0:08:35.86,0:08:36.10,Default,,0,0,0,,array.
Dialogue: 0,0:08:36.51,0:08:38.21,Default,,0,0,0,,And this let's AppKit know what
Dialogue: 0,0:08:38.21,0:08:39.55,Default,,0,0,0,,sort of semantic functionality
Dialogue: 0,0:08:39.55,0:08:40.99,Default,,0,0,0,,we're putting in the Touch Bar.
Dialogue: 0,0:08:41.47,0:08:43.02,Default,,0,0,0,,What we're going to cover now is
Dialogue: 0,0:08:43.02,0:08:44.43,Default,,0,0,0,,how AppKit resolves that.
Dialogue: 0,0:08:44.87,0:08:46.10,Default,,0,0,0,,And there's two ways we do this
Dialogue: 0,0:08:46.10,0:08:46.39,Default,,0,0,0,,look up.
Dialogue: 0,0:08:46.39,0:08:47.45,Default,,0,0,0,,There's two ways we find
Dialogue: 0,0:08:47.45,0:08:48.70,Default,,0,0,0,,NSTouchBarItem from the item
Dialogue: 0,0:08:48.70,0:08:49.35,Default,,0,0,0,,identifiers.
Dialogue: 0,0:08:49.76,0:08:51.26,Default,,0,0,0,,And the first is a property on
Dialogue: 0,0:08:51.30,0:08:52.36,Default,,0,0,0,,NSTouchBar called template
Dialogue: 0,0:08:52.36,0:08:52.73,Default,,0,0,0,,items.
Dialogue: 0,0:08:53.09,0:08:54.50,Default,,0,0,0,,And this is just a set of items.
Dialogue: 0,0:08:54.94,0:08:56.18,Default,,0,0,0,,So, if we go back to some code
Dialogue: 0,0:08:56.18,0:08:57.44,Default,,0,0,0,,snippets, this is what we had
Dialogue: 0,0:08:57.44,0:08:59.39,Default,,0,0,0,,before, exactly the same, and
Dialogue: 0,0:08:59.39,0:09:00.10,Default,,0,0,0,,we've added some.
Dialogue: 0,0:09:00.52,0:09:02.23,Default,,0,0,0,,So, here I'm using an
Dialogue: 0,0:09:02.23,0:09:04.54,Default,,0,0,0,,NSCustomTouchBar item class for
Dialogue: 0,0:09:04.54,0:09:05.35,Default,,0,0,0,,the shark and turtles
Dialogue: 0,0:09:05.35,0:09:05.98,Default,,0,0,0,,respectively.
Dialogue: 0,0:09:05.98,0:09:06.99,Default,,0,0,0,,And this is one of those
Dialogue: 0,0:09:06.99,0:09:08.00,Default,,0,0,0,,subclasses I mentioned.
Dialogue: 0,0:09:08.44,0:09:09.73,Default,,0,0,0,,And we're just setting the view
Dialogue: 0,0:09:10.02,0:09:12.59,Default,,0,0,0,,of these items to an NS button.
Dialogue: 0,0:09:13.46,0:09:14.52,Default,,0,0,0,,And we go ahead and we make the
Dialogue: 0,0:09:14.52,0:09:15.70,Default,,0,0,0,,title, you know the shark emoji
Dialogue: 0,0:09:15.70,0:09:16.48,Default,,0,0,0,,or the turtle emoji.
Dialogue: 0,0:09:16.86,0:09:18.22,Default,,0,0,0,,You'll notice we're using the NS
Dialogue: 0,0:09:18.25,0:09:19.60,Default,,0,0,0,,button convenience constructor
Dialogue: 0,0:09:19.60,0:09:22.12,Default,,0,0,0,,we introduced in macOS 10.12,
Dialogue: 0,0:09:22.57,0:09:23.87,Default,,0,0,0,,and that's important because
Dialogue: 0,0:09:23.87,0:09:24.97,Default,,0,0,0,,these convenience constructors
Dialogue: 0,0:09:24.97,0:09:26.33,Default,,0,0,0,,will configure the buttons to be
Dialogue: 0,0:09:26.33,0:09:27.95,Default,,0,0,0,,appearance sensitive to use the
Dialogue: 0,0:09:27.95,0:09:29.25,Default,,0,0,0,,right styling and font.
Dialogue: 0,0:09:29.62,0:09:30.90,Default,,0,0,0,,And if we build an NS button
Dialogue: 0,0:09:30.90,0:09:32.47,Default,,0,0,0,,directly, we may not get that
Dialogue: 0,0:09:32.47,0:09:33.04,Default,,0,0,0,,functionality.
Dialogue: 0,0:09:33.04,0:09:34.17,Default,,0,0,0,,So, this is a big time saver.
Dialogue: 0,0:09:34.76,0:09:36.68,Default,,0,0,0,,But, finally after instantiating
Dialogue: 0,0:09:36.68,0:09:37.98,Default,,0,0,0,,these items, we're just going to
Dialogue: 0,0:09:37.98,0:09:39.12,Default,,0,0,0,,go ahead and stuff them in the
Dialogue: 0,0:09:39.12,0:09:39.98,Default,,0,0,0,,template item set.
Dialogue: 0,0:09:40.59,0:09:41.60,Default,,0,0,0,,And if we do all of this, we're
Dialogue: 0,0:09:41.60,0:09:42.42,Default,,0,0,0,,going to wind up with the Touch
Dialogue: 0,0:09:42.42,0:09:43.32,Default,,0,0,0,,Bar we see at the bottom of the
Dialogue: 0,0:09:43.32,0:09:44.77,Default,,0,0,0,,screen, with our shark button
Dialogue: 0,0:09:44.77,0:09:45.58,Default,,0,0,0,,and our turtle button.
Dialogue: 0,0:09:47.04,0:09:48.19,Default,,0,0,0,,Something I'd like to mention,
Dialogue: 0,0:09:48.42,0:09:50.43,Default,,0,0,0,,if you go ahead and copy and
Dialogue: 0,0:09:50.43,0:09:52.37,Default,,0,0,0,,paste the code on the slide into
Dialogue: 0,0:09:52.37,0:09:54.30,Default,,0,0,0,,a Swift playground, XCode will
Dialogue: 0,0:09:54.30,0:09:55.98,Default,,0,0,0,,go ahead and preview the Touch
Dialogue: 0,0:09:56.01,0:09:57.22,Default,,0,0,0,,Bar items we construct and the
Dialogue: 0,0:09:57.22,0:09:58.41,Default,,0,0,0,,Touch Bar itself.
Dialogue: 0,0:09:58.41,0:09:59.76,Default,,0,0,0,,And this is a pretty useful way
Dialogue: 0,0:09:59.76,0:10:01.01,Default,,0,0,0,,of rapidly prototyping your
Dialogue: 0,0:10:01.01,0:10:01.82,Default,,0,0,0,,Touch Bar UIs.
Dialogue: 0,0:10:03.05,0:10:03.95,Default,,0,0,0,,So, that's template items.
Dialogue: 0,0:10:04.39,0:10:06.04,Default,,0,0,0,,Let's go ahead and cover what we
Dialogue: 0,0:10:06.04,0:10:08.06,Default,,0,0,0,,can do with the delegate.
Dialogue: 0,0:10:08.06,0:10:10.07,Default,,0,0,0,,So, there's a single delegate
Dialogue: 0,0:10:10.07,0:10:11.48,Default,,0,0,0,,method in the NSTouchBarDelegate
Dialogue: 0,0:10:11.48,0:10:11.99,Default,,0,0,0,,protocol.
Dialogue: 0,0:10:11.99,0:10:12.78,Default,,0,0,0,,And that's Touch Bar,
Dialogue: 0,0:10:12.78,0:10:14.08,Default,,0,0,0,,makeItemForIdentifier.
Dialogue: 0,0:10:14.98,0:10:16.43,Default,,0,0,0,,And it's pretty simple.
Dialogue: 0,0:10:16.56,0:10:17.57,Default,,0,0,0,,If we take a look at this code
Dialogue: 0,0:10:17.57,0:10:19.08,Default,,0,0,0,,here, this is exactly the same
Dialogue: 0,0:10:19.08,0:10:20.11,Default,,0,0,0,,as the template items case.
Dialogue: 0,0:10:20.11,0:10:20.97,Default,,0,0,0,,What's different is we've
Dialogue: 0,0:10:20.97,0:10:21.99,Default,,0,0,0,,structured it in a switch
Dialogue: 0,0:10:21.99,0:10:23.79,Default,,0,0,0,,statement, so we can go ahead
Dialogue: 0,0:10:23.79,0:10:25.28,Default,,0,0,0,,and conditionally create a new
Dialogue: 0,0:10:25.28,0:10:27.37,Default,,0,0,0,,item when AppKit asks for one of
Dialogue: 0,0:10:27.37,0:10:28.62,Default,,0,0,0,,our specific identifiers.
Dialogue: 0,0:10:29.60,0:10:31.91,Default,,0,0,0,,AppKit cahces the result of this
Dialogue: 0,0:10:31.91,0:10:32.27,Default,,0,0,0,,method.
Dialogue: 0,0:10:32.56,0:10:33.81,Default,,0,0,0,,So, you really can just treat
Dialogue: 0,0:10:33.81,0:10:35.11,Default,,0,0,0,,this as a factory and make a new
Dialogue: 0,0:10:35.11,0:10:35.90,Default,,0,0,0,,instance each time.
Dialogue: 0,0:10:35.90,0:10:36.86,Default,,0,0,0,,You don't have to maintain a
Dialogue: 0,0:10:36.86,0:10:38.10,Default,,0,0,0,,back pointer yourself, unless
Dialogue: 0,0:10:38.10,0:10:39.35,Default,,0,0,0,,that's useful for other reasons.
Dialogue: 0,0:10:40.54,0:10:43.24,Default,,0,0,0,,Something else that's important
Dialogue: 0,0:10:43.24,0:10:44.65,Default,,0,0,0,,to mention is, you know I've
Dialogue: 0,0:10:44.65,0:10:46.81,Default,,0,0,0,,covered customizability a little
Dialogue: 0,0:10:47.20,0:10:48.35,Default,,0,0,0,,bit, and let's take that Touch
Dialogue: 0,0:10:48.35,0:10:49.15,Default,,0,0,0,,Bar we've made and make it
Dialogue: 0,0:10:49.15,0:10:49.82,Default,,0,0,0,,customizable.
Dialogue: 0,0:10:50.63,0:10:52.07,Default,,0,0,0,,So, that involves adding a few
Dialogue: 0,0:10:52.07,0:10:52.38,Default,,0,0,0,,things.
Dialogue: 0,0:10:52.67,0:10:54.23,Default,,0,0,0,,The first bit is actually this
Dialogue: 0,0:10:54.23,0:10:55.76,Default,,0,0,0,,top line, where we go ahead and
Dialogue: 0,0:10:55.76,0:10:57.16,Default,,0,0,0,,tell NS application to set
Dialogue: 0,0:10:57.39,0:10:58.77,Default,,0,0,0,,isAutomaticCustomize
Dialogue: 0,0:10:58.77,0:11:00.23,Default,,0,0,0,,TouchBarMenuItemEnabled.
Dialogue: 0,0:11:00.91,0:11:02.61,Default,,0,0,0,,That's a mouthful, but it's
Dialogue: 0,0:11:02.61,0:11:03.64,Default,,0,0,0,,actually a very simply way of
Dialogue: 0,0:11:03.64,0:11:04.20,Default,,0,0,0,,handling this.
Dialogue: 0,0:11:04.20,0:11:05.51,Default,,0,0,0,,If you set this to true,
Dialogue: 0,0:11:05.88,0:11:07.13,Default,,0,0,0,,NSApplication is going to go
Dialogue: 0,0:11:07.13,0:11:08.50,Default,,0,0,0,,ahead and create a menu item for
Dialogue: 0,0:11:08.50,0:11:10.28,Default,,0,0,0,,you automatically that will show
Dialogue: 0,0:11:10.28,0:11:11.31,Default,,0,0,0,,and hide the customization
Dialogue: 0,0:11:11.31,0:11:11.63,Default,,0,0,0,,panel.
Dialogue: 0,0:11:12.16,0:11:13.31,Default,,0,0,0,,You don't have to use that.
Dialogue: 0,0:11:13.35,0:11:14.79,Default,,0,0,0,,NSApplication has a method to
Dialogue: 0,0:11:14.79,0:11:16.30,Default,,0,0,0,,show and hide it explicitly and
Dialogue: 0,0:11:16.30,0:11:17.24,Default,,0,0,0,,you can wire that up to your
Dialogue: 0,0:11:17.24,0:11:18.90,Default,,0,0,0,,menu item if you want a little
Dialogue: 0,0:11:19.75,0:11:20.67,Default,,0,0,0,,bit more control.
Dialogue: 0,0:11:20.67,0:11:21.55,Default,,0,0,0,,But with that out of the way,
Dialogue: 0,0:11:21.87,0:11:23.11,Default,,0,0,0,,let's look at the bottom of the
Dialogue: 0,0:11:23.11,0:11:24.63,Default,,0,0,0,,code in this slide, where we set
Dialogue: 0,0:11:24.63,0:11:26.03,Default,,0,0,0,,the customization identifier.
Dialogue: 0,0:11:26.46,0:11:27.83,Default,,0,0,0,,And in this case, I'm just
Dialogue: 0,0:11:27.83,0:11:29.25,Default,,0,0,0,,making up an ocean animal
Dialogue: 0,0:11:29.25,0:11:29.84,Default,,0,0,0,,identifier.
Dialogue: 0,0:11:30.49,0:11:32.17,Default,,0,0,0,,But it's important to set this,
Dialogue: 0,0:11:32.17,0:11:33.57,Default,,0,0,0,,because this is the token which
Dialogue: 0,0:11:33.61,0:11:35.08,Default,,0,0,0,,enables persistence of the Touch
Dialogue: 0,0:11:35.08,0:11:36.45,Default,,0,0,0,,Bar configuration across
Dialogue: 0,0:11:36.45,0:11:37.94,Default,,0,0,0,,launches of your application or
Dialogue: 0,0:11:37.94,0:11:38.93,Default,,0,0,0,,reboots of the system.
Dialogue: 0,0:11:39.74,0:11:41.25,Default,,0,0,0,,And there's one other important
Dialogue: 0,0:11:41.25,0:11:42.58,Default,,0,0,0,,step for enabling customization,
Dialogue: 0,0:11:42.58,0:11:43.38,Default,,0,0,0,,and that is to set this
Dialogue: 0,0:11:43.38,0:11:44.69,Default,,0,0,0,,customizationAllowedItem
Dialogue: 0,0:11:44.69,0:11:45.53,Default,,0,0,0,,Identifiers array.
Dialogue: 0,0:11:45.92,0:11:47.08,Default,,0,0,0,,And we're just going ahead and
Dialogue: 0,0:11:47.08,0:11:48.08,Default,,0,0,0,,set it to our shark and sea
Dialogue: 0,0:11:48.08,0:11:48.58,Default,,0,0,0,,turtle again.
Dialogue: 0,0:11:48.98,0:11:50.31,Default,,0,0,0,,But setting this allows the
Dialogue: 0,0:11:50.31,0:11:51.47,Default,,0,0,0,,customization panel to know
Dialogue: 0,0:11:51.47,0:11:52.69,Default,,0,0,0,,which items can be added and
Dialogue: 0,0:11:52.69,0:11:53.05,Default,,0,0,0,,removed.
Dialogue: 0,0:11:53.71,0:11:54.68,Default,,0,0,0,,If we do all of that, we can
Dialogue: 0,0:11:54.68,0:11:55.98,Default,,0,0,0,,bring up the customization panel
Dialogue: 0,0:11:55.98,0:11:57.59,Default,,0,0,0,,and we'll see exactly this, the
Dialogue: 0,0:11:57.59,0:11:59.19,Default,,0,0,0,,defaultItemIdentifiers array is
Dialogue: 0,0:11:59.19,0:12:00.37,Default,,0,0,0,,translated faithfully to the
Dialogue: 0,0:12:00.37,0:12:01.33,Default,,0,0,0,,default set of items on the
Dialogue: 0,0:12:01.33,0:12:01.74,Default,,0,0,0,,left.
Dialogue: 0,0:12:01.78,0:12:03.04,Default,,0,0,0,,And the individual items from
Dialogue: 0,0:12:03.04,0:12:04.69,Default,,0,0,0,,the allowed item identifiers are
Dialogue: 0,0:12:04.69,0:12:05.52,Default,,0,0,0,,shown on the right.
Dialogue: 0,0:12:06.24,0:12:07.18,Default,,0,0,0,,This is kind of a boring
Dialogue: 0,0:12:07.18,0:12:08.34,Default,,0,0,0,,customization panel and we can
Dialogue: 0,0:12:08.34,0:12:09.29,Default,,0,0,0,,spice it up a little.
Dialogue: 0,0:12:10.19,0:12:11.93,Default,,0,0,0,,So, here's a whole menagerie of
Dialogue: 0,0:12:11.93,0:12:12.58,Default,,0,0,0,,ocean animals.
Dialogue: 0,0:12:13.33,0:12:15.81,Default,,0,0,0,,Something I want to mention, and
Dialogue: 0,0:12:15.81,0:12:16.87,Default,,0,0,0,,it will come into play with
Dialogue: 0,0:12:16.93,0:12:18.41,Default,,0,0,0,,deciding whether you're going to
Dialogue: 0,0:12:18.41,0:12:19.50,Default,,0,0,0,,set the template items on a
Dialogue: 0,0:12:19.50,0:12:20.77,Default,,0,0,0,,Touch Bar when you create it, or
Dialogue: 0,0:12:20.82,0:12:22.70,Default,,0,0,0,,whether to use the delegate is
Dialogue: 0,0:12:22.80,0:12:24.20,Default,,0,0,0,,by default we were only showing
Dialogue: 0,0:12:24.20,0:12:25.13,Default,,0,0,0,,the shark and sea turtle.
Dialogue: 0,0:12:25.33,0:12:26.03,Default,,0,0,0,,And there's a lot of
Dialogue: 0,0:12:26.03,0:12:27.27,Default,,0,0,0,,applications where your default
Dialogue: 0,0:12:27.27,0:12:28.46,Default,,0,0,0,,functionality in the Touch Bar
Dialogue: 0,0:12:28.74,0:12:30.42,Default,,0,0,0,,is going to be a very small
Dialogue: 0,0:12:30.42,0:12:31.71,Default,,0,0,0,,subset of the total
Dialogue: 0,0:12:31.71,0:12:32.80,Default,,0,0,0,,functionality you can add
Dialogue: 0,0:12:32.80,0:12:33.66,Default,,0,0,0,,through customization.
Dialogue: 0,0:12:34.72,0:12:36.63,Default,,0,0,0,,By using the delegate, users who
Dialogue: 0,0:12:36.63,0:12:37.78,Default,,0,0,0,,don't bring up the customization
Dialogue: 0,0:12:37.78,0:12:38.84,Default,,0,0,0,,panel aren't going to pay the
Dialogue: 0,0:12:38.84,0:12:43.11,Default,,0,0,0,,CPU time of creating new items.
Dialogue: 0,0:12:43.63,0:12:44.95,Default,,0,0,0,,Something else to mention here
Dialogue: 0,0:12:44.95,0:12:46.60,Default,,0,0,0,,is you may have a situation
Dialogue: 0,0:12:46.60,0:12:47.43,Default,,0,0,0,,where you're building a Touch
Dialogue: 0,0:12:47.43,0:12:48.38,Default,,0,0,0,,Bar UI and there's some
Dialogue: 0,0:12:48.38,0:12:49.56,Default,,0,0,0,,functionality you want to be
Dialogue: 0,0:12:49.56,0:12:50.89,Default,,0,0,0,,there all the time, you don't
Dialogue: 0,0:12:50.89,0:12:51.90,Default,,0,0,0,,want the user to be able to
Dialogue: 0,0:12:51.90,0:12:53.65,Default,,0,0,0,,remove it in customization, and
Dialogue: 0,0:12:53.65,0:12:54.88,Default,,0,0,0,,if you have a case like that you
Dialogue: 0,0:12:54.88,0:12:56.09,Default,,0,0,0,,can set the customization
Dialogue: 0,0:12:56.09,0:12:57.67,Default,,0,0,0,,required item identifiers array.
Dialogue: 0,0:12:58.22,0:12:59.71,Default,,0,0,0,,And in this case, obviously, the
Dialogue: 0,0:12:59.71,0:13:00.94,Default,,0,0,0,,sea turtle is critical for the
Dialogue: 0,0:13:00.94,0:13:02.01,Default,,0,0,0,,function of our application.
Dialogue: 0,0:13:02.01,0:13:02.93,Default,,0,0,0,,So, we're going to prevent it
Dialogue: 0,0:13:02.93,0:13:03.59,Default,,0,0,0,,from being removed.
Dialogue: 0,0:13:03.63,0:13:07.20,Default,,0,0,0,,So, that kind of covers how to
Dialogue: 0,0:13:07.20,0:13:09.16,Default,,0,0,0,,make instances of NSTouchBar and
Dialogue: 0,0:13:09.16,0:13:11.21,Default,,0,0,0,,how to facilitate item lookup by
Dialogue: 0,0:13:11.21,0:13:12.31,Default,,0,0,0,,the item identifier, through the
Dialogue: 0,0:13:12.31,0:13:13.85,Default,,0,0,0,,template items and delegate
Dialogue: 0,0:13:13.85,0:13:14.27,Default,,0,0,0,,methods.
Dialogue: 0,0:13:14.64,0:13:15.83,Default,,0,0,0,,But one of the things we're
Dialogue: 0,0:13:15.83,0:13:17.60,Default,,0,0,0,,missing is how the applicant
Dialogue: 0,0:13:17.60,0:13:18.79,Default,,0,0,0,,finds those instances of
Dialogue: 0,0:13:18.79,0:13:19.40,Default,,0,0,0,,NSTouchBar.
Dialogue: 0,0:13:19.40,0:13:21.29,Default,,0,0,0,,And I big part of that is the
Dialogue: 0,0:13:21.29,0:13:22.63,Default,,0,0,0,,NSTouchBarProvider protocol.
Dialogue: 0,0:13:23.44,0:13:24.79,Default,,0,0,0,,And it's a fairly simple
Dialogue: 0,0:13:24.79,0:13:25.26,Default,,0,0,0,,protocol.
Dialogue: 0,0:13:25.50,0:13:26.98,Default,,0,0,0,,It's just exposing a read-only
Dialogue: 0,0:13:26.98,0:13:28.89,Default,,0,0,0,,Touch Bar property.
Dialogue: 0,0:13:28.89,0:13:30.85,Default,,0,0,0,,NSResponder itself implements
Dialogue: 0,0:13:30.85,0:13:31.87,Default,,0,0,0,,this protocol right out of the
Dialogue: 0,0:13:31.87,0:13:32.35,Default,,0,0,0,,box.
Dialogue: 0,0:13:32.35,0:13:33.26,Default,,0,0,0,,And we'll cover that in just a
Dialogue: 0,0:13:33.26,0:13:33.64,Default,,0,0,0,,second.
Dialogue: 0,0:13:34.01,0:13:35.56,Default,,0,0,0,,But sometimes it's useful to
Dialogue: 0,0:13:35.56,0:13:36.68,Default,,0,0,0,,attach a Touch Bar to your
Dialogue: 0,0:13:36.68,0:13:38.39,Default,,0,0,0,,application delegate, or window
Dialogue: 0,0:13:38.39,0:13:38.98,Default,,0,0,0,,delegate.
Dialogue: 0,0:13:38.98,0:13:40.16,Default,,0,0,0,,And neither of those is likely
Dialogue: 0,0:13:40.16,0:13:41.66,Default,,0,0,0,,to be a subclass of NSResponder.
Dialogue: 0,0:13:41.97,0:13:43.02,Default,,0,0,0,,So, let's see how you go ahead
Dialogue: 0,0:13:43.02,0:13:44.02,Default,,0,0,0,,and implement that protocol
Dialogue: 0,0:13:44.02,0:13:44.49,Default,,0,0,0,,yourself.
Dialogue: 0,0:13:45.44,0:13:47.26,Default,,0,0,0,,This looks like a lot of code,
Dialogue: 0,0:13:47.26,0:13:48.49,Default,,0,0,0,,but really we're just using a
Dialogue: 0,0:13:48.49,0:13:50.59,Default,,0,0,0,,Swift lazy variable here for the
Dialogue: 0,0:13:50.59,0:13:51.40,Default,,0,0,0,,Touch Bar property.
Dialogue: 0,0:13:51.99,0:13:53.22,Default,,0,0,0,,And the first time the Touch Bar
Dialogue: 0,0:13:53.22,0:13:54.56,Default,,0,0,0,,property is accessed, Swift is
Dialogue: 0,0:13:54.56,0:13:55.58,Default,,0,0,0,,going to go ahead and run this
Dialogue: 0,0:13:55.58,0:13:56.97,Default,,0,0,0,,block to instantiate our Touch
Dialogue: 0,0:13:57.00,0:13:57.20,Default,,0,0,0,,Bar.
Dialogue: 0,0:13:57.42,0:13:58.70,Default,,0,0,0,,All the code to create the item
Dialogue: 0,0:13:58.70,0:13:59.89,Default,,0,0,0,,in bar and stuff we looked at in
Dialogue: 0,0:13:59.89,0:14:00.79,Default,,0,0,0,,the previous slides.
Dialogue: 0,0:14:02.18,0:14:03.94,Default,,0,0,0,,Something else to mention is
Dialogue: 0,0:14:03.94,0:14:05.71,Default,,0,0,0,,that AppKit key value observes
Dialogue: 0,0:14:05.71,0:14:06.30,Default,,0,0,0,,this property.
Dialogue: 0,0:14:06.30,0:14:07.61,Default,,0,0,0,,So, if you feel the need to
Dialogue: 0,0:14:07.76,0:14:08.71,Default,,0,0,0,,replace your Touch Bar
Dialogue: 0,0:14:08.71,0:14:09.88,Default,,0,0,0,,wholesale, we'll notice that
Dialogue: 0,0:14:09.88,0:14:10.53,Default,,0,0,0,,sort of change.
Dialogue: 0,0:14:11.71,0:14:13.76,Default,,0,0,0,,Let's look at how NSResponder
Dialogue: 0,0:14:13.76,0:14:14.93,Default,,0,0,0,,implements this.
Dialogue: 0,0:14:14.93,0:14:16.43,Default,,0,0,0,,First, it exposes that Touch Bar
Dialogue: 0,0:14:16.43,0:14:17.46,Default,,0,0,0,,property as a read-write
Dialogue: 0,0:14:17.46,0:14:18.91,Default,,0,0,0,,property instead of read-only.
Dialogue: 0,0:14:19.23,0:14:20.60,Default,,0,0,0,,And the significance of that is
Dialogue: 0,0:14:20.60,0:14:22.08,Default,,0,0,0,,that you can set instances of
Dialogue: 0,0:14:22.19,0:14:24.29,Default,,0,0,0,,NSTouchBar on various pieces of
Dialogue: 0,0:14:24.29,0:14:24.95,Default,,0,0,0,,your application.
Dialogue: 0,0:14:24.95,0:14:26.09,Default,,0,0,0,,On the responders, you have in
Dialogue: 0,0:14:26.09,0:14:26.60,Default,,0,0,0,,your windows.
Dialogue: 0,0:14:26.60,0:14:27.86,Default,,0,0,0,,Like views and view controllers,
Dialogue: 0,0:14:27.86,0:14:28.70,Default,,0,0,0,,and window controllers.
Dialogue: 0,0:14:29.18,0:14:31.09,Default,,0,0,0,,And that's really neat because
Dialogue: 0,0:14:31.09,0:14:32.08,Default,,0,0,0,,you don't necessarily have a
Dialogue: 0,0:14:32.08,0:14:33.31,Default,,0,0,0,,subclass for each and every one
Dialogue: 0,0:14:33.31,0:14:34.06,Default,,0,0,0,,of those controls.
Dialogue: 0,0:14:34.75,0:14:36.64,Default,,0,0,0,,If you are making a subclass of
Dialogue: 0,0:14:36.64,0:14:37.68,Default,,0,0,0,,a control, or really any
Dialogue: 0,0:14:37.77,0:14:39.83,Default,,0,0,0,,NSResponder, NSResponder also
Dialogue: 0,0:14:39.83,0:14:41.14,Default,,0,0,0,,exposes this makeTouchBar
Dialogue: 0,0:14:41.14,0:14:41.48,Default,,0,0,0,,method.
Dialogue: 0,0:14:42.51,0:14:43.54,Default,,0,0,0,,So, makeTouchBar is pretty
Dialogue: 0,0:14:43.54,0:14:43.89,Default,,0,0,0,,simple.
Dialogue: 0,0:14:44.46,0:14:45.96,Default,,0,0,0,,The first time the Touch Bar
Dialogue: 0,0:14:45.96,0:14:47.30,Default,,0,0,0,,property is accessed on an
Dialogue: 0,0:14:47.33,0:14:49.00,Default,,0,0,0,,NSResponder, it's going to call
Dialogue: 0,0:14:49.28,0:14:50.98,Default,,0,0,0,,self makeTouchBar and run this
Dialogue: 0,0:14:50.98,0:14:51.32,Default,,0,0,0,,code.
Dialogue: 0,0:14:51.32,0:14:52.42,Default,,0,0,0,,And we just have to return a new
Dialogue: 0,0:14:52.42,0:14:53.22,Default,,0,0,0,,Touch Bar for it.
Dialogue: 0,0:14:53.61,0:14:55.29,Default,,0,0,0,,A lot of the system controls and
Dialogue: 0,0:14:55.29,0:14:56.61,Default,,0,0,0,,system frameworks, which expose
Dialogue: 0,0:14:56.61,0:14:58.32,Default,,0,0,0,,functionality use this method to
Dialogue: 0,0:14:58.32,0:14:59.98,Default,,0,0,0,,provide it.
Dialogue: 0,0:15:00.66,0:15:02.44,Default,,0,0,0,,So, I mentioned that NSResponder
Dialogue: 0,0:15:02.44,0:15:03.59,Default,,0,0,0,,has a read-write Touch Bar
Dialogue: 0,0:15:03.59,0:15:04.56,Default,,0,0,0,,property and you can set the
Dialogue: 0,0:15:04.56,0:15:05.11,Default,,0,0,0,,touch bar.
Dialogue: 0,0:15:05.11,0:15:06.19,Default,,0,0,0,,And one of the most important
Dialogue: 0,0:15:06.19,0:15:07.35,Default,,0,0,0,,clients of that is actually
Dialogue: 0,0:15:07.35,0:15:08.10,Default,,0,0,0,,Interface Builder.
Dialogue: 0,0:15:08.91,0:15:10.03,Default,,0,0,0,,So, let me show you how to build
Dialogue: 0,0:15:10.03,0:15:11.20,Default,,0,0,0,,a Touch Bar UI from Interface
Dialogue: 0,0:15:11.20,0:15:11.50,Default,,0,0,0,,Builder.
Dialogue: 0,0:15:11.96,0:15:13.65,Default,,0,0,0,,If we go ahead and start with a
Dialogue: 0,0:15:13.65,0:15:14.62,Default,,0,0,0,,new story board, we have a
Dialogue: 0,0:15:14.62,0:15:16.14,Default,,0,0,0,,window controller seen here, and
Dialogue: 0,0:15:16.14,0:15:17.62,Default,,0,0,0,,we can filter the object library
Dialogue: 0,0:15:18.00,0:15:19.55,Default,,0,0,0,,to show us Touch Bar controls.
Dialogue: 0,0:15:20.17,0:15:22.11,Default,,0,0,0,,So, if we just check the object
Dialogue: 0,0:15:22.11,0:15:23.32,Default,,0,0,0,,library, here an instance of NS
Dialogue: 0,0:15:23.32,0:15:24.75,Default,,0,0,0,,Touch Bar and we can drag that
Dialogue: 0,0:15:24.75,0:15:25.88,Default,,0,0,0,,onto our window controller.
Dialogue: 0,0:15:26.34,0:15:27.51,Default,,0,0,0,,And now we have an empty Touch
Dialogue: 0,0:15:27.51,0:15:29.07,Default,,0,0,0,,Bar to play with and going back
Dialogue: 0,0:15:29.07,0:15:31.03,Default,,0,0,0,,to the object library, we can go
Dialogue: 0,0:15:31.03,0:15:32.43,Default,,0,0,0,,ahead and see that there's
Dialogue: 0,0:15:32.48,0:15:33.86,Default,,0,0,0,,dozens and dozens of
Dialogue: 0,0:15:33.86,0:15:35.49,Default,,0,0,0,,preconfigured controls and Touch
Dialogue: 0,0:15:35.53,0:15:36.84,Default,,0,0,0,,Bar items we can just drag into
Dialogue: 0,0:15:36.84,0:15:37.38,Default,,0,0,0,,the Touch Bar.
Dialogue: 0,0:15:37.63,0:15:40.90,Default,,0,0,0,,And from here, we can wire these
Dialogue: 0,0:15:40.90,0:15:42.78,Default,,0,0,0,,items up with ID connections, or
Dialogue: 0,0:15:42.78,0:15:43.64,Default,,0,0,0,,bindings or whatever.
Dialogue: 0,0:15:43.89,0:15:45.63,Default,,0,0,0,,And it's actually very possible
Dialogue: 0,0:15:45.63,0:15:47.06,Default,,0,0,0,,to write Touch Bar apps that are
Dialogue: 0,0:15:47.06,0:15:48.34,Default,,0,0,0,,perfectly functional and useable
Dialogue: 0,0:15:48.53,0:15:49.65,Default,,0,0,0,,without ever writing a line of
Dialogue: 0,0:15:49.65,0:15:50.81,Default,,0,0,0,,code for it.
Dialogue: 0,0:15:51.56,0:15:53.61,Default,,0,0,0,,So, that covers creating
Dialogue: 0,0:15:53.61,0:15:54.91,Default,,0,0,0,,instances of NSTouchBarItem.
Dialogue: 0,0:15:55.24,0:15:56.51,Default,,0,0,0,,Let's see how this fits into the
Dialogue: 0,0:15:56.51,0:15:57.89,Default,,0,0,0,,bigger responder chain and how
Dialogue: 0,0:15:57.89,0:15:59.51,Default,,0,0,0,,we discover all of these
Dialogue: 0,0:15:59.51,0:16:01.83,Default,,0,0,0,,individual Touch Bar instances.
Dialogue: 0,0:16:01.83,0:16:03.77,Default,,0,0,0,,So, a refresher, a responder
Dialogue: 0,0:16:03.77,0:16:05.27,Default,,0,0,0,,chain is made up of instances of
Dialogue: 0,0:16:05.27,0:16:06.52,Default,,0,0,0,,the NSResponder class.
Dialogue: 0,0:16:06.84,0:16:08.04,Default,,0,0,0,,And one of the most important
Dialogue: 0,0:16:08.04,0:16:09.34,Default,,0,0,0,,properties of the NSResponder
Dialogue: 0,0:16:09.34,0:16:11.42,Default,,0,0,0,,class is this next responder
Dialogue: 0,0:16:11.42,0:16:12.78,Default,,0,0,0,,property it has.
Dialogue: 0,0:16:13.27,0:16:14.55,Default,,0,0,0,,And that just points at another
Dialogue: 0,0:16:14.55,0:16:15.06,Default,,0,0,0,,responder.
Dialogue: 0,0:16:15.41,0:16:16.40,Default,,0,0,0,,But it basically means that
Dialogue: 0,0:16:16.40,0:16:17.96,Default,,0,0,0,,given a responder, we've
Dialogue: 0,0:16:17.96,0:16:20.25,Default,,0,0,0,,anchored an entire chain of
Dialogue: 0,0:16:20.25,0:16:21.94,Default,,0,0,0,,responders capable of handling
Dialogue: 0,0:16:21.94,0:16:23.26,Default,,0,0,0,,events and actions and things.
Dialogue: 0,0:16:23.66,0:16:26.39,Default,,0,0,0,,And AppKit uses many different
Dialogue: 0,0:16:26.49,0:16:28.20,Default,,0,0,0,,responders as the anchors for
Dialogue: 0,0:16:28.20,0:16:29.28,Default,,0,0,0,,chains for handling keyboard
Dialogue: 0,0:16:29.28,0:16:31.26,Default,,0,0,0,,events, and actions and kit
Dialogue: 0,0:16:31.26,0:16:32.85,Default,,0,0,0,,testing and routing mouse events
Dialogue: 0,0:16:32.85,0:16:34.32,Default,,0,0,0,,and things, but let's cover how
Dialogue: 0,0:16:34.32,0:16:35.23,Default,,0,0,0,,keyboard event works.
Dialogue: 0,0:16:35.23,0:16:36.38,Default,,0,0,0,,Because Touch Bar is part of the
Dialogue: 0,0:16:36.38,0:16:36.79,Default,,0,0,0,,keyboard.
Dialogue: 0,0:16:37.60,0:16:38.85,Default,,0,0,0,,So, we're going to have an
Dialogue: 0,0:16:38.85,0:16:39.89,Default,,0,0,0,,NSEvent handed to us by the
Dialogue: 0,0:16:39.89,0:16:41.30,Default,,0,0,0,,system, and that's going to go
Dialogue: 0,0:16:41.30,0:16:42.38,Default,,0,0,0,,over the NSApplication.
Dialogue: 0,0:16:43.01,0:16:44.24,Default,,0,0,0,,And NSApplication is going to
Dialogue: 0,0:16:44.24,0:16:45.24,Default,,0,0,0,,say what do I do with this
Dialogue: 0,0:16:45.24,0:16:45.80,Default,,0,0,0,,keyboard event.
Dialogue: 0,0:16:46.45,0:16:48.25,Default,,0,0,0,,And most NSApplications are
Dialogue: 0,0:16:48.25,0:16:49.35,Default,,0,0,0,,going to say do I have a key
Dialogue: 0,0:16:49.35,0:16:49.76,Default,,0,0,0,,window?
Dialogue: 0,0:16:49.91,0:16:51.80,Default,,0,0,0,,Okay, it gets the keyboard event
Dialogue: 0,0:16:51.80,0:16:51.94,Default,,0,0,0,,now.
Dialogue: 0,0:16:52.93,0:16:54.27,Default,,0,0,0,,And the key window meanwhile is
Dialogue: 0,0:16:54.27,0:16:55.26,Default,,0,0,0,,going to have the same question,
Dialogue: 0,0:16:55.26,0:16:56.43,Default,,0,0,0,,what do I do with this keyboard
Dialogue: 0,0:16:57.19,0:16:57.51,Default,,0,0,0,,event.
Dialogue: 0,0:16:57.51,0:16:59.62,Default,,0,0,0,,Every NS Window had a property
Dialogue: 0,0:16:59.62,0:17:01.09,Default,,0,0,0,,called first responder and
Dialogue: 0,0:17:01.09,0:17:03.19,Default,,0,0,0,,that's designating where the
Dialogue: 0,0:17:03.19,0:17:04.36,Default,,0,0,0,,responder chain starts for
Dialogue: 0,0:17:04.36,0:17:05.62,Default,,0,0,0,,keyboard events and actions and
Dialogue: 0,0:17:05.62,0:17:05.93,Default,,0,0,0,,things.
Dialogue: 0,0:17:06.17,0:17:06.97,Default,,0,0,0,,So, the key window is going to
Dialogue: 0,0:17:06.97,0:17:08.00,Default,,0,0,0,,go ahead and say, all right
Dialogue: 0,0:17:08.00,0:17:08.92,Default,,0,0,0,,let's send this event to my
Dialogue: 0,0:17:08.92,0:17:11.47,Default,,0,0,0,,first responder, like in its key
Dialogue: 0,0:17:11.47,0:17:12.33,Default,,0,0,0,,down or key up method.
Dialogue: 0,0:17:13.24,0:17:14.52,Default,,0,0,0,,So, the first responder
Dialogue: 0,0:17:14.52,0:17:16.97,Default,,0,0,0,,meanwhile it's interesting,
Dialogue: 0,0:17:16.97,0:17:17.85,Default,,0,0,0,,because that's where it's
Dialogue: 0,0:17:17.85,0:17:19.10,Default,,0,0,0,,anchoring the responder chain,
Dialogue: 0,0:17:19.10,0:17:19.91,Default,,0,0,0,,where we're going to be handling
Dialogue: 0,0:17:19.91,0:17:21.13,Default,,0,0,0,,this as a responder method, not
Dialogue: 0,0:17:21.13,0:17:22.11,Default,,0,0,0,,just generic event routing.
Dialogue: 0,0:17:22.11,0:17:23.28,Default,,0,0,0,,But it's going to have a
Dialogue: 0,0:17:23.28,0:17:24.98,Default,,0,0,0,,decision, do I handle the event
Dialogue: 0,0:17:24.98,0:17:27.08,Default,,0,0,0,,in key down, or do I call super
Dialogue: 0,0:17:27.08,0:17:28.26,Default,,0,0,0,,and let it pass that to the next
Dialogue: 0,0:17:28.26,0:17:28.76,Default,,0,0,0,,responder.
Dialogue: 0,0:17:29.46,0:17:30.60,Default,,0,0,0,,So, let's say it passes it to
Dialogue: 0,0:17:30.60,0:17:31.30,Default,,0,0,0,,the next responder.
Dialogue: 0,0:17:31.30,0:17:33.20,Default,,0,0,0,,Usually the first responder will
Dialogue: 0,0:17:33.20,0:17:34.50,Default,,0,0,0,,be a view, the second responder
Dialogue: 0,0:17:34.50,0:17:35.27,Default,,0,0,0,,will be a super view.
Dialogue: 0,0:17:35.79,0:17:37.21,Default,,0,0,0,,It will make the same choice.
Dialogue: 0,0:17:37.58,0:17:39.05,Default,,0,0,0,,And these days, use and view
Dialogue: 0,0:17:39.05,0:17:40.26,Default,,0,0,0,,controllers tend to be
Dialogue: 0,0:17:40.26,0:17:40.88,Default,,0,0,0,,[inaudible] in the responder
Dialogue: 0,0:17:40.88,0:17:41.16,Default,,0,0,0,,chain.
Dialogue: 0,0:17:41.43,0:17:42.98,Default,,0,0,0,,So, pass it up to a view
Dialogue: 0,0:17:42.98,0:17:44.22,Default,,0,0,0,,controller, have the same choice
Dialogue: 0,0:17:44.22,0:17:45.28,Default,,0,0,0,,handler call super.
Dialogue: 0,0:17:45.36,0:17:46.16,Default,,0,0,0,,It doesn't handle it.
Dialogue: 0,0:17:46.43,0:17:48.15,Default,,0,0,0,,It might even go and reach all
Dialogue: 0,0:17:48.15,0:17:49.02,Default,,0,0,0,,the way back to the initial
Dialogue: 0,0:17:49.02,0:17:50.53,Default,,0,0,0,,window that routed the event in
Dialogue: 0,0:17:50.53,0:17:51.25,Default,,0,0,0,,the first place.
Dialogue: 0,0:17:51.55,0:17:52.34,Default,,0,0,0,,And that, as part of the
Dialogue: 0,0:17:52.34,0:17:53.42,Default,,0,0,0,,responder chain, can make the
Dialogue: 0,0:17:53.42,0:17:54.64,Default,,0,0,0,,same decisions whether to handle
Dialogue: 0,0:17:54.64,0:17:55.34,Default,,0,0,0,,it or pass it on.
Dialogue: 0,0:17:55.65,0:17:56.68,Default,,0,0,0,,And that can percolate all the
Dialogue: 0,0:17:56.68,0:17:57.94,Default,,0,0,0,,way back up to the application.
Dialogue: 0,0:17:58.63,0:17:59.44,Default,,0,0,0,,So, that's how we handle
Dialogue: 0,0:17:59.44,0:18:00.16,Default,,0,0,0,,keyboard events.
Dialogue: 0,0:18:00.54,0:18:01.32,Default,,0,0,0,,Touch Bar is part of the
Dialogue: 0,0:18:01.32,0:18:01.72,Default,,0,0,0,,keyboard.
Dialogue: 0,0:18:01.95,0:18:03.16,Default,,0,0,0,,So, it also turns out these are
Dialogue: 0,0:18:03.16,0:18:04.61,Default,,0,0,0,,all the places we can attach
Dialogue: 0,0:18:04.61,0:18:05.77,Default,,0,0,0,,instances of NSTouchBar.
Dialogue: 0,0:18:06.25,0:18:07.89,Default,,0,0,0,,And we search them in exactly
Dialogue: 0,0:18:07.89,0:18:08.98,Default,,0,0,0,,the same order the keyboard
Dialogue: 0,0:18:08.98,0:18:10.26,Default,,0,0,0,,event was routed through the
Dialogue: 0,0:18:10.26,0:18:11.00,Default,,0,0,0,,responder chain.
Dialogue: 0,0:18:11.93,0:18:13.62,Default,,0,0,0,,So, one question you should be
Dialogue: 0,0:18:13.62,0:18:15.28,Default,,0,0,0,,asking is hey, I notice you have
Dialogue: 0,0:18:15.28,0:18:16.84,Default,,0,0,0,,five instances of NSTouchBar
Dialogue: 0,0:18:16.84,0:18:17.08,Default,,0,0,0,,here.
Dialogue: 0,0:18:17.33,0:18:18.97,Default,,0,0,0,,How do you go from that to one
Dialogue: 0,0:18:18.97,0:18:20.22,Default,,0,0,0,,Touch Bar on the device.
Dialogue: 0,0:18:20.69,0:18:21.93,Default,,0,0,0,,And I'm going to cover that in
Dialogue: 0,0:18:21.93,0:18:22.55,Default,,0,0,0,,just a second.
Dialogue: 0,0:18:22.93,0:18:25.04,Default,,0,0,0,,But first I want to make a small
Dialogue: 0,0:18:25.04,0:18:26.01,Default,,0,0,0,,note about views and views
Dialogue: 0,0:18:26.01,0:18:26.58,Default,,0,0,0,,controllers.
Dialogue: 0,0:18:27.39,0:18:28.28,Default,,0,0,0,,You're probably going to be
Dialogue: 0,0:18:28.28,0:18:29.47,Default,,0,0,0,,attaching a Touch Bar to a view
Dialogue: 0,0:18:29.47,0:18:31.22,Default,,0,0,0,,controller at some point, making
Dialogue: 0,0:18:31.44,0:18:32.38,Default,,0,0,0,,your application.
Dialogue: 0,0:18:32.96,0:18:34.05,Default,,0,0,0,,And you'll run and test this.
Dialogue: 0,0:18:34.05,0:18:34.79,Default,,0,0,0,,And you're going to see that
Dialogue: 0,0:18:34.79,0:18:35.82,Default,,0,0,0,,your Touch Bar doesn't show up
Dialogue: 0,0:18:35.82,0:18:37.02,Default,,0,0,0,,at all and you'll think, oh, I
Dialogue: 0,0:18:37.02,0:18:38.21,Default,,0,0,0,,guess my view controller is not
Dialogue: 0,0:18:38.21,0:18:39.19,Default,,0,0,0,,in the responder chain.
Dialogue: 0,0:18:39.36,0:18:40.36,Default,,0,0,0,,And you'll go ahead and look at
Dialogue: 0,0:18:40.36,0:18:41.47,Default,,0,0,0,,your view controllers view and
Dialogue: 0,0:18:41.47,0:18:42.85,Default,,0,0,0,,see that its next responder is
Dialogue: 0,0:18:42.85,0:18:43.87,Default,,0,0,0,,indeed your view controller.
Dialogue: 0,0:18:44.38,0:18:45.93,Default,,0,0,0,,And what's going on here is that
Dialogue: 0,0:18:46.38,0:18:48.79,Default,,0,0,0,,while your particular responder
Dialogue: 0,0:18:48.79,0:18:50.22,Default,,0,0,0,,chain is set up correctly, it's
Dialogue: 0,0:18:50.22,0:18:51.23,Default,,0,0,0,,not anchored in the first
Dialogue: 0,0:18:51.23,0:18:52.25,Default,,0,0,0,,responder of the window.
Dialogue: 0,0:18:52.81,0:18:54.33,Default,,0,0,0,,And that's often because the
Dialogue: 0,0:18:54.33,0:18:55.51,Default,,0,0,0,,first responder of the window
Dialogue: 0,0:18:55.51,0:18:56.91,Default,,0,0,0,,has to return true for the
Dialogue: 0,0:18:56.91,0:18:58.43,Default,,0,0,0,,acceptsFirstResponder method.
Dialogue: 0,0:18:58.88,0:18:59.74,Default,,0,0,0,,So, if you wind up in this
Dialogue: 0,0:18:59.74,0:19:00.95,Default,,0,0,0,,situation, it's really easy to
Dialogue: 0,0:19:00.95,0:19:02.46,Default,,0,0,0,,subclass NS View or whatever
Dialogue: 0,0:19:02.46,0:19:03.93,Default,,0,0,0,,your first responder is to
Dialogue: 0,0:19:03.93,0:19:06.24,Default,,0,0,0,,accept first responder and make
Dialogue: 0,0:19:06.24,0:19:07.51,Default,,0,0,0,,a valid responder chain anchored
Dialogue: 0,0:19:07.51,0:19:08.32,Default,,0,0,0,,at the first responder.
Dialogue: 0,0:19:09.40,0:19:10.96,Default,,0,0,0,,So, let's get back to how we're
Dialogue: 0,0:19:10.96,0:19:11.74,Default,,0,0,0,,going to handle multiple
Dialogue: 0,0:19:11.74,0:19:13.01,Default,,0,0,0,,NSTouchBar instances on this.
Dialogue: 0,0:19:13.33,0:19:15.30,Default,,0,0,0,,The easiest thing to remember is
Dialogue: 0,0:19:15.30,0:19:17.20,Default,,0,0,0,,that the responder, with an
Dialogue: 0,0:19:17.23,0:19:18.86,Default,,0,0,0,,NSTouchBar closest to that first
Dialogue: 0,0:19:18.86,0:19:20.03,Default,,0,0,0,,responder, so closest to the
Dialogue: 0,0:19:20.03,0:19:22.51,Default,,0,0,0,,keyboard input, its Touch Bar is
Dialogue: 0,0:19:22.51,0:19:23.56,Default,,0,0,0,,going to win and take over the
Dialogue: 0,0:19:23.56,0:19:24.13,Default,,0,0,0,,whole thing.
Dialogue: 0,0:19:24.73,0:19:26.29,Default,,0,0,0,,Calling back to earlier where I
Dialogue: 0,0:19:26.29,0:19:27.49,Default,,0,0,0,,mentioned that AVKit and some
Dialogue: 0,0:19:27.49,0:19:28.65,Default,,0,0,0,,other system frameworks provide
Dialogue: 0,0:19:28.65,0:19:29.88,Default,,0,0,0,,support, you're probably
Dialogue: 0,0:19:29.88,0:19:30.89,Default,,0,0,0,,thinking that they're likely
Dialogue: 0,0:19:30.89,0:19:32.10,Default,,0,0,0,,going to provide support in NS
Dialogue: 0,0:19:32.10,0:19:33.01,Default,,0,0,0,,Views which are going to be
Dialogue: 0,0:19:33.01,0:19:34.58,Default,,0,0,0,,closer to the first responder
Dialogue: 0,0:19:34.95,0:19:36.27,Default,,0,0,0,,than your window controllers or
Dialogue: 0,0:19:36.27,0:19:37.56,Default,,0,0,0,,application delegates might be.
Dialogue: 0,0:19:38.26,0:19:40.00,Default,,0,0,0,,So, we need some way of sharing
Dialogue: 0,0:19:40.28,0:19:41.56,Default,,0,0,0,,the device Touch Bar across
Dialogue: 0,0:19:41.56,0:19:43.10,Default,,0,0,0,,multiple instances of NSTouchBar
Dialogue: 0,0:19:43.10,0:19:44.27,Default,,0,0,0,,and we have a way of doing that.
Dialogue: 0,0:19:44.76,0:19:45.86,Default,,0,0,0,,And that's accomplished with
Dialogue: 0,0:19:45.86,0:19:47.14,Default,,0,0,0,,this special item identifier,
Dialogue: 0,0:19:47.36,0:19:48.65,Default,,0,0,0,,called the otherItemsProxy.
Dialogue: 0,0:19:49.43,0:19:50.59,Default,,0,0,0,,I say it's a special item
Dialogue: 0,0:19:50.59,0:19:52.12,Default,,0,0,0,,identifier because you don't
Dialogue: 0,0:19:52.12,0:19:53.18,Default,,0,0,0,,have to create any item for
Dialogue: 0,0:19:53.18,0:19:53.41,Default,,0,0,0,,this.
Dialogue: 0,0:19:53.41,0:19:54.32,Default,,0,0,0,,You don't have to put it in your
Dialogue: 0,0:19:54.32,0:19:55.79,Default,,0,0,0,,template item set, you don't
Dialogue: 0,0:19:55.79,0:19:57.60,Default,,0,0,0,,have to handle that identifier
Dialogue: 0,0:19:57.75,0:19:58.87,Default,,0,0,0,,in your delegate and make item
Dialogue: 0,0:19:58.87,0:19:59.94,Default,,0,0,0,,for identifier case.
Dialogue: 0,0:20:01.17,0:20:02.15,Default,,0,0,0,,But when you go ahead and
Dialogue: 0,0:20:02.15,0:20:03.96,Default,,0,0,0,,include other items proxy in
Dialogue: 0,0:20:03.96,0:20:05.20,Default,,0,0,0,,your default item identifier
Dialogue: 0,0:20:05.25,0:20:07.93,Default,,0,0,0,,array, when AppKit is harvesting
Dialogue: 0,0:20:08.01,0:20:09.23,Default,,0,0,0,,NSTouchBar from the responder
Dialogue: 0,0:20:09.23,0:20:10.64,Default,,0,0,0,,chain, it will go ahead and
Dialogue: 0,0:20:10.64,0:20:12.57,Default,,0,0,0,,replace the otherItemsProxy with
Dialogue: 0,0:20:12.57,0:20:14.19,Default,,0,0,0,,the items from responders closer
Dialogue: 0,0:20:14.19,0:20:15.29,Default,,0,0,0,,to the first responder.
Dialogue: 0,0:20:16.41,0:20:17.72,Default,,0,0,0,,So, let's look at that in
Dialogue: 0,0:20:17.72,0:20:17.99,Default,,0,0,0,,action.
Dialogue: 0,0:20:17.99,0:20:18.98,Default,,0,0,0,,Here's an example of mail.
Dialogue: 0,0:20:19.40,0:20:20.56,Default,,0,0,0,,My keyboard focus is on the
Dialogue: 0,0:20:20.56,0:20:21.35,Default,,0,0,0,,recipient's field.
Dialogue: 0,0:20:21.35,0:20:22.80,Default,,0,0,0,,And the recipient's field is
Dialogue: 0,0:20:22.80,0:20:24.39,Default,,0,0,0,,providing suggestions for who I
Dialogue: 0,0:20:24.39,0:20:25.45,Default,,0,0,0,,might to send the email to.
Dialogue: 0,0:20:25.79,0:20:27.72,Default,,0,0,0,,I also have this send button on
Dialogue: 0,0:20:27.72,0:20:29.02,Default,,0,0,0,,the left side of the application
Dialogue: 0,0:20:29.02,0:20:29.90,Default,,0,0,0,,section of the Touch Bar.
Dialogue: 0,0:20:30.77,0:20:32.03,Default,,0,0,0,,If I were to change my keyboard
Dialogue: 0,0:20:32.03,0:20:34.89,Default,,0,0,0,,focus instead to the composition
Dialogue: 0,0:20:34.89,0:20:36.42,Default,,0,0,0,,view in the window, I have a
Dialogue: 0,0:20:36.42,0:20:37.35,Default,,0,0,0,,bunch of text formatting
Dialogue: 0,0:20:37.35,0:20:38.45,Default,,0,0,0,,controls and an emoji picker.
Dialogue: 0,0:20:38.49,0:20:39.58,Default,,0,0,0,,But I still have that send
Dialogue: 0,0:20:39.58,0:20:39.86,Default,,0,0,0,,button.
Dialogue: 0,0:20:40.60,0:20:42.25,Default,,0,0,0,,And the way this breaks down is
Dialogue: 0,0:20:42.25,0:20:44.73,Default,,0,0,0,,that mail's composed window
Dialogue: 0,0:20:44.73,0:20:46.81,Default,,0,0,0,,controller has a Touch Bar with
Dialogue: 0,0:20:46.81,0:20:47.78,Default,,0,0,0,,a send button and an
Dialogue: 0,0:20:47.78,0:20:48.80,Default,,0,0,0,,otherItemsProxy.
Dialogue: 0,0:20:50.04,0:20:51.57,Default,,0,0,0,,And the recipient's field is
Dialogue: 0,0:20:51.63,0:20:52.70,Default,,0,0,0,,providing the candidates.
Dialogue: 0,0:20:52.70,0:20:53.94,Default,,0,0,0,,And the recipient's field is
Dialogue: 0,0:20:53.94,0:20:54.82,Default,,0,0,0,,very close to the first
Dialogue: 0,0:20:54.82,0:20:55.92,Default,,0,0,0,,responder, so it's going to get
Dialogue: 0,0:20:55.92,0:20:57.42,Default,,0,0,0,,first shot at that.
Dialogue: 0,0:20:57.77,0:20:58.78,Default,,0,0,0,,But the window controller
Dialogue: 0,0:20:58.78,0:21:00.51,Default,,0,0,0,,including the otherItemsProxy
Dialogue: 0,0:21:00.82,0:21:01.93,Default,,0,0,0,,means we can merge those two
Dialogue: 0,0:21:01.93,0:21:03.61,Default,,0,0,0,,Touch Bars.
Dialogue: 0,0:21:03.73,0:21:05.15,Default,,0,0,0,,Likewise, for the composition
Dialogue: 0,0:21:05.15,0:21:06.96,Default,,0,0,0,,view, the window controller is
Dialogue: 0,0:21:06.96,0:21:08.45,Default,,0,0,0,,exactly the same instance, it's
Dialogue: 0,0:21:09.08,0:21:11.28,Default,,0,0,0,,just the responder chain
Dialogue: 0,0:21:11.28,0:21:12.44,Default,,0,0,0,,anchored at the first responder
Dialogue: 0,0:21:12.71,0:21:15.03,Default,,0,0,0,,includes the composition view
Dialogue: 0,0:21:15.32,0:21:16.39,Default,,0,0,0,,before the window controller.
Dialogue: 0,0:21:17.18,0:21:18.56,Default,,0,0,0,,Something else to mention is
Dialogue: 0,0:21:18.63,0:21:19.49,Default,,0,0,0,,that this is completely
Dialogue: 0,0:21:19.49,0:21:20.94,Default,,0,0,0,,compatible with customization.
Dialogue: 0,0:21:20.99,0:21:22.64,Default,,0,0,0,,We use the otherItemsProxy to
Dialogue: 0,0:21:22.76,0:21:24.11,Default,,0,0,0,,build the default set of items,
Dialogue: 0,0:21:24.48,0:21:25.35,Default,,0,0,0,,like you'd expect.
Dialogue: 0,0:21:25.68,0:21:26.79,Default,,0,0,0,,And we go ahead and union the
Dialogue: 0,0:21:26.79,0:21:28.07,Default,,0,0,0,,allowed items from the eligible
Dialogue: 0,0:21:28.07,0:21:28.65,Default,,0,0,0,,touch bars.
Dialogue: 0,0:21:28.95,0:21:30.34,Default,,0,0,0,,So, we can see we can customize
Dialogue: 0,0:21:30.34,0:21:31.44,Default,,0,0,0,,the send button in mail, even
Dialogue: 0,0:21:31.44,0:21:32.30,Default,,0,0,0,,though it's provided by a
Dialogue: 0,0:21:32.30,0:21:34.18,Default,,0,0,0,,different responder than the
Dialogue: 0,0:21:34.18,0:21:35.10,Default,,0,0,0,,formatting controls.
Dialogue: 0,0:21:36.97,0:21:39.41,Default,,0,0,0,,You might think, hey the
Dialogue: 0,0:21:39.41,0:21:40.64,Default,,0,0,0,,otherItemsProxy sounds pretty
Dialogue: 0,0:21:40.64,0:21:41.93,Default,,0,0,0,,great for the reliable
Dialogue: 0,0:21:41.93,0:21:42.93,Default,,0,0,0,,functioning of my Touch Bar
Dialogue: 0,0:21:42.93,0:21:44.04,Default,,0,0,0,,stuff, and you'd be right, but
Dialogue: 0,0:21:44.04,0:21:45.22,Default,,0,0,0,,there's a few cases where you do
Dialogue: 0,0:21:45.22,0:21:46.15,Default,,0,0,0,,want to omit it.
Dialogue: 0,0:21:46.53,0:21:48.35,Default,,0,0,0,,And if we go back to mail, but
Dialogue: 0,0:21:48.35,0:21:49.80,Default,,0,0,0,,close all the windows, we're
Dialogue: 0,0:21:49.80,0:21:50.85,Default,,0,0,0,,going to see that we have a new
Dialogue: 0,0:21:50.85,0:21:52.01,Default,,0,0,0,,viewer window button in the
Dialogue: 0,0:21:52.01,0:21:52.48,Default,,0,0,0,,Touch Bar.
Dialogue: 0,0:21:53.08,0:21:54.34,Default,,0,0,0,,And that's provided by the
Dialogue: 0,0:21:54.34,0:21:56.01,Default,,0,0,0,,application, but it omits the
Dialogue: 0,0:21:56.01,0:21:56.90,Default,,0,0,0,,otherItemsProxy.
Dialogue: 0,0:21:57.30,0:21:59.22,Default,,0,0,0,,When we go ahead and bring a
Dialogue: 0,0:21:59.22,0:22:00.53,Default,,0,0,0,,window up that has Touch Bar
Dialogue: 0,0:22:00.53,0:22:02.05,Default,,0,0,0,,content it's going to be closer
Dialogue: 0,0:22:02.05,0:22:03.34,Default,,0,0,0,,to the first responder, and the
Dialogue: 0,0:22:03.34,0:22:05.34,Default,,0,0,0,,lack of the otherItemsProxy in
Dialogue: 0,0:22:05.34,0:22:06.85,Default,,0,0,0,,the farther out Touch Bar means
Dialogue: 0,0:22:06.85,0:22:08.00,Default,,0,0,0,,it gets replaced entirely.
Dialogue: 0,0:22:09.45,0:22:10.78,Default,,0,0,0,,So, there's another sort of
Dialogue: 0,0:22:10.78,0:22:11.95,Default,,0,0,0,,special item identifier I want
Dialogue: 0,0:22:11.95,0:22:13.18,Default,,0,0,0,,to cover and those are spaces.
Dialogue: 0,0:22:13.61,0:22:15.24,Default,,0,0,0,,So, if you see here, we've made
Dialogue: 0,0:22:15.24,0:22:16.53,Default,,0,0,0,,a mockup Touch Bar and we have a
Dialogue: 0,0:22:16.53,0:22:17.96,Default,,0,0,0,,shark item and an angelfish.
Dialogue: 0,0:22:18.46,0:22:20.55,Default,,0,0,0,,And the angel fish probably
Dialogue: 0,0:22:20.55,0:22:21.55,Default,,0,0,0,,isn't that comfortable being so
Dialogue: 0,0:22:21.55,0:22:22.46,Default,,0,0,0,,close to the shark.
Dialogue: 0,0:22:22.46,0:22:24.02,Default,,0,0,0,,Thankfully, the shark is facing
Dialogue: 0,0:22:24.02,0:22:25.05,Default,,0,0,0,,the wrong way so the fish
Dialogue: 0,0:22:25.05,0:22:26.36,Default,,0,0,0,,probably isn't on the menu yet.
Dialogue: 0,0:22:26.97,0:22:28.45,Default,,0,0,0,,But we can go ahead and give the
Dialogue: 0,0:22:28.45,0:22:29.37,Default,,0,0,0,,angelfish some breathing room.
Dialogue: 0,0:22:29.37,0:22:30.72,Default,,0,0,0,,And we can do that by adding a
Dialogue: 0,0:22:30.72,0:22:32.01,Default,,0,0,0,,fixed space small item
Dialogue: 0,0:22:32.01,0:22:33.67,Default,,0,0,0,,identifier in the default item
Dialogue: 0,0:22:33.67,0:22:35.17,Default,,0,0,0,,identifiers array in between the
Dialogue: 0,0:22:35.17,0:22:36.25,Default,,0,0,0,,shark and angelfish item
Dialogue: 0,0:22:36.25,0:22:36.87,Default,,0,0,0,,identifiers.
Dialogue: 0,0:22:37.30,0:22:38.65,Default,,0,0,0,,And we don't have to settle for
Dialogue: 0,0:22:38.65,0:22:40.24,Default,,0,0,0,,small, we can also use a large
Dialogue: 0,0:22:40.24,0:22:41.07,Default,,0,0,0,,one and give it a little bit
Dialogue: 0,0:22:41.07,0:22:42.13,Default,,0,0,0,,more space.
Dialogue: 0,0:22:42.21,0:22:43.79,Default,,0,0,0,,And it's useful to use these
Dialogue: 0,0:22:43.79,0:22:45.00,Default,,0,0,0,,instead of hard coding your own
Dialogue: 0,0:22:45.00,0:22:46.21,Default,,0,0,0,,space, because these are our
Dialogue: 0,0:22:46.21,0:22:47.63,Default,,0,0,0,,system defined values that may
Dialogue: 0,0:22:47.63,0:22:48.51,Default,,0,0,0,,change from release to release,
Dialogue: 0,0:22:48.51,0:22:50.51,Default,,0,0,0,,but they also give your app an
Dialogue: 0,0:22:50.51,0:22:51.84,Default,,0,0,0,,appearance similar to other apps
Dialogue: 0,0:22:51.84,0:22:52.36,Default,,0,0,0,,on the system.
Dialogue: 0,0:22:52.99,0:22:54.41,Default,,0,0,0,,We don't have to stop with fixed
Dialogue: 0,0:22:54.41,0:22:55.36,Default,,0,0,0,,spaces though, we also have a
Dialogue: 0,0:22:55.36,0:22:57.10,Default,,0,0,0,,flexible space identifier.
Dialogue: 0,0:22:57.25,0:22:58.29,Default,,0,0,0,,And the flexible space is
Dialogue: 0,0:22:58.29,0:22:59.26,Default,,0,0,0,,interesting in that it's going
Dialogue: 0,0:22:59.26,0:23:00.79,Default,,0,0,0,,to push the adjacent items as
Dialogue: 0,0:23:00.79,0:23:02.33,Default,,0,0,0,,far away from each other as they
Dialogue: 0,0:23:02.33,0:23:03.96,Default,,0,0,0,,can get.
Dialogue: 0,0:23:03.96,0:23:05.68,Default,,0,0,0,,So, in this case, the angelfish
Dialogue: 0,0:23:05.68,0:23:06.92,Default,,0,0,0,,probably feels a lot better with
Dialogue: 0,0:23:06.92,0:23:08.02,Default,,0,0,0,,that flexible space between it
Dialogue: 0,0:23:08.02,0:23:08.53,Default,,0,0,0,,and the shark.
Dialogue: 0,0:23:09.25,0:23:11.01,Default,,0,0,0,,You might be thinking you could
Dialogue: 0,0:23:11.01,0:23:12.66,Default,,0,0,0,,put flexible space on two side
Dialogue: 0,0:23:12.66,0:23:13.61,Default,,0,0,0,,of an item to center it.
Dialogue: 0,0:23:13.91,0:23:15.29,Default,,0,0,0,,And that's a very reasonable
Dialogue: 0,0:23:15.29,0:23:15.61,Default,,0,0,0,,thought.
Dialogue: 0,0:23:16.13,0:23:17.21,Default,,0,0,0,,If you do that, you're going,
Dialogue: 0,0:23:17.38,0:23:18.45,Default,,0,0,0,,actually, let's say we do that
Dialogue: 0,0:23:18.45,0:23:19.48,Default,,0,0,0,,with our purple circle.
Dialogue: 0,0:23:19.62,0:23:21.50,Default,,0,0,0,,We put flexible space on the
Dialogue: 0,0:23:21.50,0:23:22.40,Default,,0,0,0,,left and right sides of it.
Dialogue: 0,0:23:22.77,0:23:23.89,Default,,0,0,0,,The circle is centered within
Dialogue: 0,0:23:23.89,0:23:24.99,Default,,0,0,0,,the application section of the
Dialogue: 0,0:23:24.99,0:23:26.28,Default,,0,0,0,,Touch Bar, which might be what
Dialogue: 0,0:23:26.28,0:23:26.97,Default,,0,0,0,,you're going for.
Dialogue: 0,0:23:27.29,0:23:28.42,Default,,0,0,0,,But you might also want to be
Dialogue: 0,0:23:28.42,0:23:29.63,Default,,0,0,0,,centering that item on the
Dialogue: 0,0:23:29.63,0:23:31.29,Default,,0,0,0,,actual device, and it's not
Dialogue: 0,0:23:31.29,0:23:31.65,Default,,0,0,0,,there.
Dialogue: 0,0:23:31.65,0:23:34.57,Default,,0,0,0,,We're a little bit to the left.
Dialogue: 0,0:23:34.57,0:23:36.14,Default,,0,0,0,,So, we can fix that by using and
Dialogue: 0,0:23:36.14,0:23:37.56,Default,,0,0,0,,NSTouchBar property called the
Dialogue: 0,0:23:37.56,0:23:38.73,Default,,0,0,0,,principal item identifier.
Dialogue: 0,0:23:39.69,0:23:41.38,Default,,0,0,0,,And we can go ahead and set a
Dialogue: 0,0:23:41.38,0:23:41.82,Default,,0,0,0,,Touch Bar's
Dialogue: 0,0:23:41.82,0:23:43.12,Default,,0,0,0,,principalItemIdentifier to the
Dialogue: 0,0:23:43.12,0:23:44.68,Default,,0,0,0,,identifier of any visible item,
Dialogue: 0,0:23:45.08,0:23:47.11,Default,,0,0,0,,and it's going to go ahead and
Dialogue: 0,0:23:47.11,0:23:48.66,Default,,0,0,0,,actually place that item in the
Dialogue: 0,0:23:48.66,0:23:49.66,Default,,0,0,0,,center of the device.
Dialogue: 0,0:23:50.19,0:23:51.90,Default,,0,0,0,,So, if we go ahead and look at
Dialogue: 0,0:23:51.90,0:23:53.46,Default,,0,0,0,,this example, all the code in
Dialogue: 0,0:23:53.46,0:23:54.18,Default,,0,0,0,,here is stuff we see in our
Dialogue: 0,0:23:54.18,0:23:55.99,Default,,0,0,0,,previous slides except this last
Dialogue: 0,0:23:55.99,0:23:56.69,Default,,0,0,0,,line where we set the
Dialogue: 0,0:23:56.69,0:23:57.78,Default,,0,0,0,,principalItemIdentifier.
Dialogue: 0,0:23:58.19,0:23:59.31,Default,,0,0,0,,And by setting to the shark
Dialogue: 0,0:23:59.31,0:24:01.02,Default,,0,0,0,,identifier, we go ahead and move
Dialogue: 0,0:24:01.02,0:24:02.30,Default,,0,0,0,,and the shark to the middle of
Dialogue: 0,0:24:02.30,0:24:03.97,Default,,0,0,0,,the Touch Bar and lay out the
Dialogue: 0,0:24:03.97,0:24:05.26,Default,,0,0,0,,items left to right like we did
Dialogue: 0,0:24:05.26,0:24:05.95,Default,,0,0,0,,in other cases.
Dialogue: 0,0:24:06.51,0:24:07.46,Default,,0,0,0,,If we were to use the turtle
Dialogue: 0,0:24:07.46,0:24:09.36,Default,,0,0,0,,instead, the shark winds up on
Dialogue: 0,0:24:09.36,0:24:10.30,Default,,0,0,0,,the left side like it would
Dialogue: 0,0:24:10.30,0:24:11.38,Default,,0,0,0,,normally, and the turtle is
Dialogue: 0,0:24:11.38,0:24:12.27,Default,,0,0,0,,centered on the device.
Dialogue: 0,0:24:13.08,0:24:14.36,Default,,0,0,0,,And this plays really well with
Dialogue: 0,0:24:14.36,0:24:16.06,Default,,0,0,0,,flexible spaces and other
Dialogue: 0,0:24:16.06,0:24:16.35,Default,,0,0,0,,things.
Dialogue: 0,0:24:16.35,0:24:17.25,Default,,0,0,0,,Son you can make some nuance
Dialogue: 0,0:24:17.25,0:24:17.80,Default,,0,0,0,,device with that.
Dialogue: 0,0:24:17.98,0:24:19.08,Default,,0,0,0,,And there's additionally types
Dialogue: 0,0:24:19.24,0:24:20.80,Default,,0,0,0,,of NSTouchBar items subclasses
Dialogue: 0,0:24:21.14,0:24:22.66,Default,,0,0,0,,that modify the behavior of the
Dialogue: 0,0:24:22.66,0:24:23.82,Default,,0,0,0,,principalItemIdentifier.
Dialogue: 0,0:24:24.16,0:24:25.58,Default,,0,0,0,,And John is going to go ahead
Dialogue: 0,0:24:25.90,0:24:27.85,Default,,0,0,0,,and cover those as we take a
Dialogue: 0,0:24:27.85,0:24:29.63,Default,,0,0,0,,deep dive into NSTouchBar item.
Dialogue: 0,0:24:30.40,0:24:31.34,Default,,0,0,0,,Welcome John Tegtmeyer.
Dialogue: 0,0:24:32.52,0:24:35.86,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:24:36.36,0:24:38.19,Default,,0,0,0,,So, Chris gave us an overview
Dialogue: 0,0:24:38.19,0:24:39.87,Default,,0,0,0,,over the NSTouchBar API and how
Dialogue: 0,0:24:39.87,0:24:41.73,Default,,0,0,0,,it's tied to the responder chain
Dialogue: 0,0:24:41.73,0:24:43.19,Default,,0,0,0,,allowing us to provide context
Dialogue: 0,0:24:43.19,0:24:44.81,Default,,0,0,0,,sensitive controls to our users.
Dialogue: 0,0:24:45.32,0:24:46.55,Default,,0,0,0,,He also eluded to this
Dialogue: 0,0:24:46.59,0:24:48.20,Default,,0,0,0,,NSTouchBar item object, which is
Dialogue: 0,0:24:48.20,0:24:50.03,Default,,0,0,0,,the wrap around all the views in
Dialogue: 0,0:24:50.03,0:24:50.63,Default,,0,0,0,,the Touch Bar.
Dialogue: 0,0:24:51.35,0:24:52.49,Default,,0,0,0,,Now, AppKit provides a lot of
Dialogue: 0,0:24:52.49,0:24:54.10,Default,,0,0,0,,subclasses of this item, and
Dialogue: 0,0:24:54.10,0:24:54.96,Default,,0,0,0,,they all offer some really
Dialogue: 0,0:24:54.96,0:24:56.54,Default,,0,0,0,,unique, very cool functionality.
Dialogue: 0,0:24:56.80,0:24:57.78,Default,,0,0,0,,So, I'm here to give us a deep
Dialogue: 0,0:24:57.78,0:24:58.99,Default,,0,0,0,,dive into those items.
Dialogue: 0,0:24:59.69,0:25:02.00,Default,,0,0,0,,NSTouchBar item is a base class
Dialogue: 0,0:25:02.00,0:25:02.95,Default,,0,0,0,,of everything that we'll talk
Dialogue: 0,0:25:02.95,0:25:03.43,Default,,0,0,0,,about today.
Dialogue: 0,0:25:03.83,0:25:04.98,Default,,0,0,0,,That means the properties on
Dialogue: 0,0:25:04.98,0:25:06.00,Default,,0,0,0,,this will be inherited by the
Dialogue: 0,0:25:06.00,0:25:06.74,Default,,0,0,0,,subclass.
Dialogue: 0,0:25:07.26,0:25:08.27,Default,,0,0,0,,The first thing that all Touch
Dialogue: 0,0:25:08.27,0:25:09.60,Default,,0,0,0,,Bar items have is a unique
Dialogue: 0,0:25:09.60,0:25:10.35,Default,,0,0,0,,identifier.
Dialogue: 0,0:25:11.12,0:25:13.81,Default,,0,0,0,,This is what NSTouchBar will use
Dialogue: 0,0:25:13.81,0:25:14.70,Default,,0,0,0,,when looking up your item
Dialogue: 0,0:25:14.70,0:25:15.96,Default,,0,0,0,,through the template items
Dialogue: 0,0:25:15.96,0:25:17.90,Default,,0,0,0,,array, or through the delegate.
Dialogue: 0,0:25:18.67,0:25:20.22,Default,,0,0,0,,Items also have a view or a view
Dialogue: 0,0:25:20.22,0:25:20.72,Default,,0,0,0,,controller.
Dialogue: 0,0:25:21.00,0:25:21.74,Default,,0,0,0,,This is what's actually
Dialogue: 0,0:25:21.74,0:25:23.06,Default,,0,0,0,,presented to your users.
Dialogue: 0,0:25:23.32,0:25:24.25,Default,,0,0,0,,And if you're using the view
Dialogue: 0,0:25:24.25,0:25:25.24,Default,,0,0,0,,controller, this is a good
Dialogue: 0,0:25:25.24,0:25:27.34,Default,,0,0,0,,opportunity to lazily load your
Dialogue: 0,0:25:27.34,0:25:27.84,Default,,0,0,0,,views.
Dialogue: 0,0:25:28.74,0:25:30.07,Default,,0,0,0,,We also have a customization
Dialogue: 0,0:25:30.07,0:25:30.44,Default,,0,0,0,,label.
Dialogue: 0,0:25:30.44,0:25:31.74,Default,,0,0,0,,And this is the string that's
Dialogue: 0,0:25:31.74,0:25:33.15,Default,,0,0,0,,presented in the customization
Dialogue: 0,0:25:33.15,0:25:33.63,Default,,0,0,0,,UI.
Dialogue: 0,0:25:33.92,0:25:35.16,Default,,0,0,0,,And describes what your control
Dialogue: 0,0:25:35.16,0:25:35.93,Default,,0,0,0,,actually does.
Dialogue: 0,0:25:36.80,0:25:38.40,Default,,0,0,0,,I hope you notice one thing that
Dialogue: 0,0:25:38.40,0:25:39.47,Default,,0,0,0,,we don't have here is an
Dialogue: 0,0:25:39.47,0:25:41.25,Default,,0,0,0,,explicit minimum or maximum size
Dialogue: 0,0:25:41.28,0:25:41.74,Default,,0,0,0,,property.
Dialogue: 0,0:25:42.28,0:25:43.76,Default,,0,0,0,,That's because, unlike tool bar
Dialogue: 0,0:25:43.76,0:25:46.02,Default,,0,0,0,,item, which does have these
Dialogue: 0,0:25:46.02,0:25:47.93,Default,,0,0,0,,explicit properties Touch Bar
Dialogue: 0,0:25:47.93,0:25:49.34,Default,,0,0,0,,items are actually measured
Dialogue: 0,0:25:49.34,0:25:50.37,Default,,0,0,0,,using constraints.
Dialogue: 0,0:25:50.78,0:25:51.96,Default,,0,0,0,,That means if you're using
Dialogue: 0,0:25:51.96,0:25:53.67,Default,,0,0,0,,something like an NS button
Dialogue: 0,0:25:53.67,0:25:54.96,Default,,0,0,0,,which has an intrinsic content
Dialogue: 0,0:25:54.96,0:25:56.53,Default,,0,0,0,,size, it will automatically be
Dialogue: 0,0:25:56.53,0:25:58.17,Default,,0,0,0,,sized to fit its title and its
Dialogue: 0,0:25:58.17,0:25:58.63,Default,,0,0,0,,image.
Dialogue: 0,0:25:59.20,0:26:00.36,Default,,0,0,0,,You can also choose to use
Dialogue: 0,0:26:00.36,0:26:01.80,Default,,0,0,0,,inequality constraints to set up
Dialogue: 0,0:26:01.85,0:26:03.46,Default,,0,0,0,,minimum and maximum sizes.
Dialogue: 0,0:26:03.84,0:26:05.00,Default,,0,0,0,,And AppKit will automatically
Dialogue: 0,0:26:05.00,0:26:06.73,Default,,0,0,0,,size you view based on how much
Dialogue: 0,0:26:06.73,0:26:08.00,Default,,0,0,0,,space is available in the
Dialogue: 0,0:26:08.00,0:26:09.03,Default,,0,0,0,,application section.
Dialogue: 0,0:26:09.29,0:26:10.60,Default,,0,0,0,,And you can find out more about
Dialogue: 0,0:26:10.60,0:26:11.99,Default,,0,0,0,,how items are sized at the
Dialogue: 0,0:26:11.99,0:26:13.64,Default,,0,0,0,,"Advanced Touch Bar Talk" later
Dialogue: 0,0:26:15.26,0:26:15.39,Default,,0,0,0,,today.
Dialogue: 0,0:26:15.58,0:26:17.50,Default,,0,0,0,,Now, as I mentioned, AppKit
Dialogue: 0,0:26:17.61,0:26:20.16,Default,,0,0,0,,provides lots of subclasses of
Dialogue: 0,0:26:20.16,0:26:20.65,Default,,0,0,0,,this item.
Dialogue: 0,0:26:21.28,0:26:22.30,Default,,0,0,0,,And we'll talk about each of
Dialogue: 0,0:26:22.30,0:26:22.58,Default,,0,0,0,,these.
Dialogue: 0,0:26:22.58,0:26:23.49,Default,,0,0,0,,We'll talk about the custom
Dialogue: 0,0:26:23.49,0:26:25.33,Default,,0,0,0,,Touch Bar item, pop overs,
Dialogue: 0,0:26:25.33,0:26:27.44,Default,,0,0,0,,sliders, group item, as well as
Dialogue: 0,0:26:27.44,0:26:28.74,Default,,0,0,0,,a few bonus topics at the end.
Dialogue: 0,0:26:28.98,0:26:30.31,Default,,0,0,0,,So, let's get started with the
Dialogue: 0,0:26:30.31,0:26:31.31,Default,,0,0,0,,custom Touch Bar item.
Dialogue: 0,0:26:31.89,0:26:34.26,Default,,0,0,0,,Now, the custom item offers
Dialogue: 0,0:26:34.32,0:26:35.67,Default,,0,0,0,,rewrite properties on everything
Dialogue: 0,0:26:35.67,0:26:36.57,Default,,0,0,0,,that we just talked about on the
Dialogue: 0,0:26:36.57,0:26:37.24,Default,,0,0,0,,base class.
Dialogue: 0,0:26:37.35,0:26:38.53,Default,,0,0,0,,That means you can simply set
Dialogue: 0,0:26:38.53,0:26:39.82,Default,,0,0,0,,the view of the view controller
Dialogue: 0,0:26:39.82,0:26:40.92,Default,,0,0,0,,rather than subclassing your
Dialogue: 0,0:26:40.92,0:26:41.29,Default,,0,0,0,,item.
Dialogue: 0,0:26:41.89,0:26:43.07,Default,,0,0,0,,This is likely the item that
Dialogue: 0,0:26:43.07,0:26:44.20,Default,,0,0,0,,you'll use if you want to show
Dialogue: 0,0:26:44.20,0:26:45.36,Default,,0,0,0,,something like a button or a
Dialogue: 0,0:26:45.36,0:26:46.38,Default,,0,0,0,,segmented control.
Dialogue: 0,0:26:47.10,0:26:48.43,Default,,0,0,0,,Anything that you're familiar
Dialogue: 0,0:26:48.43,0:26:49.88,Default,,0,0,0,,with through AppKit, or custom
Dialogue: 0,0:26:49.88,0:26:50.74,Default,,0,0,0,,container views.
Dialogue: 0,0:26:52.30,0:26:53.57,Default,,0,0,0,,Now, this is also a really great
Dialogue: 0,0:26:53.57,0:26:54.72,Default,,0,0,0,,opportunity to use some of the
Dialogue: 0,0:26:54.72,0:26:56.02,Default,,0,0,0,,convenience constructors that we
Dialogue: 0,0:26:56.02,0:26:57.13,Default,,0,0,0,,introduced in 10.12.
Dialogue: 0,0:26:57.60,0:26:58.23,Default,,0,0,0,,Let's take a look.
Dialogue: 0,0:26:59.21,0:27:00.56,Default,,0,0,0,,In this example, we're going to
Dialogue: 0,0:27:00.56,0:27:01.70,Default,,0,0,0,,create a simple button for Touch
Dialogue: 0,0:27:01.70,0:27:01.92,Default,,0,0,0,,Bar.
Dialogue: 0,0:27:02.36,0:27:04.38,Default,,0,0,0,,We're doing that by creating a
Dialogue: 0,0:27:04.38,0:27:05.51,Default,,0,0,0,,custom Touch Bar item and
Dialogue: 0,0:27:05.51,0:27:07.03,Default,,0,0,0,,providing a unique identifier.
Dialogue: 0,0:27:07.03,0:27:08.49,Default,,0,0,0,,And then we're going to set the
Dialogue: 0,0:27:08.49,0:27:10.17,Default,,0,0,0,,items view to be an NS button
Dialogue: 0,0:27:10.17,0:27:11.64,Default,,0,0,0,,using the title target action
Dialogue: 0,0:27:11.64,0:27:13.01,Default,,0,0,0,,constructor that we saw earlier.
Dialogue: 0,0:27:13.70,0:27:15.16,Default,,0,0,0,,And as Chris mentioned, this
Dialogue: 0,0:27:15.16,0:27:16.62,Default,,0,0,0,,will assign the correct font and
Dialogue: 0,0:27:16.62,0:27:17.61,Default,,0,0,0,,the correct appearance to this
Dialogue: 0,0:27:17.61,0:27:17.89,Default,,0,0,0,,button.
Dialogue: 0,0:27:17.89,0:27:18.97,Default,,0,0,0,,So, we have a great looking
Dialogue: 0,0:27:18.97,0:27:20.26,Default,,0,0,0,,button that's ready for Touch
Dialogue: 0,0:27:20.26,0:27:21.74,Default,,0,0,0,,Bar in two simple lines of code.
Dialogue: 0,0:27:22.66,0:27:23.85,Default,,0,0,0,,This is also true for a more
Dialogue: 0,0:27:23.85,0:27:24.94,Default,,0,0,0,,complicated control.
Dialogue: 0,0:27:25.34,0:27:26.83,Default,,0,0,0,,In this case, this is a
Dialogue: 0,0:27:26.83,0:27:27.81,Default,,0,0,0,,segmented control.
Dialogue: 0,0:27:28.10,0:27:29.36,Default,,0,0,0,,Segmented control also has a
Dialogue: 0,0:27:29.36,0:27:30.42,Default,,0,0,0,,convenience constructor.
Dialogue: 0,0:27:30.77,0:27:32.31,Default,,0,0,0,,And so, again with two lines of
Dialogue: 0,0:27:32.31,0:27:34.38,Default,,0,0,0,,code, my spacing for clarity, we
Dialogue: 0,0:27:34.38,0:27:35.42,Default,,0,0,0,,have a great looking control
Dialogue: 0,0:27:35.42,0:27:36.78,Default,,0,0,0,,that's ready for Touch Bar with
Dialogue: 0,0:27:36.78,0:27:39.66,Default,,0,0,0,,the right appearance and the
Dialogue: 0,0:27:39.66,0:27:39.92,Default,,0,0,0,,right font.
Dialogue: 0,0:27:40.06,0:27:41.64,Default,,0,0,0,,Next, let's talk about popovers.
Dialogue: 0,0:27:42.39,0:27:43.60,Default,,0,0,0,,Popover item is really cool
Dialogue: 0,0:27:43.60,0:27:44.76,Default,,0,0,0,,because it allows you to provide
Dialogue: 0,0:27:44.81,0:27:46.78,Default,,0,0,0,,extra content to your user, but
Dialogue: 0,0:27:46.78,0:27:49.17,Default,,0,0,0,,only when the user requests it.
Dialogue: 0,0:27:49.61,0:27:50.92,Default,,0,0,0,,Popovers have two parts.
Dialogue: 0,0:27:51.50,0:27:52.40,Default,,0,0,0,,The first is the class
Dialogue: 0,0:27:52.40,0:27:53.49,Default,,0,0,0,,representation, which is the
Dialogue: 0,0:27:53.49,0:27:55.07,Default,,0,0,0,,view presented to your user when
Dialogue: 0,0:27:55.07,0:27:56.23,Default,,0,0,0,,the popovers close.
Dialogue: 0,0:27:56.81,0:27:57.88,Default,,0,0,0,,And the second piece is the
Dialogue: 0,0:27:57.88,0:27:59.27,Default,,0,0,0,,popover's NSTouchBar, which
Dialogue: 0,0:27:59.27,0:28:00.17,Default,,0,0,0,,actually takes over the
Dialogue: 0,0:28:00.17,0:28:01.32,Default,,0,0,0,,application section when the
Dialogue: 0,0:28:01.32,0:28:02.28,Default,,0,0,0,,popover is open.
Dialogue: 0,0:28:02.28,0:28:03.65,Default,,0,0,0,,And this lets you use things
Dialogue: 0,0:28:03.65,0:28:03.86,Default,,0,0,0,,like the
Dialogue: 0,0:28:03.86,0:28:05.92,Default,,0,0,0,,principalItemIdentifier, or even
Dialogue: 0,0:28:05.92,0:28:07.08,Default,,0,0,0,,enabling customization.
Dialogue: 0,0:28:08.39,0:28:09.58,Default,,0,0,0,,Let's talk more about the class
Dialogue: 0,0:28:09.58,0:28:10.37,Default,,0,0,0,,representation.
Dialogue: 0,0:28:11.83,0:28:13.06,Default,,0,0,0,,AppKit will provide a default on
Dialogue: 0,0:28:13.06,0:28:14.82,Default,,0,0,0,,for you and you can customize
Dialogue: 0,0:28:14.82,0:28:15.95,Default,,0,0,0,,the way it looks by using the
Dialogue: 0,0:28:15.95,0:28:17.83,Default,,0,0,0,,class representation image, or
Dialogue: 0,0:28:17.83,0:28:18.81,Default,,0,0,0,,label properties.
Dialogue: 0,0:28:19.12,0:28:20.18,Default,,0,0,0,,And you can see an example of
Dialogue: 0,0:28:20.18,0:28:21.60,Default,,0,0,0,,this in the list in alignment
Dialogue: 0,0:28:21.60,0:28:22.77,Default,,0,0,0,,popovers and the formatting
Dialogue: 0,0:28:22.77,0:28:23.33,Default,,0,0,0,,controls.
Dialogue: 0,0:28:23.98,0:28:25.69,Default,,0,0,0,,You can also choose to use
Dialogue: 0,0:28:25.69,0:28:26.83,Default,,0,0,0,,something more custom.
Dialogue: 0,0:28:27.21,0:28:28.90,Default,,0,0,0,,Mail chooses to use a segmented
Dialogue: 0,0:28:28.90,0:28:29.41,Default,,0,0,0,,control.
Dialogue: 0,0:28:29.41,0:28:30.83,Default,,0,0,0,,And if you tap the main portion
Dialogue: 0,0:28:30.83,0:28:31.66,Default,,0,0,0,,of this control, it will
Dialogue: 0,0:28:31.66,0:28:33.52,Default,,0,0,0,,immediately move a message to
Dialogue: 0,0:28:33.61,0:28:35.70,Default,,0,0,0,,the suggest mailbox.
Dialogue: 0,0:28:36.45,0:28:37.55,Default,,0,0,0,,But if you tap the arrow, it
Dialogue: 0,0:28:37.55,0:28:38.56,Default,,0,0,0,,will show a popover with
Dialogue: 0,0:28:38.56,0:28:39.72,Default,,0,0,0,,additional suggestions.
Dialogue: 0,0:28:40.34,0:28:41.57,Default,,0,0,0,,This is actually really easy to
Dialogue: 0,0:28:41.57,0:28:43.76,Default,,0,0,0,,achieve by providing your own
Dialogue: 0,0:28:43.76,0:28:44.85,Default,,0,0,0,,view for the class
Dialogue: 0,0:28:44.85,0:28:46.54,Default,,0,0,0,,representation and then using
Dialogue: 0,0:28:46.54,0:28:47.75,Default,,0,0,0,,the show popover and dismiss
Dialogue: 0,0:28:47.75,0:28:48.86,Default,,0,0,0,,popover methods.
Dialogue: 0,0:28:50.07,0:28:51.45,Default,,0,0,0,,Popovers also have two
Dialogue: 0,0:28:51.45,0:28:52.41,Default,,0,0,0,,interaction models.
Dialogue: 0,0:28:52.75,0:28:53.83,Default,,0,0,0,,First is touch and show.
Dialogue: 0,0:28:54.64,0:28:55.90,Default,,0,0,0,,This happens when the user taps
Dialogue: 0,0:28:55.94,0:28:58.18,Default,,0,0,0,,the class representation.
Dialogue: 0,0:28:58.48,0:29:00.78,Default,,0,0,0,,The popover's opened and it's
Dialogue: 0,0:29:00.78,0:29:02.46,Default,,0,0,0,,sticky allowing you to make
Dialogue: 0,0:29:02.77,0:29:04.14,Default,,0,0,0,,multiple selections.
Dialogue: 0,0:29:04.77,0:29:05.96,Default,,0,0,0,,It's only closed when the user
Dialogue: 0,0:29:05.96,0:29:06.95,Default,,0,0,0,,taps the closed button.
Dialogue: 0,0:29:07.78,0:29:09.00,Default,,0,0,0,,The second interaction model is
Dialogue: 0,0:29:09.00,0:29:09.71,Default,,0,0,0,,press and hold.
Dialogue: 0,0:29:10.05,0:29:11.13,Default,,0,0,0,,And this happens when the user
Dialogue: 0,0:29:11.13,0:29:12.36,Default,,0,0,0,,presses and holds on the class
Dialogue: 0,0:29:12.36,0:29:13.14,Default,,0,0,0,,representation.
Dialogue: 0,0:29:13.44,0:29:14.83,Default,,0,0,0,,The popover's open directly by
Dialogue: 0,0:29:14.83,0:29:16.25,Default,,0,0,0,,the user's finger when possible
Dialogue: 0,0:29:16.54,0:29:17.74,Default,,0,0,0,,and immediately starts tracking
Dialogue: 0,0:29:17.74,0:29:18.29,Default,,0,0,0,,their input.
Dialogue: 0,0:29:18.70,0:29:19.82,Default,,0,0,0,,It's closed when the user lifts
Dialogue: 0,0:29:19.82,0:29:21.19,Default,,0,0,0,,their finger and a selection is
Dialogue: 0,0:29:21.19,0:29:21.60,Default,,0,0,0,,made.
Dialogue: 0,0:29:21.91,0:29:23.65,Default,,0,0,0,,But you'll notice that in these
Dialogue: 0,0:29:23.65,0:29:25.23,Default,,0,0,0,,two examples, the popovers
Dialogue: 0,0:29:25.23,0:29:26.01,Default,,0,0,0,,actually showed different
Dialogue: 0,0:29:26.01,0:29:26.48,Default,,0,0,0,,content.
Dialogue: 0,0:29:27.32,0:29:29.03,Default,,0,0,0,,Touch and show showed several
Dialogue: 0,0:29:29.03,0:29:30.26,Default,,0,0,0,,controls whereas press and hold
Dialogue: 0,0:29:30.26,0:29:31.66,Default,,0,0,0,,only showed a single segmented
Dialogue: 0,0:29:31.66,0:29:32.04,Default,,0,0,0,,control.
Dialogue: 0,0:29:32.36,0:29:33.20,Default,,0,0,0,,And that's because press and
Dialogue: 0,0:29:33.20,0:29:34.60,Default,,0,0,0,,hold is tracking the user's
Dialogue: 0,0:29:34.60,0:29:35.78,Default,,0,0,0,,finger the entire time.
Dialogue: 0,0:29:36.08,0:29:37.45,Default,,0,0,0,,And so, it's best to leave that
Dialogue: 0,0:29:37.45,0:29:39.22,Default,,0,0,0,,kind of interaction to a single
Dialogue: 0,0:29:39.22,0:29:39.74,Default,,0,0,0,,control.
Dialogue: 0,0:29:39.92,0:29:40.89,Default,,0,0,0,,In this case a segmented
Dialogue: 0,0:29:40.89,0:29:42.04,Default,,0,0,0,,control, or even something like
Dialogue: 0,0:29:42.04,0:29:42.89,Default,,0,0,0,,the slider item.
Dialogue: 0,0:29:44.00,0:29:46.29,Default,,0,0,0,,This is easy to achieve because
Dialogue: 0,0:29:46.52,0:29:47.57,Default,,0,0,0,,popovers actually have two
Dialogue: 0,0:29:47.57,0:29:49.18,Default,,0,0,0,,different NSTouchBar properties.
Dialogue: 0,0:29:49.46,0:29:50.55,Default,,0,0,0,,One for the touch and hold
Dialogue: 0,0:29:50.55,0:29:51.93,Default,,0,0,0,,popover and another for the
Dialogue: 0,0:29:51.93,0:29:52.62,Default,,0,0,0,,press and hold.
Dialogue: 0,0:29:53.75,0:29:55.79,Default,,0,0,0,,Press and hold, if you do not
Dialogue: 0,0:29:55.79,0:29:57.18,Default,,0,0,0,,provide an NSTouchBar for press
Dialogue: 0,0:29:57.18,0:29:58.35,Default,,0,0,0,,and hold, press and hold will
Dialogue: 0,0:29:58.35,0:29:58.98,Default,,0,0,0,,not be enabled.
Dialogue: 0,0:29:59.64,0:30:01.62,Default,,0,0,0,,It is possible to provide the
Dialogue: 0,0:30:01.62,0:30:03.15,Default,,0,0,0,,same NSTouchBar object for both
Dialogue: 0,0:30:03.15,0:30:03.99,Default,,0,0,0,,of these properties and that
Dialogue: 0,0:30:03.99,0:30:04.89,Default,,0,0,0,,will work just fine.
Dialogue: 0,0:30:05.27,0:30:06.37,Default,,0,0,0,,But as I mentioned press and
Dialogue: 0,0:30:06.37,0:30:08.23,Default,,0,0,0,,hold is best left reserved for
Dialogue: 0,0:30:08.46,0:30:10.15,Default,,0,0,0,,single things, single items like
Dialogue: 0,0:30:10.15,0:30:12.68,Default,,0,0,0,,a segmented control or a slider
Dialogue: 0,0:30:12.68,0:30:12.95,Default,,0,0,0,,item.
Dialogue: 0,0:30:14.42,0:30:15.83,Default,,0,0,0,,Speaking of the slider item,
Dialogue: 0,0:30:15.83,0:30:16.54,Default,,0,0,0,,let's talk about it.
Dialogue: 0,0:30:17.25,0:30:18.11,Default,,0,0,0,,Now, you might be thinking
Dialogue: 0,0:30:18.11,0:30:19.05,Default,,0,0,0,,what's the difference between a
Dialogue: 0,0:30:19.05,0:30:20.42,Default,,0,0,0,,slider item and a custom Touch
Dialogue: 0,0:30:20.47,0:30:21.99,Default,,0,0,0,,Bar item with an NSSlider as its
Dialogue: 0,0:30:21.99,0:30:22.30,Default,,0,0,0,,view.
Dialogue: 0,0:30:22.87,0:30:23.94,Default,,0,0,0,,Well, let me explain.
Dialogue: 0,0:30:24.92,0:30:25.95,Default,,0,0,0,,Sliders have a few different
Dialogue: 0,0:30:25.95,0:30:26.58,Default,,0,0,0,,parts.
Dialogue: 0,0:30:26.68,0:30:27.98,Default,,0,0,0,,First we have the slider itself.
Dialogue: 0,0:30:28.51,0:30:29.65,Default,,0,0,0,,Then, we have these new value
Dialogue: 0,0:30:29.65,0:30:31.00,Default,,0,0,0,,accessories, which are images
Dialogue: 0,0:30:31.00,0:30:32.18,Default,,0,0,0,,and are actually intractable.
Dialogue: 0,0:30:32.18,0:30:34.03,Default,,0,0,0,,You can tap on them to increment
Dialogue: 0,0:30:34.03,0:30:35.26,Default,,0,0,0,,or decrement the value of your
Dialogue: 0,0:30:35.26,0:30:35.76,Default,,0,0,0,,slider.
Dialogue: 0,0:30:36.42,0:30:37.39,Default,,0,0,0,,We also have a label.
Dialogue: 0,0:30:38.28,0:30:39.56,Default,,0,0,0,,This can make it extra clear to
Dialogue: 0,0:30:39.56,0:30:41.66,Default,,0,0,0,,your users what this slider is
Dialogue: 0,0:30:41.66,0:30:42.53,Default,,0,0,0,,actually controlling.
Dialogue: 0,0:30:42.73,0:30:43.70,Default,,0,0,0,,And it's really useful if you
Dialogue: 0,0:30:43.70,0:30:45.21,Default,,0,0,0,,have multiple sliders in your
Dialogue: 0,0:30:45.59,0:30:45.68,Default,,0,0,0,,UI.
Dialogue: 0,0:30:46.20,0:30:47.90,Default,,0,0,0,,As I mentioned these make really
Dialogue: 0,0:30:47.90,0:30:49.13,Default,,0,0,0,,great content for press and hold
Dialogue: 0,0:30:49.13,0:30:49.70,Default,,0,0,0,,popover.
Dialogue: 0,0:30:49.98,0:30:50.64,Default,,0,0,0,,And that's because the
Dialogue: 0,0:30:50.64,0:30:51.91,Default,,0,0,0,,immediately start tracking the
Dialogue: 0,0:30:51.91,0:30:53.42,Default,,0,0,0,,user's finger, even though the
Dialogue: 0,0:30:53.42,0:30:54.85,Default,,0,0,0,,touch is offset from the knob of
Dialogue: 0,0:30:54.85,0:30:55.43,Default,,0,0,0,,the slider.
Dialogue: 0,0:30:55.91,0:30:56.73,Default,,0,0,0,,That means the user can
Dialogue: 0,0:30:56.73,0:30:57.91,Default,,0,0,0,,immediately start interacting
Dialogue: 0,0:30:57.91,0:30:59.09,Default,,0,0,0,,with it and not go searching
Dialogue: 0,0:30:59.09,0:31:00.31,Default,,0,0,0,,around for the knob for
Dialogue: 0,0:31:00.31,0:31:01.35,Default,,0,0,0,,interacting with the slider.
Dialogue: 0,0:31:01.89,0:31:04.03,Default,,0,0,0,,Let's take a look at what this
Dialogue: 0,0:31:04.03,0:31:04.99,Default,,0,0,0,,actually looks like in code,
Dialogue: 0,0:31:04.99,0:31:05.17,Default,,0,0,0,,though.
Dialogue: 0,0:31:05.93,0:31:06.85,Default,,0,0,0,,First, we're going to create the
Dialogue: 0,0:31:06.85,0:31:07.62,Default,,0,0,0,,item itself.
Dialogue: 0,0:31:07.80,0:31:08.87,Default,,0,0,0,,We're going to provide a unique
Dialogue: 0,0:31:08.87,0:31:09.55,Default,,0,0,0,,identifier.
Dialogue: 0,0:31:10.35,0:31:11.37,Default,,0,0,0,,Next, we're going to assign it
Dialogue: 0,0:31:11.37,0:31:13.05,Default,,0,0,0,,minimum and maximum value
Dialogue: 0,0:31:13.05,0:31:14.06,Default,,0,0,0,,accessories and we're going to
Dialogue: 0,0:31:14.06,0:31:15.76,Default,,0,0,0,,use images that AppKit provides.
Dialogue: 0,0:31:16.34,0:31:17.17,Default,,0,0,0,,And lastly, we're going to
Dialogue: 0,0:31:17.17,0:31:18.48,Default,,0,0,0,,assign a label, because maybe we
Dialogue: 0,0:31:18.48,0:31:19.84,Default,,0,0,0,,want multiple sliders in our UI.
Dialogue: 0,0:31:19.84,0:31:21.97,Default,,0,0,0,,But you'll notice that the
Dialogue: 0,0:31:21.97,0:31:23.01,Default,,0,0,0,,slider is actually taking up the
Dialogue: 0,0:31:23.01,0:31:24.52,Default,,0,0,0,,entire application section.
Dialogue: 0,0:31:24.52,0:31:25.78,Default,,0,0,0,,Well, that's because sliders do
Dialogue: 0,0:31:25.78,0:31:27.17,Default,,0,0,0,,not have an intrinsic content
Dialogue: 0,0:31:27.17,0:31:27.48,Default,,0,0,0,,size.
Dialogue: 0,0:31:27.53,0:31:28.45,Default,,0,0,0,,They're happy to be whatever
Dialogue: 0,0:31:28.45,0:31:29.79,Default,,0,0,0,,size is available in the
Dialogue: 0,0:31:29.79,0:31:30.79,Default,,0,0,0,,application section.
Dialogue: 0,0:31:31.55,0:31:33.42,Default,,0,0,0,,You can change this by adding a
Dialogue: 0,0:31:33.42,0:31:34.97,Default,,0,0,0,,constraint to the slider and
Dialogue: 0,0:31:34.97,0:31:36.61,Default,,0,0,0,,AppKit will check that and
Dialogue: 0,0:31:36.61,0:31:38.32,Default,,0,0,0,,automatically remeasure and
Dialogue: 0,0:31:38.32,0:31:39.23,Default,,0,0,0,,resize the item.
Dialogue: 0,0:31:39.59,0:31:40.55,Default,,0,0,0,,But notice that we're doing this
Dialogue: 0,0:31:40.55,0:31:42.04,Default,,0,0,0,,on the slider itself, and not
Dialogue: 0,0:31:42.04,0:31:43.87,Default,,0,0,0,,the slider items view and that's
Dialogue: 0,0:31:43.87,0:31:45.09,Default,,0,0,0,,because we have a label here.
Dialogue: 0,0:31:45.42,0:31:47.10,Default,,0,0,0,,And if we change localizations
Dialogue: 0,0:31:47.23,0:31:48.19,Default,,0,0,0,,the length of this string will
Dialogue: 0,0:31:48.19,0:31:50.00,Default,,0,0,0,,also change and we don't want to
Dialogue: 0,0:31:50.53,0:31:51.68,Default,,0,0,0,,cause clipping.
Dialogue: 0,0:31:52.40,0:31:53.33,Default,,0,0,0,,Next, let's talk about group
Dialogue: 0,0:31:53.33,0:31:54.01,Default,,0,0,0,,Touch Bar item.
Dialogue: 0,0:31:54.73,0:31:56.09,Default,,0,0,0,,Group item is neat because it
Dialogue: 0,0:31:56.09,0:31:57.29,Default,,0,0,0,,allows you to group multiple
Dialogue: 0,0:31:57.29,0:31:58.71,Default,,0,0,0,,Touch Bar items into a single
Dialogue: 0,0:31:58.71,0:32:00.18,Default,,0,0,0,,NSTouchBarItem instance.
Dialogue: 0,0:32:00.58,0:32:01.69,Default,,0,0,0,,This is because it's similar to
Dialogue: 0,0:32:01.69,0:32:03.22,Default,,0,0,0,,popovers in that it offers its
Dialogue: 0,0:32:03.35,0:32:04.70,Default,,0,0,0,,NSTouchBar property.
Dialogue: 0,0:32:05.43,0:32:06.39,Default,,0,0,0,,An example of this is the
Dialogue: 0,0:32:06.39,0:32:07.69,Default,,0,0,0,,formatting controls above me.
Dialogue: 0,0:32:08.04,0:32:08.97,Default,,0,0,0,,These have actually been grouped
Dialogue: 0,0:32:08.97,0:32:10.89,Default,,0,0,0,,into a single NSTouchBarItem.
Dialogue: 0,0:32:11.43,0:32:12.74,Default,,0,0,0,,There are several reasons you
Dialogue: 0,0:32:12.74,0:32:13.98,Default,,0,0,0,,might want to do this, and we'll
Dialogue: 0,0:32:13.98,0:32:14.97,Default,,0,0,0,,talk about each of these.
Dialogue: 0,0:32:15.77,0:32:17.29,Default,,0,0,0,,When centering multiple items,
Dialogue: 0,0:32:17.59,0:32:18.45,Default,,0,0,0,,there's some tricks you can play
Dialogue: 0,0:32:18.45,0:32:19.83,Default,,0,0,0,,with customization as well as
Dialogue: 0,0:32:19.83,0:32:21.30,Default,,0,0,0,,localization purposes.
Dialogue: 0,0:32:22.24,0:32:23.27,Default,,0,0,0,,If you remember a few minutes
Dialogue: 0,0:32:23.27,0:32:24.18,Default,,0,0,0,,ago, when Chris was talking
Dialogue: 0,0:32:24.18,0:32:24.44,Default,,0,0,0,,about the
Dialogue: 0,0:32:24.44,0:32:26.24,Default,,0,0,0,,principalItemIdentifier, you'll
Dialogue: 0,0:32:26.24,0:32:27.57,Default,,0,0,0,,recall that a single item
Dialogue: 0,0:32:27.57,0:32:28.87,Default,,0,0,0,,identifier is actually provided
Dialogue: 0,0:32:28.87,0:32:29.58,Default,,0,0,0,,as principal.
Dialogue: 0,0:32:29.58,0:32:32.28,Default,,0,0,0,,But what happens if you want to
Dialogue: 0,0:32:32.28,0:32:34.15,Default,,0,0,0,,center multiple items together
Dialogue: 0,0:32:34.15,0:32:35.34,Default,,0,0,0,,like FaceTime is doing here.
Dialogue: 0,0:32:36.03,0:32:37.40,Default,,0,0,0,,Well, you can group these items
Dialogue: 0,0:32:37.48,0:32:39.01,Default,,0,0,0,,to a single group Touch Bar item
Dialogue: 0,0:32:39.01,0:32:40.43,Default,,0,0,0,,and then provide that item's
Dialogue: 0,0:32:40.43,0:32:42.13,Default,,0,0,0,,identifier as the principal item
Dialogue: 0,0:32:42.13,0:32:42.75,Default,,0,0,0,,identifier.
Dialogue: 0,0:32:43.03,0:32:45.78,Default,,0,0,0,,You can also play some cool
Dialogue: 0,0:32:45.78,0:32:47.27,Default,,0,0,0,,tricks with the customization.
Dialogue: 0,0:32:47.52,0:32:48.89,Default,,0,0,0,,If you have a non-customizable
Dialogue: 0,0:32:48.89,0:32:50.51,Default,,0,0,0,,group like we do here, you'll
Dialogue: 0,0:32:50.51,0:32:51.77,Default,,0,0,0,,notice that these items are
Dialogue: 0,0:32:51.77,0:32:52.77,Default,,0,0,0,,actually grouped together.
Dialogue: 0,0:32:53.12,0:32:54.67,Default,,0,0,0,,That means when the user drags
Dialogue: 0,0:32:54.67,0:32:56.54,Default,,0,0,0,,these things into, these buttons
Dialogue: 0,0:32:56.54,0:32:58.16,Default,,0,0,0,,into the Touch Bar, all three of
Dialogue: 0,0:32:58.16,0:32:59.13,Default,,0,0,0,,these will come together.
Dialogue: 0,0:32:59.86,0:33:00.94,Default,,0,0,0,,There's also a single
Dialogue: 0,0:33:00.94,0:33:02.52,Default,,0,0,0,,customization label describing
Dialogue: 0,0:33:02.52,0:33:04.05,Default,,0,0,0,,these controls as the playback
Dialogue: 0,0:33:04.46,0:33:05.78,Default,,0,0,0,,controls.
Dialogue: 0,0:33:06.99,0:33:08.70,Default,,0,0,0,,If you do choose to enable
Dialogue: 0,0:33:08.70,0:33:09.94,Default,,0,0,0,,customization on your groups,
Dialogue: 0,0:33:09.94,0:33:11.28,Default,,0,0,0,,you get some cool behavior there
Dialogue: 0,0:33:11.28,0:33:11.73,Default,,0,0,0,,as well.
Dialogue: 0,0:33:12.30,0:33:13.61,Default,,0,0,0,,In this example, we have two
Dialogue: 0,0:33:13.61,0:33:14.72,Default,,0,0,0,,group Touch Bar items.
Dialogue: 0,0:33:15.14,0:33:16.46,Default,,0,0,0,,Both of them have customization
Dialogue: 0,0:33:16.46,0:33:16.93,Default,,0,0,0,,enabled.
Dialogue: 0,0:33:17.38,0:33:18.91,Default,,0,0,0,,One contains a group of animals
Dialogue: 0,0:33:18.91,0:33:19.73,Default,,0,0,0,,that you might find in the
Dialogue: 0,0:33:19.73,0:33:21.07,Default,,0,0,0,,ocean, and another on a farm.
Dialogue: 0,0:33:22.10,0:33:23.41,Default,,0,0,0,,If I start customizing this,
Dialogue: 0,0:33:23.41,0:33:24.71,Default,,0,0,0,,you'll notice that I'm free to
Dialogue: 0,0:33:24.71,0:33:26.15,Default,,0,0,0,,re-order these items however I
Dialogue: 0,0:33:26.15,0:33:27.43,Default,,0,0,0,,choose within their groups.
Dialogue: 0,0:33:28.66,0:33:30.67,Default,,0,0,0,,If I try, however, to grab one
Dialogue: 0,0:33:30.81,0:33:32.85,Default,,0,0,0,,of the ocean animals and put it
Dialogue: 0,0:33:32.85,0:33:34.50,Default,,0,0,0,,into the farm animals group, it
Dialogue: 0,0:33:34.50,0:33:35.72,Default,,0,0,0,,snaps back to where it was.
Dialogue: 0,0:33:35.90,0:33:37.00,Default,,0,0,0,,Because that would be removing
Dialogue: 0,0:33:37.00,0:33:38.19,Default,,0,0,0,,the item from its group and
Dialogue: 0,0:33:38.19,0:33:39.08,Default,,0,0,0,,that's not supported.
Dialogue: 0,0:33:41.93,0:33:43.18,Default,,0,0,0,,GroupTouchBarItem also has
Dialogue: 0,0:33:43.18,0:33:44.26,Default,,0,0,0,,really cool purposes for
Dialogue: 0,0:33:44.26,0:33:45.10,Default,,0,0,0,,localization.
Dialogue: 0,0:33:45.53,0:33:46.78,Default,,0,0,0,,Now, I'm sure your applications
Dialogue: 0,0:33:46.78,0:33:47.98,Default,,0,0,0,,reach lots of users.
Dialogue: 0,0:33:47.98,0:33:49.18,Default,,0,0,0,,Some of those users might be
Dialogue: 0,0:33:49.18,0:33:51.25,Default,,0,0,0,,native right to left speakers of
Dialogue: 0,0:33:51.25,0:33:52.87,Default,,0,0,0,,languages like Hebrew or Arabic.
Dialogue: 0,0:33:53.40,0:33:54.69,Default,,0,0,0,,And I'm sure your applications
Dialogue: 0,0:33:54.69,0:33:55.83,Default,,0,0,0,,are already flipping were
Dialogue: 0,0:33:55.83,0:33:57.11,Default,,0,0,0,,appropriate for those users.
Dialogue: 0,0:33:57.33,0:33:58.56,Default,,0,0,0,,And we want Touch Bar to reflect
Dialogue: 0,0:33:58.56,0:33:59.13,Default,,0,0,0,,that as well.
Dialogue: 0,0:34:00.12,0:34:01.38,Default,,0,0,0,,A good example of this is
Dialogue: 0,0:34:01.38,0:34:02.21,Default,,0,0,0,,FaceTime's UI.
Dialogue: 0,0:34:02.36,0:34:04.24,Default,,0,0,0,,FaceTime chooses to show a full
Dialogue: 0,0:34:04.24,0:34:06.47,Default,,0,0,0,,screen and a mute button both on
Dialogue: 0,0:34:06.47,0:34:07.44,Default,,0,0,0,,the screen as well as within
Dialogue: 0,0:34:07.44,0:34:07.97,Default,,0,0,0,,Touch Bar.
Dialogue: 0,0:34:08.26,0:34:09.38,Default,,0,0,0,,And you'll notice that the order
Dialogue: 0,0:34:09.38,0:34:10.33,Default,,0,0,0,,of these buttons match.
Dialogue: 0,0:34:11.15,0:34:12.34,Default,,0,0,0,,If I go ahead and change the
Dialogue: 0,0:34:12.34,0:34:14.46,Default,,0,0,0,,language to Arabic, you'll
Dialogue: 0,0:34:14.46,0:34:15.60,Default,,0,0,0,,notice that the on-screen
Dialogue: 0,0:34:15.83,0:34:17.37,Default,,0,0,0,,buttons will actually reverse
Dialogue: 0,0:34:17.37,0:34:17.82,Default,,0,0,0,,their order.
Dialogue: 0,0:34:18.11,0:34:19.38,Default,,0,0,0,,And we do the same in Touch Bar
Dialogue: 0,0:34:19.38,0:34:21.48,Default,,0,0,0,,to maintain that matching order.
Dialogue: 0,0:34:22.54,0:34:23.63,Default,,0,0,0,,But it's important to note that
Dialogue: 0,0:34:23.63,0:34:25.22,Default,,0,0,0,,not everything actually flips.
Dialogue: 0,0:34:25.28,0:34:26.33,Default,,0,0,0,,The escape key and the control
Dialogue: 0,0:34:26.33,0:34:27.67,Default,,0,0,0,,strip stay where they're at
Dialogue: 0,0:34:27.67,0:34:28.55,Default,,0,0,0,,whether it's left to right or
Dialogue: 0,0:34:28.55,0:34:29.09,Default,,0,0,0,,right to left.
Dialogue: 0,0:34:29.57,0:34:30.88,Default,,0,0,0,,And only specific groups of
Dialogue: 0,0:34:30.88,0:34:32.80,Default,,0,0,0,,items should possibly flip.
Dialogue: 0,0:34:32.92,0:34:34.60,Default,,0,0,0,,Such as the center controls
Dialogue: 0,0:34:34.60,0:34:35.60,Default,,0,0,0,,here, which we're flipping to
Dialogue: 0,0:34:35.60,0:34:36.71,Default,,0,0,0,,match on-screen UI.
Dialogue: 0,0:34:37.12,0:34:38.40,Default,,0,0,0,,As well as the image and label
Dialogue: 0,0:34:38.40,0:34:39.46,Default,,0,0,0,,about the incoming call are
Dialogue: 0,0:34:39.46,0:34:39.85,Default,,0,0,0,,flipped.
Dialogue: 0,0:34:40.31,0:34:41.57,Default,,0,0,0,,But the position of that item
Dialogue: 0,0:34:41.57,0:34:42.62,Default,,0,0,0,,did not move to the opposite
Dialogue: 0,0:34:42.62,0:34:43.40,Default,,0,0,0,,side of the Touch Bar.
Dialogue: 0,0:34:44.51,0:34:46.28,Default,,0,0,0,,This is easy to achieve using
Dialogue: 0,0:34:46.28,0:34:47.88,Default,,0,0,0,,GroupTouchBarItem's new group
Dialogue: 0,0:34:47.88,0:34:49.22,Default,,0,0,0,,user interface layout direction
Dialogue: 0,0:34:49.22,0:34:50.54,Default,,0,0,0,,property in 10.13.
Dialogue: 0,0:34:50.98,0:34:51.91,Default,,0,0,0,,You can simply set this to
Dialogue: 0,0:34:51.91,0:34:53.53,Default,,0,0,0,,reflect NSAppuserInterface
Dialogue: 0,0:34:53.53,0:34:54.25,Default,,0,0,0,,LayoutDirection.
Dialogue: 0,0:34:55.81,0:34:56.68,Default,,0,0,0,,Now, I'm sure you're aware
Dialogue: 0,0:34:56.68,0:34:57.94,Default,,0,0,0,,languages aren't just left to
Dialogue: 0,0:34:57.94,0:34:58.85,Default,,0,0,0,,right or right to left, they
Dialogue: 0,0:34:58.85,0:34:59.82,Default,,0,0,0,,also have variable length
Dialogue: 0,0:34:59.82,0:35:00.36,Default,,0,0,0,,strings.
Dialogue: 0,0:35:00.36,0:35:01.40,Default,,0,0,0,,And it's important to remember
Dialogue: 0,0:35:01.40,0:35:02.78,Default,,0,0,0,,that when you're designing your
Dialogue: 0,0:35:02.78,0:35:02.87,Default,,0,0,0,,UI.
Dialogue: 0,0:35:03.65,0:35:04.79,Default,,0,0,0,,In this example, I have a list
Dialogue: 0,0:35:04.79,0:35:05.81,Default,,0,0,0,,of some of my favorite ocean
Dialogue: 0,0:35:05.81,0:35:06.26,Default,,0,0,0,,animals.
Dialogue: 0,0:35:06.63,0:35:08.41,Default,,0,0,0,,And I ran this exact same app in
Dialogue: 0,0:35:08.41,0:35:09.58,Default,,0,0,0,,both English and in German.
Dialogue: 0,0:35:10.19,0:35:11.72,Default,,0,0,0,,In English I was able to fit 6
Dialogue: 0,0:35:11.72,0:35:12.25,Default,,0,0,0,,items here.
Dialogue: 0,0:35:12.25,0:35:13.76,Default,,0,0,0,,But in German I only have 5.
Dialogue: 0,0:35:14.24,0:35:15.37,Default,,0,0,0,,That's because the shark item
Dialogue: 0,0:35:15.37,0:35:16.64,Default,,0,0,0,,actually didn't have enough room
Dialogue: 0,0:35:16.64,0:35:17.93,Default,,0,0,0,,to fit in Touch Bar and so it
Dialogue: 0,0:35:17.93,0:35:18.99,Default,,0,0,0,,was hidden from the user.
Dialogue: 0,0:35:19.32,0:35:20.49,Default,,0,0,0,,Which is really unfortunate for
Dialogue: 0,0:35:20.49,0:35:21.35,Default,,0,0,0,,our German friends.
Dialogue: 0,0:35:22.19,0:35:23.95,Default,,0,0,0,,Now, you might be tempted to fix
Dialogue: 0,0:35:23.95,0:35:25.18,Default,,0,0,0,,this using constraints, tying
Dialogue: 0,0:35:25.18,0:35:26.43,Default,,0,0,0,,each button to be a specific
Dialogue: 0,0:35:26.43,0:35:26.73,Default,,0,0,0,,width.
Dialogue: 0,0:35:26.73,0:35:28.13,Default,,0,0,0,,But that's actually not a great
Dialogue: 0,0:35:28.13,0:35:29.77,Default,,0,0,0,,solution because as we change
Dialogue: 0,0:35:29.77,0:35:31.72,Default,,0,0,0,,localizations, we're almost
Dialogue: 0,0:35:31.72,0:35:32.57,Default,,0,0,0,,certainly going to cause
Dialogue: 0,0:35:32.57,0:35:33.56,Default,,0,0,0,,clipping in one of them.
Dialogue: 0,0:35:34.52,0:35:35.88,Default,,0,0,0,,Now, GroupTouchBarItem actually
Dialogue: 0,0:35:35.88,0:35:36.94,Default,,0,0,0,,has a great way of handling this
Dialogue: 0,0:35:36.94,0:35:38.28,Default,,0,0,0,,for you automatically starting
Dialogue: 0,0:35:38.28,0:35:39.09,Default,,0,0,0,,in 10.13.
Dialogue: 0,0:35:39.39,0:35:40.46,Default,,0,0,0,,And I encourage you to check out
Dialogue: 0,0:35:40.46,0:35:41.55,Default,,0,0,0,,the "Advanced Touch Bar Talk"
Dialogue: 0,0:35:41.55,0:35:43.12,Default,,0,0,0,,later today which will do a dive
Dialogue: 0,0:35:43.12,0:35:44.45,Default,,0,0,0,,into exactly what happens.
Dialogue: 0,0:35:46.13,0:35:48.10,Default,,0,0,0,,Now, we have a few bonus topics.
Dialogue: 0,0:35:48.10,0:35:49.06,Default,,0,0,0,,These are all covered great in
Dialogue: 0,0:35:49.06,0:35:50.42,Default,,0,0,0,,documentation, but we'll mention
Dialogue: 0,0:35:50.42,0:35:51.15,Default,,0,0,0,,them briefly now.
Dialogue: 0,0:35:51.61,0:35:52.72,Default,,0,0,0,,First is the
Dialogue: 0,0:35:52.72,0:35:54.01,Default,,0,0,0,,ColorPickerTouchBarItem.
Dialogue: 0,0:35:54.48,0:35:55.90,Default,,0,0,0,,This allows users to interact
Dialogue: 0,0:35:55.90,0:35:56.83,Default,,0,0,0,,with the color picker right
Dialogue: 0,0:35:56.83,0:35:57.49,Default,,0,0,0,,through Touch Bar.
Dialogue: 0,0:35:57.92,0:35:59.02,Default,,0,0,0,,They can choose the exact color
Dialogue: 0,0:35:59.02,0:35:59.64,Default,,0,0,0,,that they want.
Dialogue: 0,0:36:00.00,0:36:00.95,Default,,0,0,0,,They can even change color
Dialogue: 0,0:36:00.95,0:36:02.42,Default,,0,0,0,,models and your document can
Dialogue: 0,0:36:02.42,0:36:03.76,Default,,0,0,0,,restrict which color models are
Dialogue: 0,0:36:03.76,0:36:04.35,Default,,0,0,0,,supported.
Dialogue: 0,0:36:04.99,0:36:06.37,Default,,0,0,0,,Users also have access to their
Dialogue: 0,0:36:06.37,0:36:07.30,Default,,0,0,0,,favorite color swatches.
Dialogue: 0,0:36:07.30,0:36:07.96,Default,,0,0,0,,So, it's a really great
Dialogue: 0,0:36:07.96,0:36:08.67,Default,,0,0,0,,experience.
Dialogue: 0,0:36:10.04,0:36:10.82,Default,,0,0,0,,We also have a
Dialogue: 0,0:36:10.82,0:36:11.85,Default,,0,0,0,,SharingServicePicker.
Dialogue: 0,0:36:12.31,0:36:13.65,Default,,0,0,0,,This lets you easily share a
Dialogue: 0,0:36:13.65,0:36:15.43,Default,,0,0,0,,document through mail, messages,
Dialogue: 0,0:36:15.43,0:36:16.86,Default,,0,0,0,,air drop, or even third-party
Dialogue: 0,0:36:16.86,0:36:17.73,Default,,0,0,0,,insurance services.
Dialogue: 0,0:36:17.73,0:36:18.57,Default,,0,0,0,,And these are all the same
Dialogue: 0,0:36:18.57,0:36:20.10,Default,,0,0,0,,services available through the
Dialogue: 0,0:36:20.10,0:36:20.68,Default,,0,0,0,,share sheet.
Dialogue: 0,0:36:22.07,0:36:22.86,Default,,0,0,0,,And finally, we have an
Dialogue: 0,0:36:22.90,0:36:24.07,Default,,0,0,0,,NSScrubber, which is actually a
Dialogue: 0,0:36:24.07,0:36:25.16,Default,,0,0,0,,view, not an item.
Dialogue: 0,0:36:25.19,0:36:26.15,Default,,0,0,0,,This could be the view of a
Dialogue: 0,0:36:26.15,0:36:26.89,Default,,0,0,0,,Touch Bar item.
Dialogue: 0,0:36:27.54,0:36:28.26,Default,,0,0,0,,And you can see in an
Dialogue: 0,0:36:28.26,0:36:29.75,Default,,0,0,0,,application such as calendar's
Dialogue: 0,0:36:30.08,0:36:32.24,Default,,0,0,0,,timeline, Safari's tabs or even
Dialogue: 0,0:36:32.24,0:36:33.55,Default,,0,0,0,,the color swatches of the color
Dialogue: 0,0:36:33.55,0:36:34.42,Default,,0,0,0,,picker that we just talked
Dialogue: 0,0:36:34.42,0:36:34.68,Default,,0,0,0,,about.
Dialogue: 0,0:36:35.51,0:36:36.84,Default,,0,0,0,,It's a very versatile, very
Dialogue: 0,0:36:36.84,0:36:37.75,Default,,0,0,0,,fluid control.
Dialogue: 0,0:36:37.75,0:36:39.30,Default,,0,0,0,,And it was designed specifically
Dialogue: 0,0:36:39.30,0:36:40.09,Default,,0,0,0,,for Touch Bar.
Dialogue: 0,0:36:40.43,0:36:41.84,Default,,0,0,0,,You can find out more about this
Dialogue: 0,0:36:41.84,0:36:42.93,Default,,0,0,0,,at the advanced talk, which will
Dialogue: 0,0:36:42.93,0:36:44.86,Default,,0,0,0,,do a deep dive on exactly how to
Dialogue: 0,0:36:44.86,0:36:45.63,Default,,0,0,0,,use this control.
Dialogue: 0,0:36:47.29,0:36:48.62,Default,,0,0,0,,Now, we've covered a ton of
Dialogue: 0,0:36:48.62,0:36:49.44,Default,,0,0,0,,material today.
Dialogue: 0,0:36:49.77,0:36:51.11,Default,,0,0,0,,We talked about the NSTouchBar
Dialogue: 0,0:36:51.11,0:36:52.73,Default,,0,0,0,,API, how it's tied to the
Dialogue: 0,0:36:52.73,0:36:54.49,Default,,0,0,0,,responder chain, how you can use
Dialogue: 0,0:36:54.49,0:36:55.89,Default,,0,0,0,,it to provide context-sensitive
Dialogue: 0,0:36:55.89,0:36:57.14,Default,,0,0,0,,controls for your users.
Dialogue: 0,0:36:57.38,0:36:58.11,Default,,0,0,0,,We've talked about the
Dialogue: 0,0:36:58.11,0:36:59.70,Default,,0,0,0,,NSTouchBarItem and all of its
Dialogue: 0,0:36:59.70,0:37:01.04,Default,,0,0,0,,subclasses that AppKit provides
Dialogue: 0,0:37:01.04,0:37:02.39,Default,,0,0,0,,and their unique functionality.
Dialogue: 0,0:37:02.57,0:37:04.10,Default,,0,0,0,,So, you now know enough to go
Dialogue: 0,0:37:04.10,0:37:04.99,Default,,0,0,0,,adopt Touch Bar in your
Dialogue: 0,0:37:04.99,0:37:06.10,Default,,0,0,0,,applications today.
Dialogue: 0,0:37:06.83,0:37:08.04,Default,,0,0,0,,While you're there, you should
Dialogue: 0,0:37:08.04,0:37:08.98,Default,,0,0,0,,definitely enable user
Dialogue: 0,0:37:08.98,0:37:10.43,Default,,0,0,0,,customization so that users can
Dialogue: 0,0:37:10.43,0:37:11.89,Default,,0,0,0,,get the exact experience that
Dialogue: 0,0:37:11.89,0:37:12.65,Default,,0,0,0,,they're looking for.
Dialogue: 0,0:37:12.65,0:37:14.06,Default,,0,0,0,,And definitely remember to
Dialogue: 0,0:37:14.06,0:37:15.81,Default,,0,0,0,,design you UI with localization
Dialogue: 0,0:37:15.81,0:37:17.65,Default,,0,0,0,,in mind so that all users have a
Dialogue: 0,0:37:17.65,0:37:18.54,Default,,0,0,0,,great experience.
Dialogue: 0,0:37:19.11,0:37:20.58,Default,,0,0,0,,For more information, you can
Dialogue: 0,0:37:20.58,0:37:21.78,Default,,0,0,0,,check out our developer website.
Dialogue: 0,0:37:21.78,0:37:24.28,Default,,0,0,0,,We have some related sessions
Dialogue: 0,0:37:24.28,0:37:25.22,Default,,0,0,0,,you might be interested in.
Dialogue: 0,0:37:25.63,0:37:26.56,Default,,0,0,0,,"Choosing the Right Cocoa
Dialogue: 0,0:37:26.56,0:37:27.78,Default,,0,0,0,,Container View" will look at
Dialogue: 0,0:37:28.03,0:37:28.97,Default,,0,0,0,,when you might want to choose a
Dialogue: 0,0:37:28.97,0:37:30.59,Default,,0,0,0,,grid view over a stack view.
Dialogue: 0,0:37:30.59,0:37:31.87,Default,,0,0,0,,And this could be important
Dialogue: 0,0:37:31.87,0:37:32.81,Default,,0,0,0,,because you could use one of
Dialogue: 0,0:37:32.81,0:37:34.36,Default,,0,0,0,,these container views as the
Dialogue: 0,0:37:34.36,0:37:36.37,Default,,0,0,0,,content view of a TouchBarItem.
Dialogue: 0,0:37:37.20,0:37:38.37,Default,,0,0,0,,We also have the "Advanced Touch
Dialogue: 0,0:37:38.37,0:37:39.41,Default,,0,0,0,,Bar Talk" which we mentioned
Dialogue: 0,0:37:39.41,0:37:40.92,Default,,0,0,0,,several times, which will do a
Dialogue: 0,0:37:40.92,0:37:42.40,Default,,0,0,0,,dive into extra functionality of
Dialogue: 0,0:37:42.44,0:37:42.89,Default,,0,0,0,,Touch Bar.
Dialogue: 0,0:37:43.19,0:37:44.36,Default,,0,0,0,,Thank you all so much for
Dialogue: 0,0:37:44.36,0:37:45.02,Default,,0,0,0,,joining us today.
Dialogue: 0,0:37:45.02,0:37:45.85,Default,,0,0,0,,Enjoy the rest of your
Dialogue: 0,0:37:45.85,0:37:46.35,Default,,0,0,0,,conference
Dialogue: 0,0:37:47.02,0:37:48.40,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:37:48.40,0:37:49.78,Default,,0,0,0,,.
