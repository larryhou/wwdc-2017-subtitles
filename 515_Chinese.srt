1
00:00:22,967 --> 00:00:24,567
这里是演讲515

2
00:00:24,633 --> 00:00:28,000
内容是关于HLS编写和HLS工具

3
00:00:29,000 --> 00:00:32,467
缩写HLS代表HTTP流媒体传输

4
00:00:33,333 --> 00:00:37,167
HLS可以将内容分流到
不同的Apple设备

5
00:00:37,867 --> 00:00:39,500
我会讲到这个文件

6
00:00:39,567 --> 00:00:42,767
Apple设备的HLS编写规范

7
00:00:43,000 --> 00:00:46,667
还有我们用来创建
和验证HLS内容的工具

8
00:00:48,667 --> 00:00:52,533
编写规范以及
其他重要的HLS文档

9
00:00:52,600 --> 00:00:56,867
可以参阅
developer.apple.com/streaming

10
00:00:57,500 --> 00:00:59,000
编写规范

11
00:00:59,067 --> 00:01:01,867
是Apple提供的HLS编写建议

12
00:01:03,033 --> 00:01:05,700
我们希望HLS规范互联网草案

13
00:01:05,767 --> 00:01:08,733
只涵盖最必要的要求

14
00:01:09,200 --> 00:01:11,367
编写规范
从另一方面来说

15
00:01:11,433 --> 00:01:14,200
是针对Apple设备
所提的要求

16
00:01:14,400 --> 00:01:17,200
以及一些看似不必要的要求

17
00:01:17,400 --> 00:01:18,933
却能形成最佳实践

18
00:01:20,900 --> 00:01:25,000
今年的大新闻
就是我们添加了HEVC支持

19
00:01:26,100 --> 00:01:28,100
这些就是播放限制

20
00:01:28,367 --> 00:01:32,400
档次为Main 10
水平为5.0 高等级

21
00:01:33,867 --> 00:01:36,233
既然已经支持HEVC内容

22
00:01:36,300 --> 00:01:38,667
我们就把码率也写进了规范

23
00:01:39,467 --> 00:01:42,233
它们只是初步的建议

24
00:01:42,600 --> 00:01:45,000
因为HEVC编码器还在不断进化

25
00:01:45,433 --> 00:01:47,367
会随着时间不断改善

26
00:01:47,433 --> 00:01:49,733
以后我们也会修改这些指南

27
00:01:51,000 --> 00:01:53,300
所以要记住这些码率的建议

28
00:01:53,367 --> 00:01:55,333
只是编写规范里的指南

29
00:01:55,400 --> 00:01:56,833
不是隽永的真理

30
00:01:57,500 --> 00:01:59,633
我们也知道内容千变万化

31
00:01:59,833 --> 00:02:02,600
访谈视频的码率

32
00:02:02,767 --> 00:02:04,767
不一定适用于体育节目

33
00:02:05,233 --> 00:02:06,800
而且你会改变限制

34
00:02:06,867 --> 00:02:08,900
码率类型的数量

35
00:02:09,199 --> 00:02:11,633
所以码率指南只适用于起步阶段

36
00:02:12,700 --> 00:02:16,100
支持HEVC意味着
可以同时使用H.264

37
00:02:16,167 --> 00:02:18,967
和HEVC内容
在一个主播放列表里

38
00:02:19,167 --> 00:02:21,433
那么我们找到了几个最佳实践

39
00:02:22,500 --> 00:02:26,233
首先最重要的
就是使用CODECS属性

40
00:02:26,600 --> 00:02:30,500
它能够防止旧的播放器
再次播放HEVC内容

41
00:02:32,167 --> 00:02:36,667
第二个也很重要
要包含H.264内容

42
00:02:37,167 --> 00:02:40,233
这是为了让旧播放器有内容可播

43
00:02:42,367 --> 00:02:46,067
播放器可以切换播放
H.264和HEVC

44
00:02:46,400 --> 00:02:49,033
但是如果两个版本的码率相似

45
00:02:49,100 --> 00:02:52,067
播放器通常优先选择HEVC内容

46
00:02:52,433 --> 00:02:57,733
H.264内容可以是fMP4格式
以最大化兼容性

47
00:02:58,000 --> 00:03:01,133
保持H.264在传送流

48
00:03:01,500 --> 00:03:04,000
最后一点
是同样使用于

49
00:03:04,067 --> 00:03:07,833
特技播放的规则
I-frame-only

50
00:03:08,767 --> 00:03:12,200
除了支持HEVC
我们还添加了

51
00:03:12,267 --> 00:03:14,967
另一种字幕格式MSC

52
00:03:15,767 --> 00:03:18,667
如果想了解更多
IMSC1的支持情况

53
00:03:18,733 --> 00:03:22,400
可以看看今年一场
名为HLS优势的演讲

54
00:03:23,433 --> 00:03:27,133
IMSC1基于TTML
计时文本标记语言

55
00:03:27,367 --> 00:03:32,200
它可以兼容EBU和SMPTE规则

56
00:03:34,067 --> 00:03:36,667
现在我们讨论字幕的最佳实践

57
00:03:37,967 --> 00:03:42,133
虽然支持IMSC文本配置
但是IMSC内容

58
00:03:42,200 --> 00:03:46,367
必须是fMP4格式
不能是纯文本格式

59
00:03:47,367 --> 00:03:49,500
WebVTT跟过去一样

60
00:03:49,567 --> 00:03:54,600
是文本文件 拓展名通常为
.VTT或.webVTT

61
00:03:55,133 --> 00:03:58,500
要知道你可以
把IMSC和webVTT

62
00:03:58,567 --> 00:04:03,433
与H.264和HEVC任意组合
它们之间完全独立

63
00:04:04,000 --> 00:04:07,633
一定要使用
IMSC1 CODECS值

64
00:04:08,000 --> 00:04:11,733
这个值可以保证
老用户不会注意到有变化

65
00:04:11,867 --> 00:04:14,367
但是为了向后兼容最大化

66
00:04:14,500 --> 00:04:17,033
这个值不能用于webVTT

67
00:04:18,466 --> 00:04:20,966
我们换个话题
谈一谈HLS工具

68
00:04:21,033 --> 00:04:22,533
还有我们做出的改变

69
00:04:23,233 --> 00:04:25,333
这些工具都能在开发者网站上使用

70
00:04:25,400 --> 00:04:28,667
可以在刚刚说过的网址上找到

71
00:04:28,733 --> 00:04:30,967
developer.apple.com/streaming

72
00:04:32,267 --> 00:04:34,600
这些工具大致分为三类

73
00:04:34,733 --> 00:04:36,833
音频视频的分段工具

74
00:04:37,367 --> 00:04:40,567
内容验证和生成验证报告的工具

75
00:04:40,900 --> 00:04:45,200
最后是创建字幕
iv3元数据和主列表的工具

76
00:04:45,767 --> 00:04:48,800
验证器不会检测级别较低的码流

77
00:04:48,867 --> 00:04:50,567
所以就要使用第三方工具

78
00:04:50,633 --> 00:04:53,233
在你觉得编码器出问题的时候

79
00:04:53,800 --> 00:04:56,767
现在看看我们对工具
做了哪些具体的改变

80
00:04:58,400 --> 00:04:59,933
首先我们添加了

81
00:05:00,000 --> 00:05:03,533
MediaStreamValidator功能
用来检测本地文件

82
00:05:03,767 --> 00:05:07,367
不再需要用HTTP服务器
去验证媒体流

83
00:05:08,867 --> 00:05:11,467
如果是直接文件存取
就可以用这种方法检测

84
00:05:11,600 --> 00:05:15,367
可以用相对路径
绝对路径或文件URL

85
00:05:16,067 --> 00:05:20,533
但是要注意的是
不要混淆文件URL和HTTP

86
00:05:20,600 --> 00:05:22,733
就是如果主列表是文件路径

87
00:05:23,067 --> 00:05:27,400
那么它指向的媒体列表
就不能是HTTP URL

88
00:05:28,033 --> 00:05:31,533
当然我们也为这些工具
增添了HEVC支持

89
00:05:32,333 --> 00:05:35,200
我们还对这些工具做了很多改进

90
00:05:35,300 --> 00:05:38,167
主要是MediaStreamValidator
和HLS报告

91
00:05:38,733 --> 00:05:40,600
对媒体流做了更多研究

92
00:05:41,033 --> 00:05:42,567
例子太多 比如

93
00:05:42,633 --> 00:05:44,667
我们正在验证
CODEC的使用

94
00:05:45,633 --> 00:05:48,833
在验证期间能更好地处理流错误

95
00:05:49,100 --> 00:05:51,233
并且让变量和版本的排序

96
00:05:51,300 --> 00:05:53,067
在报告中更加一致

97
00:05:55,500 --> 00:05:58,867
我们添加了几个新选项
这里我只讲三个

98
00:05:59,800 --> 00:06:02,667
第一个是描述选项
在MediaStreamValidator

99
00:06:03,533 --> 00:06:07,133
流的URL不一定能
清楚表明它的内容

100
00:06:07,467 --> 00:06:10,433
这个选项可以让你添加更多描述文本

101
00:06:10,667 --> 00:06:13,733
比如某个剧第二季第五集

102
00:06:14,133 --> 00:06:16,933
文本会显示在报告上方
靠近URL的位置

103
00:06:18,200 --> 00:06:22,433
对HLS报告
我们添加了新的选项列

104
00:06:23,200 --> 00:06:25,100
我们以往的方法

105
00:06:25,167 --> 00:06:29,333
是给每列各自的选项
现在有了列选项

106
00:06:29,400 --> 00:06:31,500
就可以提取一串列标识符

107
00:06:32,067 --> 00:06:34,433
要找到可用的列标识符

108
00:06:34,500 --> 00:06:36,967
可以通过Help选项
或在主页上查看

109
00:06:37,767 --> 00:06:41,467
赋予数据id值的
旧id和pl选项

110
00:06:41,533 --> 00:06:43,500
和播放列表码率
现在依然支持

111
00:06:43,567 --> 00:06:46,300
但是为了支持列标识符
就弃用了

112
00:06:46,733 --> 00:06:50,267
它们的列标识符
只有id和pl

113
00:06:51,367 --> 00:06:54,633
去年我们添加了
hdcp-level支持

114
00:06:54,833 --> 00:06:57,767
却忘了说
hdcp-level选项是在

115
00:06:57,833 --> 00:06:59,767
MediaFileSegmenter上

116
00:06:59,833 --> 00:07:02,533
它让你可以设置hdcp-level

117
00:07:03,233 --> 00:07:07,967
hdcp-level包含于Plist
由MediaFileSegmenter生成

118
00:07:08,567 --> 00:07:11,433
你可以传递Plist
给variantplaylistcreator

119
00:07:11,500 --> 00:07:15,667
从而在生成的主列表中
获取hdcp-level属性

120
00:07:18,133 --> 00:07:19,967
快速浏览下这个样本报告

121
00:07:20,633 --> 00:07:22,067
注意第二行

122
00:07:23,333 --> 00:07:26,767
来自传递给
MediaStreamValidator的描述选项

123
00:07:27,767 --> 00:07:30,467
注意这里加入了CODEC列

124
00:07:30,700 --> 00:07:34,400
所以你能看到
哪些变量是H.264和HEVC

125
00:07:36,300 --> 00:07:40,067
这里的AVC是H.264的别名

126
00:07:40,133 --> 00:07:43,667
这样就能清楚的区别
这两种CODEC类型

127
00:07:45,533 --> 00:07:48,967
在更改变量和版本的顺序时

128
00:07:49,200 --> 00:07:53,367
我们将音频 CC字幕
和字幕翻译区分开来

129
00:07:54,900 --> 00:07:56,033
总的来说

130
00:07:56,800 --> 00:08:00,500
记住这个网址
developer.apple.com/streaming

131
00:08:01,033 --> 00:08:03,700
你要知道的一切 这里都能找到

132
00:08:04,133 --> 00:08:07,333
除了各种文档
它还有样本流的链接

133
00:08:07,400 --> 00:08:11,067
工具下载链接
以往HLS视频的链接

134
00:08:11,200 --> 00:08:13,900
FairPlayStreaming
的相关内容等

135
00:08:14,467 --> 00:08:16,100
我建议你们都去读一读

136
00:08:16,167 --> 00:08:20,300
Apple的HLS编写规范
和HLS规范

137
00:08:21,733 --> 00:08:23,067
要了解更多

138
00:08:23,233 --> 00:08:24,833
请参阅本场演讲的网页

139
00:08:25,100 --> 00:08:30,233
developer.apple.com/wwdc17/515

140
00:08:33,433 --> 00:08:38,100
还有几场相关的视频演讲
HTTP流媒体优势

141
00:08:39,799 --> 00:08:42,866
这场演讲深入探讨
HEVC和IMSC1

142
00:08:42,933 --> 00:08:44,867
以及其他有趣的话题

143
00:08:45,200 --> 00:08:48,967
HTT流媒体错误处理的最佳实践

144
00:08:49,533 --> 00:08:52,233
会帮助你了解如何把你的服务器

145
00:08:52,300 --> 00:08:53,967
变成更好的HLS服务器

146
00:08:54,600 --> 00:08:59,200
这些视频都可以在网页
或WWDC应用中观看

147
00:09:00,200 --> 00:09:01,667
希望你们有所收获

148
00:09:01,767 --> 00:09:02,733
谢谢观看

