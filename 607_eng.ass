[Script Info]
; Script generated by FFmpeg/Lavc57.89.100
ScriptType: v4.00+
PlayResX: 384
PlayResY: 288

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,16,&Hffffff,&Hffffff,&H0,&H0,0,0,0,0,100,100,0,0,1,1,0,2,10,10,10,0

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:22.52,0:00:27.56,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:00:28.06,0:00:29.08,Default,,0,0,0,,>> Good afternoon, everyone.
Dialogue: 0,0:00:29.08,0:00:30.45,Default,,0,0,0,,And welcome to Metal 2
Dialogue: 0,0:00:30.45,0:00:31.80,Default,,0,0,0,,Optimization and Debugging.
Dialogue: 0,0:00:31.80,0:00:34.72,Default,,0,0,0,,As you know, we're talking a lot
Dialogue: 0,0:00:34.72,0:00:35.86,Default,,0,0,0,,about Metal 2 this year, with
Dialogue: 0,0:00:35.86,0:00:37.12,Default,,0,0,0,,some great new enhancements to
Dialogue: 0,0:00:37.12,0:00:39.11,Default,,0,0,0,,the platform including GP driven
Dialogue: 0,0:00:39.11,0:00:40.97,Default,,0,0,0,,rendering, machine learning
Dialogue: 0,0:00:40.97,0:00:43.94,Default,,0,0,0,,acceleration, and a macOS VR,
Dialogue: 0,0:00:43.94,0:00:45.72,Default,,0,0,0,,and external GPU support.
Dialogue: 0,0:00:47.11,0:00:48.47,Default,,0,0,0,,And not forgetting Advanced
Dialogue: 0,0:00:48.47,0:00:49.64,Default,,0,0,0,,Optimization Tools.
Dialogue: 0,0:00:50.19,0:00:52.89,Default,,0,0,0,,So, this afternoon, we're going
Dialogue: 0,0:00:52.89,0:00:54.54,Default,,0,0,0,,to talk about the current Metal
Dialogue: 0,0:00:54.67,0:00:56.08,Default,,0,0,0,,tools, give you a recap of
Dialogue: 0,0:00:56.38,0:00:57.91,Default,,0,0,0,,those, talk about some great new
Dialogue: 0,0:00:57.91,0:00:59.54,Default,,0,0,0,,enhancements to the Metal frame
Dialogue: 0,0:00:59.54,0:01:01.36,Default,,0,0,0,,debugger, and then finally cover
Dialogue: 0,0:01:01.36,0:01:03.14,Default,,0,0,0,,some major enhancements in terms
Dialogue: 0,0:01:03.14,0:01:04.02,Default,,0,0,0,,of GPU profiling.
Dialogue: 0,0:01:04.68,0:01:08.02,Default,,0,0,0,,But first, the frame debugger.
Dialogue: 0,0:01:10.23,0:01:12.06,Default,,0,0,0,,So hopefully you're all familiar
Dialogue: 0,0:01:12.06,0:01:12.78,Default,,0,0,0,,with this tool.
Dialogue: 0,0:01:14.08,0:01:15.38,Default,,0,0,0,,It is our fully-featured frame
Dialogue: 0,0:01:15.38,0:01:17.25,Default,,0,0,0,,debugger integrated into Xcode,
Dialogue: 0,0:01:17.25,0:01:20.11,Default,,0,0,0,,that lets you capture your Metal
Dialogue: 0,0:01:20.11,0:01:22.59,Default,,0,0,0,,2 work, be it computer graphics,
Dialogue: 0,0:01:22.97,0:01:24.13,Default,,0,0,0,,and then step through it into
Dialogue: 0,0:01:24.13,0:01:25.09,Default,,0,0,0,,the debugger, to inspect state
Dialogue: 0,0:01:25.09,0:01:27.09,Default,,0,0,0,,and resources, letting you debug
Dialogue: 0,0:01:27.48,0:01:28.19,Default,,0,0,0,,and optimize.
Dialogue: 0,0:01:29.08,0:01:33.22,Default,,0,0,0,,One of our focuses this year has
Dialogue: 0,0:01:33.22,0:01:34.01,Default,,0,0,0,,been on improving the
Dialogue: 0,0:01:34.01,0:01:34.89,Default,,0,0,0,,performance to the frame
Dialogue: 0,0:01:34.89,0:01:36.68,Default,,0,0,0,,debugger, and in particular, we
Dialogue: 0,0:01:36.68,0:01:38.32,Default,,0,0,0,,paid particular regard to
Dialogue: 0,0:01:38.32,0:01:39.39,Default,,0,0,0,,improving the speed with which
Dialogue: 0,0:01:39.68,0:01:40.35,Default,,0,0,0,,captures happen.
Dialogue: 0,0:01:40.35,0:01:43.10,Default,,0,0,0,,And I'm happy to say that
Dialogue: 0,0:01:43.10,0:01:46.44,Default,,0,0,0,,compared to Xcode 8, Xcode 9 now
Dialogue: 0,0:01:46.44,0:01:48.59,Default,,0,0,0,,captures up to 10 times as fast,
Dialogue: 0,0:01:49.11,0:01:50.12,Default,,0,0,0,,getting you from clicking the
Dialogue: 0,0:01:50.12,0:01:51.56,Default,,0,0,0,,Capture button to into the
Dialogue: 0,0:01:51.56,0:01:52.95,Default,,0,0,0,,debugger much, much more
Dialogue: 0,0:01:52.95,0:01:53.26,Default,,0,0,0,,quickly.
Dialogue: 0,0:01:56.04,0:01:58.47,Default,,0,0,0,,As you'd expect, we have full
Dialogue: 0,0:01:58.47,0:02:00.04,Default,,0,0,0,,support for all the new Metal 2
Dialogue: 0,0:02:00.04,0:02:02.01,Default,,0,0,0,,API, including Raster order
Dialogue: 0,0:02:02.01,0:02:04.35,Default,,0,0,0,,groups, sampler arrays, viewport
Dialogue: 0,0:02:04.35,0:02:06.15,Default,,0,0,0,,arrays, and the new pixel and
Dialogue: 0,0:02:06.15,0:02:07.36,Default,,0,0,0,,vertex array formats.
Dialogue: 0,0:02:07.88,0:02:10.86,Default,,0,0,0,,One particular part of Metal 2
Dialogue: 0,0:02:10.86,0:02:12.41,Default,,0,0,0,,that we've paid a lot of
Dialogue: 0,0:02:12.41,0:02:14.12,Default,,0,0,0,,attention to is the support for
Dialogue: 0,0:02:14.12,0:02:15.30,Default,,0,0,0,,the new argument buffers.
Dialogue: 0,0:02:15.94,0:02:17.38,Default,,0,0,0,,With this, in the buffer viewer,
Dialogue: 0,0:02:17.63,0:02:19.39,Default,,0,0,0,,you can now see all the
Dialogue: 0,0:02:19.39,0:02:20.55,Default,,0,0,0,,argument, buffer arguments,
Dialogue: 0,0:02:20.65,0:02:22.20,Default,,0,0,0,,displayed in line, and you can
Dialogue: 0,0:02:22.20,0:02:23.86,Default,,0,0,0,,click through whether it be to
Dialogue: 0,0:02:23.86,0:02:26.52,Default,,0,0,0,,attach your sampler, buffer, or
Dialogue: 0,0:02:26.52,0:02:32.69,Default,,0,0,0,,another argument buffer itself.
Dialogue: 0,0:02:32.69,0:02:33.96,Default,,0,0,0,,We've also added support for VR
Dialogue: 0,0:02:33.96,0:02:35.20,Default,,0,0,0,,captures this year, with
Dialogue: 0,0:02:35.20,0:02:36.46,Default,,0,0,0,,automatic support for SteamVR.
Dialogue: 0,0:02:36.46,0:02:38.32,Default,,0,0,0,,And we've added support for you
Dialogue: 0,0:02:38.32,0:02:40.22,Default,,0,0,0,,to view your submitted surfaces
Dialogue: 0,0:02:40.22,0:02:40.97,Default,,0,0,0,,in stereo.
Dialogue: 0,0:02:41.45,0:02:43.53,Default,,0,0,0,,So when you get to the Submit
Dialogue: 0,0:02:43.53,0:02:44.58,Default,,0,0,0,,call, you're sending your
Dialogue: 0,0:02:44.58,0:02:46.12,Default,,0,0,0,,surfaces to the VR compositer,
Dialogue: 0,0:02:46.41,0:02:47.79,Default,,0,0,0,,you will see left eye and right
Dialogue: 0,0:02:47.79,0:02:49.56,Default,,0,0,0,,eye alongside each other, to
Dialogue: 0,0:02:49.56,0:02:51.11,Default,,0,0,0,,quickly spot any discrepancies.
Dialogue: 0,0:02:51.68,0:02:56.50,Default,,0,0,0,,Another area of focus this year
Dialogue: 0,0:02:56.72,0:02:58.01,Default,,0,0,0,,has been on improving the
Dialogue: 0,0:02:58.01,0:02:59.46,Default,,0,0,0,,workflow for capturing more
Dialogue: 0,0:02:59.46,0:03:00.42,Default,,0,0,0,,complex workloads.
Dialogue: 0,0:03:00.83,0:03:01.84,Default,,0,0,0,,So now if you're doing
Dialogue: 0,0:03:01.90,0:03:04.04,Default,,0,0,0,,compute-only work in Metal, or
Dialogue: 0,0:03:04.04,0:03:05.40,Default,,0,0,0,,perhaps you're using multiple
Dialogue: 0,0:03:05.40,0:03:07.52,Default,,0,0,0,,Metal cues, it's much easier to
Dialogue: 0,0:03:07.52,0:03:08.85,Default,,0,0,0,,capture exactly the work that
Dialogue: 0,0:03:08.85,0:03:09.40,Default,,0,0,0,,you want.
Dialogue: 0,0:03:10.45,0:03:11.53,Default,,0,0,0,,We've added the lightweight
Dialogue: 0,0:03:11.53,0:03:13.58,Default,,0,0,0,,capture API, with some new Metal
Dialogue: 0,0:03:13.58,0:03:15.41,Default,,0,0,0,,capture scope objects, that you
Dialogue: 0,0:03:15.41,0:03:17.42,Default,,0,0,0,,create at startup and then reuse
Dialogue: 0,0:03:17.42,0:03:19.28,Default,,0,0,0,,every frame to surround the work
Dialogue: 0,0:03:19.28,0:03:20.14,Default,,0,0,0,,that you want to capture.
Dialogue: 0,0:03:20.55,0:03:21.66,Default,,0,0,0,,You'll see a demo of this later,
Dialogue: 0,0:03:21.66,0:03:22.75,Default,,0,0,0,,but it's great for being able to
Dialogue: 0,0:03:22.75,0:03:25.35,Default,,0,0,0,,say, group all your regular
Dialogue: 0,0:03:25.63,0:03:28.01,Default,,0,0,0,,rendering work in one scope, and
Dialogue: 0,0:03:28.01,0:03:29.67,Default,,0,0,0,,some asynchronous work like
Dialogue: 0,0:03:29.92,0:03:31.13,Default,,0,0,0,,regenerating your tessellation
Dialogue: 0,0:03:31.13,0:03:32.87,Default,,0,0,0,,factor buffers, in another
Dialogue: 0,0:03:32.87,0:03:33.96,Default,,0,0,0,,scope, and when you come to
Dialogue: 0,0:03:33.96,0:03:35.46,Default,,0,0,0,,capture, you get exactly what
Dialogue: 0,0:03:35.46,0:03:35.87,Default,,0,0,0,,you want.
Dialogue: 0,0:03:37.42,0:03:38.58,Default,,0,0,0,,We also have support for
Dialogue: 0,0:03:38.58,0:03:39.27,Default,,0,0,0,,triggering captures
Dialogue: 0,0:03:39.27,0:03:40.77,Default,,0,0,0,,programmatically from your app.
Dialogue: 0,0:03:41.32,0:03:43.03,Default,,0,0,0,,We use this a lot within our
Dialogue: 0,0:03:43.03,0:03:44.26,Default,,0,0,0,,test apps ourselves, so that we
Dialogue: 0,0:03:44.26,0:03:45.44,Default,,0,0,0,,can quickly do a gesture on the
Dialogue: 0,0:03:45.44,0:03:46.83,Default,,0,0,0,,device, and trigger a frame
Dialogue: 0,0:03:47.22,0:03:48.48,Default,,0,0,0,,capture, without having to
Dialogue: 0,0:03:48.48,0:03:53.05,Default,,0,0,0,,switch our focus back to Xcode.
Dialogue: 0,0:03:53.55,0:03:55.08,Default,,0,0,0,,Another new feature this year is
Dialogue: 0,0:03:55.08,0:03:56.68,Default,,0,0,0,,support for Xcode's Quick Looks
Dialogue: 0,0:03:57.05,0:03:57.61,Default,,0,0,0,,support.
Dialogue: 0,0:03:58.83,0:04:00.77,Default,,0,0,0,,So now, you have lightweight
Dialogue: 0,0:04:00.77,0:04:02.29,Default,,0,0,0,,Metal debugging in the CPU
Dialogue: 0,0:04:02.29,0:04:02.86,Default,,0,0,0,,debugger.
Dialogue: 0,0:04:03.12,0:04:05.28,Default,,0,0,0,,So if you hit a breakpoint, and
Dialogue: 0,0:04:05.28,0:04:07.32,Default,,0,0,0,,there is a Metal texture there,
Dialogue: 0,0:04:07.80,0:04:09.21,Default,,0,0,0,,we'll pull back the data from
Dialogue: 0,0:04:09.21,0:04:11.43,Default,,0,0,0,,the metal texture on the GPU and
Dialogue: 0,0:04:11.43,0:04:12.72,Default,,0,0,0,,let you view it there and then.
Dialogue: 0,0:04:12.92,0:04:14.11,Default,,0,0,0,,Similarly, with buffers and
Dialogue: 0,0:04:14.11,0:04:14.59,Default,,0,0,0,,samplers.
Dialogue: 0,0:04:15.49,0:04:17.38,Default,,0,0,0,,This is great for those cases
Dialogue: 0,0:04:17.38,0:04:19.80,Default,,0,0,0,,where a full frame capture might
Dialogue: 0,0:04:19.80,0:04:21.74,Default,,0,0,0,,be too invasive, for instance,
Dialogue: 0,0:04:21.74,0:04:22.79,Default,,0,0,0,,if you're debugging your
Dialogue: 0,0:04:22.79,0:04:24.16,Default,,0,0,0,,resource loading or some of the
Dialogue: 0,0:04:24.16,0:04:24.55,Default,,0,0,0,,setup code.
Dialogue: 0,0:04:24.55,0:04:27.51,Default,,0,0,0,,It is also great in cases where
Dialogue: 0,0:04:27.51,0:04:28.92,Default,,0,0,0,,you're debugging some compute
Dialogue: 0,0:04:28.92,0:04:32.61,Default,,0,0,0,,workloads as well.
Dialogue: 0,0:04:33.03,0:04:35.16,Default,,0,0,0,,So last year we introduced
Dialogue: 0,0:04:35.42,0:04:37.06,Default,,0,0,0,,support for rich filtering
Dialogue: 0,0:04:37.27,0:04:38.61,Default,,0,0,0,,throughout the frame debugger,
Dialogue: 0,0:04:38.69,0:04:41.53,Default,,0,0,0,,so that you could filter both on
Dialogue: 0,0:04:41.53,0:04:42.95,Default,,0,0,0,,things like resource properties,
Dialogue: 0,0:04:43.43,0:04:44.36,Default,,0,0,0,,but also within the frame
Dialogue: 0,0:04:44.36,0:04:47.16,Default,,0,0,0,,navigator, you can filter based
Dialogue: 0,0:04:47.16,0:04:49.61,Default,,0,0,0,,on contextual data, so what
Dialogue: 0,0:04:49.94,0:04:51.15,Default,,0,0,0,,resources you're using at a
Dialogue: 0,0:04:51.15,0:04:52.51,Default,,0,0,0,,given draw call will let that
Dialogue: 0,0:04:52.51,0:04:53.57,Default,,0,0,0,,draw call show up.
Dialogue: 0,0:04:53.76,0:04:55.20,Default,,0,0,0,,Well we've taken this to the
Dialogue: 0,0:04:55.20,0:04:56.63,Default,,0,0,0,,next level this year, with
Dialogue: 0,0:04:56.63,0:04:58.14,Default,,0,0,0,,support for data mining
Dialogue: 0,0:04:58.14,0:04:59.48,Default,,0,0,0,,throughout your capture tray.
Dialogue: 0,0:05:00.16,0:05:01.72,Default,,0,0,0,,So now, when you type, we'll
Dialogue: 0,0:05:01.72,0:05:03.63,Default,,0,0,0,,give you context aware, or
Dialogue: 0,0:05:03.63,0:05:04.87,Default,,0,0,0,,complete suggestions.
Dialogue: 0,0:05:05.71,0:05:07.89,Default,,0,0,0,,And we now allow compound terms.
Dialogue: 0,0:05:08.33,0:05:10.24,Default,,0,0,0,,So now if you search for a given
Dialogue: 0,0:05:10.24,0:05:12.51,Default,,0,0,0,,encoder, and then you search for
Dialogue: 0,0:05:12.51,0:05:14.70,Default,,0,0,0,,a texture, we'll only show you
Dialogue: 0,0:05:14.70,0:05:15.81,Default,,0,0,0,,auto-complete suggestions for
Dialogue: 0,0:05:15.81,0:05:17.03,Default,,0,0,0,,the textures that are actually
Dialogue: 0,0:05:17.03,0:05:22.35,Default,,0,0,0,,used within that encoder.
Dialogue: 0,0:05:22.95,0:05:24.39,Default,,0,0,0,,One of our most requested
Dialogue: 0,0:05:24.39,0:05:25.81,Default,,0,0,0,,features over the years has been
Dialogue: 0,0:05:25.81,0:05:27.11,Default,,0,0,0,,support for pixel inspection.
Dialogue: 0,0:05:28.39,0:05:29.50,Default,,0,0,0,,And we've finally caught up with
Dialogue: 0,0:05:29.50,0:05:29.77,Default,,0,0,0,,that.
Dialogue: 0,0:05:30.39,0:05:32.19,Default,,0,0,0,,So now you can do detailed
Dialogue: 0,0:05:32.19,0:05:34.89,Default,,0,0,0,,inspection of individual pixels
Dialogue: 0,0:05:35.20,0:05:36.71,Default,,0,0,0,,within your textures and your
Dialogue: 0,0:05:36.71,0:05:37.49,Default,,0,0,0,,render targets.
Dialogue: 0,0:05:38.05,0:05:39.37,Default,,0,0,0,,And if you have multiple
Dialogue: 0,0:05:39.37,0:05:40.20,Default,,0,0,0,,attachments to your render
Dialogue: 0,0:05:40.20,0:05:41.61,Default,,0,0,0,,targets, we'll show you the
Dialogue: 0,0:05:41.66,0:05:43.37,Default,,0,0,0,,pixel values for the same
Dialogue: 0,0:05:43.37,0:05:45.21,Default,,0,0,0,,location in each attachment at
Dialogue: 0,0:05:45.21,0:05:45.87,Default,,0,0,0,,the same time.
Dialogue: 0,0:05:45.98,0:05:47.15,Default,,0,0,0,,So it's really good if you're
Dialogue: 0,0:05:47.15,0:05:48.84,Default,,0,0,0,,trying to debug what the color
Dialogue: 0,0:05:48.84,0:05:50.14,Default,,0,0,0,,value is alongside that and
Dialogue: 0,0:05:50.14,0:05:51.04,Default,,0,0,0,,stencil and such like.
Dialogue: 0,0:05:51.35,0:05:52.92,Default,,0,0,0,,It's also very valuable for
Dialogue: 0,0:05:52.92,0:05:54.52,Default,,0,0,0,,debugging compute workloads if
Dialogue: 0,0:05:54.52,0:05:55.75,Default,,0,0,0,,you're working with images there
Dialogue: 0,0:05:55.75,0:05:57.00,Default,,0,0,0,,and you are, for instance,
Dialogue: 0,0:05:57.00,0:05:58.24,Default,,0,0,0,,halfway through your CNN and you
Dialogue: 0,0:05:58.24,0:05:59.69,Default,,0,0,0,,want to test watch to see what
Dialogue: 0,0:05:59.69,0:06:01.04,Default,,0,0,0,,the exact values in the buffers
Dialogue: 0,0:06:01.04,0:06:01.31,Default,,0,0,0,,are.
Dialogue: 0,0:06:03.52,0:06:07.55,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:06:08.05,0:06:09.03,Default,,0,0,0,,>> Another new feature we
Dialogue: 0,0:06:09.03,0:06:10.56,Default,,0,0,0,,introduced last year was our
Dialogue: 0,0:06:10.56,0:06:12.44,Default,,0,0,0,,vertex attribute viewer, where
Dialogue: 0,0:06:12.44,0:06:14.34,Default,,0,0,0,,you can see all the vertex data
Dialogue: 0,0:06:14.49,0:06:16.38,Default,,0,0,0,,as it goes into your vertex
Dialogue: 0,0:06:16.38,0:06:18.25,Default,,0,0,0,,shader, you know, shown on a per
Dialogue: 0,0:06:18.25,0:06:19.86,Default,,0,0,0,,vertex basis.
Dialogue: 0,0:06:20.50,0:06:21.45,Default,,0,0,0,,Well, this year, we've added
Dialogue: 0,0:06:21.45,0:06:23.63,Default,,0,0,0,,support for viewing the outputs
Dialogue: 0,0:06:23.63,0:06:25.56,Default,,0,0,0,,from your vertex shader as well,
Dialogue: 0,0:06:25.70,0:06:27.77,Default,,0,0,0,,and we will display this inline
Dialogue: 0,0:06:28.08,0:06:29.78,Default,,0,0,0,,with all the other input data,
Dialogue: 0,0:06:30.15,0:06:31.48,Default,,0,0,0,,so in this case, you can see
Dialogue: 0,0:06:31.48,0:06:33.31,Default,,0,0,0,,your position inputs, and your
Dialogue: 0,0:06:33.31,0:06:34.60,Default,,0,0,0,,position outputs, at the same
Dialogue: 0,0:06:34.60,0:06:35.00,Default,,0,0,0,,time.
Dialogue: 0,0:06:38.05,0:06:38.87,Default,,0,0,0,,Well, to show you all these
Dialogue: 0,0:06:38.87,0:06:40.08,Default,,0,0,0,,great new features in action,
Dialogue: 0,0:06:40.08,0:06:41.26,Default,,0,0,0,,I'd like to invite my colleague,
Dialogue: 0,0:06:41.49,0:06:42.69,Default,,0,0,0,,Max, to the stage, who is going
Dialogue: 0,0:06:42.69,0:06:44.11,Default,,0,0,0,,to give you a demo of all this
Dialogue: 0,0:06:44.11,0:06:45.08,Default,,0,0,0,,new stuff.
Dialogue: 0,0:06:46.52,0:06:49.56,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:06:50.06,0:06:51.96,Default,,0,0,0,,>> Hello. Great to see you here
Dialogue: 0,0:06:51.96,0:06:52.39,Default,,0,0,0,,today.
Dialogue: 0,0:06:52.53,0:06:57.71,Default,,0,0,0,,I hope you are doing fine and
Dialogue: 0,0:06:57.71,0:06:59.78,Default,,0,0,0,,you are as hyped about Metal as
Dialogue: 0,0:06:59.78,0:07:00.24,Default,,0,0,0,,we are.
Dialogue: 0,0:07:00.64,0:07:02.62,Default,,0,0,0,,Xcode GPU debugger helps you
Dialogue: 0,0:07:02.62,0:07:04.46,Default,,0,0,0,,debugging your GPU and the Metal
Dialogue: 0,0:07:04.46,0:07:05.15,Default,,0,0,0,,usage.
Dialogue: 0,0:07:05.62,0:07:07.36,Default,,0,0,0,,I am Max, and I am going to
Dialogue: 0,0:07:07.36,0:07:08.50,Default,,0,0,0,,maximize your debugging
Dialogue: 0,0:07:08.50,0:07:09.89,Default,,0,0,0,,experience, showing our new
Dialogue: 0,0:07:09.89,0:07:10.25,Default,,0,0,0,,features.
Dialogue: 0,0:07:11.52,0:07:14.70,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:07:15.20,0:07:17.11,Default,,0,0,0,,>> Yeah, let me run my demo app.
Dialogue: 0,0:07:19.58,0:07:21.68,Default,,0,0,0,,It is rendering a beautiful
Dialogue: 0,0:07:21.68,0:07:24.06,Default,,0,0,0,,scenery, reflects snowy
Dialogue: 0,0:07:24.06,0:07:26.27,Default,,0,0,0,,mountains, grass that is waving
Dialogue: 0,0:07:26.27,0:07:27.94,Default,,0,0,0,,in the wind, and to make it even
Dialogue: 0,0:07:27.94,0:07:29.99,Default,,0,0,0,,look nicer, I added some
Dialogue: 0,0:07:29.99,0:07:31.85,Default,,0,0,0,,particles that are glowing in
Dialogue: 0,0:07:32.61,0:07:33.18,Default,,0,0,0,,the air.
Dialogue: 0,0:07:33.22,0:07:35.64,Default,,0,0,0,,But as you can see, the
Dialogue: 0,0:07:35.64,0:07:37.83,Default,,0,0,0,,particles of the grass, there is
Dialogue: 0,0:07:37.83,0:07:39.32,Default,,0,0,0,,some kind of a problem.
Dialogue: 0,0:07:39.55,0:07:41.20,Default,,0,0,0,,So let's figure this out.
Dialogue: 0,0:07:41.76,0:07:46.30,Default,,0,0,0,,As a first step, let's check if
Dialogue: 0,0:07:46.30,0:07:47.34,Default,,0,0,0,,the texture is correct.
Dialogue: 0,0:07:47.91,0:07:49.44,Default,,0,0,0,,Let me set a breakpoint in the
Dialogue: 0,0:07:49.44,0:07:50.66,Default,,0,0,0,,rendering loop, where this
Dialogue: 0,0:07:50.72,0:07:52.12,Default,,0,0,0,,texture is being used.
Dialogue: 0,0:07:53.22,0:07:54.85,Default,,0,0,0,,Hovering over a variable gives
Dialogue: 0,0:07:54.85,0:07:57.23,Default,,0,0,0,,you access to Xcode's data tips,
Dialogue: 0,0:07:57.57,0:07:59.45,Default,,0,0,0,,and you can quick look into the
Dialogue: 0,0:07:59.45,0:08:00.20,Default,,0,0,0,,texture data.
Dialogue: 0,0:08:00.73,0:08:02.30,Default,,0,0,0,,This data is fetched live from
Dialogue: 0,0:08:02.30,0:08:04.00,Default,,0,0,0,,the GPU, and it helps you to
Dialogue: 0,0:08:04.00,0:08:05.58,Default,,0,0,0,,verify the resources you are
Dialogue: 0,0:08:05.58,0:08:07.47,Default,,0,0,0,,binding, and, of course, it
Dialogue: 0,0:08:07.47,0:08:09.14,Default,,0,0,0,,works with all Metal resources.
Dialogue: 0,0:08:09.86,0:08:12.20,Default,,0,0,0,,The texture in this case looks
Dialogue: 0,0:08:12.20,0:08:12.92,Default,,0,0,0,,correct.
Dialogue: 0,0:08:13.41,0:08:20.01,Default,,0,0,0,,So what else can we check?
Dialogue: 0,0:08:20.28,0:08:21.79,Default,,0,0,0,,Our next step is to capture a
Dialogue: 0,0:08:21.79,0:08:22.23,Default,,0,0,0,,frame.
Dialogue: 0,0:08:22.69,0:08:25.34,Default,,0,0,0,,Using the little camera icon in
Dialogue: 0,0:08:25.34,0:08:27.37,Default,,0,0,0,,the debug bar, let's you capture
Dialogue: 0,0:08:27.37,0:08:29.87,Default,,0,0,0,,a frame, but using a long press
Dialogue: 0,0:08:30.15,0:08:31.56,Default,,0,0,0,,gives you access to capture
Dialogue: 0,0:08:31.56,0:08:33.60,Default,,0,0,0,,scopes and command cues.
Dialogue: 0,0:08:33.88,0:08:36.11,Default,,0,0,0,,A capture scope is one path
Dialogue: 0,0:08:36.31,0:08:37.60,Default,,0,0,0,,through your rendering pipeline.
Dialogue: 0,0:08:37.85,0:08:39.04,Default,,0,0,0,,Like my environment map, I'm
Dialogue: 0,0:08:39.04,0:08:40.40,Default,,0,0,0,,only updating every couple of
Dialogue: 0,0:08:40.40,0:08:41.07,Default,,0,0,0,,frames.
Dialogue: 0,0:08:41.83,0:08:43.37,Default,,0,0,0,,In this case, however, we want
Dialogue: 0,0:08:43.37,0:08:44.60,Default,,0,0,0,,to capture rendering, this is
Dialogue: 0,0:08:44.60,0:08:45.64,Default,,0,0,0,,where the particles are being
Dialogue: 0,0:08:45.64,0:08:45.94,Default,,0,0,0,,drawn.
Dialogue: 0,0:08:46.87,0:08:49.84,Default,,0,0,0,,So let's capture this.
Dialogue: 0,0:08:50.05,0:08:50.95,Default,,0,0,0,,And already done.
Dialogue: 0,0:08:51.48,0:08:54.10,Default,,0,0,0,,For those who are not familiar
Dialogue: 0,0:08:54.10,0:08:55.96,Default,,0,0,0,,with our tool, I will give you a
Dialogue: 0,0:08:55.96,0:08:56.99,Default,,0,0,0,,quick run through of all the
Dialogue: 0,0:08:56.99,0:08:58.19,Default,,0,0,0,,views you are seeing here.
Dialogue: 0,0:08:58.19,0:09:01.73,Default,,0,0,0,,On the left side, we have the
Dialogue: 0,0:09:01.73,0:09:02.72,Default,,0,0,0,,debug navigator.
Dialogue: 0,0:09:03.19,0:09:04.28,Default,,0,0,0,,It is in [inaudible]
Dialogue: 0,0:09:04.28,0:09:06.40,Default,,0,0,0,,presentation of your frame, and
Dialogue: 0,0:09:06.40,0:09:08.02,Default,,0,0,0,,to help you, we automatically
Dialogue: 0,0:09:08.02,0:09:10.32,Default,,0,0,0,,group by command buffers and
Dialogue: 0,0:09:10.32,0:09:11.38,Default,,0,0,0,,command encoders.
Dialogue: 0,0:09:12.35,0:09:13.93,Default,,0,0,0,,But also your debugging groups
Dialogue: 0,0:09:13.93,0:09:15.94,Default,,0,0,0,,are shown here, giving you fine
Dialogue: 0,0:09:15.94,0:09:17.57,Default,,0,0,0,,grain control over the grouping.
Dialogue: 0,0:09:17.91,0:09:19.86,Default,,0,0,0,,You can select the draw call or
Dialogue: 0,0:09:19.86,0:09:21.53,Default,,0,0,0,,any other Metal call to inspect
Dialogue: 0,0:09:21.53,0:09:22.35,Default,,0,0,0,,further details.
Dialogue: 0,0:09:23.14,0:09:27.41,Default,,0,0,0,,The editor in the center is
Dialogue: 0,0:09:27.41,0:09:29.11,Default,,0,0,0,,showing the bound resources.
Dialogue: 0,0:09:29.50,0:09:30.85,Default,,0,0,0,,All the Metal objects you are
Dialogue: 0,0:09:30.85,0:09:32.99,Default,,0,0,0,,using in the selected API call.
Dialogue: 0,0:09:33.99,0:09:35.98,Default,,0,0,0,,Again, you can see labeling your
Dialogue: 0,0:09:35.98,0:09:37.73,Default,,0,0,0,,objects will greatly increase
Dialogue: 0,0:09:37.73,0:09:38.54,Default,,0,0,0,,readability.
Dialogue: 0,0:09:38.93,0:09:41.31,Default,,0,0,0,,So I suggest to do that.
Dialogue: 0,0:09:42.96,0:09:45.03,Default,,0,0,0,,The editor on the right side is
Dialogue: 0,0:09:45.03,0:09:46.56,Default,,0,0,0,,showing the attachments, the
Dialogue: 0,0:09:46.56,0:09:48.56,Default,,0,0,0,,output of the last issued draw
Dialogue: 0,0:09:48.56,0:09:48.94,Default,,0,0,0,,call.
Dialogue: 0,0:09:49.14,0:09:50.07,Default,,0,0,0,,So whenever you are, like,
Dialogue: 0,0:09:50.07,0:09:51.42,Default,,0,0,0,,navigating through your frame,
Dialogue: 0,0:09:51.61,0:09:53.11,Default,,0,0,0,,you instantly see where you are.
Dialogue: 0,0:09:53.94,0:09:56.35,Default,,0,0,0,,On the bottom, we have our
Dialogue: 0,0:09:56.35,0:09:58.17,Default,,0,0,0,,variables view, where you can
Dialogue: 0,0:09:58.17,0:10:00.16,Default,,0,0,0,,access all the states of each
Dialogue: 0,0:10:00.16,0:10:01.03,Default,,0,0,0,,Metal object.
Dialogue: 0,0:10:01.51,0:10:03.30,Default,,0,0,0,,Back to our problem with the
Dialogue: 0,0:10:03.30,0:10:04.37,Default,,0,0,0,,particles.
Dialogue: 0,0:10:04.79,0:10:06.22,Default,,0,0,0,,Here, we can make use of our new
Dialogue: 0,0:10:06.22,0:10:07.76,Default,,0,0,0,,super powerful filtering.
Dialogue: 0,0:10:08.50,0:10:11.23,Default,,0,0,0,,So I know the particles are
Dialogue: 0,0:10:11.23,0:10:12.67,Default,,0,0,0,,drawn somewhere in my forward
Dialogue: 0,0:10:12.67,0:10:12.98,Default,,0,0,0,,rendering.
Dialogue: 0,0:10:13.32,0:10:15.56,Default,,0,0,0,,So let me filter for this.
Dialogue: 0,0:10:15.87,0:10:17.58,Default,,0,0,0,,Filtering for command encoder
Dialogue: 0,0:10:17.98,0:10:20.79,Default,,0,0,0,,will only show API calls inside
Dialogue: 0,0:10:20.79,0:10:21.93,Default,,0,0,0,,this command encoder.
Dialogue: 0,0:10:21.93,0:10:22.85,Default,,0,0,0,,Like this.
Dialogue: 0,0:10:23.45,0:10:25.49,Default,,0,0,0,,But it is still a lot.
Dialogue: 0,0:10:26.65,0:10:28.39,Default,,0,0,0,,So let me add an additional
Dialogue: 0,0:10:28.39,0:10:28.74,Default,,0,0,0,,filter.
Dialogue: 0,0:10:29.09,0:10:30.62,Default,,0,0,0,,We know it is using our particle
Dialogue: 0,0:10:30.62,0:10:31.07,Default,,0,0,0,,texture.
Dialogue: 0,0:10:34.56,0:10:37.19,Default,,0,0,0,,Filtering for texture will only
Dialogue: 0,0:10:37.19,0:10:39.48,Default,,0,0,0,,show draw calls using this
Dialogue: 0,0:10:39.48,0:10:39.90,Default,,0,0,0,,texture.
Dialogue: 0,0:10:40.58,0:10:43.66,Default,,0,0,0,,And boom, this combination of
Dialogue: 0,0:10:43.66,0:10:46.05,Default,,0,0,0,,filters results in a single API
Dialogue: 0,0:10:46.05,0:10:47.99,Default,,0,0,0,,call we want to inspect further.
Dialogue: 0,0:10:48.73,0:10:49.54,Default,,0,0,0,,So let's go here.
Dialogue: 0,0:10:50.02,0:10:53.30,Default,,0,0,0,,Let's take a look at the bound
Dialogue: 0,0:10:53.30,0:10:54.17,Default,,0,0,0,,resources.
Dialogue: 0,0:10:55.05,0:10:57.03,Default,,0,0,0,,The vertex attributes combines
Dialogue: 0,0:10:57.03,0:10:58.46,Default,,0,0,0,,the data that is going into your
Dialogue: 0,0:10:58.46,0:11:01.03,Default,,0,0,0,,vertex function and leaving it.
Dialogue: 0,0:11:01.30,0:11:02.62,Default,,0,0,0,,Maybe we are doing something
Dialogue: 0,0:11:02.62,0:11:05.11,Default,,0,0,0,,wrong with our geometry here, so
Dialogue: 0,0:11:05.11,0:11:06.20,Default,,0,0,0,,let's open this by double
Dialogue: 0,0:11:06.20,0:11:06.62,Default,,0,0,0,,clicking.
Dialogue: 0,0:11:07.63,0:11:09.70,Default,,0,0,0,,Let me also hide the attachments
Dialogue: 0,0:11:09.70,0:11:10.41,Default,,0,0,0,,for a moment.
Dialogue: 0,0:11:11.63,0:11:13.04,Default,,0,0,0,,Last year, we started to show
Dialogue: 0,0:11:13.04,0:11:14.44,Default,,0,0,0,,you a nice layout for all the
Dialogue: 0,0:11:14.44,0:11:14.98,Default,,0,0,0,,buffers.
Dialogue: 0,0:11:16.52,0:11:17.84,Default,,0,0,0,,And this year we added something
Dialogue: 0,0:11:17.84,0:11:18.19,Default,,0,0,0,,more.
Dialogue: 0,0:11:18.99,0:11:20.32,Default,,0,0,0,,In the header, you can see the
Dialogue: 0,0:11:20.32,0:11:21.75,Default,,0,0,0,,direction where the data is
Dialogue: 0,0:11:21.75,0:11:22.31,Default,,0,0,0,,flowing.
Dialogue: 0,0:11:23.27,0:11:28.34,Default,,0,0,0,,And if we take a look, this is
Dialogue: 0,0:11:28.34,0:11:29.63,Default,,0,0,0,,the output data, the data that
Dialogue: 0,0:11:29.63,0:11:31.11,Default,,0,0,0,,is leaving the vertex function.
Dialogue: 0,0:11:31.38,0:11:32.97,Default,,0,0,0,,This is the output position of
Dialogue: 0,0:11:33.11,0:11:35.78,Default,,0,0,0,,every particle vertex, and as we
Dialogue: 0,0:11:35.78,0:11:37.34,Default,,0,0,0,,can see here, there is no
Dialogue: 0,0:11:37.38,0:11:39.29,Default,,0,0,0,,obvious error, like big numbers
Dialogue: 0,0:11:39.29,0:11:41.17,Default,,0,0,0,,or something like this, so I
Dialogue: 0,0:11:41.17,0:11:42.71,Default,,0,0,0,,assume this data is correct.
Dialogue: 0,0:11:43.45,0:11:45.34,Default,,0,0,0,,So what else can we check?
Dialogue: 0,0:11:46.04,0:11:50.39,Default,,0,0,0,,The debug navigator now gives
Dialogue: 0,0:11:50.39,0:11:51.84,Default,,0,0,0,,you quick access to all the
Dialogue: 0,0:11:51.84,0:11:53.60,Default,,0,0,0,,views related to this draw call.
Dialogue: 0,0:11:53.93,0:11:54.85,Default,,0,0,0,,Let's switch back to the
Dialogue: 0,0:11:54.85,0:11:55.75,Default,,0,0,0,,attachments again.
Dialogue: 0,0:11:56.26,0:12:01.31,Default,,0,0,0,,We are using two render targets
Dialogue: 0,0:12:01.31,0:12:01.51,Default,,0,0,0,,here.
Dialogue: 0,0:12:02.44,0:12:04.57,Default,,0,0,0,,Color, and depth.
Dialogue: 0,0:12:05.08,0:12:06.80,Default,,0,0,0,,Let's inspect some more pixel
Dialogue: 0,0:12:06.80,0:12:07.38,Default,,0,0,0,,values.
Dialogue: 0,0:12:07.88,0:12:11.59,Default,,0,0,0,,Using the inspect pixels button
Dialogue: 0,0:12:11.59,0:12:13.16,Default,,0,0,0,,in the lower right corner, we
Dialogue: 0,0:12:13.23,0:12:16.46,Default,,0,0,0,,will present a new tool.
Dialogue: 0,0:12:16.56,0:12:20.39,Default,,0,0,0,,A loop. This loop displays the
Dialogue: 0,0:12:20.39,0:12:22.11,Default,,0,0,0,,value like they are outputted by
Dialogue: 0,0:12:22.11,0:12:23.30,Default,,0,0,0,,the fragment function.
Dialogue: 0,0:12:24.25,0:12:26.26,Default,,0,0,0,,And you can move the loop around
Dialogue: 0,0:12:26.26,0:12:27.51,Default,,0,0,0,,all the render targets.
Dialogue: 0,0:12:28.39,0:12:29.80,Default,,0,0,0,,But you can also use your arrow
Dialogue: 0,0:12:29.80,0:12:31.80,Default,,0,0,0,,keys for pixel precise control,
Dialogue: 0,0:12:31.80,0:12:33.19,Default,,0,0,0,,even if you are not zoomed in.
Dialogue: 0,0:12:34.40,0:12:36.57,Default,,0,0,0,,Also, you notice, all the loops
Dialogue: 0,0:12:36.57,0:12:37.81,Default,,0,0,0,,are being synchronized between
Dialogue: 0,0:12:37.81,0:12:38.96,Default,,0,0,0,,all the render targets.
Dialogue: 0,0:12:39.25,0:12:40.98,Default,,0,0,0,,That helps you to relate values.
Dialogue: 0,0:12:41.26,0:12:43.31,Default,,0,0,0,,Let me find an interesting pixel
Dialogue: 0,0:12:45.06,0:12:45.14,Default,,0,0,0,,now.
Dialogue: 0,0:12:45.36,0:12:46.43,Default,,0,0,0,,Using a long press will
Dialogue: 0,0:12:46.43,0:12:47.67,Default,,0,0,0,,instantly move the cursor.
Dialogue: 0,0:12:48.29,0:12:51.69,Default,,0,0,0,,And here we can see something
Dialogue: 0,0:12:51.69,0:12:52.58,Default,,0,0,0,,strange.
Dialogue: 0,0:12:53.47,0:12:55.68,Default,,0,0,0,,The depth value inside and
Dialogue: 0,0:12:55.68,0:12:57.59,Default,,0,0,0,,outside a particle is different,
Dialogue: 0,0:12:58.08,0:12:59.80,Default,,0,0,0,,and let's opt, our particles
Dialogue: 0,0:12:59.80,0:13:00.95,Default,,0,0,0,,shouldn't write into the depths
Dialogue: 0,0:13:00.95,0:13:01.90,Default,,0,0,0,,buffer, of course.
Dialogue: 0,0:13:02.53,0:13:03.90,Default,,0,0,0,,That will be an easy fix.
Dialogue: 0,0:13:04.32,0:13:05.98,Default,,0,0,0,,And I'm also sure our new GPU
Dialogue: 0,0:13:05.98,0:13:07.54,Default,,0,0,0,,debugger will help you fixing
Dialogue: 0,0:13:07.54,0:13:08.89,Default,,0,0,0,,your issues with the GPU.
Dialogue: 0,0:13:09.91,0:13:11.35,Default,,0,0,0,,I hope we see each other in the
Dialogue: 0,0:13:11.35,0:13:13.33,Default,,0,0,0,,labs tomorrow morning, or at the
Dialogue: 0,0:13:13.33,0:13:14.23,Default,,0,0,0,,[inaudible] later today.
Dialogue: 0,0:13:14.94,0:13:16.30,Default,,0,0,0,,Back to my colleague, Seth.
Dialogue: 0,0:13:17.52,0:13:23.26,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:13:23.76,0:13:26.28,Default,,0,0,0,,>> So now, onto GPU profiling.
Dialogue: 0,0:13:27.90,0:13:29.80,Default,,0,0,0,,As you know, performance is
Dialogue: 0,0:13:29.80,0:13:30.90,Default,,0,0,0,,crucial to games and other
Dialogue: 0,0:13:30.90,0:13:32.60,Default,,0,0,0,,graphical applications, and
Dialogue: 0,0:13:32.60,0:13:33.97,Default,,0,0,0,,achieving a consistent, fast
Dialogue: 0,0:13:33.97,0:13:35.32,Default,,0,0,0,,framework is always necessary.
Dialogue: 0,0:13:36.11,0:13:37.22,Default,,0,0,0,,But on the flip side, you want
Dialogue: 0,0:13:37.22,0:13:38.62,Default,,0,0,0,,to get the most of the GPU for
Dialogue: 0,0:13:38.62,0:13:40.07,Default,,0,0,0,,the best looking game as well,
Dialogue: 0,0:13:40.07,0:13:41.76,Default,,0,0,0,,and at the same time, increase
Dialogue: 0,0:13:41.76,0:13:43.11,Default,,0,0,0,,efficiency for a longer game
Dialogue: 0,0:13:43.11,0:13:43.85,Default,,0,0,0,,experience.
Dialogue: 0,0:13:44.56,0:13:45.73,Default,,0,0,0,,Well, for all this, you need to
Dialogue: 0,0:13:45.73,0:13:47.21,Default,,0,0,0,,use the GPU Profiling tools.
Dialogue: 0,0:13:47.66,0:13:53.05,Default,,0,0,0,,The first tool I want to talk
Dialogue: 0,0:13:53.05,0:13:54.55,Default,,0,0,0,,about is Metal System Trace.
Dialogue: 0,0:13:55.40,0:13:56.24,Default,,0,0,0,,This is our tool for
Dialogue: 0,0:13:56.24,0:13:58.45,Default,,0,0,0,,investigating timing issues, by
Dialogue: 0,0:13:58.45,0:14:00.14,Default,,0,0,0,,which I mean investigating cases
Dialogue: 0,0:14:00.14,0:14:02.45,Default,,0,0,0,,where the CPU and the GPU might
Dialogue: 0,0:14:02.45,0:14:04.66,Default,,0,0,0,,not be running in parallel,
Dialogue: 0,0:14:04.66,0:14:06.29,Default,,0,0,0,,because you have some synching
Dialogue: 0,0:14:06.29,0:14:07.84,Default,,0,0,0,,operations by mistake, and
Dialogue: 0,0:14:07.84,0:14:08.73,Default,,0,0,0,,you're forcing them to work in
Dialogue: 0,0:14:08.73,0:14:09.12,Default,,0,0,0,,serial.
Dialogue: 0,0:14:09.80,0:14:10.59,Default,,0,0,0,,It's also great for
Dialogue: 0,0:14:10.59,0:14:12.17,Default,,0,0,0,,investigating those cases where
Dialogue: 0,0:14:12.40,0:14:13.59,Default,,0,0,0,,you're mostly achieving the
Dialogue: 0,0:14:13.59,0:14:14.68,Default,,0,0,0,,framework you want, but
Dialogue: 0,0:14:14.68,0:14:15.98,Default,,0,0,0,,occasionally you get a stutter,
Dialogue: 0,0:14:16.25,0:14:17.13,Default,,0,0,0,,and you need to figure out,
Dialogue: 0,0:14:17.13,0:14:18.31,Default,,0,0,0,,okay, what is going wrong in
Dialogue: 0,0:14:18.31,0:14:19.23,Default,,0,0,0,,that particular frame?
Dialogue: 0,0:14:20.11,0:14:21.68,Default,,0,0,0,,It lets you trace your Metal
Dialogue: 0,0:14:21.68,0:14:22.97,Default,,0,0,0,,workloads through the system,
Dialogue: 0,0:14:23.05,0:14:25.44,Default,,0,0,0,,from CPU to GPU to display.
Dialogue: 0,0:14:27.44,0:14:29.61,Default,,0,0,0,,This year, we've added support
Dialogue: 0,0:14:29.61,0:14:31.30,Default,,0,0,0,,for VR applications, with
Dialogue: 0,0:14:31.30,0:14:33.06,Default,,0,0,0,,specific VR trace points for
Dialogue: 0,0:14:33.06,0:14:35.84,Default,,0,0,0,,activities like when you query
Dialogue: 0,0:14:35.84,0:14:38.92,Default,,0,0,0,,the head set for post-data, when
Dialogue: 0,0:14:38.92,0:14:40.52,Default,,0,0,0,,you submit your surfaces to the
Dialogue: 0,0:14:40.52,0:14:43.09,Default,,0,0,0,,VR compositor, when it does its
Dialogue: 0,0:14:43.09,0:14:45.20,Default,,0,0,0,,work to do the compositing, and
Dialogue: 0,0:14:45.20,0:14:46.95,Default,,0,0,0,,finally, when it hits the glass
Dialogue: 0,0:14:47.11,0:14:48.51,Default,,0,0,0,,on the headset.
Dialogue: 0,0:14:49.58,0:14:51.41,Default,,0,0,0,,In effect, it lets you trace
Dialogue: 0,0:14:51.41,0:14:53.37,Default,,0,0,0,,from motion to photon.
Dialogue: 0,0:14:55.98,0:14:58.27,Default,,0,0,0,,We've also added support this
Dialogue: 0,0:14:58.27,0:14:59.57,Default,,0,0,0,,year for the new ProMotion
Dialogue: 0,0:14:59.57,0:15:02.08,Default,,0,0,0,,displays, as you'll find in the
Dialogue: 0,0:15:02.08,0:15:04.10,Default,,0,0,0,,new iPads, iPad Pros released
Dialogue: 0,0:15:04.10,0:15:06.07,Default,,0,0,0,,early this week, and also
Dialogue: 0,0:15:06.07,0:15:08.05,Default,,0,0,0,,support for external GPUs on
Dialogue: 0,0:15:08.05,0:15:08.67,Default,,0,0,0,,macOS.
Dialogue: 0,0:15:09.48,0:15:10.78,Default,,0,0,0,,It is also worth noting there
Dialogue: 0,0:15:10.78,0:15:11.91,Default,,0,0,0,,are some great improvements in
Dialogue: 0,0:15:11.91,0:15:13.85,Default,,0,0,0,,the instruments, to make it much
Dialogue: 0,0:15:13.85,0:15:15.62,Default,,0,0,0,,easier to view other instruments
Dialogue: 0,0:15:15.79,0:15:17.65,Default,,0,0,0,,alongside Metal System Trace in
Dialogue: 0,0:15:17.65,0:15:20.39,Default,,0,0,0,,a more integrated fashion.
Dialogue: 0,0:15:20.82,0:15:22.78,Default,,0,0,0,,Our next profiling tool is the
Dialogue: 0,0:15:22.78,0:15:23.81,Default,,0,0,0,,GPU Shader Profiler.
Dialogue: 0,0:15:24.31,0:15:25.73,Default,,0,0,0,,The tool for probing shader
Dialogue: 0,0:15:25.73,0:15:26.33,Default,,0,0,0,,performance.
Dialogue: 0,0:15:27.08,0:15:28.32,Default,,0,0,0,,It is integrated into the frame
Dialogue: 0,0:15:28.32,0:15:29.63,Default,,0,0,0,,debugger, and lets you view
Dialogue: 0,0:15:29.63,0:15:31.47,Default,,0,0,0,,shader time on a per draw call
Dialogue: 0,0:15:31.47,0:15:33.12,Default,,0,0,0,,and per pipeline basis.
Dialogue: 0,0:15:33.69,0:15:37.42,Default,,0,0,0,,And if you're on iOS or tvOS, it
Dialogue: 0,0:15:37.42,0:15:39.24,Default,,0,0,0,,also lets you view it on a per
Dialogue: 0,0:15:39.24,0:15:39.96,Default,,0,0,0,,line basis.
Dialogue: 0,0:15:41.70,0:15:43.14,Default,,0,0,0,,Well, our first new tool this
Dialogue: 0,0:15:43.14,0:15:44.82,Default,,0,0,0,,year is designed to work hand in
Dialogue: 0,0:15:44.82,0:15:46.01,Default,,0,0,0,,hand with the GPU Shader
Dialogue: 0,0:15:46.01,0:15:46.50,Default,,0,0,0,,Profiler.
Dialogue: 0,0:15:48.64,0:15:50.30,Default,,0,0,0,,We call that Metal Pipeline
Dialogue: 0,0:15:50.30,0:15:51.05,Default,,0,0,0,,Statistics.
Dialogue: 0,0:15:53.04,0:15:55.44,Default,,0,0,0,,Metal Pipeline Statistics gives
Dialogue: 0,0:15:55.44,0:15:57.46,Default,,0,0,0,,you a direct line to the GPU
Dialogue: 0,0:15:57.46,0:15:59.31,Default,,0,0,0,,compiler to find out about the
Dialogue: 0,0:15:59.31,0:16:00.92,Default,,0,0,0,,quality of the machine code the
Dialogue: 0,0:16:00.92,0:16:02.95,Default,,0,0,0,,compiler is generating from your
Dialogue: 0,0:16:03.02,0:16:03.32,Default,,0,0,0,,shader.
Dialogue: 0,0:16:04.07,0:16:05.18,Default,,0,0,0,,It gives you a rich set of
Dialogue: 0,0:16:05.18,0:16:06.61,Default,,0,0,0,,statistics with things such as
Dialogue: 0,0:16:06.76,0:16:08.37,Default,,0,0,0,,instruction count, instruction
Dialogue: 0,0:16:08.37,0:16:10.24,Default,,0,0,0,,mix, by which I mean the
Dialogue: 0,0:16:10.24,0:16:11.80,Default,,0,0,0,,relative ratio of operations
Dialogue: 0,0:16:11.80,0:16:13.40,Default,,0,0,0,,such as ALU or memory or control
Dialogue: 0,0:16:13.40,0:16:15.83,Default,,0,0,0,,flow, and on GPUs where it is
Dialogue: 0,0:16:15.83,0:16:17.22,Default,,0,0,0,,relevant, it will also show you
Dialogue: 0,0:16:17.22,0:16:18.87,Default,,0,0,0,,register usage and occupancy.
Dialogue: 0,0:16:19.31,0:16:21.99,Default,,0,0,0,,For GPUs such as that, these
Dialogue: 0,0:16:22.02,0:16:23.44,Default,,0,0,0,,measures are crucial in
Dialogue: 0,0:16:23.44,0:16:25.31,Default,,0,0,0,,understanding what is the
Dialogue: 0,0:16:25.31,0:16:27.77,Default,,0,0,0,,limitations on how many shaders
Dialogue: 0,0:16:27.77,0:16:29.50,Default,,0,0,0,,can be scheduled simultaneously,
Dialogue: 0,0:16:30.18,0:16:32.49,Default,,0,0,0,,by which shader instances can be
Dialogue: 0,0:16:32.65,0:16:33.65,Default,,0,0,0,,scheduled simultaneously.
Dialogue: 0,0:16:34.88,0:16:37.98,Default,,0,0,0,,But even better are the new
Dialogue: 0,0:16:37.98,0:16:39.07,Default,,0,0,0,,compiler remarks.
Dialogue: 0,0:16:39.74,0:16:41.64,Default,,0,0,0,,With this, the GPU compiler will
Dialogue: 0,0:16:41.64,0:16:43.45,Default,,0,0,0,,give you direct actual guidance
Dialogue: 0,0:16:43.67,0:16:44.79,Default,,0,0,0,,on the performance of your
Dialogue: 0,0:16:44.79,0:16:46.51,Default,,0,0,0,,shader, and things you can do to
Dialogue: 0,0:16:46.51,0:16:48.56,Default,,0,0,0,,avoid performance hits, from
Dialogue: 0,0:16:48.56,0:16:49.96,Default,,0,0,0,,things such as slow math usage,
Dialogue: 0,0:16:50.26,0:16:51.78,Default,,0,0,0,,register spills, and stack
Dialogue: 0,0:16:51.78,0:16:52.22,Default,,0,0,0,,usage.
Dialogue: 0,0:16:52.80,0:16:56.91,Default,,0,0,0,,It's like having a GPU compiler
Dialogue: 0,0:16:56.91,0:16:59.64,Default,,0,0,0,,engineer built into every Xcode.
Dialogue: 0,0:17:00.74,0:17:02.81,Default,,0,0,0,,For each remark, it will explain
Dialogue: 0,0:17:02.95,0:17:06.25,Default,,0,0,0,,what it means, what you can do
Dialogue: 0,0:17:06.32,0:17:08.80,Default,,0,0,0,,to reduce it, and give you a
Dialogue: 0,0:17:08.80,0:17:11.01,Default,,0,0,0,,link to where you need to go to
Dialogue: 0,0:17:11.08,0:17:11.54,Default,,0,0,0,,fix it.
Dialogue: 0,0:17:12.70,0:17:13.96,Default,,0,0,0,,Well, to demo this new feature,
Dialogue: 0,0:17:13.96,0:17:15.04,Default,,0,0,0,,I'd like to invite my colleague
Dialogue: 0,0:17:15.26,0:17:16.94,Default,,0,0,0,,Jose to the stage, to give you a
Dialogue: 0,0:17:16.94,0:17:18.47,Default,,0,0,0,,tour of Metal Pipeline
Dialogue: 0,0:17:18.47,0:17:19.09,Default,,0,0,0,,Statistics.
Dialogue: 0,0:17:20.52,0:17:22.55,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:17:23.05,0:17:23.54,Default,,0,0,0,,>> Hello everyone.
Dialogue: 0,0:17:23.69,0:17:24.53,Default,,0,0,0,,My name is Jose Enrique
Dialogue: 0,0:17:24.53,0:17:24.61,Default,,0,0,0,,[inaudible].
Dialogue: 0,0:17:24.61,0:17:26.01,Default,,0,0,0,,I am going to present you a new
Dialogue: 0,0:17:26.01,0:17:27.56,Default,,0,0,0,,feature of our GPU friendly
Dialogue: 0,0:17:27.56,0:17:28.95,Default,,0,0,0,,debugger that will have you
Dialogue: 0,0:17:29.30,0:17:30.47,Default,,0,0,0,,produce good quality.
Dialogue: 0,0:17:30.84,0:17:32.42,Default,,0,0,0,,As you can see, we are replaying
Dialogue: 0,0:17:32.53,0:17:33.79,Default,,0,0,0,,a capture of Metal [inaudible]
Dialogue: 0,0:17:33.98,0:17:35.17,Default,,0,0,0,,demo for iOS.
Dialogue: 0,0:17:36.00,0:17:37.96,Default,,0,0,0,,The first thing I'm going to do,
Dialogue: 0,0:17:37.96,0:17:39.29,Default,,0,0,0,,I'm going to change my debug
Dialogue: 0,0:17:39.29,0:17:41.20,Default,,0,0,0,,navigator view from view frame
Dialogue: 0,0:17:41.20,0:17:42.77,Default,,0,0,0,,by call to view frame by
Dialogue: 0,0:17:42.77,0:17:43.50,Default,,0,0,0,,performance.
Dialogue: 0,0:17:44.03,0:17:46.92,Default,,0,0,0,,What this gives, what this view
Dialogue: 0,0:17:46.92,0:17:50.22,Default,,0,0,0,,gives is all these pipelines you
Dialogue: 0,0:17:50.22,0:17:53.96,Default,,0,0,0,,capture, sorted by time.
Dialogue: 0,0:17:54.15,0:17:56.07,Default,,0,0,0,,Remember, in Metal, a shader is
Dialogue: 0,0:17:56.07,0:17:57.16,Default,,0,0,0,,always linked to a pipeline,
Dialogue: 0,0:17:57.56,0:17:59.56,Default,,0,0,0,,therefore, this is a list of all
Dialogue: 0,0:17:59.56,0:18:00.66,Default,,0,0,0,,initiator combinations that are
Dialogue: 0,0:18:00.66,0:18:01.13,Default,,0,0,0,,available in [inaudible]
Dialogue: 0,0:18:01.13,0:18:01.47,Default,,0,0,0,,capture.
Dialogue: 0,0:18:02.49,0:18:04.51,Default,,0,0,0,,I am going to go to a
Dialogue: 0,0:18:04.51,0:18:05.30,Default,,0,0,0,,[inaudible] view of the most
Dialogue: 0,0:18:05.30,0:18:06.84,Default,,0,0,0,,expensive pipeline, to see if we
Dialogue: 0,0:18:06.84,0:18:07.87,Default,,0,0,0,,can improve the shaders.
Dialogue: 0,0:18:08.44,0:18:12.73,Default,,0,0,0,,As you can see, this view has
Dialogue: 0,0:18:12.73,0:18:13.59,Default,,0,0,0,,three sections.
Dialogue: 0,0:18:13.96,0:18:15.69,Default,,0,0,0,,On top, we have remarks.
Dialogue: 0,0:18:16.30,0:18:17.63,Default,,0,0,0,,Remarks are a unique approach to
Dialogue: 0,0:18:17.63,0:18:19.25,Default,,0,0,0,,the compiler shader quality.
Dialogue: 0,0:18:19.62,0:18:21.58,Default,,0,0,0,,As the report, final compiler
Dialogue: 0,0:18:22.12,0:18:23.49,Default,,0,0,0,,co-generation issues.
Dialogue: 0,0:18:24.65,0:18:26.33,Default,,0,0,0,,Remember, the GPU will execute
Dialogue: 0,0:18:26.33,0:18:28.21,Default,,0,0,0,,your shader millions of times
Dialogue: 0,0:18:28.21,0:18:30.05,Default,,0,0,0,,per frame, therefore, the
Dialogue: 0,0:18:30.05,0:18:31.45,Default,,0,0,0,,[inaudible] you can get, the
Dialogue: 0,0:18:31.45,0:18:33.75,Default,,0,0,0,,better the performance it will
Dialogue: 0,0:18:33.75,0:18:34.02,Default,,0,0,0,,have.
Dialogue: 0,0:18:35.10,0:18:36.41,Default,,0,0,0,,Remarks also are sorted by
Dialogue: 0,0:18:36.41,0:18:38.77,Default,,0,0,0,,relevance, and if expanded, they
Dialogue: 0,0:18:38.77,0:18:41.11,Default,,0,0,0,,offer you reason on why we're
Dialogue: 0,0:18:41.11,0:18:42.99,Default,,0,0,0,,reporting it, and our
Dialogue: 0,0:18:42.99,0:18:44.56,Default,,0,0,0,,recommendation on how to prevent
Dialogue: 0,0:18:45.46,0:18:45.53,Default,,0,0,0,,it.
Dialogue: 0,0:18:46.23,0:18:47.84,Default,,0,0,0,,Below remarks, we have an
Dialogue: 0,0:18:47.84,0:18:49.34,Default,,0,0,0,,overview for each shader, where
Dialogue: 0,0:18:49.34,0:18:50.50,Default,,0,0,0,,you can see how the compiler
Dialogue: 0,0:18:50.58,0:18:52.99,Default,,0,0,0,,final assemblies compose
Dialogue: 0,0:18:52.99,0:18:54.10,Default,,0,0,0,,[inaudible] of instruction
Dialogue: 0,0:18:54.17,0:18:54.88,Default,,0,0,0,,ratios.
Dialogue: 0,0:18:56.19,0:18:58.05,Default,,0,0,0,,And finally, we have a list of
Dialogue: 0,0:18:58.11,0:18:59.31,Default,,0,0,0,,all the recalls using this
Dialogue: 0,0:18:59.31,0:18:59.76,Default,,0,0,0,,pipeline.
Dialogue: 0,0:19:00.40,0:19:01.63,Default,,0,0,0,,This will become very handy
Dialogue: 0,0:19:01.63,0:19:02.78,Default,,0,0,0,,whenever we are iterating over
Dialogue: 0,0:19:02.78,0:19:03.40,Default,,0,0,0,,our shaders.
Dialogue: 0,0:19:04.43,0:19:06.95,Default,,0,0,0,,So let me showcase an example of
Dialogue: 0,0:19:06.95,0:19:08.51,Default,,0,0,0,,workflow profiler statistics.
Dialogue: 0,0:19:09.38,0:19:10.98,Default,,0,0,0,,We go to our top remark,
Dialogue: 0,0:19:11.19,0:19:13.04,Default,,0,0,0,,Register Spill, we can see the
Dialogue: 0,0:19:13.04,0:19:14.85,Default,,0,0,0,,compiler is reporting a big
Dialogue: 0,0:19:14.85,0:19:16.95,Default,,0,0,0,,spill, 1,040 bytes.
Dialogue: 0,0:19:17.79,0:19:19.25,Default,,0,0,0,,Spills will cause the GPU to
Dialogue: 0,0:19:19.25,0:19:21.55,Default,,0,0,0,,access memory, which can stall
Dialogue: 0,0:19:21.55,0:19:22.49,Default,,0,0,0,,your shade execution.
Dialogue: 0,0:19:23.86,0:19:24.81,Default,,0,0,0,,Knowing that a compiler is
Dialogue: 0,0:19:24.81,0:19:26.33,Default,,0,0,0,,spilling and fixing it can
Dialogue: 0,0:19:26.33,0:19:27.38,Default,,0,0,0,,drastically improve your shader
Dialogue: 0,0:19:27.38,0:19:29.64,Default,,0,0,0,,performance, yet finding where
Dialogue: 0,0:19:29.64,0:19:30.89,Default,,0,0,0,,and why the compiler is spilling
Dialogue: 0,0:19:31.30,0:19:32.57,Default,,0,0,0,,tends to be a time consuming
Dialogue: 0,0:19:32.57,0:19:32.88,Default,,0,0,0,,manual [inaudible].
Dialogue: 0,0:19:33.94,0:19:36.60,Default,,0,0,0,,But notice the second and fourth
Dialogue: 0,0:19:36.60,0:19:37.11,Default,,0,0,0,,remarks.
Dialogue: 0,0:19:37.59,0:19:39.16,Default,,0,0,0,,Dynamic Stack Store, and Dynamic
Dialogue: 0,0:19:39.16,0:19:39.77,Default,,0,0,0,,Stack Load.
Dialogue: 0,0:19:40.78,0:19:43.06,Default,,0,0,0,,If expanded, they offer a reason
Dialogue: 0,0:19:43.23,0:19:45.05,Default,,0,0,0,,an expensive stack load is
Dialogue: 0,0:19:45.05,0:19:46.72,Default,,0,0,0,,emitted to a dynamic offset in a
Dialogue: 0,0:19:46.72,0:19:47.42,Default,,0,0,0,,local array.
Dialogue: 0,0:19:48.26,0:19:51.10,Default,,0,0,0,,As well as a recommendation, to
Dialogue: 0,0:19:51.10,0:19:52.26,Default,,0,0,0,,reduce the stack access,
Dialogue: 0,0:19:52.34,0:19:53.79,Default,,0,0,0,,eliminate dynamic access to
Dialogue: 0,0:19:53.79,0:19:54.48,Default,,0,0,0,,local arrays.
Dialogue: 0,0:19:55.24,0:19:57.03,Default,,0,0,0,,This is basically saying that we
Dialogue: 0,0:19:57.03,0:19:58.59,Default,,0,0,0,,have an array variable in our
Dialogue: 0,0:19:58.59,0:20:00.12,Default,,0,0,0,,shader code that is storing the
Dialogue: 0,0:20:00.12,0:20:01.94,Default,,0,0,0,,stack and where accessing it
Dialogue: 0,0:20:01.94,0:20:03.42,Default,,0,0,0,,using some other index variable.
Dialogue: 0,0:20:04.30,0:20:06.00,Default,,0,0,0,,This is a very common pattern
Dialogue: 0,0:20:06.00,0:20:07.82,Default,,0,0,0,,when providing for the CPU, but
Dialogue: 0,0:20:07.82,0:20:09.29,Default,,0,0,0,,GPUs are different, they suffer
Dialogue: 0,0:20:09.29,0:20:11.35,Default,,0,0,0,,when we rely on stack usage.
Dialogue: 0,0:20:11.97,0:20:14.73,Default,,0,0,0,,But note the languages below the
Dialogue: 0,0:20:14.73,0:20:15.38,Default,,0,0,0,,recommendation.
Dialogue: 0,0:20:15.43,0:20:16.92,Default,,0,0,0,,It has an exact line number.
Dialogue: 0,0:20:17.44,0:20:18.68,Default,,0,0,0,,This means that we option click
Dialogue: 0,0:20:18.78,0:20:22.09,Default,,0,0,0,,to it, we'll jump directly to
Dialogue: 0,0:20:22.09,0:20:23.43,Default,,0,0,0,,the [inaudible] line where the
Dialogue: 0,0:20:23.43,0:20:25.15,Default,,0,0,0,,compiler is actually loading
Dialogue: 0,0:20:25.15,0:20:26.29,Default,,0,0,0,,data from the stack array.
Dialogue: 0,0:20:26.78,0:20:27.90,Default,,0,0,0,,We just found the compiler
Dialogue: 0,0:20:27.90,0:20:28.30,Default,,0,0,0,,spill.
Dialogue: 0,0:20:29.37,0:20:30.66,Default,,0,0,0,,Also these align very well with
Dialogue: 0,0:20:30.66,0:20:31.68,Default,,0,0,0,,our shared performing data,
Dialogue: 0,0:20:31.68,0:20:33.12,Default,,0,0,0,,informing us of the high cost of
Dialogue: 0,0:20:33.12,0:20:34.99,Default,,0,0,0,,this line, which now we know
Dialogue: 0,0:20:34.99,0:20:35.67,Default,,0,0,0,,exactly why.
Dialogue: 0,0:20:37.40,0:20:40.33,Default,,0,0,0,,The shader is doing two passes.
Dialogue: 0,0:20:41.06,0:20:42.84,Default,,0,0,0,,The first pass, doing some light
Dialogue: 0,0:20:42.84,0:20:43.59,Default,,0,0,0,,computation.
Dialogue: 0,0:20:44.17,0:20:46.96,Default,,0,0,0,,And a second pass, doing the
Dialogue: 0,0:20:46.96,0:20:47.78,Default,,0,0,0,,light accumulation.
Dialogue: 0,0:20:48.77,0:20:49.77,Default,,0,0,0,,This speaks to the issue by
Dialogue: 0,0:20:49.77,0:20:51.08,Default,,0,0,0,,working with the compiler but
Dialogue: 0,0:20:51.08,0:20:52.19,Default,,0,0,0,,from a GPU perspective.
Dialogue: 0,0:20:52.86,0:20:55.06,Default,,0,0,0,,The first thing I'm going to do,
Dialogue: 0,0:20:55.18,0:20:56.69,Default,,0,0,0,,I'm going to remove the stack
Dialogue: 0,0:20:56.69,0:20:59.76,Default,,0,0,0,,array, I am going to remove it
Dialogue: 0,0:20:59.76,0:21:02.37,Default,,0,0,0,,in relation, and then I'm going
Dialogue: 0,0:21:02.37,0:21:03.54,Default,,0,0,0,,to compute the light
Dialogue: 0,0:21:03.54,0:21:04.90,Default,,0,0,0,,accommodation directly into the
Dialogue: 0,0:21:04.90,0:21:06.17,Default,,0,0,0,,first loop.
Dialogue: 0,0:21:09.12,0:21:10.74,Default,,0,0,0,,Then I am going to remove the
Dialogue: 0,0:21:10.74,0:21:12.98,Default,,0,0,0,,second loop, and just not do
Dialogue: 0,0:21:14.00,0:21:14.32,Default,,0,0,0,,that anymore.
Dialogue: 0,0:21:14.32,0:21:15.92,Default,,0,0,0,,Now, I click my update shader
Dialogue: 0,0:21:15.92,0:21:17.40,Default,,0,0,0,,button, and wait for the
Dialogue: 0,0:21:17.40,0:21:17.92,Default,,0,0,0,,results.
Dialogue: 0,0:21:18.52,0:21:19.65,Default,,0,0,0,,What this is going to do, it's
Dialogue: 0,0:21:19.65,0:21:20.97,Default,,0,0,0,,going to have the compiler
Dialogue: 0,0:21:20.97,0:21:21.78,Default,,0,0,0,,perform a whole loop
Dialogue: 0,0:21:21.78,0:21:24.38,Default,,0,0,0,,optimization and reuse the same
Dialogue: 0,0:21:24.38,0:21:26.64,Default,,0,0,0,,reducer over and over, instead
Dialogue: 0,0:21:26.64,0:21:27.60,Default,,0,0,0,,of relying on the stack.
Dialogue: 0,0:21:28.91,0:21:30.36,Default,,0,0,0,,Once the results are back, we
Dialogue: 0,0:21:30.36,0:21:31.79,Default,,0,0,0,,can see the instruction ratio
Dialogue: 0,0:21:31.79,0:21:33.36,Default,,0,0,0,,between the previous and current
Dialogue: 0,0:21:33.36,0:21:35.42,Default,,0,0,0,,[inaudible] has been reduced, as
Dialogue: 0,0:21:35.42,0:21:36.49,Default,,0,0,0,,well as the impact of this
Dialogue: 0,0:21:36.49,0:21:38.01,Default,,0,0,0,,change on every single draw call
Dialogue: 0,0:21:38.01,0:21:39.73,Default,,0,0,0,,used in the pipeline, giving us
Dialogue: 0,0:21:39.73,0:21:41.30,Default,,0,0,0,,also whole space performance
Dialogue: 0,0:21:41.30,0:21:41.90,Default,,0,0,0,,improvements.
Dialogue: 0,0:21:43.05,0:21:44.23,Default,,0,0,0,,And with this, I conclude my
Dialogue: 0,0:21:44.23,0:21:44.99,Default,,0,0,0,,example of [inaudible]
Dialogue: 0,0:21:44.99,0:21:46.25,Default,,0,0,0,,statistics.
Dialogue: 0,0:21:46.47,0:21:47.66,Default,,0,0,0,,I hand it back to my colleague,
Dialogue: 0,0:21:47.66,0:21:47.93,Default,,0,0,0,,Seth.
Dialogue: 0,0:21:49.52,0:21:54.76,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:21:55.26,0:21:56.87,Default,,0,0,0,,>> Thank you, Jose.
Dialogue: 0,0:21:56.97,0:21:59.77,Default,,0,0,0,,And finally, onto our last new
Dialogue: 0,0:21:59.77,0:22:00.30,Default,,0,0,0,,tool today.
Dialogue: 0,0:22:00.73,0:22:02.29,Default,,0,0,0,,GPU Counter Profiling.
Dialogue: 0,0:22:02.81,0:22:06.20,Default,,0,0,0,,As you know, GPU architecture is
Dialogue: 0,0:22:06.20,0:22:08.06,Default,,0,0,0,,complex, with a pipeline
Dialogue: 0,0:22:08.06,0:22:08.99,Default,,0,0,0,,consisting of multiple
Dialogue: 0,0:22:08.99,0:22:10.37,Default,,0,0,0,,programmable and fixed function
Dialogue: 0,0:22:10.37,0:22:12.20,Default,,0,0,0,,blocks, bottlenecks can occur at
Dialogue: 0,0:22:12.20,0:22:13.40,Default,,0,0,0,,any point within the pipeline,
Dialogue: 0,0:22:14.22,0:22:15.48,Default,,0,0,0,,and often, at multiple
Dialogue: 0,0:22:15.55,0:22:16.94,Default,,0,0,0,,simultaneous points.
Dialogue: 0,0:22:18.39,0:22:20.99,Default,,0,0,0,,Your job as Metal programmers is
Dialogue: 0,0:22:20.99,0:22:23.03,Default,,0,0,0,,to minimize fixed function
Dialogue: 0,0:22:23.03,0:22:24.37,Default,,0,0,0,,bottlenecks while efficiently
Dialogue: 0,0:22:24.37,0:22:25.97,Default,,0,0,0,,harnessing programmable blocks.
Dialogue: 0,0:22:28.78,0:22:30.59,Default,,0,0,0,,Well, to do that, our new GPU
Dialogue: 0,0:22:30.59,0:22:33.17,Default,,0,0,0,,Counter Profiling is the tool.
Dialogue: 0,0:22:33.55,0:22:36.11,Default,,0,0,0,,Instead of going directly into
Dialogue: 0,0:22:36.11,0:22:38.24,Default,,0,0,0,,the GPU Frame Debugger, it gives
Dialogue: 0,0:22:38.24,0:22:40.29,Default,,0,0,0,,you detailed GPU hardware
Dialogue: 0,0:22:40.29,0:22:42.87,Default,,0,0,0,,performance statistics on a per
Dialogue: 0,0:22:42.87,0:22:46.50,Default,,0,0,0,,draw call, on macOS and per
Dialogue: 0,0:22:46.50,0:22:49.07,Default,,0,0,0,,encoder on iOS and tvOS basis.
Dialogue: 0,0:22:50.04,0:22:51.99,Default,,0,0,0,,And instead of giving you an
Dialogue: 0,0:22:51.99,0:22:54.34,Default,,0,0,0,,arcane list of counters that
Dialogue: 0,0:22:54.34,0:22:55.91,Default,,0,0,0,,change for every GPU and are
Dialogue: 0,0:22:55.91,0:22:57.68,Default,,0,0,0,,hard to understand, and often
Dialogue: 0,0:22:58.21,0:22:59.22,Default,,0,0,0,,don't tell you what you need to
Dialogue: 0,0:22:59.22,0:23:01.58,Default,,0,0,0,,know, we've defined a high level
Dialogue: 0,0:23:01.58,0:23:03.24,Default,,0,0,0,,set of characters that mean the
Dialogue: 0,0:23:03.24,0:23:04.94,Default,,0,0,0,,same across each GPU.
Dialogue: 0,0:23:05.29,0:23:07.30,Default,,0,0,0,,So you don't have a per GPU
Dialogue: 0,0:23:07.30,0:23:08.67,Default,,0,0,0,,learning curve.
Dialogue: 0,0:23:10.16,0:23:12.61,Default,,0,0,0,,So here is the Counter
Dialogue: 0,0:23:12.61,0:23:13.15,Default,,0,0,0,,Profiling.
Dialogue: 0,0:23:13.15,0:23:16.73,Default,,0,0,0,,On the left, we have a graph
Dialogue: 0,0:23:16.73,0:23:19.51,Default,,0,0,0,,view, showing you detailed GPU
Dialogue: 0,0:23:19.55,0:23:21.16,Default,,0,0,0,,counter graphs, and on the
Dialogue: 0,0:23:21.16,0:23:22.89,Default,,0,0,0,,right, the detail window.
Dialogue: 0,0:23:23.61,0:23:25.25,Default,,0,0,0,,Let's talk about those in order.
Dialogue: 0,0:23:26.04,0:23:29.87,Default,,0,0,0,,In the graph view, we show you
Dialogue: 0,0:23:30.28,0:23:33.31,Default,,0,0,0,,counters across your frame,
Dialogue: 0,0:23:33.94,0:23:35.71,Default,,0,0,0,,where the x axis represents draw
Dialogue: 0,0:23:35.71,0:23:37.84,Default,,0,0,0,,calls, or encoders across time.
Dialogue: 0,0:23:39.04,0:23:40.51,Default,,0,0,0,,At the top, we show you GPU
Dialogue: 0,0:23:40.51,0:23:40.83,Default,,0,0,0,,time.
Dialogue: 0,0:23:40.83,0:23:43.21,Default,,0,0,0,,As that is inherent to all GPU
Dialogue: 0,0:23:43.21,0:23:44.00,Default,,0,0,0,,counter profiling.
Dialogue: 0,0:23:44.75,0:23:45.89,Default,,0,0,0,,And then below that, a set of
Dialogue: 0,0:23:45.89,0:23:47.11,Default,,0,0,0,,top level counters that
Dialogue: 0,0:23:47.11,0:23:48.71,Default,,0,0,0,,correspond to the stages in the
Dialogue: 0,0:23:48.71,0:23:50.99,Default,,0,0,0,,GPU pipeline, along with some
Dialogue: 0,0:23:50.99,0:23:52.39,Default,,0,0,0,,other top level counters that
Dialogue: 0,0:23:52.39,0:23:54.00,Default,,0,0,0,,correspond to shared execution
Dialogue: 0,0:23:54.00,0:23:55.82,Default,,0,0,0,,units, such as the shader core
Dialogue: 0,0:23:55.82,0:23:56.84,Default,,0,0,0,,and test units.
Dialogue: 0,0:23:58.62,0:24:00.80,Default,,0,0,0,,For each group, you can drill
Dialogue: 0,0:24:00.80,0:24:02.69,Default,,0,0,0,,down to more detailed counters,
Dialogue: 0,0:24:02.69,0:24:04.73,Default,,0,0,0,,exploring a lot more data for
Dialogue: 0,0:24:04.73,0:24:06.97,Default,,0,0,0,,each stage, and this is great
Dialogue: 0,0:24:06.97,0:24:08.93,Default,,0,0,0,,for work flow where you identify
Dialogue: 0,0:24:08.93,0:24:10.62,Default,,0,0,0,,it as your first cut, where you
Dialogue: 0,0:24:10.62,0:24:11.82,Default,,0,0,0,,think the performance issue is,
Dialogue: 0,0:24:11.98,0:24:13.75,Default,,0,0,0,,and then drill down to see why
Dialogue: 0,0:24:13.75,0:24:14.29,Default,,0,0,0,,it's going on.
Dialogue: 0,0:24:14.98,0:24:19.59,Default,,0,0,0,,In the detail view, we'll show
Dialogue: 0,0:24:19.59,0:24:20.98,Default,,0,0,0,,you all the same counters from
Dialogue: 0,0:24:20.98,0:24:22.31,Default,,0,0,0,,the counter graph view, but
Dialogue: 0,0:24:22.31,0:24:23.71,Default,,0,0,0,,displayed in full detail
Dialogue: 0,0:24:23.71,0:24:24.23,Default,,0,0,0,,numerically.
Dialogue: 0,0:24:25.10,0:24:26.55,Default,,0,0,0,,And to give it context, we will
Dialogue: 0,0:24:26.55,0:24:28.66,Default,,0,0,0,,show it alongside the median,
Dialogue: 0,0:24:28.66,0:24:30.00,Default,,0,0,0,,max, and total values for the
Dialogue: 0,0:24:30.00,0:24:30.79,Default,,0,0,0,,frame as well.
Dialogue: 0,0:24:31.02,0:24:34.55,Default,,0,0,0,,Now, both the graph view and the
Dialogue: 0,0:24:34.55,0:24:35.86,Default,,0,0,0,,detail views support the same
Dialogue: 0,0:24:35.86,0:24:38.14,Default,,0,0,0,,full, rich filtering options
Dialogue: 0,0:24:38.43,0:24:40.04,Default,,0,0,0,,that we support elsewhere in the
Dialogue: 0,0:24:40.04,0:24:42.23,Default,,0,0,0,,frame debugger, so if you want
Dialogue: 0,0:24:42.23,0:24:44.09,Default,,0,0,0,,to just view certain pixel stats
Dialogue: 0,0:24:44.22,0:24:45.43,Default,,0,0,0,,and certain memory stats at the
Dialogue: 0,0:24:45.43,0:24:47.34,Default,,0,0,0,,same time, you can put together
Dialogue: 0,0:24:47.34,0:24:48.78,Default,,0,0,0,,the search term, and view
Dialogue: 0,0:24:48.78,0:24:49.88,Default,,0,0,0,,everything you want alongside
Dialogue: 0,0:24:49.88,0:24:50.73,Default,,0,0,0,,each other.
Dialogue: 0,0:24:51.41,0:24:54.70,Default,,0,0,0,,But I'll highlight the GPU
Dialogue: 0,0:24:54.70,0:24:56.76,Default,,0,0,0,,counter profiling is our advance
Dialogue: 0,0:24:56.76,0:24:58.03,Default,,0,0,0,,to bottleneck analysis.
Dialogue: 0,0:24:59.02,0:25:00.52,Default,,0,0,0,,With this, we take all the
Dialogue: 0,0:25:00.52,0:25:01.90,Default,,0,0,0,,counters that have been pulled
Dialogue: 0,0:25:01.90,0:25:03.71,Default,,0,0,0,,for each draw call, or each
Dialogue: 0,0:25:03.71,0:25:05.54,Default,,0,0,0,,encoder, and perform rich
Dialogue: 0,0:25:05.54,0:25:07.70,Default,,0,0,0,,analysis on it, both on a cross
Dialogue: 0,0:25:07.70,0:25:10.45,Default,,0,0,0,,platform basis, and on a per GPU
Dialogue: 0,0:25:10.45,0:25:12.72,Default,,0,0,0,,specific basis to identify
Dialogue: 0,0:25:12.72,0:25:14.51,Default,,0,0,0,,potential bottlenecks at each
Dialogue: 0,0:25:14.51,0:25:14.87,Default,,0,0,0,,call.
Dialogue: 0,0:25:16.45,0:25:19.55,Default,,0,0,0,,Alongside this, we will give you
Dialogue: 0,0:25:19.55,0:25:21.42,Default,,0,0,0,,lots of data about, okay, what
Dialogue: 0,0:25:21.42,0:25:22.64,Default,,0,0,0,,is going on here?
Dialogue: 0,0:25:23.01,0:25:24.31,Default,,0,0,0,,What could cause it?
Dialogue: 0,0:25:24.31,0:25:26.27,Default,,0,0,0,,And then intuitive workflow to
Dialogue: 0,0:25:26.27,0:25:28.72,Default,,0,0,0,,navigate direct to the affected
Dialogue: 0,0:25:28.72,0:25:29.02,Default,,0,0,0,,area.
Dialogue: 0,0:25:30.35,0:25:32.14,Default,,0,0,0,,Now, both the, all the
Dialogue: 0,0:25:32.14,0:25:34.36,Default,,0,0,0,,bottlenecks and all the counters
Dialogue: 0,0:25:34.49,0:25:36.61,Default,,0,0,0,,will have rich detailed
Dialogue: 0,0:25:36.87,0:25:38.83,Default,,0,0,0,,documentation within Xcode docs,
Dialogue: 0,0:25:39.17,0:25:40.72,Default,,0,0,0,,explaining what each counter
Dialogue: 0,0:25:40.72,0:25:43.28,Default,,0,0,0,,means in detail, why it might be
Dialogue: 0,0:25:43.28,0:25:44.64,Default,,0,0,0,,particularly high or
Dialogue: 0,0:25:44.64,0:25:46.63,Default,,0,0,0,,particularly low, and what you
Dialogue: 0,0:25:46.63,0:25:47.85,Default,,0,0,0,,can do about it.
Dialogue: 0,0:25:47.85,0:25:49.31,Default,,0,0,0,,To give a demo of this great new
Dialogue: 0,0:25:49.52,0:25:51.09,Default,,0,0,0,,GPU Counter Profiling feature,
Dialogue: 0,0:25:51.09,0:25:52.56,Default,,0,0,0,,I'd like to invite my colleague,
Dialogue: 0,0:25:52.56,0:25:54.48,Default,,0,0,0,,Jose, back to the stage to give
Dialogue: 0,0:25:54.48,0:25:56.34,Default,,0,0,0,,you a demo of it in action.
Dialogue: 0,0:25:57.52,0:25:59.68,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:26:00.18,0:26:00.58,Default,,0,0,0,,>> Thank you, Seth.
Dialogue: 0,0:26:01.18,0:26:02.12,Default,,0,0,0,,And hello again everyone.
Dialogue: 0,0:26:02.81,0:26:06.07,Default,,0,0,0,,This time, I will demonstrate
Dialogue: 0,0:26:06.43,0:26:10.27,Default,,0,0,0,,GPU counters, a tool that will
Dialogue: 0,0:26:10.27,0:26:11.40,Default,,0,0,0,,help you analyze your GPU
Dialogue: 0,0:26:11.40,0:26:12.00,Default,,0,0,0,,performance.
Dialogue: 0,0:26:13.04,0:26:14.07,Default,,0,0,0,,First, I'm going to replay the
Dialogue: 0,0:26:14.07,0:26:15.29,Default,,0,0,0,,same demo that [inaudible] was
Dialogue: 0,0:26:15.29,0:26:17.50,Default,,0,0,0,,on, but this time, we'll focus
Dialogue: 0,0:26:17.50,0:26:18.64,Default,,0,0,0,,from a performance perspective.
Dialogue: 0,0:26:19.77,0:26:21.60,Default,,0,0,0,,The first thing to note is, the
Dialogue: 0,0:26:21.60,0:26:23.66,Default,,0,0,0,,new GPU gauge, just under the
Dialogue: 0,0:26:23.66,0:26:24.34,Default,,0,0,0,,FPS gauge.
Dialogue: 0,0:26:25.37,0:26:26.36,Default,,0,0,0,,By clicking on it, we'll
Dialogue: 0,0:26:26.36,0:26:28.80,Default,,0,0,0,,navigate to our GP counter view.
Dialogue: 0,0:26:29.44,0:26:31.32,Default,,0,0,0,,As you can see, there is a
Dialogue: 0,0:26:31.32,0:26:32.49,Default,,0,0,0,,wealth of data here.
Dialogue: 0,0:26:33.11,0:26:34.31,Default,,0,0,0,,Available for the first time.
Dialogue: 0,0:26:34.48,0:26:36.29,Default,,0,0,0,,With this view, you can now
Dialogue: 0,0:26:36.36,0:26:38.22,Default,,0,0,0,,deliver file any GPU performance
Dialogue: 0,0:26:38.22,0:26:39.32,Default,,0,0,0,,issue that you have in any of
Dialogue: 0,0:26:39.32,0:26:40.30,Default,,0,0,0,,your capture frames.
Dialogue: 0,0:26:41.33,0:26:42.80,Default,,0,0,0,,So let me demonstrate how to
Dialogue: 0,0:26:42.80,0:26:43.78,Default,,0,0,0,,find performance issues.
Dialogue: 0,0:26:45.33,0:26:46.70,Default,,0,0,0,,First, let's focus on the graph
Dialogue: 0,0:26:46.70,0:26:47.02,Default,,0,0,0,,view.
Dialogue: 0,0:26:47.02,0:26:47.09,Default,,0,0,0,,'
Dialogue: 0,0:26:50.21,0:26:51.57,Default,,0,0,0,,As you can see, there is a main
Dialogue: 0,0:26:51.57,0:26:53.08,Default,,0,0,0,,spike in GPU time at the very
Dialogue: 0,0:26:53.08,0:26:54.02,Default,,0,0,0,,beginning of a capture.
Dialogue: 0,0:26:54.53,0:26:56.36,Default,,0,0,0,,The first thing you want to do
Dialogue: 0,0:26:56.36,0:26:58.75,Default,,0,0,0,,is to zoom in to see a single
Dialogue: 0,0:26:58.83,0:26:59.88,Default,,0,0,0,,recall, there are more
Dialogue: 0,0:26:59.88,0:27:00.44,Default,,0,0,0,,offenders.
Dialogue: 0,0:27:00.95,0:27:01.93,Default,,0,0,0,,In order to do that, I can
Dialogue: 0,0:27:01.93,0:27:04.60,Default,,0,0,0,,simply pinch and zoom, just like
Dialogue: 0,0:27:04.60,0:27:04.85,Default,,0,0,0,,that.
Dialogue: 0,0:27:05.56,0:27:07.22,Default,,0,0,0,,Any default system behaviors
Dialogue: 0,0:27:07.22,0:27:08.36,Default,,0,0,0,,will work just as you expect
Dialogue: 0,0:27:08.36,0:27:08.70,Default,,0,0,0,,them to.
Dialogue: 0,0:27:09.41,0:27:11.55,Default,,0,0,0,,Now I will see that there is a
Dialogue: 0,0:27:11.55,0:27:12.27,Default,,0,0,0,,main spike.
Dialogue: 0,0:27:12.46,0:27:14.11,Default,,0,0,0,,You can click on this draw call
Dialogue: 0,0:27:14.11,0:27:15.31,Default,,0,0,0,,to highlight this impact across
Dialogue: 0,0:27:15.44,0:27:17.86,Default,,0,0,0,,all the pipeline, and hovering
Dialogue: 0,0:27:17.86,0:27:19.86,Default,,0,0,0,,over each row will give us
Dialogue: 0,0:27:19.86,0:27:21.40,Default,,0,0,0,,detailed information on how
Dialogue: 0,0:27:21.40,0:27:23.02,Default,,0,0,0,,relevant that stage is for this
Dialogue: 0,0:27:23.02,0:27:23.94,Default,,0,0,0,,particular draw call.
Dialogue: 0,0:27:24.86,0:27:26.90,Default,,0,0,0,,In this case, Vertex Omission,
Dialogue: 0,0:27:27.03,0:27:28.51,Default,,0,0,0,,Vertex Shader, and Primitives
Dialogue: 0,0:27:28.94,0:27:30.55,Default,,0,0,0,,did not seem to have relevant
Dialogue: 0,0:27:30.68,0:27:30.88,Default,,0,0,0,,impact.
Dialogue: 0,0:27:31.41,0:27:33.10,Default,,0,0,0,,On the contrary, Fragment Shader
Dialogue: 0,0:27:33.72,0:27:35.24,Default,,0,0,0,,and Pixels [inaudible] seemed to
Dialogue: 0,0:27:35.44,0:27:36.32,Default,,0,0,0,,be quite high.
Dialogue: 0,0:27:37.11,0:27:38.84,Default,,0,0,0,,Let's focus on the Fragment
Dialogue: 0,0:27:38.84,0:27:39.44,Default,,0,0,0,,Shader first.
Dialogue: 0,0:27:40.40,0:27:42.33,Default,,0,0,0,,If we expand this group we now
Dialogue: 0,0:27:42.33,0:27:43.80,Default,,0,0,0,,get access to a massive amount
Dialogue: 0,0:27:43.80,0:27:45.60,Default,,0,0,0,,of counter data that gives us
Dialogue: 0,0:27:45.66,0:27:47.34,Default,,0,0,0,,detailed information what is
Dialogue: 0,0:27:47.34,0:27:48.81,Default,,0,0,0,,going on with the Shader stage.
Dialogue: 0,0:27:49.64,0:27:50.65,Default,,0,0,0,,The last thing that this
Dialogue: 0,0:27:50.65,0:27:52.37,Default,,0,0,0,,counted, we can quickly see that
Dialogue: 0,0:27:52.62,0:27:54.48,Default,,0,0,0,,the stall time is unusually
Dialogue: 0,0:27:54.48,0:27:56.79,Default,,0,0,0,,high, over 76%.
Dialogue: 0,0:27:57.49,0:27:58.94,Default,,0,0,0,,This means that most of the time
Dialogue: 0,0:27:58.94,0:28:00.12,Default,,0,0,0,,we are spending on the Fragment
Dialogue: 0,0:28:00.12,0:28:01.59,Default,,0,0,0,,Shader is actually waiting for
Dialogue: 0,0:28:01.59,0:28:03.37,Default,,0,0,0,,some memory or data to be
Dialogue: 0,0:28:03.37,0:28:03.82,Default,,0,0,0,,available.
Dialogue: 0,0:28:04.53,0:28:06.78,Default,,0,0,0,,This is caused because you are
Dialogue: 0,0:28:06.78,0:28:08.18,Default,,0,0,0,,fetching from a buffer or from a
Dialogue: 0,0:28:08.18,0:28:10.60,Default,,0,0,0,,texture, but texture captures
Dialogue: 0,0:28:10.60,0:28:11.81,Default,,0,0,0,,should be here in this latency,
Dialogue: 0,0:28:12.41,0:28:14.56,Default,,0,0,0,,so let's go down to our Texture
Dialogue: 0,0:28:14.56,0:28:16.74,Default,,0,0,0,,Unit, to see what is the cache
Dialogue: 0,0:28:16.74,0:28:16.96,Default,,0,0,0,,rate.
Dialogue: 0,0:28:18.75,0:28:20.53,Default,,0,0,0,,And we can immediately see that
Dialogue: 0,0:28:20.53,0:28:22.26,Default,,0,0,0,,the textures cache rate is also
Dialogue: 0,0:28:22.26,0:28:24.59,Default,,0,0,0,,unusually high, almost at 60%.
Dialogue: 0,0:28:25.33,0:28:27.25,Default,,0,0,0,,This means that more than half
Dialogue: 0,0:28:27.25,0:28:28.40,Default,,0,0,0,,of the texture samples we are
Dialogue: 0,0:28:28.40,0:28:29.64,Default,,0,0,0,,doing are coming from video
Dialogue: 0,0:28:29.64,0:28:30.77,Default,,0,0,0,,memory and not from the texture
Dialogue: 0,0:28:30.77,0:28:31.24,Default,,0,0,0,,caches.
Dialogue: 0,0:28:31.97,0:28:33.96,Default,,0,0,0,,Now that we have a better
Dialogue: 0,0:28:33.96,0:28:34.95,Default,,0,0,0,,understanding of the issue at
Dialogue: 0,0:28:34.95,0:28:36.97,Default,,0,0,0,,hand, let's focus on the
Dialogue: 0,0:28:36.97,0:28:37.64,Default,,0,0,0,,assistant editor.
Dialogue: 0,0:28:38.20,0:28:41.69,Default,,0,0,0,,As you can see, the assistant
Dialogue: 0,0:28:41.69,0:28:43.41,Default,,0,0,0,,editors offer the same graph
Dialogue: 0,0:28:43.51,0:28:45.01,Default,,0,0,0,,inform-- counter information as
Dialogue: 0,0:28:45.01,0:28:46.16,Default,,0,0,0,,the graph view was offering, but
Dialogue: 0,0:28:46.36,0:28:48.11,Default,,0,0,0,,this time, displayed as a table
Dialogue: 0,0:28:48.11,0:28:48.52,Default,,0,0,0,,view.
Dialogue: 0,0:28:48.81,0:28:51.38,Default,,0,0,0,,But more important, look at the
Dialogue: 0,0:28:51.38,0:28:51.83,Default,,0,0,0,,top.
Dialogue: 0,0:28:51.83,0:28:53.29,Default,,0,0,0,,This is our bottleneck access
Dialogue: 0,0:28:53.29,0:28:53.57,Default,,0,0,0,,tool.
Dialogue: 0,0:28:53.57,0:28:56.41,Default,,0,0,0,,It will point out two relevant
Dialogue: 0,0:28:56.41,0:28:58.11,Default,,0,0,0,,issues that we consider when we
Dialogue: 0,0:28:58.11,0:29:00.28,Default,,0,0,0,,analyze all the counters within
Dialogue: 0,0:29:00.28,0:29:01.74,Default,,0,0,0,,the selected draw call, and
Dialogue: 0,0:29:01.74,0:29:03.08,Default,,0,0,0,,point out any relevant issues
Dialogue: 0,0:29:03.08,0:29:04.98,Default,,0,0,0,,that we cconsider important for
Dialogue: 0,0:29:04.98,0:29:05.93,Default,,0,0,0,,you to pay attention to.
Dialogue: 0,0:29:06.27,0:29:07.36,Default,,0,0,0,,In this case, highlighting the
Dialogue: 0,0:29:07.36,0:29:09.45,Default,,0,0,0,,same as we just found manually
Dialogue: 0,0:29:09.45,0:29:12.78,Default,,0,0,0,,by checking the graph, that the
Dialogue: 0,0:29:12.78,0:29:15.65,Default,,0,0,0,,texture cache miss rate is high.
Dialogue: 0,0:29:15.88,0:29:17.69,Default,,0,0,0,,When expanded, it also offers
Dialogue: 0,0:29:17.69,0:29:18.59,Default,,0,0,0,,recommendations on what to
Dialogue: 0,0:29:18.59,0:29:18.87,Default,,0,0,0,,check.
Dialogue: 0,0:29:19.64,0:29:21.44,Default,,0,0,0,,In this case, check if sampled
Dialogue: 0,0:29:21.44,0:29:23.45,Default,,0,0,0,,textures have [inaudible], and a
Dialogue: 0,0:29:23.49,0:29:25.41,Default,,0,0,0,,quick navigational name to
Dialogue: 0,0:29:25.44,0:29:26.79,Default,,0,0,0,,relevant views for this issue.
Dialogue: 0,0:29:28.07,0:29:29.66,Default,,0,0,0,,For example, boundary sources,
Dialogue: 0,0:29:30.01,0:29:31.27,Default,,0,0,0,,where we can immediately see
Dialogue: 0,0:29:31.27,0:29:32.89,Default,,0,0,0,,what's the issue at hand, we're
Dialogue: 0,0:29:32.89,0:29:35.87,Default,,0,0,0,,fetching a 4K by 4K RGBA32
Dialogue: 0,0:29:35.93,0:29:37.13,Default,,0,0,0,,Floating Point Texture with
Dialogue: 0,0:29:37.13,0:29:38.58,Default,,0,0,0,,[inaudible] in both our vertex
Dialogue: 0,0:29:39.23,0:29:40.13,Default,,0,0,0,,and our Fragment Shader.
Dialogue: 0,0:29:40.48,0:29:43.34,Default,,0,0,0,,This is a 256-megabyte texture
Dialogue: 0,0:29:43.34,0:29:44.87,Default,,0,0,0,,that is fetched all over the
Dialogue: 0,0:29:44.87,0:29:45.30,Default,,0,0,0,,pipeline.
Dialogue: 0,0:29:45.85,0:29:47.82,Default,,0,0,0,,No wonder we are trashing our
Dialogue: 0,0:29:48.50,0:29:48.79,Default,,0,0,0,,cache.
Dialogue: 0,0:29:48.83,0:29:50.16,Default,,0,0,0,,Just think for a moment what we
Dialogue: 0,0:29:50.16,0:29:50.83,Default,,0,0,0,,just did.
Dialogue: 0,0:29:51.43,0:29:52.49,Default,,0,0,0,,This was an incredibly detailed
Dialogue: 0,0:29:52.49,0:29:54.66,Default,,0,0,0,,view of how GPU internals work.
Dialogue: 0,0:29:55.62,0:29:56.93,Default,,0,0,0,,You finally have the data to
Dialogue: 0,0:29:56.93,0:29:58.22,Default,,0,0,0,,prove what [inaudible] telling
Dialogue: 0,0:29:58.22,0:29:59.75,Default,,0,0,0,,you, that fetching from the
Dialogue: 0,0:29:59.75,0:30:01.23,Default,,0,0,0,,textures is expensive, but now
Dialogue: 0,0:30:01.23,0:30:02.18,Default,,0,0,0,,you know exactly why.
Dialogue: 0,0:30:03.30,0:30:05.08,Default,,0,0,0,,Accessing this texture was a
Dialogue: 0,0:30:05.08,0:30:06.22,Default,,0,0,0,,star on the Fragment Shader,
Dialogue: 0,0:30:06.22,0:30:08.14,Default,,0,0,0,,because it had to fetch some
Dialogue: 0,0:30:08.14,0:30:09.20,Default,,0,0,0,,data from [inaudible] memory
Dialogue: 0,0:30:09.20,0:30:11.43,Default,,0,0,0,,that was not available in the
Dialogue: 0,0:30:12.38,0:30:12.58,Default,,0,0,0,,caches.
Dialogue: 0,0:30:12.71,0:30:13.66,Default,,0,0,0,,This level of detail is
Dialogue: 0,0:30:13.66,0:30:14.72,Default,,0,0,0,,typically not seen outside
Dialogue: 0,0:30:14.72,0:30:15.61,Default,,0,0,0,,consult tools.
Dialogue: 0,0:30:16.71,0:30:17.90,Default,,0,0,0,,Solving this issue now is a
Dialogue: 0,0:30:17.90,0:30:20.57,Default,,0,0,0,,matter of balancing performance,
Dialogue: 0,0:30:21.01,0:30:22.74,Default,,0,0,0,,quality, and correctness, but
Dialogue: 0,0:30:22.74,0:30:23.93,Default,,0,0,0,,you have demonstrated how you
Dialogue: 0,0:30:23.93,0:30:25.04,Default,,0,0,0,,can use GPU counters [inaudible]
Dialogue: 0,0:30:25.04,0:30:27.38,Default,,0,0,0,,the GPU Frame Debugger, to help
Dialogue: 0,0:30:27.38,0:30:30.20,Default,,0,0,0,,you investigate, analyze, and
Dialogue: 0,0:30:30.20,0:30:32.02,Default,,0,0,0,,verify any capture information
Dialogue: 0,0:30:32.02,0:30:34.25,Default,,0,0,0,,-- any performance information
Dialogue: 0,0:30:34.25,0:30:35.26,Default,,0,0,0,,that you have in your captures.
Dialogue: 0,0:30:35.68,0:30:37.06,Default,,0,0,0,,And now, I hand it back to my
Dialogue: 0,0:30:37.06,0:30:37.59,Default,,0,0,0,,colleague, Seth.
Dialogue: 0,0:30:38.52,0:30:43.50,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:30:48.39,0:30:48.98,Default,,0,0,0,,>> Thank you, Jose.
Dialogue: 0,0:30:50.70,0:30:52.76,Default,,0,0,0,,So that is GPU Counter
Dialogue: 0,0:30:52.76,0:30:53.35,Default,,0,0,0,,Profiling.
Dialogue: 0,0:30:53.97,0:30:54.93,Default,,0,0,0,,Like all the new features we
Dialogue: 0,0:30:54.93,0:30:56.46,Default,,0,0,0,,talked about today, it's the
Dialogue: 0,0:30:56.46,0:30:58.68,Default,,0,0,0,,ultimate joy in Xcode Beta 9,
Dialogue: 0,0:30:59.17,0:31:00.72,Default,,0,0,0,,and it's available for all Metal
Dialogue: 0,0:31:00.72,0:31:01.91,Default,,0,0,0,,capable GPUs.
Dialogue: 0,0:31:02.66,0:31:04.36,Default,,0,0,0,,You will find that more recent
Dialogue: 0,0:31:04.36,0:31:05.59,Default,,0,0,0,,GPUs have more counters
Dialogue: 0,0:31:05.59,0:31:07.68,Default,,0,0,0,,available due to the more modern
Dialogue: 0,0:31:07.99,0:31:10.09,Default,,0,0,0,,nature of the GPU, but there's
Dialogue: 0,0:31:10.09,0:31:11.98,Default,,0,0,0,,still a rich and very usable set
Dialogue: 0,0:31:11.98,0:31:13.62,Default,,0,0,0,,available for all GPUs.
Dialogue: 0,0:31:14.03,0:31:16.62,Default,,0,0,0,,However, we would love to hear
Dialogue: 0,0:31:16.62,0:31:17.94,Default,,0,0,0,,feedback from you if you feel
Dialogue: 0,0:31:17.94,0:31:18.95,Default,,0,0,0,,there's particular counters that
Dialogue: 0,0:31:18.95,0:31:19.70,Default,,0,0,0,,were unexposed that would be
Dialogue: 0,0:31:19.70,0:31:22.16,Default,,0,0,0,,particularly valuable, you know,
Dialogue: 0,0:31:22.43,0:31:24.61,Default,,0,0,0,,please drop by the lab, or
Dialogue: 0,0:31:24.61,0:31:26.05,Default,,0,0,0,,[inaudible] and we'll be happy
Dialogue: 0,0:31:26.05,0:31:26.96,Default,,0,0,0,,to investigate.
Dialogue: 0,0:31:27.39,0:31:28.99,Default,,0,0,0,,So what have we talked about
Dialogue: 0,0:31:28.99,0:31:29.23,Default,,0,0,0,,today?
Dialogue: 0,0:31:29.49,0:31:30.59,Default,,0,0,0,,We've talked about some great
Dialogue: 0,0:31:30.59,0:31:31.91,Default,,0,0,0,,enhancements to the Metal Frame
Dialogue: 0,0:31:31.91,0:31:33.68,Default,,0,0,0,,Debugger, with support for pixel
Dialogue: 0,0:31:33.68,0:31:35.85,Default,,0,0,0,,inspection, inspecting Vertex
Dialogue: 0,0:31:36.25,0:31:39.26,Default,,0,0,0,,Shader outputs, rich filtering,
Dialogue: 0,0:31:39.78,0:31:42.19,Default,,0,0,0,,better capture support, better
Dialogue: 0,0:31:42.19,0:31:44.20,Default,,0,0,0,,capture performance, and Xcode
Dialogue: 0,0:31:44.20,0:31:45.70,Default,,0,0,0,,Metal Quick Looks.
Dialogue: 0,0:31:46.22,0:31:49.21,Default,,0,0,0,,We've talked about support for
Dialogue: 0,0:31:49.21,0:31:50.59,Default,,0,0,0,,debugging and profiling VR
Dialogue: 0,0:31:50.59,0:31:53.51,Default,,0,0,0,,applications in Metal Tray
Dialogue: 0,0:31:53.51,0:31:54.88,Default,,0,0,0,,Debugger, and Metal System
Dialogue: 0,0:31:54.88,0:31:55.19,Default,,0,0,0,,Trays.
Dialogue: 0,0:31:57.36,0:31:59.99,Default,,0,0,0,,We've talked about Metal
Dialogue: 0,0:32:00.06,0:32:01.73,Default,,0,0,0,,Pipeline Statistics, giving you
Dialogue: 0,0:32:01.73,0:32:03.24,Default,,0,0,0,,a direct line to the GPU
Dialogue: 0,0:32:03.24,0:32:04.32,Default,,0,0,0,,compiler for performance
Dialogue: 0,0:32:04.32,0:32:04.92,Default,,0,0,0,,information.
Dialogue: 0,0:32:06.70,0:32:08.52,Default,,0,0,0,,And we've introduced GPU Counter
Dialogue: 0,0:32:08.52,0:32:11.59,Default,,0,0,0,,Profiling, giving you unheralded
Dialogue: 0,0:32:11.59,0:32:13.63,Default,,0,0,0,,access to GPU Performance
Dialogue: 0,0:32:13.63,0:32:17.35,Default,,0,0,0,,Counter Data in Metal.
Dialogue: 0,0:32:17.63,0:32:19.87,Default,,0,0,0,,For more information, check out
Dialogue: 0,0:32:19.87,0:32:20.49,Default,,0,0,0,,the website.
Dialogue: 0,0:32:22.17,0:32:23.85,Default,,0,0,0,,Code is 607.
Dialogue: 0,0:32:23.85,0:32:28.28,Default,,0,0,0,,I did want to call out a couple
Dialogue: 0,0:32:28.28,0:32:29.96,Default,,0,0,0,,of other sessions.
Dialogue: 0,0:32:30.32,0:32:31.76,Default,,0,0,0,,If you didn't catch either the
Dialogue: 0,0:32:31.76,0:32:33.95,Default,,0,0,0,,Introducing Metal 2, or VR With
Dialogue: 0,0:32:33.95,0:32:35.72,Default,,0,0,0,,Metal 2 sessions earlier on this
Dialogue: 0,0:32:35.72,0:32:38.19,Default,,0,0,0,,week, it's highly worth going
Dialogue: 0,0:32:38.19,0:32:39.90,Default,,0,0,0,,and checking out the video, even
Dialogue: 0,0:32:39.90,0:32:41.61,Default,,0,0,0,,if you did see them, it's still
Dialogue: 0,0:32:41.61,0:32:42.74,Default,,0,0,0,,worth checking out the videos.
Dialogue: 0,0:32:43.07,0:32:45.25,Default,,0,0,0,,And coming up later this
Dialogue: 0,0:32:45.25,0:32:46.45,Default,,0,0,0,,afternoon, there is a great
Dialogue: 0,0:32:46.45,0:32:47.71,Default,,0,0,0,,session on using Metal 2 for
Dialogue: 0,0:32:47.71,0:32:49.86,Default,,0,0,0,,Compute, in Grand Ballroom A, at
Dialogue: 0,0:32:49.93,0:32:50.87,Default,,0,0,0,,10 past 4.
Dialogue: 0,0:32:51.39,0:32:53.00,Default,,0,0,0,,And that's it.
Dialogue: 0,0:32:53.00,0:32:54.22,Default,,0,0,0,,Thanks for coming.
Dialogue: 0,0:32:54.56,0:32:56.09,Default,,0,0,0,,Have a great remainder of your
Dialogue: 0,0:32:56.15,0:32:58.44,Default,,0,0,0,,WWDC 17 and enjoy the bash.
Dialogue: 0,0:32:58.44,0:32:58.78,Default,,0,0,0,,Thank you.
Dialogue: 0,0:32:59.02,0:33:00.00,Default,,0,0,0,,[ Applause ]
