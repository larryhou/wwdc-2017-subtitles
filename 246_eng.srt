1
00:00:20,926 --> 00:00:22,046
Linking on tvOS.

2
00:00:22,326 --> 00:00:23,546
Today we will be looking at best

3
00:00:23,546 --> 00:00:24,836
practices for supporting deep

4
00:00:24,836 --> 00:00:27,666
links in your tvOS app.

5
00:00:28,106 --> 00:00:29,286
So what is a deep link?

6
00:00:29,856 --> 00:00:31,406
A deep link is a URL that your

7
00:00:31,406 --> 00:00:32,555
application knows how to open.

8
00:00:33,176 --> 00:00:34,136
We call these links in deep

9
00:00:34,486 --> 00:00:35,316
because they often refer to

10
00:00:35,316 --> 00:00:36,846
content that's a few levels down

11
00:00:36,876 --> 00:00:38,006
in your App2i.

12
00:00:38,276 --> 00:00:39,516
Instead of manually navigating

13
00:00:39,516 --> 00:00:41,206
through several screens, a user

14
00:00:41,206 --> 00:00:42,226
can jump immediately to the

15
00:00:42,226 --> 00:00:43,406
content they want by using the

16
00:00:43,406 --> 00:00:43,636
deep link.

17
00:00:46,226 --> 00:00:47,576
Deep link URLs can be sent to

18
00:00:47,576 --> 00:00:48,826
your app from various parts of

19
00:00:48,826 --> 00:00:50,156
the system or even other

20
00:00:50,156 --> 00:00:50,846
applications.

21
00:00:51,866 --> 00:00:53,166
One common source of deep links

22
00:00:53,166 --> 00:00:54,386
is your application's top shelf

23
00:00:54,386 --> 00:00:54,896
extension.

24
00:00:55,466 --> 00:00:56,246
If you have a top shelf

25
00:00:56,246 --> 00:00:57,706
extension, it communicates with

26
00:00:57,706 --> 00:00:58,946
your app using deep links.

27
00:00:59,656 --> 00:01:00,596
The code [inaudible] handles

28
00:01:00,596 --> 00:01:01,836
links from the top shelf can

29
00:01:01,836 --> 00:01:03,096
also be used to handle links

30
00:01:03,096 --> 00:01:03,976
from any other source.

31
00:01:07,016 --> 00:01:07,786
If you're not familiar with a

32
00:01:07,786 --> 00:01:09,506
top shelf, here's an example of

33
00:01:09,506 --> 00:01:10,806
the top shelf extension for the

34
00:01:10,806 --> 00:01:11,586
iTunes movie sound.

35
00:01:12,306 --> 00:01:13,676
Each item in the top shelf will

36
00:01:13,676 --> 00:01:14,876
open a different movie in the

37
00:01:14,876 --> 00:01:15,806
iTunes movie app.

38
00:01:18,046 --> 00:01:19,066
Because these links are meant

39
00:01:19,066 --> 00:01:20,566
for your application, we

40
00:01:20,566 --> 00:01:22,206
recommend that you use universal

41
00:01:22,206 --> 00:01:22,556
links.

42
00:01:23,276 --> 00:01:24,996
Universal links can also be used

43
00:01:24,996 --> 00:01:26,316
in your iOS app, if you have

44
00:01:26,316 --> 00:01:26,516
one.

45
00:01:27,206 --> 00:01:28,646
Unlike rolling your own custom

46
00:01:28,646 --> 00:01:30,546
URL scheme, universal links

47
00:01:30,546 --> 00:01:31,836
ensure that the link is always

48
00:01:31,836 --> 00:01:32,856
routed to your application.

49
00:01:33,106 --> 00:01:34,576
And that the data is in a format

50
00:01:34,576 --> 00:01:35,616
your application expects.

51
00:01:36,276 --> 00:01:37,266
For more information about

52
00:01:37,266 --> 00:01:38,916
universal links, see the web

53
00:01:38,916 --> 00:01:39,976
page at this URL.

54
00:01:44,376 --> 00:01:45,606
So, now that you know what a

55
00:01:45,606 --> 00:01:46,956
deep link is and where they come

56
00:01:46,956 --> 00:01:48,376
from, let's take a look at what

57
00:01:48,376 --> 00:01:49,216
you should do when your

58
00:01:49,216 --> 00:01:50,336
application is asked to open

59
00:01:50,336 --> 00:01:50,516
one.

60
00:01:51,336 --> 00:01:52,476
The most important part is to

61
00:01:52,476 --> 00:01:53,476
take the user to the link

62
00:01:53,476 --> 00:01:55,316
content immediately, without any

63
00:01:55,316 --> 00:01:56,726
loading screens or animated

64
00:01:56,726 --> 00:01:57,356
transitions.

65
00:01:57,486 --> 00:01:59,156
You should avoid any alerts

66
00:01:59,156 --> 00:02:00,446
asking if the user is sure that

67
00:02:00,446 --> 00:02:01,986
they want to open the link or

68
00:02:01,986 --> 00:02:02,966
sure that they want to start

69
00:02:02,966 --> 00:02:03,596
playing the video.

70
00:02:04,296 --> 00:02:05,706
It's also important to make sure

71
00:02:05,996 --> 00:02:07,126
that when the user leaves link

72
00:02:07,126 --> 00:02:08,705
content, they're able to orient

73
00:02:08,705 --> 00:02:09,545
themselves in your app.

74
00:02:10,286 --> 00:02:11,216
Even when jumping somewhere

75
00:02:11,216 --> 00:02:12,966
directly, the user should always

76
00:02:12,966 --> 00:02:14,496
know where they are and how they

77
00:02:14,496 --> 00:02:14,846
got there.

78
00:02:17,286 --> 00:02:18,446
How should you display deep link

79
00:02:18,446 --> 00:02:18,896
content?

80
00:02:19,246 --> 00:02:20,216
Well, it depends on the link.

81
00:02:20,486 --> 00:02:21,676
Let's take a look at the top

82
00:02:21,676 --> 00:02:22,456
shelf items again.

83
00:02:24,226 --> 00:02:25,866
Each top shelf item supports two

84
00:02:25,866 --> 00:02:27,976
URLs, the displayURL and the

85
00:02:27,976 --> 00:02:28,556
playURL.

86
00:02:29,176 --> 00:02:30,626
The displayURL is opened when

87
00:02:30,626 --> 00:02:31,796
the user presses a select

88
00:02:31,836 --> 00:02:33,286
button, and this should take the

89
00:02:33,286 --> 00:02:34,666
user to a detail page for the

90
00:02:34,666 --> 00:02:35,376
top shelf item.

91
00:02:35,966 --> 00:02:37,146
And typically this detail page

92
00:02:37,146 --> 00:02:38,486
will include a way to play the

93
00:02:38,486 --> 00:02:39,966
item, if the item is a video.

94
00:02:40,756 --> 00:02:42,036
The playURL is opened when the

95
00:02:42,036 --> 00:02:43,196
user presses the Play button.

96
00:02:43,746 --> 00:02:45,076
This is a shortcut that lets the

97
00:02:45,076 --> 00:02:46,316
user immediately start video

98
00:02:46,316 --> 00:02:47,456
playback for the item.

99
00:02:49,766 --> 00:02:51,106
Remember, the displayURL should

100
00:02:51,106 --> 00:02:52,566
take the user to a detail page

101
00:02:52,566 --> 00:02:53,126
for the item.

102
00:02:53,946 --> 00:02:55,416
Menuing out of this detail page

103
00:02:55,646 --> 00:02:56,636
should take the user back to

104
00:02:56,636 --> 00:02:57,966
your application's main screen.

105
00:02:58,656 --> 00:02:59,706
Now it could be that the user

106
00:02:59,706 --> 00:03:00,846
would normally have to navigate

107
00:03:00,876 --> 00:03:02,516
through several levels to get to

108
00:03:02,516 --> 00:03:03,996
the detail page from the main

109
00:03:03,996 --> 00:03:05,536
screen, but they shouldn't have

110
00:03:05,536 --> 00:03:06,996
to take multiple steps to back

111
00:03:06,996 --> 00:03:07,716
out of a deep link.

112
00:03:08,386 --> 00:03:09,936
Instead, the first Menu press

113
00:03:09,936 --> 00:03:11,096
should take them back to the top

114
00:03:11,096 --> 00:03:12,136
level of your application.

115
00:03:12,876 --> 00:03:14,356
Because it's the top level, a

116
00:03:14,356 --> 00:03:15,666
second Menu press should exit

117
00:03:15,666 --> 00:03:17,496
the app and return to the tvOS

118
00:03:17,496 --> 00:03:17,966
home screen.

119
00:03:20,366 --> 00:03:21,356
And here's an illustration of

120
00:03:21,356 --> 00:03:22,106
what that looks like.

121
00:03:22,526 --> 00:03:23,986
Here, I've opened a deep link in

122
00:03:23,986 --> 00:03:24,816
a simple video app.

123
00:03:25,496 --> 00:03:26,736
The first screen I'm taken to is

124
00:03:26,736 --> 00:03:28,016
a detail page for the video I've

125
00:03:28,016 --> 00:03:28,446
selected.

126
00:03:29,116 --> 00:03:30,946
Pressing Menu once takes me back

127
00:03:30,946 --> 00:03:33,256
to my app's main screen, which

128
00:03:33,256 --> 00:03:34,436
shows a grid of all the videos

129
00:03:34,436 --> 00:03:35,076
that I can watch.

130
00:03:35,726 --> 00:03:37,286
Pressing Menu again will exit my

131
00:03:37,286 --> 00:03:39,676
app and take me back to the tvOS

132
00:03:39,676 --> 00:03:40,116
home screen.

133
00:03:43,106 --> 00:03:44,346
Now let's look at how to handle

134
00:03:44,346 --> 00:03:45,016
a playURL.

135
00:03:45,826 --> 00:03:46,666
Remember, this should

136
00:03:46,666 --> 00:03:48,116
immediately begin video playback

137
00:03:48,116 --> 00:03:48,646
for the item.

138
00:03:49,306 --> 00:03:50,146
Your app should start with a

139
00:03:50,146 --> 00:03:51,876
black screen and then fade in

140
00:03:51,876 --> 00:03:52,336
the video.

141
00:03:53,056 --> 00:03:54,246
Try to avoid any visible

142
00:03:54,246 --> 00:03:55,906
transitions or user interaction

143
00:03:55,906 --> 00:03:57,876
and this is especially important

144
00:03:57,876 --> 00:03:59,426
for resuming playback of a video

145
00:03:59,496 --> 00:04:00,856
that the user's already started

146
00:04:00,856 --> 00:04:01,256
watching.

147
00:04:02,256 --> 00:04:03,586
Pressing Menu to exit playback

148
00:04:03,856 --> 00:04:05,016
should take the user to the same

149
00:04:05,016 --> 00:04:06,706
detail page you would have shown

150
00:04:07,006 --> 00:04:08,476
if the displayURL had been sent.

151
00:04:09,146 --> 00:04:10,346
From there, the navigation is

152
00:04:10,346 --> 00:04:11,196
the same as before.

153
00:04:12,106 --> 00:04:13,536
Menuing out of the detail page,

154
00:04:13,536 --> 00:04:14,536
it should go to your apps main

155
00:04:14,536 --> 00:04:16,396
screen and a second Menu press

156
00:04:16,446 --> 00:04:17,875
should return to the tvOS home

157
00:04:17,875 --> 00:04:18,176
screen.

158
00:04:20,796 --> 00:04:21,796
And here's an illustration of

159
00:04:21,796 --> 00:04:22,496
what that looks like.

160
00:04:23,156 --> 00:04:23,986
You can see that the first

161
00:04:23,986 --> 00:04:25,856
screen is a video playback and

162
00:04:25,856 --> 00:04:27,326
then behind that, it's the same

163
00:04:27,366 --> 00:04:28,966
hierarchy as if we had opened

164
00:04:28,966 --> 00:04:30,146
the displayURL.

165
00:04:32,796 --> 00:04:33,866
Now let's take a quick look at a

166
00:04:33,866 --> 00:04:34,836
demo to really see these

167
00:04:34,876 --> 00:04:35,736
concepts in action.

168
00:04:36,756 --> 00:04:37,966
Here's a simple app that lets me

169
00:04:37,966 --> 00:04:40,006
play some of my favorite videos

170
00:04:40,006 --> 00:04:40,426
from WWDC.

171
00:04:40,796 --> 00:04:41,876
I can get to the videos from

172
00:04:41,876 --> 00:04:44,876
within the app, but there's also

173
00:04:44,876 --> 00:04:46,176
a top shelf extension that lets

174
00:04:46,176 --> 00:04:47,386
me jump to the videos directly

175
00:04:47,386 --> 00:04:47,976
from the tvOS home screen.

176
00:04:52,146 --> 00:04:53,416
If I press select on a top shelf

177
00:04:53,416 --> 00:04:55,846
item, I'm taken directly to the

178
00:04:55,846 --> 00:04:57,276
detail page for that video.

179
00:04:59,986 --> 00:05:00,976
If I go back to the top shelf --

180
00:05:04,986 --> 00:05:06,366
And press play on a different

181
00:05:06,366 --> 00:05:10,816
item, the app starts playing

182
00:05:10,816 --> 00:05:11,426
that video.

183
00:05:12,466 --> 00:05:14,536
Menuing out of playback takes me

184
00:05:14,536 --> 00:05:15,976
to the detail page for the item

185
00:05:15,976 --> 00:05:16,876
I was just watching.

186
00:05:17,706 --> 00:05:18,726
You'll remember that this isn't

187
00:05:18,726 --> 00:05:20,086
the same item I was looking at

188
00:05:20,176 --> 00:05:22,026
when I was last in the app and

189
00:05:22,026 --> 00:05:23,056
that's because when the app

190
00:05:23,056 --> 00:05:24,026
opened the link from the top

191
00:05:24,026 --> 00:05:26,346
shelf, it reconfigured its UI to

192
00:05:26,346 --> 00:05:27,406
display the link content.

193
00:05:28,816 --> 00:05:30,176
Menu again takes me out of the

194
00:05:30,176 --> 00:05:32,096
detail page and into the app's

195
00:05:32,096 --> 00:05:32,646
main screen.

196
00:05:33,626 --> 00:05:35,276
Pressing Menu a third time exits

197
00:05:35,316 --> 00:05:37,346
the app and takes me back to the

198
00:05:37,346 --> 00:05:38,036
tvOS home screen.

199
00:05:39,216 --> 00:05:40,266
Let's take a quick look at the

200
00:05:40,266 --> 00:05:41,526
code that handles deep linking

201
00:05:41,526 --> 00:05:42,056
in this app.

202
00:05:42,716 --> 00:05:43,666
The work happens in the app

203
00:05:43,696 --> 00:05:45,506
delegate, specifically, the

204
00:05:45,506 --> 00:05:47,356
application open url with

205
00:05:47,356 --> 00:05:48,116
options method.

206
00:05:49,736 --> 00:05:51,606
First, when we reconfigure our

207
00:05:51,606 --> 00:05:53,536
UI to display a deep link, we

208
00:05:53,536 --> 00:05:55,006
want to do so without animation.

209
00:05:55,626 --> 00:05:56,716
This means that the content will

210
00:05:56,716 --> 00:05:58,016
already be displayed when the

211
00:05:58,016 --> 00:05:58,936
system switches to our

212
00:05:58,936 --> 00:05:59,456
application.

213
00:06:01,196 --> 00:06:02,856
Next, we want to tear down any

214
00:06:02,856 --> 00:06:04,416
UI that the user may have

215
00:06:04,416 --> 00:06:05,756
navigated to in a previous

216
00:06:05,756 --> 00:06:06,506
session with the app.

217
00:06:07,056 --> 00:06:07,966
This app is built using a

218
00:06:07,966 --> 00:06:09,696
navigation controller, so all we

219
00:06:09,696 --> 00:06:10,846
have to do is pop back to the

220
00:06:10,846 --> 00:06:12,386
root view controller, which is

221
00:06:12,386 --> 00:06:13,296
the app's main screen.

222
00:06:14,676 --> 00:06:16,346
And now, we want to push a

223
00:06:16,346 --> 00:06:18,036
detail controller for the URL

224
00:06:18,036 --> 00:06:18,986
onto the nav stack.

225
00:06:19,606 --> 00:06:20,796
We want to do this even if we're

226
00:06:20,796 --> 00:06:22,376
ultimately handling the playURL,

227
00:06:22,846 --> 00:06:23,656
and that way the detail

228
00:06:23,656 --> 00:06:24,786
controller will be there if the

229
00:06:24,786 --> 00:06:25,976
user menu's out of playback.

230
00:06:26,656 --> 00:06:27,466
And we'll push the detail

231
00:06:27,466 --> 00:06:28,756
controller by performing the

232
00:06:28,756 --> 00:06:30,186
same segue that would be

233
00:06:30,186 --> 00:06:31,466
triggered if the user selected

234
00:06:31,466 --> 00:06:32,866
one of the collection view cells

235
00:06:33,016 --> 00:06:34,026
on the app's main screen.

236
00:06:36,026 --> 00:06:37,416
Finally, if we're handling the

237
00:06:37,416 --> 00:06:39,046
playURL, we want to push a

238
00:06:39,046 --> 00:06:40,746
player view controller on top of

239
00:06:40,746 --> 00:06:41,776
the detail view controller.

240
00:06:42,386 --> 00:06:43,546
And we'll do this, again by

241
00:06:43,546 --> 00:06:44,816
performing the same segue that

242
00:06:44,816 --> 00:06:46,236
would be triggered if the user

243
00:06:46,236 --> 00:06:47,576
had selected the Play button on

244
00:06:47,576 --> 00:06:48,296
the detail screen.

245
00:06:50,876 --> 00:06:52,446
In summary, deep links provide a

246
00:06:52,446 --> 00:06:53,886
great way for users to quickly

247
00:06:53,886 --> 00:06:55,276
navigate to content that may be

248
00:06:55,326 --> 00:06:56,166
deep within your app.

249
00:06:56,686 --> 00:06:58,236
When opening a deep link you'll

250
00:06:58,236 --> 00:06:59,596
provide the best experience by

251
00:06:59,596 --> 00:07:00,816
taking the user to the linked

252
00:07:00,816 --> 00:07:02,256
content immediately and

253
00:07:02,256 --> 00:07:02,916
providing them with a

254
00:07:02,916 --> 00:07:04,076
predictable way to get back.

255
00:07:05,976 --> 00:07:07,176
For more information, please

256
00:07:07,176 --> 00:07:07,876
visit this website.

