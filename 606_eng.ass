[Script Info]
; Script generated by FFmpeg/Lavc57.89.100
ScriptType: v4.00+
PlayResX: 384
PlayResY: 288

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,16,&Hffffff,&Hffffff,&H0,&H0,0,0,0,0,100,100,0,0,1,1,0,2,10,10,10,0

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:25.04,0:00:27.88,Default,,0,0,0,,Thank you, and welcome to What's
Dialogue: 0,0:00:27.88,0:00:29.50,Default,,0,0,0,,New in Screen Recording and Live
Dialogue: 0,0:00:29.50,0:00:30.05,Default,,0,0,0,,Broadcast.
Dialogue: 0,0:00:30.58,0:00:32.34,Default,,0,0,0,,My name is Johnny Trenh, I'm a
Dialogue: 0,0:00:32.34,0:00:33.51,Default,,0,0,0,,software engineer at Apple
Dialogue: 0,0:00:33.68,0:00:34.80,Default,,0,0,0,,working on a ReplayKit team.
Dialogue: 0,0:00:35.97,0:00:37.93,Default,,0,0,0,,Today, my teammate Alexander
Dialogue: 0,0:00:38.00,0:00:39.78,Default,,0,0,0,,Subbotin and I are really
Dialogue: 0,0:00:39.78,0:00:41.65,Default,,0,0,0,,excited to talk to you about all
Dialogue: 0,0:00:41.65,0:00:42.83,Default,,0,0,0,,the new upcoming features we
Dialogue: 0,0:00:42.83,0:00:44.28,Default,,0,0,0,,have planned for ReplayKit this
Dialogue: 0,0:00:44.28,0:00:44.43,Default,,0,0,0,,year.
Dialogue: 0,0:00:45.67,0:00:46.87,Default,,0,0,0,,We've got a lot to discuss, so
Dialogue: 0,0:00:46.87,0:00:47.96,Default,,0,0,0,,let's go ahead and get started.
Dialogue: 0,0:00:50.62,0:00:52.90,Default,,0,0,0,,ReplayKit is a framework that
Dialogue: 0,0:00:52.90,0:00:54.69,Default,,0,0,0,,allows developers to record
Dialogue: 0,0:00:54.69,0:00:57.48,Default,,0,0,0,,their applications audio, video,
Dialogue: 0,0:00:57.79,0:00:59.76,Default,,0,0,0,,and microphone content to a
Dialogue: 0,0:00:59.76,0:01:01.55,Default,,0,0,0,,movie file that their users can
Dialogue: 0,0:01:01.55,0:01:04.71,Default,,0,0,0,,then review, edit, save, or
Dialogue: 0,0:01:04.71,0:01:05.57,Default,,0,0,0,,share with the rest of the
Dialogue: 0,0:01:05.57,0:01:05.84,Default,,0,0,0,,world.
Dialogue: 0,0:01:08.29,0:01:10.33,Default,,0,0,0,,ReplayKit also supports Live
Dialogue: 0,0:01:10.33,0:01:10.97,Default,,0,0,0,,Broadcast.
Dialogue: 0,0:01:11.55,0:01:12.96,Default,,0,0,0,,For applications generating
Dialogue: 0,0:01:12.96,0:01:15.45,Default,,0,0,0,,content, ReplayKit provides you
Dialogue: 0,0:01:15.45,0:01:17.48,Default,,0,0,0,,with all the tools necessary to
Dialogue: 0,0:01:17.48,0:01:19.35,Default,,0,0,0,,stream your application's audio,
Dialogue: 0,0:01:19.35,0:01:22.00,Default,,0,0,0,,video, and microphone content to
Dialogue: 0,0:01:22.00,0:01:23.05,Default,,0,0,0,,a broadcast extension.
Dialogue: 0,0:01:24.46,0:01:25.85,Default,,0,0,0,,For applications implementing a
Dialogue: 0,0:01:25.85,0:01:28.42,Default,,0,0,0,,broadcast extension, ReplayKit
Dialogue: 0,0:01:28.42,0:01:30.14,Default,,0,0,0,,comes equipped with easy to use
Dialogue: 0,0:01:30.14,0:01:31.99,Default,,0,0,0,,Xcode templates that will help
Dialogue: 0,0:01:31.99,0:01:33.75,Default,,0,0,0,,your application stream
Dialogue: 0,0:01:33.84,0:01:37.58,Default,,0,0,0,,ReplayKit content.
Dialogue: 0,0:01:37.67,0:01:39.86,Default,,0,0,0,,ReplayKit records both audio and
Dialogue: 0,0:01:39.86,0:01:42.02,Default,,0,0,0,,video in HD quality with
Dialogue: 0,0:01:42.02,0:01:43.89,Default,,0,0,0,,low-performance impact and
Dialogue: 0,0:01:43.93,0:01:45.12,Default,,0,0,0,,minimal power usage.
Dialogue: 0,0:01:46.13,0:01:47.83,Default,,0,0,0,,Privacy is a very big thing with
Dialogue: 0,0:01:47.83,0:01:50.40,Default,,0,0,0,,us, so both recording and
Dialogue: 0,0:01:50.40,0:01:51.95,Default,,0,0,0,,broadcasting comes equipped with
Dialogue: 0,0:01:52.03,0:01:54.06,Default,,0,0,0,,privacy safeguards such as user
Dialogue: 0,0:01:54.06,0:01:55.81,Default,,0,0,0,,consent as well as all
Dialogue: 0,0:01:55.81,0:01:57.68,Default,,0,0,0,,recordings and samples that
Dialogue: 0,0:01:57.68,0:01:58.65,Default,,0,0,0,,exclude system UI.
Dialogue: 0,0:02:01.29,0:02:02.96,Default,,0,0,0,,Since the release of ReplayKit,
Dialogue: 0,0:02:02.96,0:02:04.49,Default,,0,0,0,,we have seen some amazing
Dialogue: 0,0:02:04.49,0:02:06.03,Default,,0,0,0,,adoption from developers all
Dialogue: 0,0:02:06.03,0:02:06.93,Default,,0,0,0,,around the world.
Dialogue: 0,0:02:07.84,0:02:09.40,Default,,0,0,0,,Applications like Galaxy on
Dialogue: 0,0:02:09.40,0:02:11.89,Default,,0,0,0,,Fire, Vainglory, Call of
Dialogue: 0,0:02:11.89,0:02:14.19,Default,,0,0,0,,Champions, and Modern Combat 5,
Dialogue: 0,0:02:14.50,0:02:16.72,Default,,0,0,0,,are all using ReplayKit today to
Dialogue: 0,0:02:16.72,0:02:18.47,Default,,0,0,0,,record and broadcast their
Dialogue: 0,0:02:18.47,0:02:20.30,Default,,0,0,0,,users' experiences with the rest
Dialogue: 0,0:02:20.30,0:02:20.72,Default,,0,0,0,,of the world.
Dialogue: 0,0:02:23.61,0:02:25.36,Default,,0,0,0,,Last year we introduced Live
Dialogue: 0,0:02:25.36,0:02:26.59,Default,,0,0,0,,Broadcast with ReplayKit.
Dialogue: 0,0:02:26.77,0:02:28.36,Default,,0,0,0,,And we are proud to say that
Dialogue: 0,0:02:28.36,0:02:30.12,Default,,0,0,0,,ReplayKit now powers some of the
Dialogue: 0,0:02:30.12,0:02:31.79,Default,,0,0,0,,industry leaders in mobile
Dialogue: 0,0:02:31.79,0:02:32.17,Default,,0,0,0,,streaming.
Dialogue: 0,0:02:33.80,0:02:36.50,Default,,0,0,0,,The support adoption and
Dialogue: 0,0:02:36.54,0:02:37.56,Default,,0,0,0,,feedback we've received from
Dialogue: 0,0:02:37.56,0:02:39.06,Default,,0,0,0,,developers has been amazing.
Dialogue: 0,0:02:39.87,0:02:41.04,Default,,0,0,0,,That is why this year we're
Dialogue: 0,0:02:41.17,0:02:42.38,Default,,0,0,0,,really happy to introduce
Dialogue: 0,0:02:43.89,0:02:44.68,Default,,0,0,0,,ReplayKit 2.
Dialogue: 0,0:02:45.82,0:02:47.96,Default,,0,0,0,,With ReplayKit 2, our goal is to
Dialogue: 0,0:02:47.96,0:02:49.91,Default,,0,0,0,,bring ReplayKit to every user
Dialogue: 0,0:02:50.13,0:02:51.52,Default,,0,0,0,,and every application.
Dialogue: 0,0:02:52.62,0:02:54.31,Default,,0,0,0,,We've designed our new features
Dialogue: 0,0:02:54.34,0:02:55.98,Default,,0,0,0,,to take ReplayKit beyond just
Dialogue: 0,0:02:55.98,0:02:58.47,Default,,0,0,0,,gaming, enabling all developers
Dialogue: 0,0:02:58.55,0:03:00.87,Default,,0,0,0,,to record and broadcast their
Dialogue: 0,0:03:00.87,0:03:02.58,Default,,0,0,0,,users' experiences to the whole
Dialogue: 0,0:03:02.58,0:03:02.96,Default,,0,0,0,,world.
Dialogue: 0,0:03:03.48,0:03:05.95,Default,,0,0,0,,And to do that, the first thing
Dialogue: 0,0:03:05.95,0:03:08.49,Default,,0,0,0,,I want to talk about is In-App
Dialogue: 0,0:03:08.49,0:03:09.20,Default,,0,0,0,,Screen Capture.
Dialogue: 0,0:03:10.51,0:03:12.01,Default,,0,0,0,,Look, we've already seen the
Dialogue: 0,0:03:12.01,0:03:13.83,Default,,0,0,0,,amazing content your users have
Dialogue: 0,0:03:13.83,0:03:15.09,Default,,0,0,0,,been creating with ReplayKit.
Dialogue: 0,0:03:16.33,0:03:17.67,Default,,0,0,0,,With ReplayKit 2, we're
Dialogue: 0,0:03:17.67,0:03:19.64,Default,,0,0,0,,introducing In-App Screen
Dialogue: 0,0:03:19.64,0:03:21.51,Default,,0,0,0,,Capture, which is a powerful new
Dialogue: 0,0:03:21.51,0:03:23.59,Default,,0,0,0,,API that's going to give you
Dialogue: 0,0:03:23.83,0:03:25.43,Default,,0,0,0,,direct access to your
Dialogue: 0,0:03:25.43,0:03:28.32,Default,,0,0,0,,application's own audio, video,
Dialogue: 0,0:03:28.44,0:03:30.20,Default,,0,0,0,,and microphone content straight
Dialogue: 0,0:03:30.20,0:03:30.91,Default,,0,0,0,,from ReplayKit.
Dialogue: 0,0:03:31.42,0:03:35.64,Default,,0,0,0,,Our goal with ReplayKit 2 was to
Dialogue: 0,0:03:35.64,0:03:36.98,Default,,0,0,0,,bring ReplayKit to every
Dialogue: 0,0:03:36.98,0:03:37.63,Default,,0,0,0,,application.
Dialogue: 0,0:03:38.51,0:03:40.03,Default,,0,0,0,,And to do that we're making
Dialogue: 0,0:03:40.03,0:03:42.09,Default,,0,0,0,,ReplayKit instantly available to
Dialogue: 0,0:03:42.09,0:03:43.83,Default,,0,0,0,,every application on iOS.
Dialogue: 0,0:03:44.74,0:03:47.10,Default,,0,0,0,,Previously, to use ReplayKit and
Dialogue: 0,0:03:47.10,0:03:48.75,Default,,0,0,0,,to have a application using
Dialogue: 0,0:03:48.75,0:03:50.65,Default,,0,0,0,,ReplayKit, you'd have to use our
Dialogue: 0,0:03:50.65,0:03:50.93,Default,,0,0,0,,API.
Dialogue: 0,0:03:51.57,0:03:54.94,Default,,0,0,0,,But now, users can record and
Dialogue: 0,0:03:54.94,0:03:57.38,Default,,0,0,0,,broadcast their entire iOS
Dialogue: 0,0:03:57.38,0:03:59.33,Default,,0,0,0,,screen experience straight from
Dialogue: 0,0:03:59.33,0:04:00.74,Default,,0,0,0,,the new screen recording control
Dialogue: 0,0:04:00.91,0:04:03.86,Default,,0,0,0,,found in Control Center.
Dialogue: 0,0:04:04.03,0:04:06.01,Default,,0,0,0,,Also new with ReplayKit 2 is the
Dialogue: 0,0:04:06.01,0:04:08.19,Default,,0,0,0,,ability to pair your application
Dialogue: 0,0:04:08.37,0:04:09.88,Default,,0,0,0,,with a particular streaming
Dialogue: 0,0:04:09.88,0:04:10.38,Default,,0,0,0,,service.
Dialogue: 0,0:04:11.70,0:04:14.64,Default,,0,0,0,,Developers can now seamlessly
Dialogue: 0,0:04:14.64,0:04:16.30,Default,,0,0,0,,integrate their entire streaming
Dialogue: 0,0:04:16.30,0:04:17.90,Default,,0,0,0,,solution right from within their
Dialogue: 0,0:04:17.90,0:04:18.63,Default,,0,0,0,,own application.
Dialogue: 0,0:04:20.68,0:04:22.83,Default,,0,0,0,,Last year, we introduced front
Dialogue: 0,0:04:22.83,0:04:24.12,Default,,0,0,0,,camera support for ReplayKit.
Dialogue: 0,0:04:24.90,0:04:26.91,Default,,0,0,0,,This year with ReplayKit 2 we're
Dialogue: 0,0:04:26.91,0:04:28.31,Default,,0,0,0,,introducing Fast Camera
Dialogue: 0,0:04:28.31,0:04:29.83,Default,,0,0,0,,Switching, which is going to
Dialogue: 0,0:04:29.83,0:04:31.52,Default,,0,0,0,,enable you to use both the front
Dialogue: 0,0:04:31.79,0:04:33.49,Default,,0,0,0,,and rear cameras for additional
Dialogue: 0,0:04:33.49,0:04:33.98,Default,,0,0,0,,video commentary.
Dialogue: 0,0:04:36.46,0:04:37.91,Default,,0,0,0,,We've got a lot of new and
Dialogue: 0,0:04:37.91,0:04:39.06,Default,,0,0,0,,exciting things to talk about.
Dialogue: 0,0:04:39.06,0:04:40.13,Default,,0,0,0,,So, I'm just going to go ahead
Dialogue: 0,0:04:40.13,0:04:42.53,Default,,0,0,0,,and jump right in with In-App
Dialogue: 0,0:04:42.53,0:04:43.21,Default,,0,0,0,,Screen Capture.
Dialogue: 0,0:04:44.62,0:04:46.04,Default,,0,0,0,,In-App Screen Capture is a
Dialogue: 0,0:04:46.13,0:04:48.23,Default,,0,0,0,,powerful new API that's going to
Dialogue: 0,0:04:48.23,0:04:50.50,Default,,0,0,0,,give you direct access to your
Dialogue: 0,0:04:50.54,0:04:53.24,Default,,0,0,0,,application's own audio, video,
Dialogue: 0,0:04:53.56,0:04:55.16,Default,,0,0,0,,and microphone content straight
Dialogue: 0,0:04:55.16,0:04:55.85,Default,,0,0,0,,from ReplayKit.
Dialogue: 0,0:04:56.93,0:04:58.79,Default,,0,0,0,,This new API is going to open
Dialogue: 0,0:04:58.79,0:05:00.50,Default,,0,0,0,,doors to new user experiences
Dialogue: 0,0:05:00.50,0:05:01.91,Default,,0,0,0,,that just weren't possible
Dialogue: 0,0:05:01.91,0:05:02.28,Default,,0,0,0,,before.
Dialogue: 0,0:05:03.26,0:05:05.09,Default,,0,0,0,,But, before we get into In-App
Dialogue: 0,0:05:05.09,0:05:06.35,Default,,0,0,0,,Screen Capture, let's go ahead
Dialogue: 0,0:05:06.35,0:05:07.32,Default,,0,0,0,,and take a look at how
Dialogue: 0,0:05:08.01,0:05:09.76,Default,,0,0,0,,applications are currently using
Dialogue: 0,0:05:09.76,0:05:11.10,Default,,0,0,0,,ReplayKit to handle recording.
Dialogue: 0,0:05:14.06,0:05:15.24,Default,,0,0,0,,An application that's currently
Dialogue: 0,0:05:15.24,0:05:17.33,Default,,0,0,0,,using ReplayKit will call in to
Dialogue: 0,0:05:17.33,0:05:18.53,Default,,0,0,0,,RPScreenRecorder to get the
Dialogue: 0,0:05:18.53,0:05:19.89,Default,,0,0,0,,shared recorder instance.
Dialogue: 0,0:05:20.54,0:05:22.89,Default,,0,0,0,,From there, you'll call start
Dialogue: 0,0:05:22.89,0:05:24.69,Default,,0,0,0,,recording onto shared recorder
Dialogue: 0,0:05:24.69,0:05:26.70,Default,,0,0,0,,instance, at which time the
Dialogue: 0,0:05:26.70,0:05:27.92,Default,,0,0,0,,replay daemon will start to
Dialogue: 0,0:05:27.92,0:05:29.44,Default,,0,0,0,,capture your application's
Dialogue: 0,0:05:29.44,0:05:31.59,Default,,0,0,0,,audio, video, and microphone
Dialogue: 0,0:05:31.59,0:05:33.89,Default,,0,0,0,,content, and create and manage a
Dialogue: 0,0:05:33.89,0:05:35.11,Default,,0,0,0,,movie file just for your
Dialogue: 0,0:05:35.11,0:05:35.66,Default,,0,0,0,,application.
Dialogue: 0,0:05:37.44,0:05:39.16,Default,,0,0,0,,When you call stop recording on
Dialogue: 0,0:05:39.16,0:05:40.36,Default,,0,0,0,,a shared recorder instance,
Dialogue: 0,0:05:40.77,0:05:42.18,Default,,0,0,0,,replay daemon will communicate
Dialogue: 0,0:05:42.18,0:05:43.48,Default,,0,0,0,,with a share and preview
Dialogue: 0,0:05:43.48,0:05:45.78,Default,,0,0,0,,extension and instantiate an
Dialogue: 0,0:05:45.78,0:05:47.13,Default,,0,0,0,,RPPreviewViewController.
Dialogue: 0,0:05:47.98,0:05:48.67,Default,,0,0,0,,We'll pass that
Dialogue: 0,0:05:48.67,0:05:50.30,Default,,0,0,0,,RPPreviewViewController back to
Dialogue: 0,0:05:50.30,0:05:51.63,Default,,0,0,0,,your application so that you can
Dialogue: 0,0:05:51.63,0:05:52.89,Default,,0,0,0,,present it to your users,
Dialogue: 0,0:05:53.33,0:05:55.71,Default,,0,0,0,,allowing them to review, edit,
Dialogue: 0,0:05:55.78,0:05:57.12,Default,,0,0,0,,save, or share the recording
Dialogue: 0,0:05:57.12,0:05:58.24,Default,,0,0,0,,they just made in your
Dialogue: 0,0:05:58.24,0:05:58.81,Default,,0,0,0,,application.
Dialogue: 0,0:06:01.62,0:06:02.72,Default,,0,0,0,,With a new In-App Screen
Dialogue: 0,0:06:02.72,0:06:04.19,Default,,0,0,0,,Capture, just like with
Dialogue: 0,0:06:04.19,0:06:06.04,Default,,0,0,0,,recording, you're going to call
Dialogue: 0,0:06:06.04,0:06:07.27,Default,,0,0,0,,into RPScreenRecorder to get the
Dialogue: 0,0:06:07.27,0:06:08.54,Default,,0,0,0,,share recorder instance.
Dialogue: 0,0:06:09.28,0:06:11.04,Default,,0,0,0,,From there, you'll call start
Dialogue: 0,0:06:11.04,0:06:12.24,Default,,0,0,0,,capture on the share recorder
Dialogue: 0,0:06:12.24,0:06:13.75,Default,,0,0,0,,instance, at which point the
Dialogue: 0,0:06:13.75,0:06:15.19,Default,,0,0,0,,replay daemon will start to
Dialogue: 0,0:06:15.19,0:06:16.71,Default,,0,0,0,,capture your application's
Dialogue: 0,0:06:16.71,0:06:19.10,Default,,0,0,0,,audio, video, and microphone
Dialogue: 0,0:06:19.10,0:06:19.53,Default,,0,0,0,,content.
Dialogue: 0,0:06:20.08,0:06:22.14,Default,,0,0,0,,But instead of creating and
Dialogue: 0,0:06:22.14,0:06:23.72,Default,,0,0,0,,managing a movie file just for
Dialogue: 0,0:06:23.72,0:06:25.87,Default,,0,0,0,,your application, ReplayKit will
Dialogue: 0,0:06:25.87,0:06:27.37,Default,,0,0,0,,send those audio and video
Dialogue: 0,0:06:27.37,0:06:28.90,Default,,0,0,0,,samples right back up to
Dialogue: 0,0:06:28.90,0:06:29.74,Default,,0,0,0,,RPScreenRecorder.
Dialogue: 0,0:06:30.35,0:06:33.83,Default,,0,0,0,,A capture handler block is then
Dialogue: 0,0:06:33.83,0:06:35.41,Default,,0,0,0,,called, and we'll send the audio
Dialogue: 0,0:06:35.41,0:06:37.12,Default,,0,0,0,,and video samples, right back to
Dialogue: 0,0:06:37.12,0:06:38.45,Default,,0,0,0,,your application's process.
Dialogue: 0,0:06:39.71,0:06:41.93,Default,,0,0,0,,Your application now has direct
Dialogue: 0,0:06:41.93,0:06:44.79,Default,,0,0,0,,access to its own audio, video,
Dialogue: 0,0:06:44.94,0:06:46.56,Default,,0,0,0,,and microphone samples straight
Dialogue: 0,0:06:46.56,0:06:47.26,Default,,0,0,0,,from ReplayKit.
Dialogue: 0,0:06:49.38,0:06:51.37,Default,,0,0,0,,Giving you direct access to your
Dialogue: 0,0:06:51.37,0:06:52.94,Default,,0,0,0,,application's audio and video
Dialogue: 0,0:06:52.94,0:06:54.35,Default,,0,0,0,,samples from ReplayKit will
Dialogue: 0,0:06:54.35,0:06:55.46,Default,,0,0,0,,provide you with more
Dialogue: 0,0:06:55.46,0:06:58.10,Default,,0,0,0,,flexibility and control over the
Dialogue: 0,0:06:58.10,0:07:00.13,Default,,0,0,0,,content your users are already
Dialogue: 0,0:07:00.13,0:07:00.55,Default,,0,0,0,,creating.
Dialogue: 0,0:07:01.81,0:07:03.64,Default,,0,0,0,,Just like with recording, In-App
Dialogue: 0,0:07:03.64,0:07:05.22,Default,,0,0,0,,Screen Capture captures audio
Dialogue: 0,0:07:05.58,0:07:08.23,Default,,0,0,0,,and video in HD quality, with
Dialogue: 0,0:07:08.23,0:07:10.17,Default,,0,0,0,,low-performance impact and
Dialogue: 0,0:07:10.17,0:07:11.21,Default,,0,0,0,,minimal power usage.
Dialogue: 0,0:07:12.30,0:07:14.19,Default,,0,0,0,,Again, privacy is a very big
Dialogue: 0,0:07:14.19,0:07:16.17,Default,,0,0,0,,thing with us, so In-App Screen
Dialogue: 0,0:07:16.17,0:07:17.39,Default,,0,0,0,,Capture comes equipped with
Dialogue: 0,0:07:17.39,0:07:19.47,Default,,0,0,0,,privacy safeguards such as user
Dialogue: 0,0:07:19.47,0:07:21.74,Default,,0,0,0,,consent as well as all samples
Dialogue: 0,0:07:21.74,0:07:22.82,Default,,0,0,0,,excluding system UI.
Dialogue: 0,0:07:24.66,0:07:26.70,Default,,0,0,0,,The API is simple and
Dialogue: 0,0:07:26.70,0:07:27.10,Default,,0,0,0,,lightweight.
Dialogue: 0,0:07:27.22,0:07:28.32,Default,,0,0,0,,So, let's go ahead and take a
Dialogue: 0,0:07:28.32,0:07:30.61,Default,,0,0,0,,quick look at it.
Dialogue: 0,0:07:30.88,0:07:32.77,Default,,0,0,0,,StartCapture takes in two
Dialogue: 0,0:07:32.77,0:07:34.79,Default,,0,0,0,,blocks, a captureHandler block
Dialogue: 0,0:07:35.03,0:07:36.48,Default,,0,0,0,,and a completionHandler block.
Dialogue: 0,0:07:37.87,0:07:39.25,Default,,0,0,0,,The captureHandler block is
Dialogue: 0,0:07:39.25,0:07:41.20,Default,,0,0,0,,called every time ReplayKit is
Dialogue: 0,0:07:41.20,0:07:42.57,Default,,0,0,0,,ready to hand your application
Dialogue: 0,0:07:42.57,0:07:43.51,Default,,0,0,0,,back a sample.
Dialogue: 0,0:07:44.39,0:07:45.24,Default,,0,0,0,,We provide you with a
Dialogue: 0,0:07:45.24,0:07:46.93,Default,,0,0,0,,CMSampleBuffer ref an
Dialogue: 0,0:07:46.93,0:07:49.36,Default,,0,0,0,,RPSampleBufferType and an NS
Dialogue: 0,0:07:49.36,0:07:49.60,Default,,0,0,0,,Error.
Dialogue: 0,0:07:50.70,0:07:52.17,Default,,0,0,0,,The completion handler block is
Dialogue: 0,0:07:52.17,0:07:53.94,Default,,0,0,0,,called when startCapture has
Dialogue: 0,0:07:53.94,0:07:55.85,Default,,0,0,0,,completed and will give you an
Dialogue: 0,0:07:55.85,0:07:57.31,Default,,0,0,0,,NS Error indicating to you
Dialogue: 0,0:07:57.31,0:07:58.50,Default,,0,0,0,,whether or not an error has
Dialogue: 0,0:07:58.50,0:08:00.05,Default,,0,0,0,,occurred during startCapture.
Dialogue: 0,0:08:01.29,0:08:02.89,Default,,0,0,0,,The stopCapture also takes in a
Dialogue: 0,0:08:02.89,0:08:04.08,Default,,0,0,0,,completionHandler which will
Dialogue: 0,0:08:04.08,0:08:05.62,Default,,0,0,0,,also pass you back and NS Error
Dialogue: 0,0:08:05.97,0:08:07.70,Default,,0,0,0,,indicating to you whether or not
Dialogue: 0,0:08:07.70,0:08:08.63,Default,,0,0,0,,an error has occurred during
Dialogue: 0,0:08:08.63,0:08:09.37,Default,,0,0,0,,stopCapture.
Dialogue: 0,0:08:10.57,0:08:11.57,Default,,0,0,0,,Let's go ahead and take a look
Dialogue: 0,0:08:11.57,0:08:12.45,Default,,0,0,0,,at how we can use this in
Dialogue: 0,0:08:12.45,0:08:12.98,Default,,0,0,0,,practice.
Dialogue: 0,0:08:15.11,0:08:16.48,Default,,0,0,0,,Here, in our example, what I
Dialogue: 0,0:08:16.48,0:08:18.26,Default,,0,0,0,,want to do is I want to take the
Dialogue: 0,0:08:18.26,0:08:19.66,Default,,0,0,0,,samples that ReplayKit has given
Dialogue: 0,0:08:19.66,0:08:21.58,Default,,0,0,0,,me and I want to use it to write
Dialogue: 0,0:08:21.58,0:08:23.13,Default,,0,0,0,,a simple movie file to disc
Dialogue: 0,0:08:23.28,0:08:24.44,Default,,0,0,0,,using AVAssetWriter.
Dialogue: 0,0:08:25.13,0:08:27.03,Default,,0,0,0,,So, here I have method called
Dialogue: 0,0:08:27.03,0:08:28.23,Default,,0,0,0,,didPressCaptureButton.
Dialogue: 0,0:08:28.74,0:08:30.33,Default,,0,0,0,,Inside of it, I'm simply going
Dialogue: 0,0:08:30.33,0:08:31.66,Default,,0,0,0,,to grab the sharedRecorder
Dialogue: 0,0:08:31.66,0:08:33.27,Default,,0,0,0,,instance from RPScreenRecorder.
Dialogue: 0,0:08:33.96,0:08:35.42,Default,,0,0,0,,From there, I'll call
Dialogue: 0,0:08:35.42,0:08:37.27,Default,,0,0,0,,startCapture providing it a
Dialogue: 0,0:08:37.27,0:08:38.75,Default,,0,0,0,,capture handler block and a
Dialogue: 0,0:08:38.75,0:08:39.73,Default,,0,0,0,,completion handler block.
Dialogue: 0,0:08:40.62,0:08:41.94,Default,,0,0,0,,Remember, I'm trying to write a
Dialogue: 0,0:08:41.94,0:08:43.65,Default,,0,0,0,,movie file using AVAssetWriter
Dialogue: 0,0:08:43.65,0:08:44.87,Default,,0,0,0,,with the samples we get back.
Dialogue: 0,0:08:45.15,0:08:46.41,Default,,0,0,0,,So it's really important for me
Dialogue: 0,0:08:46.41,0:08:47.72,Default,,0,0,0,,to know how I'm going to handle
Dialogue: 0,0:08:47.72,0:08:48.36,Default,,0,0,0,,these samples.
Dialogue: 0,0:08:49.01,0:08:50.90,Default,,0,0,0,,So, let's take a closer look at
Dialogue: 0,0:08:50.98,0:08:51.74,Default,,0,0,0,,the capture handler.
Dialogue: 0,0:08:53.88,0:08:56.21,Default,,0,0,0,,Remember, the capture handler is
Dialogue: 0,0:08:56.21,0:08:58.57,Default,,0,0,0,,called every time ReplayKit is
Dialogue: 0,0:08:58.57,0:09:00.04,Default,,0,0,0,,ready to hand your application
Dialogue: 0,0:09:00.04,0:09:00.97,Default,,0,0,0,,back a sample.
Dialogue: 0,0:09:01.62,0:09:02.35,Default,,0,0,0,,We'll provide you with a
Dialogue: 0,0:09:02.35,0:09:04.25,Default,,0,0,0,,CMSampleBuffer ref, and
Dialogue: 0,0:09:04.25,0:09:06.53,Default,,0,0,0,,RPSampleBufferType, and an NS
Dialogue: 0,0:09:06.57,0:09:06.84,Default,,0,0,0,,Error.
Dialogue: 0,0:09:08.05,0:09:09.38,Default,,0,0,0,,Since I'm using these samples to
Dialogue: 0,0:09:09.38,0:09:10.77,Default,,0,0,0,,write a simple movie using
Dialogue: 0,0:09:10.77,0:09:12.79,Default,,0,0,0,,AVAssetWriter, it's really
Dialogue: 0,0:09:12.79,0:09:13.93,Default,,0,0,0,,important for me to know what
Dialogue: 0,0:09:14.00,0:09:15.46,Default,,0,0,0,,type of samples I'm getting back
Dialogue: 0,0:09:15.46,0:09:16.14,Default,,0,0,0,,from ReplayKit.
Dialogue: 0,0:09:16.94,0:09:18.48,Default,,0,0,0,,Here we have a switch on
Dialogue: 0,0:09:18.48,0:09:21.00,Default,,0,0,0,,RPSampleType that's going to do
Dialogue: 0,0:09:21.00,0:09:21.48,Default,,0,0,0,,just that.
Dialogue: 0,0:09:22.87,0:09:24.21,Default,,0,0,0,,If I get a sample buffer type
Dialogue: 0,0:09:24.21,0:09:25.91,Default,,0,0,0,,that's video, I'm simply going
Dialogue: 0,0:09:25.91,0:09:27.36,Default,,0,0,0,,to append that sample to my
Dialogue: 0,0:09:27.36,0:09:28.47,Default,,0,0,0,,video input for my
Dialogue: 0,0:09:28.47,0:09:29.17,Default,,0,0,0,,AVAssetWriter.
Dialogue: 0,0:09:30.04,0:09:31.40,Default,,0,0,0,,If I get a sample buffer type
Dialogue: 0,0:09:31.40,0:09:32.96,Default,,0,0,0,,that's audio, I'll append that
Dialogue: 0,0:09:32.96,0:09:35.27,Default,,0,0,0,,sample to my audio input for my
Dialogue: 0,0:09:35.27,0:09:35.98,Default,,0,0,0,,AVAssetWriter.
Dialogue: 0,0:09:36.44,0:09:38.14,Default,,0,0,0,,And finally, if I get a sample
Dialogue: 0,0:09:38.14,0:09:39.08,Default,,0,0,0,,buffer type that's for the
Dialogue: 0,0:09:39.08,0:09:40.58,Default,,0,0,0,,microphone, I'll append that
Dialogue: 0,0:09:40.58,0:09:42.10,Default,,0,0,0,,sample to my microphone input
Dialogue: 0,0:09:42.45,0:09:43.49,Default,,0,0,0,,for my AVAssetWriter.
Dialogue: 0,0:09:44.28,0:09:46.09,Default,,0,0,0,,And, just like that, I am now
Dialogue: 0,0:09:46.09,0:09:48.32,Default,,0,0,0,,handling all the expected types
Dialogue: 0,0:09:48.32,0:09:49.93,Default,,0,0,0,,of samples I'm going to get back
Dialogue: 0,0:09:50.14,0:09:50.79,Default,,0,0,0,,from ReplayKit.
Dialogue: 0,0:09:51.52,0:09:52.91,Default,,0,0,0,,And I'm also using them to write
Dialogue: 0,0:09:52.91,0:09:54.50,Default,,0,0,0,,a simple movie to disc using
Dialogue: 0,0:09:54.50,0:09:55.28,Default,,0,0,0,,AVAssetWriter.
Dialogue: 0,0:09:56.73,0:09:57.83,Default,,0,0,0,,Let's go ahead and take a closer
Dialogue: 0,0:09:57.83,0:09:58.90,Default,,0,0,0,,look at the completion handler.
Dialogue: 0,0:10:02.05,0:10:03.47,Default,,0,0,0,,Just like with recording, you
Dialogue: 0,0:10:03.47,0:10:05.03,Default,,0,0,0,,want to indicate to your users
Dialogue: 0,0:10:05.23,0:10:06.68,Default,,0,0,0,,that a capture session has
Dialogue: 0,0:10:06.68,0:10:08.08,Default,,0,0,0,,currently occurred or is in
Dialogue: 0,0:10:08.08,0:10:08.47,Default,,0,0,0,,session.
Dialogue: 0,0:10:08.83,0:10:10.37,Default,,0,0,0,,So, in our completion handler,
Dialogue: 0,0:10:10.62,0:10:11.96,Default,,0,0,0,,we're going to simply call
Dialogue: 0,0:10:11.96,0:10:13.25,Default,,0,0,0,,update the capture button with
Dialogue: 0,0:10:13.25,0:10:14.29,Default,,0,0,0,,the error that we get back
Dialogue: 0,0:10:14.50,0:10:15.48,Default,,0,0,0,,during our completion handler.
Dialogue: 0,0:10:15.93,0:10:17.43,Default,,0,0,0,,This will allow me to update my
Dialogue: 0,0:10:17.43,0:10:19.93,Default,,0,0,0,,UI and indicate to my users that
Dialogue: 0,0:10:19.93,0:10:21.18,Default,,0,0,0,,a capture session has occurred.
Dialogue: 0,0:10:21.83,0:10:22.96,Default,,0,0,0,,And that's it.
Dialogue: 0,0:10:23.25,0:10:24.17,Default,,0,0,0,,That's all you have to do to
Dialogue: 0,0:10:24.17,0:10:24.89,Default,,0,0,0,,start using this powerful new
Dialogue: 0,0:10:24.89,0:10:24.98,Default,,0,0,0,,API.
Dialogue: 0,0:10:28.10,0:10:29.82,Default,,0,0,0,,I want to take a minute to
Dialogue: 0,0:10:29.82,0:10:31.39,Default,,0,0,0,,revisit how In-App Screen
Dialogue: 0,0:10:31.39,0:10:32.62,Default,,0,0,0,,Capture's actually working.
Dialogue: 0,0:10:33.08,0:10:35.13,Default,,0,0,0,,And I'd like to remind you that
Dialogue: 0,0:10:35.13,0:10:37.41,Default,,0,0,0,,your application now has direct
Dialogue: 0,0:10:37.41,0:10:40.29,Default,,0,0,0,,access to its own audio, video,
Dialogue: 0,0:10:40.35,0:10:41.41,Default,,0,0,0,,and microphone content straight
Dialogue: 0,0:10:41.41,0:10:41.98,Default,,0,0,0,,from ReplayKit.
Dialogue: 0,0:10:45.05,0:10:46.59,Default,,0,0,0,,In our example, we use these
Dialogue: 0,0:10:46.59,0:10:48.16,Default,,0,0,0,,samples to create a simple movie
Dialogue: 0,0:10:48.16,0:10:50.26,Default,,0,0,0,,using AVAssetWriter, but you can
Dialogue: 0,0:10:50.26,0:10:52.06,Default,,0,0,0,,do so much more with this.
Dialogue: 0,0:10:52.76,0:10:54.47,Default,,0,0,0,,Now that your application has
Dialogue: 0,0:10:54.47,0:10:55.86,Default,,0,0,0,,access to its own audio and
Dialogue: 0,0:10:55.86,0:10:58.73,Default,,0,0,0,,video samples, you can create
Dialogue: 0,0:10:58.73,0:11:00.60,Default,,0,0,0,,and manage videos right into
Dialogue: 0,0:11:00.60,0:11:01.42,Default,,0,0,0,,your own application.
Dialogue: 0,0:11:04.05,0:11:05.66,Default,,0,0,0,,You can even create a custom
Dialogue: 0,0:11:05.66,0:11:07.10,Default,,0,0,0,,video editor and have it
Dialogue: 0,0:11:07.10,0:11:08.34,Default,,0,0,0,,seamlessly integrated in the
Dialogue: 0,0:11:08.34,0:11:09.71,Default,,0,0,0,,user experience for your
Dialogue: 0,0:11:09.71,0:11:10.17,Default,,0,0,0,,application.
Dialogue: 0,0:11:12.06,0:11:14.58,Default,,0,0,0,,Again, a goal of ReplayKit 2 was
Dialogue: 0,0:11:14.58,0:11:16.13,Default,,0,0,0,,to bring ReplayKit to every
Dialogue: 0,0:11:16.13,0:11:17.74,Default,,0,0,0,,application, not just gaming.
Dialogue: 0,0:11:19.03,0:11:20.72,Default,,0,0,0,,Here, I have the same
Dialogue: 0,0:11:20.72,0:11:22.61,Default,,0,0,0,,productivity app running on two
Dialogue: 0,0:11:22.69,0:11:23.98,Default,,0,0,0,,different iOS devices.
Dialogue: 0,0:11:24.55,0:11:27.26,Default,,0,0,0,,Now that I have access to my
Dialogue: 0,0:11:27.26,0:11:29.19,Default,,0,0,0,,application's audio and video
Dialogue: 0,0:11:29.19,0:11:31.27,Default,,0,0,0,,samples, just like with
Dialogue: 0,0:11:31.32,0:11:33.18,Default,,0,0,0,,broadcasts, I can encode these
Dialogue: 0,0:11:33.18,0:11:35.00,Default,,0,0,0,,samples myself, and I can send
Dialogue: 0,0:11:35.00,0:11:36.41,Default,,0,0,0,,them to my own personal server.
Dialogue: 0,0:11:37.66,0:11:39.56,Default,,0,0,0,,From there, I can share my
Dialogue: 0,0:11:39.63,0:11:41.37,Default,,0,0,0,,application's Screen Capture
Dialogue: 0,0:11:41.65,0:11:43.44,Default,,0,0,0,,with any other instance of my
Dialogue: 0,0:11:43.44,0:11:45.93,Default,,0,0,0,,application running on any other
Dialogue: 0,0:11:45.93,0:11:46.49,Default,,0,0,0,,device.
Dialogue: 0,0:11:47.77,0:11:49.28,Default,,0,0,0,,This just wasn't possible
Dialogue: 0,0:11:49.28,0:11:50.94,Default,,0,0,0,,before, but it is now with
Dialogue: 0,0:11:50.94,0:11:51.81,Default,,0,0,0,,In-App Screen Capture.
Dialogue: 0,0:11:53.28,0:11:54.41,Default,,0,0,0,,These are just some of the
Dialogue: 0,0:11:54.41,0:11:55.83,Default,,0,0,0,,examples of the new user
Dialogue: 0,0:11:55.83,0:11:57.54,Default,,0,0,0,,experiences you can create using
Dialogue: 0,0:11:57.54,0:11:58.40,Default,,0,0,0,,In-App Screen Capture.
Dialogue: 0,0:11:58.63,0:12:00.11,Default,,0,0,0,,We're really excited to see what
Dialogue: 0,0:12:00.11,0:12:00.92,Default,,0,0,0,,developers are going to do with
Dialogue: 0,0:12:00.92,0:12:00.99,Default,,0,0,0,,it.
Dialogue: 0,0:12:05.05,0:12:06.96,Default,,0,0,0,,With ReplayKit 2, our goal was
Dialogue: 0,0:12:06.96,0:12:09.00,Default,,0,0,0,,to bring ReplayKit to every type
Dialogue: 0,0:12:09.00,0:12:10.66,Default,,0,0,0,,of application, not just gaming.
Dialogue: 0,0:12:11.42,0:12:13.62,Default,,0,0,0,,And to do that, I'm really happy
Dialogue: 0,0:12:13.62,0:12:15.69,Default,,0,0,0,,to introduce iOS Screen
Dialogue: 0,0:12:15.69,0:12:16.76,Default,,0,0,0,,Recording and Broadcast.
Dialogue: 0,0:12:17.84,0:12:19.11,Default,,0,0,0,,iOS Screen Recording and
Dialogue: 0,0:12:19.11,0:12:21.27,Default,,0,0,0,,Broadcast is an amazing new user
Dialogue: 0,0:12:21.27,0:12:22.77,Default,,0,0,0,,feature that's going to allow
Dialogue: 0,0:12:22.77,0:12:25.67,Default,,0,0,0,,users to record and broadcast
Dialogue: 0,0:12:25.67,0:12:27.39,Default,,0,0,0,,their entire iOS screen
Dialogue: 0,0:12:27.39,0:12:28.03,Default,,0,0,0,,experience.
Dialogue: 0,0:12:29.21,0:12:30.21,Default,,0,0,0,,Let's go ahead and take a look
Dialogue: 0,0:12:30.21,0:12:31.04,Default,,0,0,0,,at how we can use this new
Dialogue: 0,0:12:31.04,0:12:31.40,Default,,0,0,0,,feature.
Dialogue: 0,0:12:33.46,0:12:35.33,Default,,0,0,0,,To use iOS Screen Recording and
Dialogue: 0,0:12:35.33,0:12:36.60,Default,,0,0,0,,Broadcast, you're going to first
Dialogue: 0,0:12:36.60,0:12:37.87,Default,,0,0,0,,need to enable the Screen
Dialogue: 0,0:12:37.87,0:12:39.45,Default,,0,0,0,,Recording control for Control
Dialogue: 0,0:12:39.45,0:12:39.73,Default,,0,0,0,,Center.
Dialogue: 0,0:12:40.43,0:12:41.47,Default,,0,0,0,,To do that, we're going to jump
Dialogue: 0,0:12:41.47,0:12:43.41,Default,,0,0,0,,right into settings, and Control
Dialogue: 0,0:12:43.41,0:12:43.69,Default,,0,0,0,,Center.
Dialogue: 0,0:12:44.45,0:12:46.24,Default,,0,0,0,,From there we'll be shown all
Dialogue: 0,0:12:46.24,0:12:47.76,Default,,0,0,0,,these supported controls for
Dialogue: 0,0:12:47.76,0:12:48.33,Default,,0,0,0,,Control Center.
Dialogue: 0,0:12:49.14,0:12:50.43,Default,,0,0,0,,We simply add the screen
Dialogue: 0,0:12:50.43,0:12:52.57,Default,,0,0,0,,recording control and we start
Dialogue: 0,0:12:52.57,0:12:53.14,Default,,0,0,0,,Control Center.
Dialogue: 0,0:12:54.20,0:12:55.56,Default,,0,0,0,,And just like that, you're now
Dialogue: 0,0:12:55.56,0:12:57.16,Default,,0,0,0,,up and running ready to share
Dialogue: 0,0:12:57.16,0:12:58.55,Default,,0,0,0,,your entire iOS screen
Dialogue: 0,0:12:58.55,0:12:59.19,Default,,0,0,0,,experience.
Dialogue: 0,0:12:59.72,0:13:00.86,Default,,0,0,0,,[applause] Thank you.
Dialogue: 0,0:13:01.09,0:13:05.02,Default,,0,0,0,,To initiate an iOS screen
Dialogue: 0,0:13:05.02,0:13:06.39,Default,,0,0,0,,recording, you simply tap the
Dialogue: 0,0:13:06.39,0:13:07.49,Default,,0,0,0,,Screen Recording control.
Dialogue: 0,0:13:08.88,0:13:10.54,Default,,0,0,0,,You are now recording your
Dialogue: 0,0:13:10.54,0:13:12.41,Default,,0,0,0,,entire iOS screen experience.
Dialogue: 0,0:13:13.06,0:13:14.75,Default,,0,0,0,,That status bar and our screen
Dialogue: 0,0:13:14.75,0:13:16.29,Default,,0,0,0,,recording control will indicate
Dialogue: 0,0:13:16.29,0:13:17.38,Default,,0,0,0,,to you that a recording is
Dialogue: 0,0:13:17.38,0:13:19.35,Default,,0,0,0,,ongoing by showing you recording
Dialogue: 0,0:13:19.35,0:13:21.35,Default,,0,0,0,,indicator as well as the elapsed
Dialogue: 0,0:13:21.35,0:13:22.52,Default,,0,0,0,,time for your current recording
Dialogue: 0,0:13:22.52,0:13:22.88,Default,,0,0,0,,session.
Dialogue: 0,0:13:24.20,0:13:26.78,Default,,0,0,0,,To stop the recording you simply
Dialogue: 0,0:13:26.78,0:13:28.02,Default,,0,0,0,,tap the screen recording control
Dialogue: 0,0:13:28.02,0:13:28.36,Default,,0,0,0,,again.
Dialogue: 0,0:13:29.83,0:13:30.75,Default,,0,0,0,,When the recording has been
Dialogue: 0,0:13:30.75,0:13:32.36,Default,,0,0,0,,stopped, you'll be presented
Dialogue: 0,0:13:32.47,0:13:34.40,Default,,0,0,0,,with a notification indicating
Dialogue: 0,0:13:34.40,0:13:36.03,Default,,0,0,0,,to you that the screen recording
Dialogue: 0,0:13:36.03,0:13:37.76,Default,,0,0,0,,you just took has now been saved
Dialogue: 0,0:13:37.76,0:13:38.91,Default,,0,0,0,,in your Photos application.
Dialogue: 0,0:13:39.93,0:13:41.76,Default,,0,0,0,,Tapping on this banner will take
Dialogue: 0,0:13:41.76,0:13:42.76,Default,,0,0,0,,you straight to your Photos
Dialogue: 0,0:13:42.76,0:13:44.10,Default,,0,0,0,,application where you can
Dialogue: 0,0:13:44.10,0:13:45.78,Default,,0,0,0,,review, edit, or share the
Dialogue: 0,0:13:45.78,0:13:46.85,Default,,0,0,0,,recording you just made.
Dialogue: 0,0:13:49.00,0:13:52.69,Default,,0,0,0,,You can also 3D Touch into our
Dialogue: 0,0:13:52.69,0:13:53.78,Default,,0,0,0,,screen recording control which
Dialogue: 0,0:13:53.89,0:13:55.54,Default,,0,0,0,,will bring you straight to our
Dialogue: 0,0:13:55.54,0:13:57.63,Default,,0,0,0,,expanded view where you'll have
Dialogue: 0,0:13:57.70,0:13:59.00,Default,,0,0,0,,access to the microphone
Dialogue: 0,0:13:59.00,0:14:01.04,Default,,0,0,0,,settings as well as the ability
Dialogue: 0,0:14:01.04,0:14:04.03,Default,,0,0,0,,to start recording, or to stop
Dialogue: 0,0:14:04.03,0:14:04.37,Default,,0,0,0,,recording.
Dialogue: 0,0:14:06.72,0:14:08.32,Default,,0,0,0,,Now, let's say I've just
Dialogue: 0,0:14:08.32,0:14:09.42,Default,,0,0,0,,downloaded a broadcast
Dialogue: 0,0:14:09.42,0:14:10.86,Default,,0,0,0,,application that supports
Dialogue: 0,0:14:10.86,0:14:12.02,Default,,0,0,0,,ReplayKit Live Streaming.
Dialogue: 0,0:14:13.06,0:14:14.58,Default,,0,0,0,,And I'd like to use that
Dialogue: 0,0:14:14.66,0:14:16.92,Default,,0,0,0,,broadcast application to share
Dialogue: 0,0:14:16.92,0:14:18.98,Default,,0,0,0,,my entire iOS screen experience.
Dialogue: 0,0:14:19.76,0:14:20.54,Default,,0,0,0,,Well, that's actually pretty
Dialogue: 0,0:14:20.54,0:14:21.95,Default,,0,0,0,,simple to do, because all you
Dialogue: 0,0:14:21.95,0:14:24.22,Default,,0,0,0,,need to do is 3D Touch into our
Dialogue: 0,0:14:24.22,0:14:25.26,Default,,0,0,0,,screen recording control.
Dialogue: 0,0:14:26.13,0:14:27.72,Default,,0,0,0,,You'll be taken to our expanded
Dialogue: 0,0:14:27.72,0:14:29.85,Default,,0,0,0,,view, where all the applications
Dialogue: 0,0:14:29.85,0:14:30.84,Default,,0,0,0,,that are installed on your
Dialogue: 0,0:14:30.84,0:14:32.46,Default,,0,0,0,,device that currently support
Dialogue: 0,0:14:32.46,0:14:33.98,Default,,0,0,0,,ReplayKit Live Streaming will be
Dialogue: 0,0:14:33.98,0:14:34.32,Default,,0,0,0,,shown.
Dialogue: 0,0:14:35.26,0:14:36.85,Default,,0,0,0,,You simply need to select the
Dialogue: 0,0:14:36.85,0:14:39.12,Default,,0,0,0,,service you'd like to use and
Dialogue: 0,0:14:39.26,0:14:40.32,Default,,0,0,0,,tap Start Broadcast.
Dialogue: 0,0:14:41.88,0:14:43.60,Default,,0,0,0,,You are now broadcasting to the
Dialogue: 0,0:14:43.60,0:14:46.54,Default,,0,0,0,,entire world your entire iOS
Dialogue: 0,0:14:46.54,0:14:47.49,Default,,0,0,0,,screen experience.
Dialogue: 0,0:14:48.86,0:14:50.96,Default,,0,0,0,,Just like with recording, the
Dialogue: 0,0:14:50.96,0:14:52.08,Default,,0,0,0,,status bar in the screen
Dialogue: 0,0:14:52.08,0:14:54.00,Default,,0,0,0,,recording control will indicate
Dialogue: 0,0:14:54.00,0:14:55.38,Default,,0,0,0,,to you that a broadcast is
Dialogue: 0,0:14:55.38,0:14:57.12,Default,,0,0,0,,currently in session by showing
Dialogue: 0,0:14:57.12,0:14:58.88,Default,,0,0,0,,you the recording indicator, the
Dialogue: 0,0:14:58.88,0:15:00.27,Default,,0,0,0,,current selected broadcast
Dialogue: 0,0:15:00.27,0:15:02.02,Default,,0,0,0,,service, and the elapsed time
Dialogue: 0,0:15:02.02,0:15:03.05,Default,,0,0,0,,for your current broadcast.
Dialogue: 0,0:15:04.58,0:15:05.97,Default,,0,0,0,,To stop the broadcast, you
Dialogue: 0,0:15:06.02,0:15:07.65,Default,,0,0,0,,simply tap the stop broadcast
Dialogue: 0,0:15:07.65,0:15:07.93,Default,,0,0,0,,button.
Dialogue: 0,0:15:09.13,0:15:12.30,Default,,0,0,0,,Now, you can record a video to
Dialogue: 0,0:15:12.30,0:15:13.85,Default,,0,0,0,,teach your grandparents how to
Dialogue: 0,0:15:13.85,0:15:14.93,Default,,0,0,0,,make that FaceTime call.
Dialogue: 0,0:15:15.93,0:15:17.64,Default,,0,0,0,,You can even stream a video to
Dialogue: 0,0:15:17.88,0:15:19.09,Default,,0,0,0,,teach your parents how to send
Dialogue: 0,0:15:19.09,0:15:20.00,Default,,0,0,0,,that important email.
Dialogue: 0,0:15:20.75,0:15:22.17,Default,,0,0,0,,Or better yet, you can now
Dialogue: 0,0:15:22.17,0:15:23.60,Default,,0,0,0,,record a video to teach your
Dialogue: 0,0:15:23.60,0:15:25.99,Default,,0,0,0,,kids how to find their favorite
Dialogue: 0,0:15:25.99,0:15:28.22,Default,,0,0,0,,TV shows and movies in iTunes.
Dialogue: 0,0:15:28.99,0:15:30.93,Default,,0,0,0,,It has never been easier to
Dialogue: 0,0:15:30.93,0:15:32.63,Default,,0,0,0,,share your entire iOS screen
Dialogue: 0,0:15:32.63,0:15:33.23,Default,,0,0,0,,experience.
Dialogue: 0,0:15:33.78,0:15:35.86,Default,,0,0,0,,iOS Screen Recording and
Dialogue: 0,0:15:35.86,0:15:37.70,Default,,0,0,0,,Broadcast creates new user
Dialogue: 0,0:15:37.70,0:15:39.77,Default,,0,0,0,,experiences with applications
Dialogue: 0,0:15:39.77,0:15:40.66,Default,,0,0,0,,that are already using
Dialogue: 0,0:15:40.66,0:15:41.14,Default,,0,0,0,,ReplayKit.
Dialogue: 0,0:15:41.54,0:15:42.87,Default,,0,0,0,,So, let's take a quick minute to
Dialogue: 0,0:15:42.87,0:15:46.89,Default,,0,0,0,,talk about some best practices.
Dialogue: 0,0:15:46.89,0:15:47.83,Default,,0,0,0,,iOS Screen Recording and
Dialogue: 0,0:15:47.83,0:15:49.28,Default,,0,0,0,,Broadcast has priority when it
Dialogue: 0,0:15:49.28,0:15:50.06,Default,,0,0,0,,comes to ReplayKit.
Dialogue: 0,0:15:50.32,0:15:51.81,Default,,0,0,0,,So, if your application is
Dialogue: 0,0:15:51.89,0:15:53.14,Default,,0,0,0,,currently using ReplayKit to
Dialogue: 0,0:15:53.14,0:15:55.27,Default,,0,0,0,,record or broadcast and the user
Dialogue: 0,0:15:55.27,0:15:56.82,Default,,0,0,0,,initiates an iOS Screen
Dialogue: 0,0:15:56.82,0:15:58.78,Default,,0,0,0,,Recording and Broadcast, your
Dialogue: 0,0:15:58.78,0:16:00.96,Default,,0,0,0,,application will be notified via
Dialogue: 0,0:16:00.96,0:16:02.82,Default,,0,0,0,,RPScreenRecorderDelegate that
Dialogue: 0,0:16:02.82,0:16:03.55,Default,,0,0,0,,your session has been
Dialogue: 0,0:16:03.55,0:16:04.11,Default,,0,0,0,,interrupted.
Dialogue: 0,0:16:05.14,0:16:07.79,Default,,0,0,0,,In this case, the recording will
Dialogue: 0,0:16:07.79,0:16:09.65,Default,,0,0,0,,be discarded and you should
Dialogue: 0,0:16:09.65,0:16:11.55,Default,,0,0,0,,update your UI and notify the
Dialogue: 0,0:16:11.55,0:16:12.33,Default,,0,0,0,,users accordingly.
Dialogue: 0,0:16:12.80,0:16:15.02,Default,,0,0,0,,iOS Screen Recording and
Dialogue: 0,0:16:15.02,0:16:17.10,Default,,0,0,0,,Broadcast is an amazing feature.
Dialogue: 0,0:16:17.51,0:16:19.88,Default,,0,0,0,,It's one that we hope users and
Dialogue: 0,0:16:19.88,0:16:21.50,Default,,0,0,0,,developers will use to create
Dialogue: 0,0:16:21.50,0:16:23.34,Default,,0,0,0,,new exciting iOS content.
Dialogue: 0,0:16:23.84,0:16:25.96,Default,,0,0,0,,And to help you do that, I'd
Dialogue: 0,0:16:25.96,0:16:27.63,Default,,0,0,0,,like to bring Alexander Subbotin
Dialogue: 0,0:16:27.63,0:16:29.03,Default,,0,0,0,,up to the stage to talk to you a
Dialogue: 0,0:16:29.03,0:16:30.48,Default,,0,0,0,,little bit more about how we do
Dialogue: 0,0:16:30.48,0:16:31.90,Default,,0,0,0,,broadcasting with ReplayKit.
Dialogue: 0,0:16:33.52,0:16:35.64,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:16:36.14,0:16:36.72,Default,,0,0,0,,>> Thank you, Johnny.
Dialogue: 0,0:16:38.01,0:16:38.50,Default,,0,0,0,,Good morning.
Dialogue: 0,0:16:39.20,0:16:40.70,Default,,0,0,0,,My name is Alexander Subbotin
Dialogue: 0,0:16:40.92,0:16:43.54,Default,,0,0,0,,and I am so excited to be here
Dialogue: 0,0:16:43.75,0:16:45.13,Default,,0,0,0,,talk to you and share more
Dialogue: 0,0:16:45.13,0:16:46.89,Default,,0,0,0,,details about our Live Broadcast
Dialogue: 0,0:16:46.89,0:16:46.98,Default,,0,0,0,,API.
Dialogue: 0,0:16:49.86,0:16:52.53,Default,,0,0,0,,ReplayKit enables applications
Dialogue: 0,0:16:52.81,0:16:54.56,Default,,0,0,0,,to stream their content to third
Dialogue: 0,0:16:54.56,0:16:55.89,Default,,0,0,0,,party broadcast services
Dialogue: 0,0:16:55.96,0:16:58.69,Default,,0,0,0,,directly from your iOS and tvOS
Dialogue: 0,0:16:59.78,0:17:00.52,Default,,0,0,0,,device.
Dialogue: 0,0:17:00.52,0:17:01.93,Default,,0,0,0,,On iOS you can also include
Dialogue: 0,0:17:01.93,0:17:03.75,Default,,0,0,0,,voice and video commentary using
Dialogue: 0,0:17:03.75,0:17:05.25,Default,,0,0,0,,the microphone and the camera.
Dialogue: 0,0:17:06.03,0:17:07.29,Default,,0,0,0,,And all this content is
Dialogue: 0,0:17:07.33,0:17:08.87,Default,,0,0,0,,absolutely secure and
Dialogue: 0,0:17:08.87,0:17:11.02,Default,,0,0,0,,unaccessible with a broadcast
Dialogue: 0,0:17:11.02,0:17:11.92,Default,,0,0,0,,service that you use.
Dialogue: 0,0:17:15.28,0:17:17.33,Default,,0,0,0,,This is a high level picture of
Dialogue: 0,0:17:17.43,0:17:19.23,Default,,0,0,0,,how Live Broadcast really works.
Dialogue: 0,0:17:20.39,0:17:22.09,Default,,0,0,0,,All on the left, you see a
Dialogue: 0,0:17:22.09,0:17:24.57,Default,,0,0,0,,player who at some point wants
Dialogue: 0,0:17:24.57,0:17:27.39,Default,,0,0,0,,to broadcast his game Tower Dash
Dialogue: 0,0:17:27.39,0:17:29.30,Default,,0,0,0,,to Mobcrush which is a broadcast
Dialogue: 0,0:17:29.44,0:17:30.05,Default,,0,0,0,,service.
Dialogue: 0,0:17:31.88,0:17:33.75,Default,,0,0,0,,So Tower Dash communicates to
Dialogue: 0,0:17:33.75,0:17:35.49,Default,,0,0,0,,the ReplayKit API to initiate
Dialogue: 0,0:17:35.49,0:17:36.15,Default,,0,0,0,,the broadcast.
Dialogue: 0,0:17:37.42,0:17:40.03,Default,,0,0,0,,And once that happens, ReplayKit
Dialogue: 0,0:17:40.03,0:17:41.72,Default,,0,0,0,,will present some UI that allows
Dialogue: 0,0:17:41.72,0:17:43.09,Default,,0,0,0,,user to ping the broadcast
Dialogue: 0,0:17:43.09,0:17:43.59,Default,,0,0,0,,service.
Dialogue: 0,0:17:44.01,0:17:45.84,Default,,0,0,0,,And that would be Mobcrush for
Dialogue: 0,0:17:45.98,0:17:46.56,Default,,0,0,0,,us.
Dialogue: 0,0:17:48.22,0:17:49.70,Default,,0,0,0,,And the broadcast starts.
Dialogue: 0,0:17:49.70,0:17:52.05,Default,,0,0,0,,And once broadcast is running,
Dialogue: 0,0:17:52.40,0:17:55.26,Default,,0,0,0,,ReplayKit will be providing
Dialogue: 0,0:17:55.26,0:17:57.57,Default,,0,0,0,,audio and video samples to the
Dialogue: 0,0:17:57.57,0:17:59.37,Default,,0,0,0,,mob crush app extension that
Dialogue: 0,0:17:59.37,0:18:02.02,Default,,0,0,0,,directly talks to the broadcast
Dialogue: 0,0:18:02.02,0:18:03.62,Default,,0,0,0,,service and the viewers around
Dialogue: 0,0:18:03.62,0:18:05.35,Default,,0,0,0,,the world can watch the
Dialogue: 0,0:18:05.35,0:18:07.07,Default,,0,0,0,,livestream online.
Dialogue: 0,0:18:10.18,0:18:12.30,Default,,0,0,0,,This is just a picture of how
Dialogue: 0,0:18:12.30,0:18:13.38,Default,,0,0,0,,broadcast runs.
Dialogue: 0,0:18:13.64,0:18:16.05,Default,,0,0,0,,And the way I want to describe
Dialogue: 0,0:18:16.05,0:18:17.99,Default,,0,0,0,,it to all of you is, I want to
Dialogue: 0,0:18:17.99,0:18:20.67,Default,,0,0,0,,break it into parts because if
Dialogue: 0,0:18:21.34,0:18:23.40,Default,,0,0,0,,you are a client application
Dialogue: 0,0:18:23.40,0:18:25.31,Default,,0,0,0,,developer, game developer the
Dialogue: 0,0:18:26.25,0:18:29.24,Default,,0,0,0,,only thing you need to do is to
Dialogue: 0,0:18:29.24,0:18:30.66,Default,,0,0,0,,present some ViewController
Dialogue: 0,0:18:30.66,0:18:33.65,Default,,0,0,0,,initiate broadcast and couple of
Dialogue: 0,0:18:33.65,0:18:35.07,Default,,0,0,0,,other fairly simple steps.
Dialogue: 0,0:18:38.20,0:18:39.79,Default,,0,0,0,,But I also know that some of you
Dialogue: 0,0:18:39.79,0:18:42.14,Default,,0,0,0,,in this room broadcast service
Dialogue: 0,0:18:42.14,0:18:43.01,Default,,0,0,0,,developers.
Dialogue: 0,0:18:43.22,0:18:45.22,Default,,0,0,0,,And we are going to walk through
Dialogue: 0,0:18:45.22,0:18:47.72,Default,,0,0,0,,the process for you and talk
Dialogue: 0,0:18:47.72,0:18:49.36,Default,,0,0,0,,about how do you actually
Dialogue: 0,0:18:49.36,0:18:50.64,Default,,0,0,0,,implement those extensions.
Dialogue: 0,0:18:53.28,0:18:54.66,Default,,0,0,0,,So, starting with the client
Dialogue: 0,0:18:54.66,0:18:56.57,Default,,0,0,0,,side and what the client
Dialogue: 0,0:18:56.57,0:18:58.19,Default,,0,0,0,,application wants to do, for
Dialogue: 0,0:18:59.12,0:19:01.61,Default,,0,0,0,,that we have a fairly simple API
Dialogue: 0,0:19:02.88,0:19:04.86,Default,,0,0,0,,that really wrapped up in those
Dialogue: 0,0:19:04.86,0:19:05.68,Default,,0,0,0,,three classes.
Dialogue: 0,0:19:06.94,0:19:07.41,Default,,0,0,0,,There's
Dialogue: 0,0:19:07.71,0:19:09.40,Default,,0,0,0,,BroadcastActivityViewController
Dialogue: 0,0:19:10.22,0:19:12.41,Default,,0,0,0,,and this class is used to
Dialogue: 0,0:19:12.41,0:19:13.92,Default,,0,0,0,,initiate a broadcast and it
Dialogue: 0,0:19:13.92,0:19:15.87,Default,,0,0,0,,presents this built in UI where
Dialogue: 0,0:19:15.87,0:19:16.83,Default,,0,0,0,,you select the broadcast
Dialogue: 0,0:19:16.83,0:19:17.31,Default,,0,0,0,,service.
Dialogue: 0,0:19:18.62,0:19:22.35,Default,,0,0,0,,RPBroadcastController allows you
Dialogue: 0,0:19:22.95,0:19:24.96,Default,,0,0,0,,to manage the broadcast in your
Dialogue: 0,0:19:24.96,0:19:26.96,Default,,0,0,0,,code and you would usually wire
Dialogue: 0,0:19:26.96,0:19:29.21,Default,,0,0,0,,to some UI where user can start,
Dialogue: 0,0:19:29.21,0:19:30.92,Default,,0,0,0,,stop, pause, or resume the
Dialogue: 0,0:19:30.92,0:19:31.83,Default,,0,0,0,,broadcast.
Dialogue: 0,0:19:32.29,0:19:32.82,Default,,0,0,0,,And the
Dialogue: 0,0:19:32.82,0:19:34.78,Default,,0,0,0,,RPBroadcastControllerDelegate is
Dialogue: 0,0:19:34.78,0:19:37.22,Default,,0,0,0,,internal and this is a dedicated
Dialogue: 0,0:19:37.22,0:19:38.33,Default,,0,0,0,,[inaudible] part about different
Dialogue: 0,0:19:38.33,0:19:39.87,Default,,0,0,0,,events during the broadcast.
Dialogue: 0,0:19:39.87,0:19:41.31,Default,,0,0,0,,The broadcast can stop for some
Dialogue: 0,0:19:41.31,0:19:43.24,Default,,0,0,0,,reason, there could be an error,
Dialogue: 0,0:19:43.76,0:19:46.57,Default,,0,0,0,,or the broadcast extension may
Dialogue: 0,0:19:46.57,0:19:48.00,Default,,0,0,0,,want to pass some information to
Dialogue: 0,0:19:48.00,0:19:49.63,Default,,0,0,0,,the client app, and this is
Dialogue: 0,0:19:49.63,0:19:51.11,Default,,0,0,0,,where the delegate tells the
Dialogue: 0,0:19:51.11,0:19:51.52,Default,,0,0,0,,user.
Dialogue: 0,0:19:53.48,0:19:55.78,Default,,0,0,0,,And now, I'm going to stop here
Dialogue: 0,0:19:56.05,0:19:57.18,Default,,0,0,0,,talking about this part of the
Dialogue: 0,0:19:57.18,0:19:59.61,Default,,0,0,0,,picture because last year,
Dialogue: 0,0:20:00.06,0:20:02.05,Default,,0,0,0,,we covered this API in depth in
Dialogue: 0,0:20:02.05,0:20:03.64,Default,,0,0,0,,our session Go Live with
Dialogue: 0,0:20:03.64,0:20:04.23,Default,,0,0,0,,ReplayKit.
Dialogue: 0,0:20:04.85,0:20:06.37,Default,,0,0,0,,So, in case you have not adopted
Dialogue: 0,0:20:06.37,0:20:09.98,Default,,0,0,0,,the API yet, please go to the
Dialogue: 0,0:20:09.98,0:20:11.32,Default,,0,0,0,,app and you can find the link to
Dialogue: 0,0:20:11.32,0:20:13.49,Default,,0,0,0,,last year's session and learn
Dialogue: 0,0:20:13.49,0:20:15.11,Default,,0,0,0,,more about that developer API.
Dialogue: 0,0:20:19.78,0:20:21.91,Default,,0,0,0,,Now let's talk about the second
Dialogue: 0,0:20:21.91,0:20:24.69,Default,,0,0,0,,part of the equation, you have
Dialogue: 0,0:20:24.81,0:20:26.42,Default,,0,0,0,,developer of the broadcast
Dialogue: 0,0:20:26.42,0:20:26.95,Default,,0,0,0,,service.
Dialogue: 0,0:20:27.56,0:20:28.69,Default,,0,0,0,,How do you integrate your
Dialogue: 0,0:20:28.69,0:20:31.63,Default,,0,0,0,,service so that you could stream
Dialogue: 0,0:20:31.63,0:20:33.49,Default,,0,0,0,,the content created by all these
Dialogue: 0,0:20:33.49,0:20:35.62,Default,,0,0,0,,players, games, and other
Dialogue: 0,0:20:35.62,0:20:36.37,Default,,0,0,0,,applications?
Dialogue: 0,0:20:41.50,0:20:44.44,Default,,0,0,0,,And the answer is these three
Dialogue: 0,0:20:44.44,0:20:45.09,Default,,0,0,0,,extensions.
Dialogue: 0,0:20:46.94,0:20:49.86,Default,,0,0,0,,The first one on the top is what
Dialogue: 0,0:20:49.86,0:20:52.14,Default,,0,0,0,,we call Broadcast Setup
Dialogue: 0,0:20:52.14,0:20:54.31,Default,,0,0,0,,extension, and its purpose is to
Dialogue: 0,0:20:54.31,0:20:56.15,Default,,0,0,0,,present some UI where you can
Dialogue: 0,0:20:56.15,0:20:57.78,Default,,0,0,0,,ask user to enter some
Dialogue: 0,0:20:57.93,0:20:59.66,Default,,0,0,0,,information, you may want user
Dialogue: 0,0:20:59.66,0:21:02.03,Default,,0,0,0,,to give the broadcast a
Dialogue: 0,0:21:02.03,0:21:05.08,Default,,0,0,0,,particular name or maybe log in
Dialogue: 0,0:21:05.08,0:21:07.06,Default,,0,0,0,,credentials or any details that
Dialogue: 0,0:21:07.06,0:21:08.72,Default,,0,0,0,,you need fire up your broadcast.
Dialogue: 0,0:21:09.24,0:21:12.68,Default,,0,0,0,,And the second one is called
Dialogue: 0,0:21:13.02,0:21:14.57,Default,,0,0,0,,Broadcast Upload extension.
Dialogue: 0,0:21:14.77,0:21:16.93,Default,,0,0,0,,And the function of this
Dialogue: 0,0:21:16.93,0:21:19.82,Default,,0,0,0,,extension is to receive the
Dialogue: 0,0:21:19.82,0:21:21.86,Default,,0,0,0,,media samples handed by
Dialogue: 0,0:21:21.86,0:21:25.31,Default,,0,0,0,,ReplayKit and encode them,
Dialogue: 0,0:21:26.40,0:21:27.84,Default,,0,0,0,,create a video stream, and
Dialogue: 0,0:21:27.84,0:21:30.53,Default,,0,0,0,,upload to the online service.
Dialogue: 0,0:21:31.07,0:21:33.75,Default,,0,0,0,,Each extension is a separate
Dialogue: 0,0:21:33.75,0:21:36.53,Default,,0,0,0,,binary that is installed on your
Dialogue: 0,0:21:36.53,0:21:38.00,Default,,0,0,0,,device along with the broadcast
Dialogue: 0,0:21:38.00,0:21:38.30,Default,,0,0,0,,app.
Dialogue: 0,0:21:38.67,0:21:40.58,Default,,0,0,0,,So you can install to Mobcrush,
Dialogue: 0,0:21:40.67,0:21:42.55,Default,,0,0,0,,you also get setup extension and
Dialogue: 0,0:21:42.55,0:21:44.32,Default,,0,0,0,,upload extension installed on
Dialogue: 0,0:21:44.32,0:21:44.93,Default,,0,0,0,,your device.
Dialogue: 0,0:21:44.93,0:21:48.14,Default,,0,0,0,,And each extension runs in its
Dialogue: 0,0:21:48.14,0:21:50.18,Default,,0,0,0,,own process independently from
Dialogue: 0,0:21:50.18,0:21:51.48,Default,,0,0,0,,Mobcrush that contains
Dialogue: 0,0:21:51.48,0:21:54.26,Default,,0,0,0,,extensions and Tower Dash that
Dialogue: 0,0:21:54.26,0:21:55.27,Default,,0,0,0,,initiates the broadcast.
Dialogue: 0,0:21:55.27,0:21:56.21,Default,,0,0,0,,So usually these are three
Dialogue: 0,0:21:56.21,0:21:58.17,Default,,0,0,0,,processes and the process of the
Dialogue: 0,0:21:58.17,0:22:01.18,Default,,0,0,0,,containing app of the Mobcrush
Dialogue: 0,0:22:01.18,0:22:01.84,Default,,0,0,0,,is never launched.
Dialogue: 0,0:22:05.14,0:22:06.32,Default,,0,0,0,,And to help you get started
Dialogue: 0,0:22:06.32,0:22:07.66,Default,,0,0,0,,developing new broadcast
Dialogue: 0,0:22:07.66,0:22:09.93,Default,,0,0,0,,extensions, we provide very easy
Dialogue: 0,0:22:09.93,0:22:11.90,Default,,0,0,0,,to use Xcode templates for both
Dialogue: 0,0:22:11.90,0:22:12.98,Default,,0,0,0,,types of extensions.
Dialogue: 0,0:22:12.98,0:22:16.38,Default,,0,0,0,,And just add two extensions to
Dialogue: 0,0:22:16.38,0:22:17.87,Default,,0,0,0,,your Xcode project and you are
Dialogue: 0,0:22:17.87,0:22:18.55,Default,,0,0,0,,ready to begin.
Dialogue: 0,0:22:19.12,0:22:22.85,Default,,0,0,0,,And now let's talk about how you
Dialogue: 0,0:22:22.85,0:22:24.45,Default,,0,0,0,,actually code all of this.
Dialogue: 0,0:22:25.23,0:22:26.43,Default,,0,0,0,,Starting from the setup
Dialogue: 0,0:22:26.43,0:22:26.92,Default,,0,0,0,,extension.
Dialogue: 0,0:22:29.65,0:22:31.32,Default,,0,0,0,,As I said, the purpose of the
Dialogue: 0,0:22:31.32,0:22:32.94,Default,,0,0,0,,setup extension is to present
Dialogue: 0,0:22:32.94,0:22:35.52,Default,,0,0,0,,this UI for user can enter the
Dialogue: 0,0:22:35.89,0:22:36.72,Default,,0,0,0,,name of the broadcast or
Dialogue: 0,0:22:36.72,0:22:37.32,Default,,0,0,0,,something.
Dialogue: 0,0:22:38.29,0:22:39.72,Default,,0,0,0,,But it also has another
Dialogue: 0,0:22:39.84,0:22:40.81,Default,,0,0,0,,important function.
Dialogue: 0,0:22:43.11,0:22:44.59,Default,,0,0,0,,It can get some information
Dialogue: 0,0:22:44.59,0:22:45.99,Default,,0,0,0,,about the client application
Dialogue: 0,0:22:45.99,0:22:47.87,Default,,0,0,0,,such as a bundleID, the name of
Dialogue: 0,0:22:47.87,0:22:49.84,Default,,0,0,0,,the application, or the icon of
Dialogue: 0,0:22:49.84,0:22:50.69,Default,,0,0,0,,the application.
Dialogue: 0,0:22:51.90,0:22:53.91,Default,,0,0,0,,And it can upload this
Dialogue: 0,0:22:53.91,0:22:55.17,Default,,0,0,0,,information to the broadcast
Dialogue: 0,0:22:55.17,0:22:56.54,Default,,0,0,0,,service so that the broadcast
Dialogue: 0,0:22:56.54,0:22:58.17,Default,,0,0,0,,service could build an
Dialogue: 0,0:22:58.17,0:23:00.98,Default,,0,0,0,,experience for viewers when the
Dialogue: 0,0:23:00.98,0:23:02.50,Default,,0,0,0,,viewer comes to the website and
Dialogue: 0,0:23:02.50,0:23:04.34,Default,,0,0,0,,he knows here's this place where
Dialogue: 0,0:23:04.34,0:23:05.88,Default,,0,0,0,,everyone playing Tower Dash,
Dialogue: 0,0:23:06.11,0:23:07.34,Default,,0,0,0,,there's an icon of Tower Dash.
Dialogue: 0,0:23:09.00,0:23:12.44,Default,,0,0,0,,And although the extension can
Dialogue: 0,0:23:12.44,0:23:14.03,Default,,0,0,0,,request from the broadcast
Dialogue: 0,0:23:14.03,0:23:16.16,Default,,0,0,0,,service a URL of that particular
Dialogue: 0,0:23:16.16,0:23:17.43,Default,,0,0,0,,Live Broadcast happening on the
Dialogue: 0,0:23:17.43,0:23:20.06,Default,,0,0,0,,website, and share it back to
Dialogue: 0,0:23:20.06,0:23:22.72,Default,,0,0,0,,the application so that the
Dialogue: 0,0:23:22.72,0:23:24.19,Default,,0,0,0,,player could send it to his
Dialogue: 0,0:23:24.19,0:23:25.73,Default,,0,0,0,,friends and get more followers.
Dialogue: 0,0:23:30.20,0:23:31.44,Default,,0,0,0,,The ViewController that
Dialogue: 0,0:23:31.44,0:23:33.18,Default,,0,0,0,,implements this UI communicates
Dialogue: 0,0:23:33.18,0:23:34.64,Default,,0,0,0,,to ReplayKit using property
Dialogue: 0,0:23:34.64,0:23:36.05,Default,,0,0,0,,called extensionContext.
Dialogue: 0,0:23:36.05,0:23:38.09,Default,,0,0,0,,And the class of this property
Dialogue: 0,0:23:38.50,0:23:39.45,Default,,0,0,0,,is a category of
Dialogue: 0,0:23:39.49,0:23:42.13,Default,,0,0,0,,NSExtensionContext that has two
Dialogue: 0,0:23:42.13,0:23:43.69,Default,,0,0,0,,more functions added by
Dialogue: 0,0:23:43.78,0:23:44.91,Default,,0,0,0,,ReplayKit.
Dialogue: 0,0:23:45.33,0:23:45.97,Default,,0,0,0,,The first one is
Dialogue: 0,0:23:45.97,0:23:47.74,Default,,0,0,0,,loadBroadcastingApplicationInfo
Dialogue: 0,0:23:47.74,0:23:48.65,Default,,0,0,0,,and the second one is
Dialogue: 0,0:23:48.83,0:23:50.24,Default,,0,0,0,,completeRequest with
Dialogue: 0,0:23:50.24,0:23:52.44,Default,,0,0,0,,broadcastURL and setupInfo.
Dialogue: 0,0:23:54.64,0:23:57.07,Default,,0,0,0,,The first one as I said it's
Dialogue: 0,0:23:57.07,0:23:58.70,Default,,0,0,0,,used to get the icon and the
Dialogue: 0,0:23:58.70,0:23:59.98,Default,,0,0,0,,name of the application, and
Dialogue: 0,0:23:59.98,0:24:01.25,Default,,0,0,0,,here is a small code example of
Dialogue: 0,0:24:01.25,0:24:03.35,Default,,0,0,0,,how you could do that and pass
Dialogue: 0,0:24:03.35,0:24:04.15,Default,,0,0,0,,this information to the
Dialogue: 0,0:24:04.15,0:24:05.08,Default,,0,0,0,,broadcast session.
Dialogue: 0,0:24:07.49,0:24:10.67,Default,,0,0,0,,The broadcast service when it
Dialogue: 0,0:24:10.67,0:24:13.56,Default,,0,0,0,,has this information, it can
Dialogue: 0,0:24:13.83,0:24:15.58,Default,,0,0,0,,identify in the broadcast
Dialogue: 0,0:24:15.58,0:24:17.57,Default,,0,0,0,,sessions, create channels, and
Dialogue: 0,0:24:17.57,0:24:20.05,Default,,0,0,0,,build simple intuitive user
Dialogue: 0,0:24:20.05,0:24:21.92,Default,,0,0,0,,experience of viewers experience
Dialogue: 0,0:24:22.14,0:24:22.75,Default,,0,0,0,,like this.
Dialogue: 0,0:24:23.16,0:24:24.56,Default,,0,0,0,,The viewer comes to the app and
Dialogue: 0,0:24:24.56,0:24:26.89,Default,,0,0,0,,he has an icon and name of the
Dialogue: 0,0:24:26.93,0:24:27.85,Default,,0,0,0,,application.
Dialogue: 0,0:24:32.44,0:24:34.68,Default,,0,0,0,,So, when you're done uploading
Dialogue: 0,0:24:34.68,0:24:36.87,Default,,0,0,0,,this icon, and already collected
Dialogue: 0,0:24:36.87,0:24:37.90,Default,,0,0,0,,all the information that you
Dialogue: 0,0:24:37.90,0:24:40.21,Default,,0,0,0,,need to begin the broadcast, you
Dialogue: 0,0:24:40.21,0:24:41.88,Default,,0,0,0,,should call the second one
Dialogue: 0,0:24:41.88,0:24:44.25,Default,,0,0,0,,called completeRequest with
Dialogue: 0,0:24:44.25,0:24:46.03,Default,,0,0,0,,broadcastURL and setupInfo.
Dialogue: 0,0:24:47.14,0:24:48.77,Default,,0,0,0,,The broadcastURL will be
Dialogue: 0,0:24:48.77,0:24:49.81,Default,,0,0,0,,available to the client
Dialogue: 0,0:24:49.81,0:24:51.31,Default,,0,0,0,,application as a property of the
Dialogue: 0,0:24:51.31,0:24:54.28,Default,,0,0,0,,broadcast controller and the
Dialogue: 0,0:24:54.48,0:24:56.93,Default,,0,0,0,,setupInfo it's a dictionary that
Dialogue: 0,0:24:56.93,0:24:58.59,Default,,0,0,0,,you create inside this extension
Dialogue: 0,0:24:58.59,0:25:00.15,Default,,0,0,0,,and all the information you
Dialogue: 0,0:25:00.15,0:25:01.84,Default,,0,0,0,,collected from the user, you put
Dialogue: 0,0:25:01.84,0:25:03.39,Default,,0,0,0,,it to that dictionary, and it
Dialogue: 0,0:25:03.39,0:25:04.75,Default,,0,0,0,,will be passed to the upload
Dialogue: 0,0:25:04.75,0:25:06.27,Default,,0,0,0,,extension when the broadcast
Dialogue: 0,0:25:06.27,0:25:06.72,Default,,0,0,0,,starts.
Dialogue: 0,0:25:07.10,0:25:08.79,Default,,0,0,0,,You should also always provide
Dialogue: 0,0:25:08.79,0:25:10.10,Default,,0,0,0,,an option for the user to cancel
Dialogue: 0,0:25:10.10,0:25:11.46,Default,,0,0,0,,broadcast, and for that you just
Dialogue: 0,0:25:11.46,0:25:12.33,Default,,0,0,0,,use your regular old
Dialogue: 0,0:25:12.33,0:25:14.52,Default,,0,0,0,,cancelRequest method of the
Dialogue: 0,0:25:14.52,0:25:16.07,Default,,0,0,0,,extensionContext.
Dialogue: 0,0:25:17.93,0:25:20.27,Default,,0,0,0,,Now, let's talk about the upload
Dialogue: 0,0:25:20.27,0:25:20.89,Default,,0,0,0,,extension.
Dialogue: 0,0:25:21.84,0:25:24.67,Default,,0,0,0,,As I said, it's function is to
Dialogue: 0,0:25:25.05,0:25:27.45,Default,,0,0,0,,receive the media frames handed
Dialogue: 0,0:25:27.45,0:25:29.35,Default,,0,0,0,,by ReplayKit in real time,
Dialogue: 0,0:25:30.69,0:25:32.62,Default,,0,0,0,,encode them, create a video
Dialogue: 0,0:25:32.62,0:25:35.20,Default,,0,0,0,,stream, and upload it to the
Dialogue: 0,0:25:35.20,0:25:36.13,Default,,0,0,0,,broadcast service.
Dialogue: 0,0:25:39.74,0:25:41.79,Default,,0,0,0,,If you create a new upload
Dialogue: 0,0:25:41.79,0:25:43.52,Default,,0,0,0,,extension using Xcode templates,
Dialogue: 0,0:25:43.52,0:25:44.75,Default,,0,0,0,,you will find a sampleHandler
Dialogue: 0,0:25:44.75,0:25:46.20,Default,,0,0,0,,class like this in your Xcode
Dialogue: 0,0:25:46.20,0:25:47.99,Default,,0,0,0,,project, and this is where you
Dialogue: 0,0:25:47.99,0:25:50.00,Default,,0,0,0,,override functions that take
Dialogue: 0,0:25:50.00,0:25:51.08,Default,,0,0,0,,care of events like the
Dialogue: 0,0:25:51.08,0:25:53.66,Default,,0,0,0,,broadcast has started, stopped,
Dialogue: 0,0:25:53.82,0:25:54.85,Default,,0,0,0,,paused, or resumed.
Dialogue: 0,0:25:55.14,0:25:57.02,Default,,0,0,0,,And also the function called
Dialogue: 0,0:25:57.25,0:25:59.71,Default,,0,0,0,,processSampleBuffer, now this is
Dialogue: 0,0:25:59.71,0:26:01.03,Default,,0,0,0,,the one that you want to
Dialogue: 0,0:26:01.03,0:26:03.28,Default,,0,0,0,,override to handle incoming
Dialogue: 0,0:26:03.28,0:26:04.15,Default,,0,0,0,,media samples.
Dialogue: 0,0:26:04.77,0:26:06.23,Default,,0,0,0,,This is where all the magic
Dialogue: 0,0:26:06.23,0:26:06.71,Default,,0,0,0,,happens.
Dialogue: 0,0:26:06.71,0:26:08.13,Default,,0,0,0,,You upload, the encoding, and
Dialogue: 0,0:26:08.13,0:26:08.86,Default,,0,0,0,,uploading here.
Dialogue: 0,0:26:11.56,0:26:15.81,Default,,0,0,0,,So, when the broadcast starts,
Dialogue: 0,0:26:15.96,0:26:18.83,Default,,0,0,0,,ReplayKit notifies extension
Dialogue: 0,0:26:18.83,0:26:20.36,Default,,0,0,0,,that it will begin providing it
Dialogue: 0,0:26:20.36,0:26:23.94,Default,,0,0,0,,with media samples and ReplayKit
Dialogue: 0,0:26:23.94,0:26:25.52,Default,,0,0,0,,is using the function called
Dialogue: 0,0:26:25.52,0:26:27.71,Default,,0,0,0,,broadcastStarted with setupInfo
Dialogue: 0,0:26:28.41,0:26:28.96,Default,,0,0,0,,of this.
Dialogue: 0,0:26:29.03,0:26:30.99,Default,,0,0,0,,And here's a code example that
Dialogue: 0,0:26:30.99,0:26:33.15,Default,,0,0,0,,shows you that you do receive a
Dialogue: 0,0:26:33.15,0:26:35.27,Default,,0,0,0,,setupInfo as an argument of that
Dialogue: 0,0:26:35.27,0:26:37.17,Default,,0,0,0,,function, and you could extract
Dialogue: 0,0:26:37.17,0:26:38.88,Default,,0,0,0,,say, name of the broadcast from
Dialogue: 0,0:26:38.88,0:26:40.21,Default,,0,0,0,,the dictionary and pass it to
Dialogue: 0,0:26:40.21,0:26:42.41,Default,,0,0,0,,the broadcast session, or in
Dialogue: 0,0:26:42.41,0:26:43.80,Default,,0,0,0,,case a broadcast has started
Dialogue: 0,0:26:43.80,0:26:45.08,Default,,0,0,0,,from the Control Center you can
Dialogue: 0,0:26:45.08,0:26:46.57,Default,,0,0,0,,just let know the session about
Dialogue: 0,0:26:46.57,0:26:46.94,Default,,0,0,0,,this one.
Dialogue: 0,0:26:47.09,0:26:51.68,Default,,0,0,0,,And now, let me zoom in on the
Dialogue: 0,0:26:51.95,0:26:53.26,Default,,0,0,0,,processSampleBuffer function.
Dialogue: 0,0:26:53.66,0:26:55.55,Default,,0,0,0,,ReplayKit provides extension
Dialogue: 0,0:26:55.55,0:26:56.71,Default,,0,0,0,,with three types of the media
Dialogue: 0,0:26:56.71,0:26:57.26,Default,,0,0,0,,samples.
Dialogue: 0,0:26:59.46,0:27:01.19,Default,,0,0,0,,Video samples captured from the
Dialogue: 0,0:27:01.19,0:27:01.72,Default,,0,0,0,,screen.
Dialogue: 0,0:27:02.23,0:27:03.98,Default,,0,0,0,,Audio samples captured from the
Dialogue: 0,0:27:03.98,0:27:05.43,Default,,0,0,0,,application, this is the audio
Dialogue: 0,0:27:05.43,0:27:07.22,Default,,0,0,0,,your application's playing back
Dialogue: 0,0:27:07.22,0:27:07.85,Default,,0,0,0,,right now.
Dialogue: 0,0:27:07.85,0:27:09.69,Default,,0,0,0,,And the audio samples captured
Dialogue: 0,0:27:09.69,0:27:10.53,Default,,0,0,0,,from the microphone.
Dialogue: 0,0:27:10.53,0:27:14.24,Default,,0,0,0,,And you can use any technology
Dialogue: 0,0:27:14.24,0:27:16.07,Default,,0,0,0,,to encode this media, but as a
Dialogue: 0,0:27:16.07,0:27:17.98,Default,,0,0,0,,practical matter we provide you
Dialogue: 0,0:27:17.98,0:27:20.02,Default,,0,0,0,,a lower level API called
Dialogue: 0,0:27:20.02,0:27:21.54,Default,,0,0,0,,VideoToolbox.
Dialogue: 0,0:27:21.54,0:27:22.63,Default,,0,0,0,,This is a framework that
Dialogue: 0,0:27:22.63,0:27:25.76,Default,,0,0,0,,provides access to the hardware
Dialogue: 0,0:27:25.76,0:27:27.36,Default,,0,0,0,,accelerated encoding and
Dialogue: 0,0:27:27.36,0:27:27.82,Default,,0,0,0,,decoding.
Dialogue: 0,0:27:29.83,0:27:32.20,Default,,0,0,0,,All samples go to the upload
Dialogue: 0,0:27:32.20,0:27:33.83,Default,,0,0,0,,extension and handled by the
Dialogue: 0,0:27:33.83,0:27:35.65,Default,,0,0,0,,function processSampleBuffer.
Dialogue: 0,0:27:39.08,0:27:40.99,Default,,0,0,0,,And the function should encode
Dialogue: 0,0:27:40.99,0:27:42.30,Default,,0,0,0,,and upload the media samples.
Dialogue: 0,0:27:43.24,0:27:44.57,Default,,0,0,0,,Here in this code example, we
Dialogue: 0,0:27:44.57,0:27:45.59,Default,,0,0,0,,show you how you could use a
Dialogue: 0,0:27:45.59,0:27:48.17,Default,,0,0,0,,VideoToolbox to encode the video
Dialogue: 0,0:27:48.17,0:27:48.62,Default,,0,0,0,,sample.
Dialogue: 0,0:27:50.54,0:27:51.78,Default,,0,0,0,,In your real code, you would
Dialogue: 0,0:27:51.78,0:27:53.68,Default,,0,0,0,,also have to implement the call
Dialogue: 0,0:27:53.68,0:27:55.35,Default,,0,0,0,,back to receive the encoded
Dialogue: 0,0:27:55.35,0:27:56.29,Default,,0,0,0,,data, et cetera.
Dialogue: 0,0:27:57.13,0:27:58.51,Default,,0,0,0,,But here I would like to speak
Dialogue: 0,0:27:58.51,0:28:00.60,Default,,0,0,0,,about the VideoToolbox, because
Dialogue: 0,0:28:00.60,0:28:02.29,Default,,0,0,0,,it's especially important when
Dialogue: 0,0:28:02.29,0:28:03.94,Default,,0,0,0,,you do your video processing in
Dialogue: 0,0:28:03.94,0:28:05.15,Default,,0,0,0,,an app extension.
Dialogue: 0,0:28:05.15,0:28:07.14,Default,,0,0,0,,Because app extensions have much
Dialogue: 0,0:28:07.14,0:28:09.31,Default,,0,0,0,,lower memory limits compared to
Dialogue: 0,0:28:09.31,0:28:10.76,Default,,0,0,0,,the programmed applications.
Dialogue: 0,0:28:11.71,0:28:13.09,Default,,0,0,0,,And having access to this
Dialogue: 0,0:28:13.15,0:28:15.33,Default,,0,0,0,,hardware accelerated video
Dialogue: 0,0:28:15.33,0:28:17.53,Default,,0,0,0,,encoding is vital for the
Dialogue: 0,0:28:17.53,0:28:19.19,Default,,0,0,0,,ReplayKit upload extensions.
Dialogue: 0,0:28:19.50,0:28:21.14,Default,,0,0,0,,And this year, we have great
Dialogue: 0,0:28:21.14,0:28:24.04,Default,,0,0,0,,news, VideoToolbox is also
Dialogue: 0,0:28:24.04,0:28:25.63,Default,,0,0,0,,available on tvOS now.
Dialogue: 0,0:28:25.79,0:28:27.01,Default,,0,0,0,,So, you can build highly
Dialogue: 0,0:28:27.01,0:28:28.78,Default,,0,0,0,,optimized, very efficient
Dialogue: 0,0:28:28.78,0:28:29.96,Default,,0,0,0,,extensions for both platforms.
Dialogue: 0,0:28:36.05,0:28:37.08,Default,,0,0,0,,This is a high level picture of
Dialogue: 0,0:28:37.17,0:28:39.76,Default,,0,0,0,,how Live Broadcast works, and
Dialogue: 0,0:28:39.76,0:28:41.30,Default,,0,0,0,,who implements each part.
Dialogue: 0,0:28:43.58,0:28:44.92,Default,,0,0,0,,Again if you are a game
Dialogue: 0,0:28:44.92,0:28:46.37,Default,,0,0,0,,developer, client application
Dialogue: 0,0:28:46.37,0:28:48.04,Default,,0,0,0,,developer, all you need to worry
Dialogue: 0,0:28:48.04,0:28:50.27,Default,,0,0,0,,about is just present the
Dialogue: 0,0:28:50.27,0:28:52.55,Default,,0,0,0,,ViewController initiate and stop
Dialogue: 0,0:28:52.55,0:28:56.69,Default,,0,0,0,,the broadcast, and you could
Dialogue: 0,0:28:56.69,0:28:59.12,Default,,0,0,0,,implement this API and be done
Dialogue: 0,0:28:59.12,0:29:00.79,Default,,0,0,0,,by the end of this session.
Dialogue: 0,0:29:02.00,0:29:03.79,Default,,0,0,0,,And if you are a broadcast
Dialogue: 0,0:29:03.79,0:29:05.67,Default,,0,0,0,,service developer there's a
Dialogue: 0,0:29:05.67,0:29:07.04,Default,,0,0,0,,little more work on your side.
Dialogue: 0,0:29:07.77,0:29:10.57,Default,,0,0,0,,You need to receive the samples,
Dialogue: 0,0:29:10.57,0:29:12.77,Default,,0,0,0,,encode them, and upload to the
Dialogue: 0,0:29:12.77,0:29:13.75,Default,,0,0,0,,broadcast service.
Dialogue: 0,0:29:17.58,0:29:19.92,Default,,0,0,0,,There's one more thing I need to
Dialogue: 0,0:29:19.92,0:29:21.49,Default,,0,0,0,,go over before we finish with
Dialogue: 0,0:29:21.49,0:29:23.17,Default,,0,0,0,,this part of the talk.
Dialogue: 0,0:29:23.82,0:29:25.50,Default,,0,0,0,,Is that so far we've been
Dialogue: 0,0:29:25.50,0:29:28.63,Default,,0,0,0,,assuming that all the data flows
Dialogue: 0,0:29:28.63,0:29:30.39,Default,,0,0,0,,upwards from the application to
Dialogue: 0,0:29:30.39,0:29:32.24,Default,,0,0,0,,the online service, but indeed
Dialogue: 0,0:29:32.64,0:29:34.34,Default,,0,0,0,,it is also possible for the data
Dialogue: 0,0:29:34.34,0:29:36.89,Default,,0,0,0,,to be flowing back from the
Dialogue: 0,0:29:36.89,0:29:39.71,Default,,0,0,0,,online service to the
Dialogue: 0,0:29:39.71,0:29:40.55,Default,,0,0,0,,application.
Dialogue: 0,0:29:40.64,0:29:42.12,Default,,0,0,0,,And that could be some viewers
Dialogue: 0,0:29:42.12,0:29:43.83,Default,,0,0,0,,feedback, like the comments of
Dialogue: 0,0:29:43.83,0:29:45.72,Default,,0,0,0,,the viewers or likes, or any
Dialogue: 0,0:29:45.72,0:29:47.56,Default,,0,0,0,,kind of data number viewers.
Dialogue: 0,0:29:49.78,0:29:51.87,Default,,0,0,0,,And for that we provide an API
Dialogue: 0,0:29:51.87,0:29:53.78,Default,,0,0,0,,that helps you to deliver this
Dialogue: 0,0:29:53.78,0:29:55.25,Default,,0,0,0,,information from the extension
Dialogue: 0,0:29:55.25,0:29:55.98,Default,,0,0,0,,to the client application.
Dialogue: 0,0:29:58.48,0:30:01.37,Default,,0,0,0,,And you have to just put this
Dialogue: 0,0:30:01.37,0:30:02.93,Default,,0,0,0,,data in a dictionary and use the
Dialogue: 0,0:30:02.93,0:30:03.87,Default,,0,0,0,,function called
Dialogue: 0,0:30:04.66,0:30:06.47,Default,,0,0,0,,updateServiceInfo from within
Dialogue: 0,0:30:06.47,0:30:07.33,Default,,0,0,0,,your extension.
Dialogue: 0,0:30:07.33,0:30:08.63,Default,,0,0,0,,And that dictionary would be
Dialogue: 0,0:30:08.63,0:30:10.20,Default,,0,0,0,,available to the application as
Dialogue: 0,0:30:10.20,0:30:11.55,Default,,0,0,0,,a property of the broadcast
Dialogue: 0,0:30:11.55,0:30:12.15,Default,,0,0,0,,controller.
Dialogue: 0,0:30:12.38,0:30:13.60,Default,,0,0,0,,The name of the property is
Dialogue: 0,0:30:13.80,0:30:16.54,Default,,0,0,0,,serviceInfo and it's KVO
Dialogue: 0,0:30:16.54,0:30:19.14,Default,,0,0,0,,observable, so you can monitor
Dialogue: 0,0:30:19.14,0:30:21.28,Default,,0,0,0,,this and update the UI
Dialogue: 0,0:30:21.28,0:30:22.04,Default,,0,0,0,,appropriately.
Dialogue: 0,0:30:23.35,0:30:24.76,Default,,0,0,0,,This is it for the Live
Dialogue: 0,0:30:25.17,0:30:27.09,Default,,0,0,0,,Broadcast API overview.
Dialogue: 0,0:30:27.09,0:30:29.92,Default,,0,0,0,,And having all this information
Dialogue: 0,0:30:29.92,0:30:32.54,Default,,0,0,0,,you can build absolutely new
Dialogue: 0,0:30:32.54,0:30:34.58,Default,,0,0,0,,products, given that you also
Dialogue: 0,0:30:34.58,0:30:35.71,Default,,0,0,0,,construct the broadcast from the
Dialogue: 0,0:30:35.71,0:30:37.12,Default,,0,0,0,,Control Center you can build
Dialogue: 0,0:30:37.18,0:30:38.69,Default,,0,0,0,,third parties screen mirroring
Dialogue: 0,0:30:38.69,0:30:41.80,Default,,0,0,0,,or video share, sharing of the
Dialogue: 0,0:30:41.80,0:30:43.16,Default,,0,0,0,,screen during the video
Dialogue: 0,0:30:43.16,0:30:43.76,Default,,0,0,0,,conference.
Dialogue: 0,0:30:46.09,0:30:47.77,Default,,0,0,0,,Thank you, and please come,
Dialogue: 0,0:30:47.77,0:30:48.98,Default,,0,0,0,,please welcome Johnny back on
Dialogue: 0,0:30:48.98,0:30:49.34,Default,,0,0,0,,stage.
Dialogue: 0,0:30:50.52,0:30:54.40,Default,,0,0,0,,[ Applause ]
Dialogue: 0,0:30:54.90,0:30:56.00,Default,,0,0,0,,>> Thank you, Alexander.
Dialogue: 0,0:30:56.36,0:30:58.66,Default,,0,0,0,,So, as Alexander has just
Dialogue: 0,0:30:58.66,0:31:00.63,Default,,0,0,0,,stated, current broadcaster
Dialogue: 0,0:31:00.63,0:31:02.61,Default,,0,0,0,,application, you would need to
Dialogue: 0,0:31:02.61,0:31:04.35,Default,,0,0,0,,present to the user a
Dialogue: 0,0:31:04.35,0:31:05.59,Default,,0,0,0,,RPBroadcastActivity
Dialogue: 0,0:31:05.59,0:31:07.07,Default,,0,0,0,,ViewController that allows them
Dialogue: 0,0:31:07.07,0:31:08.53,Default,,0,0,0,,to choose a public service to
Dialogue: 0,0:31:08.53,0:31:09.99,Default,,0,0,0,,broadcast your application to.
Dialogue: 0,0:31:10.92,0:31:12.97,Default,,0,0,0,,Well, sometimes you don't want
Dialogue: 0,0:31:12.97,0:31:14.54,Default,,0,0,0,,to broadcast your application to
Dialogue: 0,0:31:14.54,0:31:15.49,Default,,0,0,0,,a public service.
Dialogue: 0,0:31:15.85,0:31:17.86,Default,,0,0,0,,Sometimes, you want your
Dialogue: 0,0:31:17.86,0:31:19.51,Default,,0,0,0,,application to use your
Dialogue: 0,0:31:19.51,0:31:20.68,Default,,0,0,0,,broadcasting service.
Dialogue: 0,0:31:21.33,0:31:23.02,Default,,0,0,0,,Well, with ReplayKit 2 and
Dialogue: 0,0:31:23.02,0:31:24.39,Default,,0,0,0,,Broadcast Pairing, you can do
Dialogue: 0,0:31:24.39,0:31:24.90,Default,,0,0,0,,just that.
Dialogue: 0,0:31:25.77,0:31:27.81,Default,,0,0,0,,Broadcast Pairing enables you to
Dialogue: 0,0:31:27.89,0:31:29.53,Default,,0,0,0,,fully and seamlessly integrate
Dialogue: 0,0:31:29.53,0:31:31.58,Default,,0,0,0,,your entire streaming solution,
Dialogue: 0,0:31:31.78,0:31:32.71,Default,,0,0,0,,all from within your own
Dialogue: 0,0:31:32.71,0:31:33.27,Default,,0,0,0,,application.
Dialogue: 0,0:31:35.08,0:31:36.59,Default,,0,0,0,,Here we have our budget
Dialogue: 0,0:31:36.59,0:31:38.19,Default,,0,0,0,,application and we have our
Dialogue: 0,0:31:38.19,0:31:39.47,Default,,0,0,0,,conference application that
Dialogue: 0,0:31:39.47,0:31:40.68,Default,,0,0,0,,supports ReplayKit Live
Dialogue: 0,0:31:40.68,0:31:42.95,Default,,0,0,0,,Streaming and has implemented a
Dialogue: 0,0:31:42.95,0:31:44.02,Default,,0,0,0,,broadcast extension.
Dialogue: 0,0:31:44.98,0:31:47.00,Default,,0,0,0,,I want our budget application to
Dialogue: 0,0:31:47.00,0:31:49.00,Default,,0,0,0,,stream exclusively to our
Dialogue: 0,0:31:49.00,0:31:50.10,Default,,0,0,0,,conference application's
Dialogue: 0,0:31:50.10,0:31:51.13,Default,,0,0,0,,broadcast extension.
Dialogue: 0,0:31:51.73,0:31:53.25,Default,,0,0,0,,So to do that, I'm going to
Dialogue: 0,0:31:53.25,0:31:54.80,Default,,0,0,0,,initiate a broadcast pair.
Dialogue: 0,0:31:55.65,0:31:57.67,Default,,0,0,0,,Our budget application is going
Dialogue: 0,0:31:57.67,0:31:59.13,Default,,0,0,0,,to call load with preferred
Dialogue: 0,0:31:59.13,0:32:00.53,Default,,0,0,0,,extension on the class
Dialogue: 0,0:32:00.71,0:32:02.53,Default,,0,0,0,,RPActivityViewController.
Dialogue: 0,0:32:03.65,0:32:05.08,Default,,0,0,0,,We'll get back an instance of
Dialogue: 0,0:32:05.08,0:32:06.32,Default,,0,0,0,,RPBroadcastActivity
Dialogue: 0,0:32:06.32,0:32:07.81,Default,,0,0,0,,ViewController much like we do
Dialogue: 0,0:32:07.81,0:32:09.02,Default,,0,0,0,,with general broadcast
Dialogue: 0,0:32:09.02,0:32:11.63,Default,,0,0,0,,initiation, but here is the main
Dialogue: 0,0:32:11.63,0:32:13.16,Default,,0,0,0,,difference between Broadcast
Dialogue: 0,0:32:13.16,0:32:14.77,Default,,0,0,0,,Pairing and general broadcast
Dialogue: 0,0:32:14.77,0:32:15.44,Default,,0,0,0,,initiation.
Dialogue: 0,0:32:15.92,0:32:17.35,Default,,0,0,0,,Because when you go and present
Dialogue: 0,0:32:17.39,0:32:19.59,Default,,0,0,0,,that ViewController, instead of
Dialogue: 0,0:32:19.59,0:32:21.31,Default,,0,0,0,,the user being presented with a
Dialogue: 0,0:32:21.41,0:32:22.49,Default,,0,0,0,,picker that allows them to
Dialogue: 0,0:32:22.49,0:32:24.80,Default,,0,0,0,,choose a public service, they'll
Dialogue: 0,0:32:24.80,0:32:26.73,Default,,0,0,0,,be presented with an alert that
Dialogue: 0,0:32:26.73,0:32:28.16,Default,,0,0,0,,indicates to them your
Dialogue: 0,0:32:28.16,0:32:30.07,Default,,0,0,0,,application's intent to use a
Dialogue: 0,0:32:30.12,0:32:32.08,Default,,0,0,0,,particular broadcast service.
Dialogue: 0,0:32:32.57,0:32:34.32,Default,,0,0,0,,Here, our budget application
Dialogue: 0,0:32:34.32,0:32:35.16,Default,,0,0,0,,wants to stream to our
Dialogue: 0,0:32:35.16,0:32:36.28,Default,,0,0,0,,conference application's
Dialogue: 0,0:32:36.28,0:32:37.37,Default,,0,0,0,,broadcast service.
Dialogue: 0,0:32:38.08,0:32:39.60,Default,,0,0,0,,When a user taps accept,
Dialogue: 0,0:32:40.54,0:32:41.97,Default,,0,0,0,,ReplayKit will immediately
Dialogue: 0,0:32:41.97,0:32:43.22,Default,,0,0,0,,launch the paired broadcast
Dialogue: 0,0:32:43.22,0:32:45.05,Default,,0,0,0,,extension allowing the user to
Dialogue: 0,0:32:45.05,0:32:47.17,Default,,0,0,0,,input any information that might
Dialogue: 0,0:32:47.17,0:32:48.45,Default,,0,0,0,,be important to the broadcasting
Dialogue: 0,0:32:48.45,0:32:48.80,Default,,0,0,0,,session.
Dialogue: 0,0:32:50.09,0:32:51.20,Default,,0,0,0,,When the user has finished
Dialogue: 0,0:32:51.20,0:32:52.77,Default,,0,0,0,,inputting all their information,
Dialogue: 0,0:32:54.08,0:32:55.70,Default,,0,0,0,,ReplayKit will start
Dialogue: 0,0:32:55.91,0:32:58.05,Default,,0,0,0,,broadcasting to the paired
Dialogue: 0,0:32:58.05,0:32:59.02,Default,,0,0,0,,broadcast extension.
Dialogue: 0,0:32:59.45,0:33:00.97,Default,,0,0,0,,And just like that, our budget
Dialogue: 0,0:33:00.97,0:33:03.05,Default,,0,0,0,,application is now streaming
Dialogue: 0,0:33:03.05,0:33:04.89,Default,,0,0,0,,exclusively to its paired
Dialogue: 0,0:33:04.89,0:33:05.84,Default,,0,0,0,,broadcast extension.
Dialogue: 0,0:33:06.37,0:33:08.92,Default,,0,0,0,,Let's go ahead and take a look
Dialogue: 0,0:33:08.92,0:33:10.20,Default,,0,0,0,,at the API for Broadcast
Dialogue: 0,0:33:10.20,0:33:10.41,Default,,0,0,0,,Pairing.
Dialogue: 0,0:33:10.94,0:33:13.88,Default,,0,0,0,,The API for Broadcast Pairing is
Dialogue: 0,0:33:13.88,0:33:14.55,Default,,0,0,0,,very simple.
Dialogue: 0,0:33:15.51,0:33:16.94,Default,,0,0,0,,It's a new class method on
Dialogue: 0,0:33:16.99,0:33:18.39,Default,,0,0,0,,RPBroadcastActivity
Dialogue: 0,0:33:18.39,0:33:19.57,Default,,0,0,0,,ViewController called
Dialogue: 0,0:33:19.57,0:33:21.05,Default,,0,0,0,,load(withPreferredExtension.
Dialogue: 0,0:33:21.90,0:33:23.26,Default,,0,0,0,,We'll hand you back an instance
Dialogue: 0,0:33:23.26,0:33:23.50,Default,,0,0,0,,of
Dialogue: 0,0:33:23.50,0:33:25.05,Default,,0,0,0,,broadcastActivityViewController
Dialogue: 0,0:33:25.14,0:33:26.35,Default,,0,0,0,,that you can then present to
Dialogue: 0,0:33:26.35,0:33:26.93,Default,,0,0,0,,your users.
Dialogue: 0,0:33:28.03,0:33:29.28,Default,,0,0,0,,Let's jump in and take a look at
Dialogue: 0,0:33:29.28,0:33:30.81,Default,,0,0,0,,how our budget application is
Dialogue: 0,0:33:30.81,0:33:32.07,Default,,0,0,0,,going to imitate a broadcast
Dialogue: 0,0:33:32.07,0:33:34.07,Default,,0,0,0,,pair in a little bit more
Dialogue: 0,0:33:34.74,0:33:34.89,Default,,0,0,0,,detail.
Dialogue: 0,0:33:35.05,0:33:36.37,Default,,0,0,0,,Here, I have a method called
Dialogue: 0,0:33:36.58,0:33:38.27,Default,,0,0,0,,didPressBroadcastPairButton.
Dialogue: 0,0:33:38.83,0:33:40.54,Default,,0,0,0,,Inside of it, I'm simply going
Dialogue: 0,0:33:40.54,0:33:40.82,Default,,0,0,0,,to call
Dialogue: 0,0:33:40.82,0:33:42.94,Default,,0,0,0,,load(withPreferredExtension: on
Dialogue: 0,0:33:42.94,0:33:44.76,Default,,0,0,0,,the class RPBroadcastActivity
Dialogue: 0,0:33:44.76,0:33:45.32,Default,,0,0,0,,ViewController.
Dialogue: 0,0:33:45.98,0:33:47.21,Default,,0,0,0,,We'll go ahead and get back an
Dialogue: 0,0:33:47.21,0:33:48.96,Default,,0,0,0,,instance of RPBroadcastActivity
Dialogue: 0,0:33:48.96,0:33:49.97,Default,,0,0,0,,ViewController that.
Dialogue: 0,0:33:50.32,0:33:52.11,Default,,0,0,0,,When we go ahead and present the
Dialogue: 0,0:33:52.11,0:33:54.46,Default,,0,0,0,,user be presented with an alert
Dialogue: 0,0:33:54.46,0:33:55.75,Default,,0,0,0,,that indicates to them my
Dialogue: 0,0:33:55.75,0:33:57.09,Default,,0,0,0,,application's intent to use a
Dialogue: 0,0:33:57.09,0:33:58.94,Default,,0,0,0,,particular broadcasting service.
Dialogue: 0,0:33:59.62,0:34:01.29,Default,,0,0,0,,Once the user accepts, ReplayKit
Dialogue: 0,0:34:01.29,0:34:02.39,Default,,0,0,0,,will handle the rest and we'll
Dialogue: 0,0:34:02.54,0:34:05.17,Default,,0,0,0,,the broadcasting extension
Dialogue: 0,0:34:05.17,0:34:05.84,Default,,0,0,0,,that's been paired.
Dialogue: 0,0:34:09.24,0:34:10.64,Default,,0,0,0,,Broadcast Pairing has been
Dialogue: 0,0:34:10.64,0:34:11.83,Default,,0,0,0,,designed so that the
Dialogue: 0,0:34:11.83,0:34:13.36,Default,,0,0,0,,broadcasting app and the
Dialogue: 0,0:34:13.36,0:34:15.14,Default,,0,0,0,,broadcasting service are tightly
Dialogue: 0,0:34:15.14,0:34:15.58,Default,,0,0,0,,coupled.
Dialogue: 0,0:34:16.07,0:34:18.58,Default,,0,0,0,,So, initiating a Broadcast
Dialogue: 0,0:34:18.58,0:34:20.23,Default,,0,0,0,,Pairing session, developers are
Dialogue: 0,0:34:20.23,0:34:22.11,Default,,0,0,0,,going to have to supply a
Dialogue: 0,0:34:22.11,0:34:23.60,Default,,0,0,0,,bundleID for the broadcast
Dialogue: 0,0:34:23.60,0:34:24.06,Default,,0,0,0,,extension.
Dialogue: 0,0:34:25.09,0:34:26.93,Default,,0,0,0,,Users will also need to accept
Dialogue: 0,0:34:26.93,0:34:28.75,Default,,0,0,0,,the broadcasting pair through
Dialogue: 0,0:34:28.75,0:34:30.35,Default,,0,0,0,,the alert, which will be shown
Dialogue: 0,0:34:30.42,0:34:32.10,Default,,0,0,0,,every time you wish to initiate
Dialogue: 0,0:34:32.10,0:34:33.24,Default,,0,0,0,,a Broadcasting Pair session.
Dialogue: 0,0:34:35.07,0:34:37.04,Default,,0,0,0,,Broadcast Pairing allows you to
Dialogue: 0,0:34:37.04,0:34:38.91,Default,,0,0,0,,seamlessly integrate your entire
Dialogue: 0,0:34:38.91,0:34:40.57,Default,,0,0,0,,streaming solution all within
Dialogue: 0,0:34:40.57,0:34:41.39,Default,,0,0,0,,your own application.
Dialogue: 0,0:34:43.90,0:34:46.01,Default,,0,0,0,,Now, we know that creating
Dialogue: 0,0:34:46.01,0:34:47.73,Default,,0,0,0,,replays and Live Streams with
Dialogue: 0,0:34:47.73,0:34:49.72,Default,,0,0,0,,user commentary is a fantastic
Dialogue: 0,0:34:49.72,0:34:51.75,Default,,0,0,0,,way to get new user engagement
Dialogue: 0,0:34:51.75,0:34:53.66,Default,,0,0,0,,in your application as well as
Dialogue: 0,0:34:53.66,0:34:55.04,Default,,0,0,0,,generating a community around
Dialogue: 0,0:34:55.04,0:34:55.84,Default,,0,0,0,,your application.
Dialogue: 0,0:34:56.86,0:34:58.00,Default,,0,0,0,,That's why last year we
Dialogue: 0,0:34:58.00,0:34:59.48,Default,,0,0,0,,introduced front camera support
Dialogue: 0,0:34:59.48,0:35:00.09,Default,,0,0,0,,for ReplayKit.
Dialogue: 0,0:35:00.47,0:35:01.85,Default,,0,0,0,,And which is why this year we're
Dialogue: 0,0:35:01.85,0:35:03.83,Default,,0,0,0,,also introducing Fast Camera
Dialogue: 0,0:35:03.83,0:35:07.25,Default,,0,0,0,,Switching for ReplayKit 2.
Dialogue: 0,0:35:07.37,0:35:09.26,Default,,0,0,0,,Fast Camera Switching allows you
Dialogue: 0,0:35:09.26,0:35:11.59,Default,,0,0,0,,to change the camera feed in the
Dialogue: 0,0:35:11.59,0:35:13.20,Default,,0,0,0,,camera preview view found in
Dialogue: 0,0:35:13.20,0:35:15.01,Default,,0,0,0,,RPScreenRecorder to use either
Dialogue: 0,0:35:15.01,0:35:16.61,Default,,0,0,0,,the front camera or the rear
Dialogue: 0,0:35:16.61,0:35:16.95,Default,,0,0,0,,camera.
Dialogue: 0,0:35:18.07,0:35:19.61,Default,,0,0,0,,The camera preview view found in
Dialogue: 0,0:35:19.61,0:35:21.41,Default,,0,0,0,,RPScreenRecorder is a subclass
Dialogue: 0,0:35:21.41,0:35:23.36,Default,,0,0,0,,of UIView, so it can be added to
Dialogue: 0,0:35:23.36,0:35:24.66,Default,,0,0,0,,just about any application.
Dialogue: 0,0:35:25.94,0:35:27.66,Default,,0,0,0,,Developers are responsible for
Dialogue: 0,0:35:27.66,0:35:29.85,Default,,0,0,0,,UI elements that allow the user
Dialogue: 0,0:35:29.85,0:35:31.48,Default,,0,0,0,,to present and dismiss the
Dialogue: 0,0:35:31.65,0:35:33.13,Default,,0,0,0,,camera preview view, as well as
Dialogue: 0,0:35:33.13,0:35:35.57,Default,,0,0,0,,UI elements to allow the user to
Dialogue: 0,0:35:35.57,0:35:36.81,Default,,0,0,0,,switch the camera preview view.
Dialogue: 0,0:35:37.84,0:35:39.16,Default,,0,0,0,,Let's go ahead and take a quick
Dialogue: 0,0:35:39.16,0:35:40.55,Default,,0,0,0,,look at the API for Fast Camera
Dialogue: 0,0:35:40.55,0:35:40.86,Default,,0,0,0,,Switching.
Dialogue: 0,0:35:42.38,0:35:43.84,Default,,0,0,0,,The API for Fast Camera
Dialogue: 0,0:35:43.84,0:35:45.24,Default,,0,0,0,,Switching is really simple.
Dialogue: 0,0:35:45.54,0:35:47.27,Default,,0,0,0,,It consists of a new property on
Dialogue: 0,0:35:47.27,0:35:48.76,Default,,0,0,0,,RPScreenRecorder called
Dialogue: 0,0:35:48.76,0:35:50.97,Default,,0,0,0,,cameraPosition, which is used to
Dialogue: 0,0:35:50.97,0:35:52.49,Default,,0,0,0,,note the current cameraPosition
Dialogue: 0,0:35:52.54,0:35:54.02,Default,,0,0,0,,for the sharedRecorder instance.
Dialogue: 0,0:35:54.96,0:35:56.83,Default,,0,0,0,,CameraPosition is an enumeration
Dialogue: 0,0:35:56.91,0:35:58.89,Default,,0,0,0,,RPCameraPosition which includes
Dialogue: 0,0:35:59.08,0:36:01.20,Default,,0,0,0,,RPCameraPosition front and
Dialogue: 0,0:36:01.35,0:36:03.26,Default,,0,0,0,,RPCameraPosition back which is
Dialogue: 0,0:36:03.26,0:36:04.49,Default,,0,0,0,,used for the front and back
Dialogue: 0,0:36:04.49,0:36:05.56,Default,,0,0,0,,cameras respectively.
Dialogue: 0,0:36:06.52,0:36:07.54,Default,,0,0,0,,Let's go ahead and jump into an
Dialogue: 0,0:36:07.54,0:36:08.76,Default,,0,0,0,,example of how we can start
Dialogue: 0,0:36:08.76,0:36:12.16,Default,,0,0,0,,using Fast Camera Switching.
Dialogue: 0,0:36:12.30,0:36:13.94,Default,,0,0,0,,Wow, that photo looked a lot
Dialogue: 0,0:36:13.94,0:36:15.81,Default,,0,0,0,,better on a smaller screen.
Dialogue: 0,0:36:16.43,0:36:17.66,Default,,0,0,0,,Here, we have a function called
Dialogue: 0,0:36:17.66,0:36:18.46,Default,,0,0,0,,showPreviewView.
Dialogue: 0,0:36:19.04,0:36:20.36,Default,,0,0,0,,Inside we're simply going to
Dialogue: 0,0:36:20.36,0:36:21.55,Default,,0,0,0,,grab this sharedRecorder
Dialogue: 0,0:36:21.55,0:36:23.26,Default,,0,0,0,,instance on RPScreenRecorder.
Dialogue: 0,0:36:23.76,0:36:25.06,Default,,0,0,0,,From there, I'll grab the
Dialogue: 0,0:36:25.06,0:36:26.83,Default,,0,0,0,,cameraPreviewView for the RP,
Dialogue: 0,0:36:26.83,0:36:28.30,Default,,0,0,0,,for the sharedRecorder instance.
Dialogue: 0,0:36:28.70,0:36:29.86,Default,,0,0,0,,Since the sharedRecorder
Dialogue: 0,0:36:29.86,0:36:32.13,Default,,0,0,0,,instance and its cameraView is a
Dialogue: 0,0:36:32.13,0:36:33.86,Default,,0,0,0,,subclass of UI view, I'm simply
Dialogue: 0,0:36:33.86,0:36:35.40,Default,,0,0,0,,going to add it as a subview to
Dialogue: 0,0:36:35.40,0:36:36.68,Default,,0,0,0,,my view in my application.
Dialogue: 0,0:36:37.48,0:36:38.93,Default,,0,0,0,,And just like that, we're now
Dialogue: 0,0:36:38.93,0:36:40.79,Default,,0,0,0,,using the cameraPreviewView and
Dialogue: 0,0:36:40.79,0:36:42.65,Default,,0,0,0,,the front facing camera for our
Dialogue: 0,0:36:42.65,0:36:43.43,Default,,0,0,0,,video commentary.
Dialogue: 0,0:36:44.37,0:36:45.63,Default,,0,0,0,,Let's go ahead and take a quick
Dialogue: 0,0:36:45.63,0:36:46.84,Default,,0,0,0,,look at how we can use Fast
Dialogue: 0,0:36:46.84,0:36:47.41,Default,,0,0,0,,Camera Switching.
Dialogue: 0,0:36:49.16,0:36:50.68,Default,,0,0,0,,Here, I have a method called
Dialogue: 0,0:36:50.68,0:36:52.07,Default,,0,0,0,,didPressCameraSwitch.
Dialogue: 0,0:36:52.33,0:36:53.79,Default,,0,0,0,,Again, I'm simply going to grab
Dialogue: 0,0:36:53.79,0:36:55.90,Default,,0,0,0,,a sharedRecorder instance from
Dialogue: 0,0:36:55.90,0:36:56.85,Default,,0,0,0,,our RPScreenRecorder.
Dialogue: 0,0:36:57.53,0:36:58.88,Default,,0,0,0,,I'm really interested in knowing
Dialogue: 0,0:36:58.88,0:37:00.33,Default,,0,0,0,,what the current cameraPosition
Dialogue: 0,0:37:00.33,0:37:00.58,Default,,0,0,0,,is.
Dialogue: 0,0:37:00.74,0:37:01.88,Default,,0,0,0,,So, in our method here, we're
Dialogue: 0,0:37:02.34,0:37:03.36,Default,,0,0,0,,going to check to see what the
Dialogue: 0,0:37:03.36,0:37:04.62,Default,,0,0,0,,current cameraPosition is.
Dialogue: 0,0:37:04.90,0:37:06.10,Default,,0,0,0,,And whatever it is, I'm going to
Dialogue: 0,0:37:06.10,0:37:07.24,Default,,0,0,0,,switch it to its opposite.
Dialogue: 0,0:37:07.49,0:37:09.12,Default,,0,0,0,,So here, We notice that our
Dialogue: 0,0:37:09.12,0:37:10.20,Default,,0,0,0,,cameraPosition for our
Dialogue: 0,0:37:10.20,0:37:11.46,Default,,0,0,0,,sharedRecorder is using
Dialogue: 0,0:37:11.46,0:37:13.00,Default,,0,0,0,,RPCameraPosition.front.
Dialogue: 0,0:37:13.46,0:37:14.54,Default,,0,0,0,,I'm simply going to set the
Dialogue: 0,0:37:14.54,0:37:16.34,Default,,0,0,0,,shareRecorder's cameraPosition
Dialogue: 0,0:37:16.44,0:37:18.09,Default,,0,0,0,,to be RPCameraPosition.back.
Dialogue: 0,0:37:18.88,0:37:20.52,Default,,0,0,0,,And just like that, our preview
Dialogue: 0,0:37:20.52,0:37:21.56,Default,,0,0,0,,view is now using the rear
Dialogue: 0,0:37:21.56,0:37:23.10,Default,,0,0,0,,camera for its video commentary.
Dialogue: 0,0:37:23.94,0:37:26.51,Default,,0,0,0,,It really is just that easy and
Dialogue: 0,0:37:26.51,0:37:28.31,Default,,0,0,0,,it really is just that fast.
Dialogue: 0,0:37:29.57,0:37:31.76,Default,,0,0,0,,Fast Camera Switching will give
Dialogue: 0,0:37:31.76,0:37:33.62,Default,,0,0,0,,you additional tools to provide
Dialogue: 0,0:37:33.62,0:37:35.13,Default,,0,0,0,,your users with to create more
Dialogue: 0,0:37:35.13,0:37:36.94,Default,,0,0,0,,engaging video commentary in the
Dialogue: 0,0:37:36.94,0:37:37.97,Default,,0,0,0,,content their creating in your
Dialogue: 0,0:37:37.97,0:37:38.55,Default,,0,0,0,,application.
Dialogue: 0,0:37:40.62,0:37:42.96,Default,,0,0,0,,We have covered a lot today.
Dialogue: 0,0:37:43.22,0:37:44.34,Default,,0,0,0,,So let's go ahead and take a
Dialogue: 0,0:37:44.34,0:37:45.11,Default,,0,0,0,,minute to recap.
Dialogue: 0,0:37:45.66,0:37:47.69,Default,,0,0,0,,In ReplayKit 2, we introduced
Dialogue: 0,0:37:47.96,0:37:49.68,Default,,0,0,0,,In-App Screen Capture, which is
Dialogue: 0,0:37:49.68,0:37:51.56,Default,,0,0,0,,a powerful new API that's going
Dialogue: 0,0:37:51.56,0:37:53.83,Default,,0,0,0,,to give you direct access to
Dialogue: 0,0:37:53.83,0:37:55.78,Default,,0,0,0,,your application's own audio,
Dialogue: 0,0:37:56.19,0:37:58.07,Default,,0,0,0,,video, and microphone content
Dialogue: 0,0:37:58.16,0:37:59.24,Default,,0,0,0,,straight from ReplayKit.
Dialogue: 0,0:38:00.82,0:38:02.51,Default,,0,0,0,,With iOS Screen Recording and
Dialogue: 0,0:38:02.51,0:38:04.74,Default,,0,0,0,,Broadcast, users can now record
Dialogue: 0,0:38:04.96,0:38:07.24,Default,,0,0,0,,and broadcast their entire iOS
Dialogue: 0,0:38:07.24,0:38:09.18,Default,,0,0,0,,screen experience straight from
Dialogue: 0,0:38:09.18,0:38:09.75,Default,,0,0,0,,Control Center.
Dialogue: 0,0:38:11.63,0:38:13.05,Default,,0,0,0,,We introduced Broadcast Pairing
Dialogue: 0,0:38:13.26,0:38:15.03,Default,,0,0,0,,which enable you to seamlessly
Dialogue: 0,0:38:15.03,0:38:16.57,Default,,0,0,0,,integrate your entire streaming
Dialogue: 0,0:38:16.57,0:38:17.98,Default,,0,0,0,,solution all within your own
Dialogue: 0,0:38:17.98,0:38:18.54,Default,,0,0,0,,application.
Dialogue: 0,0:38:19.77,0:38:21.76,Default,,0,0,0,,And finally, with Fast Camera
Dialogue: 0,0:38:21.76,0:38:23.17,Default,,0,0,0,,Switching you now have more
Dialogue: 0,0:38:23.17,0:38:25.00,Default,,0,0,0,,tools to provide your users with
Dialogue: 0,0:38:25.13,0:38:26.60,Default,,0,0,0,,to create more engaging video
Dialogue: 0,0:38:26.60,0:38:27.11,Default,,0,0,0,,commentary.
Dialogue: 0,0:38:28.86,0:38:30.26,Default,,0,0,0,,For more information about our
Dialogue: 0,0:38:30.26,0:38:31.55,Default,,0,0,0,,session today, visit us at
Dialogue: 0,0:38:31.55,0:38:33.04,Default,,0,0,0,,developer.apple.com.
Dialogue: 0,0:38:33.10,0:38:34.86,Default,,0,0,0,,We are session 606.
Dialogue: 0,0:38:35.32,0:38:36.29,Default,,0,0,0,,We hope you have a wonderful
Dialogue: 0,0:38:36.36,0:38:37.08,Default,,0,0,0,,WWDC.
Dialogue: 0,0:38:37.40,0:38:37.72,Default,,0,0,0,,Thank you.
Dialogue: 0,0:38:38.52,0:38:41.37,Default,,0,0,0,,[ Applause ]
